// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class SnapshotByTimeOffsetTemplate extends pulumi.CustomResource {
    /**
     * Get an existing SnapshotByTimeOffsetTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SnapshotByTimeOffsetTemplateState, opts?: pulumi.CustomResourceOptions): SnapshotByTimeOffsetTemplate {
        return new SnapshotByTimeOffsetTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Vod/snapshotByTimeOffsetTemplate:SnapshotByTimeOffsetTemplate';

    /**
     * Returns true if the given object is an instance of SnapshotByTimeOffsetTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SnapshotByTimeOffsetTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SnapshotByTimeOffsetTemplate.__pulumiType;
    }

    /**
     * Template description. Length limit: 256 characters.
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * Creation time of template in ISO date format.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Fill refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The
     * following fill types are supported: `stretch`: stretch. The screenshot will be stretched frame by frame to match the
     * aspect ratio of the source video, which may make the screenshot `shorter` or `longer`; `black`: fill with black. This
     * option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color
     * blocks. `white`: fill with white. This option retains the aspect ratio of the source video for the screenshot and fills
     * the unmatched area with white color blocks. `gauss`: fill with Gaussian blur. This option retains the aspect ratio of
     * the source video for the screenshot and fills the unmatched area with Gaussian blur. Default value: `black`.
     */
    public readonly fillType!: pulumi.Output<string | undefined>;
    /**
     * Image format. Valid values: `jpg`, `png`. Default value: `jpg`.
     */
    public readonly format!: pulumi.Output<string | undefined>;
    /**
     * Maximum value of the `height` (or short side) of a screenshot in px. Value range: 0 and [128, 4,096]. If both `width`
     * and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is
     * not `0`, `width` will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be
     * proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used. Default value: `0`.
     */
    public readonly height!: pulumi.Output<number | undefined>;
    /**
     * Name of a time point screen capturing template. Length limit: 64 characters.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Resolution adaption. Valid values: `true`,`false`. `true`: enabled. In this case, `width` represents the long side of a
     * video, while `height` the short side; `false`: disabled. In this case, `width` represents the width of a video, while
     * `height` the height. Default value: `true`.
     */
    public readonly resolutionAdaptive!: pulumi.Output<boolean | undefined>;
    /**
     * Subapplication ID in VOD. If you need to access a resource in a subapplication, enter the subapplication ID in this
     * field; otherwise, leave it empty.
     */
    public readonly subAppId!: pulumi.Output<number | undefined>;
    /**
     * Last modified time of template in ISO date format.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * Maximum value of the `width` (or long side) of a screenshot in px. Value range: 0 and [128, 4,096]. If both `width` and
     * `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not
     * `0`, width will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally
     * scaled; If both `width` and `height` are not `0`, the custom resolution will be used. Default value: `0`.
     */
    public readonly width!: pulumi.Output<number | undefined>;

    /**
     * Create a SnapshotByTimeOffsetTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SnapshotByTimeOffsetTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SnapshotByTimeOffsetTemplateArgs | SnapshotByTimeOffsetTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SnapshotByTimeOffsetTemplateState | undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["fillType"] = state ? state.fillType : undefined;
            resourceInputs["format"] = state ? state.format : undefined;
            resourceInputs["height"] = state ? state.height : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resolutionAdaptive"] = state ? state.resolutionAdaptive : undefined;
            resourceInputs["subAppId"] = state ? state.subAppId : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["width"] = state ? state.width : undefined;
        } else {
            const args = argsOrState as SnapshotByTimeOffsetTemplateArgs | undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["fillType"] = args ? args.fillType : undefined;
            resourceInputs["format"] = args ? args.format : undefined;
            resourceInputs["height"] = args ? args.height : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resolutionAdaptive"] = args ? args.resolutionAdaptive : undefined;
            resourceInputs["subAppId"] = args ? args.subAppId : undefined;
            resourceInputs["width"] = args ? args.width : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SnapshotByTimeOffsetTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SnapshotByTimeOffsetTemplate resources.
 */
export interface SnapshotByTimeOffsetTemplateState {
    /**
     * Template description. Length limit: 256 characters.
     */
    comment?: pulumi.Input<string>;
    /**
     * Creation time of template in ISO date format.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Fill refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The
     * following fill types are supported: `stretch`: stretch. The screenshot will be stretched frame by frame to match the
     * aspect ratio of the source video, which may make the screenshot `shorter` or `longer`; `black`: fill with black. This
     * option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color
     * blocks. `white`: fill with white. This option retains the aspect ratio of the source video for the screenshot and fills
     * the unmatched area with white color blocks. `gauss`: fill with Gaussian blur. This option retains the aspect ratio of
     * the source video for the screenshot and fills the unmatched area with Gaussian blur. Default value: `black`.
     */
    fillType?: pulumi.Input<string>;
    /**
     * Image format. Valid values: `jpg`, `png`. Default value: `jpg`.
     */
    format?: pulumi.Input<string>;
    /**
     * Maximum value of the `height` (or short side) of a screenshot in px. Value range: 0 and [128, 4,096]. If both `width`
     * and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is
     * not `0`, `width` will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be
     * proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used. Default value: `0`.
     */
    height?: pulumi.Input<number>;
    /**
     * Name of a time point screen capturing template. Length limit: 64 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * Resolution adaption. Valid values: `true`,`false`. `true`: enabled. In this case, `width` represents the long side of a
     * video, while `height` the short side; `false`: disabled. In this case, `width` represents the width of a video, while
     * `height` the height. Default value: `true`.
     */
    resolutionAdaptive?: pulumi.Input<boolean>;
    /**
     * Subapplication ID in VOD. If you need to access a resource in a subapplication, enter the subapplication ID in this
     * field; otherwise, leave it empty.
     */
    subAppId?: pulumi.Input<number>;
    /**
     * Last modified time of template in ISO date format.
     */
    updateTime?: pulumi.Input<string>;
    /**
     * Maximum value of the `width` (or long side) of a screenshot in px. Value range: 0 and [128, 4,096]. If both `width` and
     * `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not
     * `0`, width will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally
     * scaled; If both `width` and `height` are not `0`, the custom resolution will be used. Default value: `0`.
     */
    width?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SnapshotByTimeOffsetTemplate resource.
 */
export interface SnapshotByTimeOffsetTemplateArgs {
    /**
     * Template description. Length limit: 256 characters.
     */
    comment?: pulumi.Input<string>;
    /**
     * Fill refers to the way of processing a screenshot when its aspect ratio is different from that of the source video. The
     * following fill types are supported: `stretch`: stretch. The screenshot will be stretched frame by frame to match the
     * aspect ratio of the source video, which may make the screenshot `shorter` or `longer`; `black`: fill with black. This
     * option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black color
     * blocks. `white`: fill with white. This option retains the aspect ratio of the source video for the screenshot and fills
     * the unmatched area with white color blocks. `gauss`: fill with Gaussian blur. This option retains the aspect ratio of
     * the source video for the screenshot and fills the unmatched area with Gaussian blur. Default value: `black`.
     */
    fillType?: pulumi.Input<string>;
    /**
     * Image format. Valid values: `jpg`, `png`. Default value: `jpg`.
     */
    format?: pulumi.Input<string>;
    /**
     * Maximum value of the `height` (or short side) of a screenshot in px. Value range: 0 and [128, 4,096]. If both `width`
     * and `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is
     * not `0`, `width` will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be
     * proportionally scaled; If both `width` and `height` are not `0`, the custom resolution will be used. Default value: `0`.
     */
    height?: pulumi.Input<number>;
    /**
     * Name of a time point screen capturing template. Length limit: 64 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * Resolution adaption. Valid values: `true`,`false`. `true`: enabled. In this case, `width` represents the long side of a
     * video, while `height` the short side; `false`: disabled. In this case, `width` represents the width of a video, while
     * `height` the height. Default value: `true`.
     */
    resolutionAdaptive?: pulumi.Input<boolean>;
    /**
     * Subapplication ID in VOD. If you need to access a resource in a subapplication, enter the subapplication ID in this
     * field; otherwise, leave it empty.
     */
    subAppId?: pulumi.Input<number>;
    /**
     * Maximum value of the `width` (or long side) of a screenshot in px. Value range: 0 and [128, 4,096]. If both `width` and
     * `height` are `0`, the resolution will be the same as that of the source video; If `width` is `0`, but `height` is not
     * `0`, width will be proportionally scaled; If `width` is not `0`, but `height` is `0`, `height` will be proportionally
     * scaled; If both `width` and `height` are not `0`, the custom resolution will be used. Default value: `0`.
     */
    width?: pulumi.Input<number>;
}
