// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class AdaptiveDynamicStreamingTemplate extends pulumi.CustomResource {
    /**
     * Get an existing AdaptiveDynamicStreamingTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AdaptiveDynamicStreamingTemplateState, opts?: pulumi.CustomResourceOptions): AdaptiveDynamicStreamingTemplate {
        return new AdaptiveDynamicStreamingTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Vod/adaptiveDynamicStreamingTemplate:AdaptiveDynamicStreamingTemplate';

    /**
     * Returns true if the given object is an instance of AdaptiveDynamicStreamingTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AdaptiveDynamicStreamingTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AdaptiveDynamicStreamingTemplate.__pulumiType;
    }

    /**
     * Template description. Length limit: 256 characters.
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * Creation time of template in ISO date format.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Whether to prohibit transcoding video from low bitrate to high bitrate. Valid values: `false`,`true`. `false`: no,
     * `true`: yes. Default value: `false`.
     */
    public readonly disableHigherVideoBitrate!: pulumi.Output<boolean | undefined>;
    /**
     * Whether to prohibit transcoding from low resolution to high resolution. Valid values: `false`,`true`. `false`: no,
     * `true`: yes. Default value: `false`.
     */
    public readonly disableHigherVideoResolution!: pulumi.Output<boolean | undefined>;
    /**
     * DRM scheme type. Valid values: `SimpleAES`. If this field is an empty string, DRM will not be performed on the video.
     */
    public readonly drmType!: pulumi.Output<string | undefined>;
    /**
     * Adaptive bitstream format. Valid values: `HLS`.
     */
    public readonly format!: pulumi.Output<string>;
    /**
     * Template name. Length limit: 64 characters.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * List of AdaptiveStreamTemplate parameter information of output substream for adaptive bitrate streaming. Up to 10
     * substreams can be output. Note: the frame rate of all substreams must be the same; otherwise, the frame rate of the
     * first substream will be used as the output frame rate.
     */
    public readonly streamInfos!: pulumi.Output<outputs.Vod.AdaptiveDynamicStreamingTemplateStreamInfo[]>;
    /**
     * Subapplication ID in VOD. If you need to access a resource in a subapplication, enter the subapplication ID in this
     * field; otherwise, leave it empty.
     */
    public readonly subAppId!: pulumi.Output<number | undefined>;
    /**
     * Last modified time of template in ISO date format.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a AdaptiveDynamicStreamingTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AdaptiveDynamicStreamingTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AdaptiveDynamicStreamingTemplateArgs | AdaptiveDynamicStreamingTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AdaptiveDynamicStreamingTemplateState | undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["disableHigherVideoBitrate"] = state ? state.disableHigherVideoBitrate : undefined;
            resourceInputs["disableHigherVideoResolution"] = state ? state.disableHigherVideoResolution : undefined;
            resourceInputs["drmType"] = state ? state.drmType : undefined;
            resourceInputs["format"] = state ? state.format : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["streamInfos"] = state ? state.streamInfos : undefined;
            resourceInputs["subAppId"] = state ? state.subAppId : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as AdaptiveDynamicStreamingTemplateArgs | undefined;
            if ((!args || args.format === undefined) && !opts.urn) {
                throw new Error("Missing required property 'format'");
            }
            if ((!args || args.streamInfos === undefined) && !opts.urn) {
                throw new Error("Missing required property 'streamInfos'");
            }
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["disableHigherVideoBitrate"] = args ? args.disableHigherVideoBitrate : undefined;
            resourceInputs["disableHigherVideoResolution"] = args ? args.disableHigherVideoResolution : undefined;
            resourceInputs["drmType"] = args ? args.drmType : undefined;
            resourceInputs["format"] = args ? args.format : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["streamInfos"] = args ? args.streamInfos : undefined;
            resourceInputs["subAppId"] = args ? args.subAppId : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AdaptiveDynamicStreamingTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AdaptiveDynamicStreamingTemplate resources.
 */
export interface AdaptiveDynamicStreamingTemplateState {
    /**
     * Template description. Length limit: 256 characters.
     */
    comment?: pulumi.Input<string>;
    /**
     * Creation time of template in ISO date format.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Whether to prohibit transcoding video from low bitrate to high bitrate. Valid values: `false`,`true`. `false`: no,
     * `true`: yes. Default value: `false`.
     */
    disableHigherVideoBitrate?: pulumi.Input<boolean>;
    /**
     * Whether to prohibit transcoding from low resolution to high resolution. Valid values: `false`,`true`. `false`: no,
     * `true`: yes. Default value: `false`.
     */
    disableHigherVideoResolution?: pulumi.Input<boolean>;
    /**
     * DRM scheme type. Valid values: `SimpleAES`. If this field is an empty string, DRM will not be performed on the video.
     */
    drmType?: pulumi.Input<string>;
    /**
     * Adaptive bitstream format. Valid values: `HLS`.
     */
    format?: pulumi.Input<string>;
    /**
     * Template name. Length limit: 64 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * List of AdaptiveStreamTemplate parameter information of output substream for adaptive bitrate streaming. Up to 10
     * substreams can be output. Note: the frame rate of all substreams must be the same; otherwise, the frame rate of the
     * first substream will be used as the output frame rate.
     */
    streamInfos?: pulumi.Input<pulumi.Input<inputs.Vod.AdaptiveDynamicStreamingTemplateStreamInfo>[]>;
    /**
     * Subapplication ID in VOD. If you need to access a resource in a subapplication, enter the subapplication ID in this
     * field; otherwise, leave it empty.
     */
    subAppId?: pulumi.Input<number>;
    /**
     * Last modified time of template in ISO date format.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AdaptiveDynamicStreamingTemplate resource.
 */
export interface AdaptiveDynamicStreamingTemplateArgs {
    /**
     * Template description. Length limit: 256 characters.
     */
    comment?: pulumi.Input<string>;
    /**
     * Whether to prohibit transcoding video from low bitrate to high bitrate. Valid values: `false`,`true`. `false`: no,
     * `true`: yes. Default value: `false`.
     */
    disableHigherVideoBitrate?: pulumi.Input<boolean>;
    /**
     * Whether to prohibit transcoding from low resolution to high resolution. Valid values: `false`,`true`. `false`: no,
     * `true`: yes. Default value: `false`.
     */
    disableHigherVideoResolution?: pulumi.Input<boolean>;
    /**
     * DRM scheme type. Valid values: `SimpleAES`. If this field is an empty string, DRM will not be performed on the video.
     */
    drmType?: pulumi.Input<string>;
    /**
     * Adaptive bitstream format. Valid values: `HLS`.
     */
    format: pulumi.Input<string>;
    /**
     * Template name. Length limit: 64 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * List of AdaptiveStreamTemplate parameter information of output substream for adaptive bitrate streaming. Up to 10
     * substreams can be output. Note: the frame rate of all substreams must be the same; otherwise, the frame rate of the
     * first substream will be used as the output frame rate.
     */
    streamInfos: pulumi.Input<pulumi.Input<inputs.Vod.AdaptiveDynamicStreamingTemplateStreamInfo>[]>;
    /**
     * Subapplication ID in VOD. If you need to access a resource in a subapplication, enter the subapplication ID in this
     * field; otherwise, leave it empty.
     */
    subAppId?: pulumi.Input<number>;
}
