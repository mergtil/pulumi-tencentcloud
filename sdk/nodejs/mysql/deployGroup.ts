// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class DeployGroup extends pulumi.CustomResource {
    /**
     * Get an existing DeployGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DeployGroupState, opts?: pulumi.CustomResourceOptions): DeployGroup {
        return new DeployGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Mysql/deployGroup:DeployGroup';

    /**
     * Returns true if the given object is an instance of DeployGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DeployGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DeployGroup.__pulumiType;
    }

    /**
     * The name of deploy group. the maximum length cannot exceed 60 characters.
     */
    public readonly deployGroupName!: pulumi.Output<string>;
    /**
     * The description of deploy group. the maximum length cannot exceed 200 characters.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The device class of deploy group. optional value is SH12+SH02, TS85, etc.
     */
    public readonly devClasses!: pulumi.Output<string[] | undefined>;
    /**
     * The limit on the number of instances on the same physical machine in deploy group affinity policy 1.
     */
    public readonly limitNum!: pulumi.Output<number | undefined>;

    /**
     * Create a DeployGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DeployGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DeployGroupArgs | DeployGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DeployGroupState | undefined;
            resourceInputs["deployGroupName"] = state ? state.deployGroupName : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["devClasses"] = state ? state.devClasses : undefined;
            resourceInputs["limitNum"] = state ? state.limitNum : undefined;
        } else {
            const args = argsOrState as DeployGroupArgs | undefined;
            if ((!args || args.deployGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deployGroupName'");
            }
            resourceInputs["deployGroupName"] = args ? args.deployGroupName : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["devClasses"] = args ? args.devClasses : undefined;
            resourceInputs["limitNum"] = args ? args.limitNum : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DeployGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DeployGroup resources.
 */
export interface DeployGroupState {
    /**
     * The name of deploy group. the maximum length cannot exceed 60 characters.
     */
    deployGroupName?: pulumi.Input<string>;
    /**
     * The description of deploy group. the maximum length cannot exceed 200 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * The device class of deploy group. optional value is SH12+SH02, TS85, etc.
     */
    devClasses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The limit on the number of instances on the same physical machine in deploy group affinity policy 1.
     */
    limitNum?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a DeployGroup resource.
 */
export interface DeployGroupArgs {
    /**
     * The name of deploy group. the maximum length cannot exceed 60 characters.
     */
    deployGroupName: pulumi.Input<string>;
    /**
     * The description of deploy group. the maximum length cannot exceed 200 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * The device class of deploy group. optional value is SH12+SH02, TS85, etc.
     */
    devClasses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The limit on the number of instances on the same physical machine in deploy group affinity policy 1.
     */
    limitNum?: pulumi.Input<number>;
}
