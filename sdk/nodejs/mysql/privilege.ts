// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class Privilege extends pulumi.CustomResource {
    /**
     * Get an existing Privilege resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PrivilegeState, opts?: pulumi.CustomResourceOptions): Privilege {
        return new Privilege(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Mysql/privilege:Privilege';

    /**
     * Returns true if the given object is an instance of Privilege.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Privilege {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Privilege.__pulumiType;
    }

    /**
     * Account host, default is `%`.
     */
    public readonly accountHost!: pulumi.Output<string | undefined>;
    /**
     * Account name.the forbidden value is:root,mysql.sys,tencentroot.
     */
    public readonly accountName!: pulumi.Output<string>;
    /**
     * Column privileges list.
     */
    public readonly columns!: pulumi.Output<outputs.Mysql.PrivilegeColumn[] | undefined>;
    /**
     * Database privileges list.
     */
    public readonly databases!: pulumi.Output<outputs.Mysql.PrivilegeDatabase[] | undefined>;
    /**
     * Global privileges. available values for Privileges:ALTER,ALTER ROUTINE,CREATE,CREATE ROUTINE,CREATE TEMPORARY
     * TABLES,CREATE USER,CREATE VIEW,DELETE,DROP,EVENT,EXECUTE,INDEX,INSERT,LOCK TABLES,PROCESS,REFERENCES,RELOAD,REPLICATION
     * CLIENT,REPLICATION SLAVE,SELECT,SHOW DATABASES,SHOW VIEW,TRIGGER,UPDATE.
     */
    public readonly globals!: pulumi.Output<string[]>;
    /**
     * Instance ID.
     */
    public readonly mysqlId!: pulumi.Output<string>;
    /**
     * Table privileges list.
     */
    public readonly tables!: pulumi.Output<outputs.Mysql.PrivilegeTable[] | undefined>;

    /**
     * Create a Privilege resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PrivilegeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PrivilegeArgs | PrivilegeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PrivilegeState | undefined;
            resourceInputs["accountHost"] = state ? state.accountHost : undefined;
            resourceInputs["accountName"] = state ? state.accountName : undefined;
            resourceInputs["columns"] = state ? state.columns : undefined;
            resourceInputs["databases"] = state ? state.databases : undefined;
            resourceInputs["globals"] = state ? state.globals : undefined;
            resourceInputs["mysqlId"] = state ? state.mysqlId : undefined;
            resourceInputs["tables"] = state ? state.tables : undefined;
        } else {
            const args = argsOrState as PrivilegeArgs | undefined;
            if ((!args || args.accountName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accountName'");
            }
            if ((!args || args.globals === undefined) && !opts.urn) {
                throw new Error("Missing required property 'globals'");
            }
            if ((!args || args.mysqlId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mysqlId'");
            }
            resourceInputs["accountHost"] = args ? args.accountHost : undefined;
            resourceInputs["accountName"] = args ? args.accountName : undefined;
            resourceInputs["columns"] = args ? args.columns : undefined;
            resourceInputs["databases"] = args ? args.databases : undefined;
            resourceInputs["globals"] = args ? args.globals : undefined;
            resourceInputs["mysqlId"] = args ? args.mysqlId : undefined;
            resourceInputs["tables"] = args ? args.tables : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Privilege.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Privilege resources.
 */
export interface PrivilegeState {
    /**
     * Account host, default is `%`.
     */
    accountHost?: pulumi.Input<string>;
    /**
     * Account name.the forbidden value is:root,mysql.sys,tencentroot.
     */
    accountName?: pulumi.Input<string>;
    /**
     * Column privileges list.
     */
    columns?: pulumi.Input<pulumi.Input<inputs.Mysql.PrivilegeColumn>[]>;
    /**
     * Database privileges list.
     */
    databases?: pulumi.Input<pulumi.Input<inputs.Mysql.PrivilegeDatabase>[]>;
    /**
     * Global privileges. available values for Privileges:ALTER,ALTER ROUTINE,CREATE,CREATE ROUTINE,CREATE TEMPORARY
     * TABLES,CREATE USER,CREATE VIEW,DELETE,DROP,EVENT,EXECUTE,INDEX,INSERT,LOCK TABLES,PROCESS,REFERENCES,RELOAD,REPLICATION
     * CLIENT,REPLICATION SLAVE,SELECT,SHOW DATABASES,SHOW VIEW,TRIGGER,UPDATE.
     */
    globals?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Instance ID.
     */
    mysqlId?: pulumi.Input<string>;
    /**
     * Table privileges list.
     */
    tables?: pulumi.Input<pulumi.Input<inputs.Mysql.PrivilegeTable>[]>;
}

/**
 * The set of arguments for constructing a Privilege resource.
 */
export interface PrivilegeArgs {
    /**
     * Account host, default is `%`.
     */
    accountHost?: pulumi.Input<string>;
    /**
     * Account name.the forbidden value is:root,mysql.sys,tencentroot.
     */
    accountName: pulumi.Input<string>;
    /**
     * Column privileges list.
     */
    columns?: pulumi.Input<pulumi.Input<inputs.Mysql.PrivilegeColumn>[]>;
    /**
     * Database privileges list.
     */
    databases?: pulumi.Input<pulumi.Input<inputs.Mysql.PrivilegeDatabase>[]>;
    /**
     * Global privileges. available values for Privileges:ALTER,ALTER ROUTINE,CREATE,CREATE ROUTINE,CREATE TEMPORARY
     * TABLES,CREATE USER,CREATE VIEW,DELETE,DROP,EVENT,EXECUTE,INDEX,INSERT,LOCK TABLES,PROCESS,REFERENCES,RELOAD,REPLICATION
     * CLIENT,REPLICATION SLAVE,SELECT,SHOW DATABASES,SHOW VIEW,TRIGGER,UPDATE.
     */
    globals: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Instance ID.
     */
    mysqlId: pulumi.Input<string>;
    /**
     * Table privileges list.
     */
    tables?: pulumi.Input<pulumi.Input<inputs.Mysql.PrivilegeTable>[]>;
}
