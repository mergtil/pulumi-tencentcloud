// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class BackupPlanConfig extends pulumi.CustomResource {
    /**
     * Get an existing BackupPlanConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BackupPlanConfigState, opts?: pulumi.CustomResourceOptions): BackupPlanConfig {
        return new BackupPlanConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Postgresql/backupPlanConfig:BackupPlanConfig';

    /**
     * Returns true if the given object is an instance of BackupPlanConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BackupPlanConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BackupPlanConfig.__pulumiType;
    }

    /**
     * Backup cycle, which means on which days each week the instance will be backed up. The parameter value should be the
     * lowercase names of the days of the week.
     */
    public readonly backupPeriods!: pulumi.Output<string[] | undefined>;
    /**
     * Backup retention period in days. Value range:3-7.
     */
    public readonly baseBackupRetentionPeriod!: pulumi.Output<number | undefined>;
    /**
     * instance id.
     */
    public readonly dbInstanceId!: pulumi.Output<string>;
    /**
     * The latest time to start a backup.
     */
    public readonly maxBackupStartTime!: pulumi.Output<string | undefined>;
    /**
     * The earliest time to start a backup.
     */
    public readonly minBackupStartTime!: pulumi.Output<string | undefined>;

    /**
     * Create a BackupPlanConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BackupPlanConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BackupPlanConfigArgs | BackupPlanConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BackupPlanConfigState | undefined;
            resourceInputs["backupPeriods"] = state ? state.backupPeriods : undefined;
            resourceInputs["baseBackupRetentionPeriod"] = state ? state.baseBackupRetentionPeriod : undefined;
            resourceInputs["dbInstanceId"] = state ? state.dbInstanceId : undefined;
            resourceInputs["maxBackupStartTime"] = state ? state.maxBackupStartTime : undefined;
            resourceInputs["minBackupStartTime"] = state ? state.minBackupStartTime : undefined;
        } else {
            const args = argsOrState as BackupPlanConfigArgs | undefined;
            if ((!args || args.dbInstanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbInstanceId'");
            }
            resourceInputs["backupPeriods"] = args ? args.backupPeriods : undefined;
            resourceInputs["baseBackupRetentionPeriod"] = args ? args.baseBackupRetentionPeriod : undefined;
            resourceInputs["dbInstanceId"] = args ? args.dbInstanceId : undefined;
            resourceInputs["maxBackupStartTime"] = args ? args.maxBackupStartTime : undefined;
            resourceInputs["minBackupStartTime"] = args ? args.minBackupStartTime : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BackupPlanConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BackupPlanConfig resources.
 */
export interface BackupPlanConfigState {
    /**
     * Backup cycle, which means on which days each week the instance will be backed up. The parameter value should be the
     * lowercase names of the days of the week.
     */
    backupPeriods?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Backup retention period in days. Value range:3-7.
     */
    baseBackupRetentionPeriod?: pulumi.Input<number>;
    /**
     * instance id.
     */
    dbInstanceId?: pulumi.Input<string>;
    /**
     * The latest time to start a backup.
     */
    maxBackupStartTime?: pulumi.Input<string>;
    /**
     * The earliest time to start a backup.
     */
    minBackupStartTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BackupPlanConfig resource.
 */
export interface BackupPlanConfigArgs {
    /**
     * Backup cycle, which means on which days each week the instance will be backed up. The parameter value should be the
     * lowercase names of the days of the week.
     */
    backupPeriods?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Backup retention period in days. Value range:3-7.
     */
    baseBackupRetentionPeriod?: pulumi.Input<number>;
    /**
     * instance id.
     */
    dbInstanceId: pulumi.Input<string>;
    /**
     * The latest time to start a backup.
     */
    maxBackupStartTime?: pulumi.Input<string>;
    /**
     * The earliest time to start a backup.
     */
    minBackupStartTime?: pulumi.Input<string>;
}
