// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class DisisolateDbInstanceOperation extends pulumi.CustomResource {
    /**
     * Get an existing DisisolateDbInstanceOperation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DisisolateDbInstanceOperationState, opts?: pulumi.CustomResourceOptions): DisisolateDbInstanceOperation {
        return new DisisolateDbInstanceOperation(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Postgresql/disisolateDbInstanceOperation:DisisolateDbInstanceOperation';

    /**
     * Returns true if the given object is an instance of DisisolateDbInstanceOperation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DisisolateDbInstanceOperation {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DisisolateDbInstanceOperation.__pulumiType;
    }

    /**
     * Whether to use vouchers. Valid values:true (yes), false (no). Default value:false.
     */
    public readonly autoVoucher!: pulumi.Output<boolean | undefined>;
    /**
     * List of resource IDs. Note that currently you cannot remove multiple instances from isolation at the same time. Only one
     * instance ID can be passed in here.
     */
    public readonly dbInstanceIdSets!: pulumi.Output<string[]>;
    /**
     * The valid period (in months) of the monthly-subscribed instance when removing it from isolation.
     */
    public readonly period!: pulumi.Output<number | undefined>;
    /**
     * Voucher ID list.
     */
    public readonly voucherIds!: pulumi.Output<string[] | undefined>;

    /**
     * Create a DisisolateDbInstanceOperation resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DisisolateDbInstanceOperationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DisisolateDbInstanceOperationArgs | DisisolateDbInstanceOperationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DisisolateDbInstanceOperationState | undefined;
            resourceInputs["autoVoucher"] = state ? state.autoVoucher : undefined;
            resourceInputs["dbInstanceIdSets"] = state ? state.dbInstanceIdSets : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["voucherIds"] = state ? state.voucherIds : undefined;
        } else {
            const args = argsOrState as DisisolateDbInstanceOperationArgs | undefined;
            if ((!args || args.dbInstanceIdSets === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbInstanceIdSets'");
            }
            resourceInputs["autoVoucher"] = args ? args.autoVoucher : undefined;
            resourceInputs["dbInstanceIdSets"] = args ? args.dbInstanceIdSets : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["voucherIds"] = args ? args.voucherIds : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DisisolateDbInstanceOperation.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DisisolateDbInstanceOperation resources.
 */
export interface DisisolateDbInstanceOperationState {
    /**
     * Whether to use vouchers. Valid values:true (yes), false (no). Default value:false.
     */
    autoVoucher?: pulumi.Input<boolean>;
    /**
     * List of resource IDs. Note that currently you cannot remove multiple instances from isolation at the same time. Only one
     * instance ID can be passed in here.
     */
    dbInstanceIdSets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The valid period (in months) of the monthly-subscribed instance when removing it from isolation.
     */
    period?: pulumi.Input<number>;
    /**
     * Voucher ID list.
     */
    voucherIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a DisisolateDbInstanceOperation resource.
 */
export interface DisisolateDbInstanceOperationArgs {
    /**
     * Whether to use vouchers. Valid values:true (yes), false (no). Default value:false.
     */
    autoVoucher?: pulumi.Input<boolean>;
    /**
     * List of resource IDs. Note that currently you cannot remove multiple instances from isolation at the same time. Only one
     * instance ID can be passed in here.
     */
    dbInstanceIdSets: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The valid period (in months) of the monthly-subscribed instance when removing it from isolation.
     */
    period?: pulumi.Input<number>;
    /**
     * Voucher ID list.
     */
    voucherIds?: pulumi.Input<pulumi.Input<string>[]>;
}
