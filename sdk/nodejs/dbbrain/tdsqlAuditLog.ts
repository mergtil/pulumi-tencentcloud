// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class TdsqlAuditLog extends pulumi.CustomResource {
    /**
     * Get an existing TdsqlAuditLog resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TdsqlAuditLogState, opts?: pulumi.CustomResourceOptions): TdsqlAuditLog {
        return new TdsqlAuditLog(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Dbbrain/tdsqlAuditLog:TdsqlAuditLog';

    /**
     * Returns true if the given object is an instance of TdsqlAuditLog.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is TdsqlAuditLog {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === TdsqlAuditLog.__pulumiType;
    }

    /**
     * Deadline time, such as `2019-09-11 10:13:14`.
     */
    public readonly endTime!: pulumi.Output<string>;
    /**
     * Filter conditions. Logs can be filtered according to the filter conditions set.
     */
    public readonly filter!: pulumi.Output<outputs.Dbbrain.TdsqlAuditLogFilter | undefined>;
    /**
     * Instance ID.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * Consistent with Product. For example: dcdb, mariadb.
     */
    public readonly nodeRequestType!: pulumi.Output<string>;
    /**
     * Service product type, supported values include: dcdb - cloud database Tdsql, mariadb - cloud database MariaDB for
     * MariaDB..
     */
    public readonly product!: pulumi.Output<string>;
    /**
     * Start time, such as `2019-09-10 12:13:14`.
     */
    public readonly startTime!: pulumi.Output<string>;

    /**
     * Create a TdsqlAuditLog resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TdsqlAuditLogArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TdsqlAuditLogArgs | TdsqlAuditLogState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TdsqlAuditLogState | undefined;
            resourceInputs["endTime"] = state ? state.endTime : undefined;
            resourceInputs["filter"] = state ? state.filter : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["nodeRequestType"] = state ? state.nodeRequestType : undefined;
            resourceInputs["product"] = state ? state.product : undefined;
            resourceInputs["startTime"] = state ? state.startTime : undefined;
        } else {
            const args = argsOrState as TdsqlAuditLogArgs | undefined;
            if ((!args || args.endTime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'endTime'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.nodeRequestType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nodeRequestType'");
            }
            if ((!args || args.product === undefined) && !opts.urn) {
                throw new Error("Missing required property 'product'");
            }
            if ((!args || args.startTime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'startTime'");
            }
            resourceInputs["endTime"] = args ? args.endTime : undefined;
            resourceInputs["filter"] = args ? args.filter : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["nodeRequestType"] = args ? args.nodeRequestType : undefined;
            resourceInputs["product"] = args ? args.product : undefined;
            resourceInputs["startTime"] = args ? args.startTime : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(TdsqlAuditLog.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering TdsqlAuditLog resources.
 */
export interface TdsqlAuditLogState {
    /**
     * Deadline time, such as `2019-09-11 10:13:14`.
     */
    endTime?: pulumi.Input<string>;
    /**
     * Filter conditions. Logs can be filtered according to the filter conditions set.
     */
    filter?: pulumi.Input<inputs.Dbbrain.TdsqlAuditLogFilter>;
    /**
     * Instance ID.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Consistent with Product. For example: dcdb, mariadb.
     */
    nodeRequestType?: pulumi.Input<string>;
    /**
     * Service product type, supported values include: dcdb - cloud database Tdsql, mariadb - cloud database MariaDB for
     * MariaDB..
     */
    product?: pulumi.Input<string>;
    /**
     * Start time, such as `2019-09-10 12:13:14`.
     */
    startTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a TdsqlAuditLog resource.
 */
export interface TdsqlAuditLogArgs {
    /**
     * Deadline time, such as `2019-09-11 10:13:14`.
     */
    endTime: pulumi.Input<string>;
    /**
     * Filter conditions. Logs can be filtered according to the filter conditions set.
     */
    filter?: pulumi.Input<inputs.Dbbrain.TdsqlAuditLogFilter>;
    /**
     * Instance ID.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Consistent with Product. For example: dcdb, mariadb.
     */
    nodeRequestType: pulumi.Input<string>;
    /**
     * Service product type, supported values include: dcdb - cloud database Tdsql, mariadb - cloud database MariaDB for
     * MariaDB..
     */
    product: pulumi.Input<string>;
    /**
     * Start time, such as `2019-09-10 12:13:14`.
     */
    startTime: pulumi.Input<string>;
}
