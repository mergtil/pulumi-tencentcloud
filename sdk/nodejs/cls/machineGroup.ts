// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class MachineGroup extends pulumi.CustomResource {
    /**
     * Get an existing MachineGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MachineGroupState, opts?: pulumi.CustomResourceOptions): MachineGroup {
        return new MachineGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Cls/machineGroup:MachineGroup';

    /**
     * Returns true if the given object is an instance of MachineGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MachineGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MachineGroup.__pulumiType;
    }

    /**
     * Whether to enable automatic update for the machine group.
     */
    public readonly autoUpdate!: pulumi.Output<boolean | undefined>;
    /**
     * Machine group name, which must be unique.
     */
    public readonly groupName!: pulumi.Output<string>;
    /**
     * Type of the machine group to be created.
     */
    public readonly machineGroupType!: pulumi.Output<outputs.Cls.MachineGroupMachineGroupType>;
    /**
     * Whether to enable the service log to record the logs generated by the LogListener service itself. After it is enabled,
     * the internal logset cls_service_logging and the loglistener_status, loglistener_alarm, and loglistener_business log
     * topics will be created, which will not incur fees.
     */
    public readonly serviceLogging!: pulumi.Output<boolean | undefined>;
    /**
     * Tag description list. Up to 10 tag key-value pairs are supported and must be unique.
     */
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * Update end time. We recommend you update LogListener during off-peak hours.
     */
    public readonly updateEndTime!: pulumi.Output<string | undefined>;
    /**
     * Update start time. We recommend you update LogListener during off-peak hours.
     */
    public readonly updateStartTime!: pulumi.Output<string | undefined>;

    /**
     * Create a MachineGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MachineGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MachineGroupArgs | MachineGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MachineGroupState | undefined;
            resourceInputs["autoUpdate"] = state ? state.autoUpdate : undefined;
            resourceInputs["groupName"] = state ? state.groupName : undefined;
            resourceInputs["machineGroupType"] = state ? state.machineGroupType : undefined;
            resourceInputs["serviceLogging"] = state ? state.serviceLogging : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["updateEndTime"] = state ? state.updateEndTime : undefined;
            resourceInputs["updateStartTime"] = state ? state.updateStartTime : undefined;
        } else {
            const args = argsOrState as MachineGroupArgs | undefined;
            if ((!args || args.groupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupName'");
            }
            if ((!args || args.machineGroupType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'machineGroupType'");
            }
            resourceInputs["autoUpdate"] = args ? args.autoUpdate : undefined;
            resourceInputs["groupName"] = args ? args.groupName : undefined;
            resourceInputs["machineGroupType"] = args ? args.machineGroupType : undefined;
            resourceInputs["serviceLogging"] = args ? args.serviceLogging : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["updateEndTime"] = args ? args.updateEndTime : undefined;
            resourceInputs["updateStartTime"] = args ? args.updateStartTime : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MachineGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MachineGroup resources.
 */
export interface MachineGroupState {
    /**
     * Whether to enable automatic update for the machine group.
     */
    autoUpdate?: pulumi.Input<boolean>;
    /**
     * Machine group name, which must be unique.
     */
    groupName?: pulumi.Input<string>;
    /**
     * Type of the machine group to be created.
     */
    machineGroupType?: pulumi.Input<inputs.Cls.MachineGroupMachineGroupType>;
    /**
     * Whether to enable the service log to record the logs generated by the LogListener service itself. After it is enabled,
     * the internal logset cls_service_logging and the loglistener_status, loglistener_alarm, and loglistener_business log
     * topics will be created, which will not incur fees.
     */
    serviceLogging?: pulumi.Input<boolean>;
    /**
     * Tag description list. Up to 10 tag key-value pairs are supported and must be unique.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Update end time. We recommend you update LogListener during off-peak hours.
     */
    updateEndTime?: pulumi.Input<string>;
    /**
     * Update start time. We recommend you update LogListener during off-peak hours.
     */
    updateStartTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MachineGroup resource.
 */
export interface MachineGroupArgs {
    /**
     * Whether to enable automatic update for the machine group.
     */
    autoUpdate?: pulumi.Input<boolean>;
    /**
     * Machine group name, which must be unique.
     */
    groupName: pulumi.Input<string>;
    /**
     * Type of the machine group to be created.
     */
    machineGroupType: pulumi.Input<inputs.Cls.MachineGroupMachineGroupType>;
    /**
     * Whether to enable the service log to record the logs generated by the LogListener service itself. After it is enabled,
     * the internal logset cls_service_logging and the loglistener_status, loglistener_alarm, and loglistener_business log
     * topics will be created, which will not incur fees.
     */
    serviceLogging?: pulumi.Input<boolean>;
    /**
     * Tag description list. Up to 10 tag key-value pairs are supported and must be unique.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Update end time. We recommend you update LogListener during off-peak hours.
     */
    updateEndTime?: pulumi.Input<string>;
    /**
     * Update start time. We recommend you update LogListener during off-peak hours.
     */
    updateStartTime?: pulumi.Input<string>;
}
