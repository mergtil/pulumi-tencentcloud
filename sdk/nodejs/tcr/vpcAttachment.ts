// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class VpcAttachment extends pulumi.CustomResource {
    /**
     * Get an existing VpcAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcAttachmentState, opts?: pulumi.CustomResourceOptions): VpcAttachment {
        return new VpcAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Tcr/vpcAttachment:VpcAttachment';

    /**
     * Returns true if the given object is an instance of VpcAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is VpcAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === VpcAttachment.__pulumiType;
    }

    /**
     * IP address of the internal access.
     */
    public /*out*/ readonly accessIp!: pulumi.Output<string>;
    /**
     * Whether to enable public domain dns. Default value is `false`.
     */
    public readonly enablePublicDomainDns!: pulumi.Output<boolean | undefined>;
    /**
     * Whether to enable vpc domain dns. Default value is `false`.
     */
    public readonly enableVpcDomainDns!: pulumi.Output<boolean | undefined>;
    /**
     * ID of the TCR instance.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * ID of region. Conflict with region_name, can not be set at the same time.
     *
     * @deprecated this argument was deprecated, use `region_name` instead.
     */
    public readonly regionId!: pulumi.Output<number | undefined>;
    /**
     * Name of region. Conflict with region_id, can not be set at the same time.
     */
    public readonly regionName!: pulumi.Output<string | undefined>;
    /**
     * Status of the internal access.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * ID of subnet.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * ID of VPC.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a VpcAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: VpcAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: VpcAttachmentArgs | VpcAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as VpcAttachmentState | undefined;
            resourceInputs["accessIp"] = state ? state.accessIp : undefined;
            resourceInputs["enablePublicDomainDns"] = state ? state.enablePublicDomainDns : undefined;
            resourceInputs["enableVpcDomainDns"] = state ? state.enableVpcDomainDns : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["regionId"] = state ? state.regionId : undefined;
            resourceInputs["regionName"] = state ? state.regionName : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as VpcAttachmentArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["enablePublicDomainDns"] = args ? args.enablePublicDomainDns : undefined;
            resourceInputs["enableVpcDomainDns"] = args ? args.enableVpcDomainDns : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["regionId"] = args ? args.regionId : undefined;
            resourceInputs["regionName"] = args ? args.regionName : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["accessIp"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(VpcAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering VpcAttachment resources.
 */
export interface VpcAttachmentState {
    /**
     * IP address of the internal access.
     */
    accessIp?: pulumi.Input<string>;
    /**
     * Whether to enable public domain dns. Default value is `false`.
     */
    enablePublicDomainDns?: pulumi.Input<boolean>;
    /**
     * Whether to enable vpc domain dns. Default value is `false`.
     */
    enableVpcDomainDns?: pulumi.Input<boolean>;
    /**
     * ID of the TCR instance.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * ID of region. Conflict with region_name, can not be set at the same time.
     *
     * @deprecated this argument was deprecated, use `region_name` instead.
     */
    regionId?: pulumi.Input<number>;
    /**
     * Name of region. Conflict with region_id, can not be set at the same time.
     */
    regionName?: pulumi.Input<string>;
    /**
     * Status of the internal access.
     */
    status?: pulumi.Input<string>;
    /**
     * ID of subnet.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * ID of VPC.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a VpcAttachment resource.
 */
export interface VpcAttachmentArgs {
    /**
     * Whether to enable public domain dns. Default value is `false`.
     */
    enablePublicDomainDns?: pulumi.Input<boolean>;
    /**
     * Whether to enable vpc domain dns. Default value is `false`.
     */
    enableVpcDomainDns?: pulumi.Input<boolean>;
    /**
     * ID of the TCR instance.
     */
    instanceId: pulumi.Input<string>;
    /**
     * ID of region. Conflict with region_name, can not be set at the same time.
     *
     * @deprecated this argument was deprecated, use `region_name` instead.
     */
    regionId?: pulumi.Input<number>;
    /**
     * Name of region. Conflict with region_id, can not be set at the same time.
     */
    regionName?: pulumi.Input<string>;
    /**
     * ID of subnet.
     */
    subnetId: pulumi.Input<string>;
    /**
     * ID of VPC.
     */
    vpcId: pulumi.Input<string>;
}
