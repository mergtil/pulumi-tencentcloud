// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getWebhookTriggerLogs(args: GetWebhookTriggerLogsArgs, opts?: pulumi.InvokeOptions): Promise<GetWebhookTriggerLogsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Tcr/getWebhookTriggerLogs:getWebhookTriggerLogs", {
        "namespace": args.namespace,
        "registryId": args.registryId,
        "resultOutputFile": args.resultOutputFile,
        "tags": args.tags,
        "triggerId": args.triggerId,
    }, opts);
}

/**
 * A collection of arguments for invoking getWebhookTriggerLogs.
 */
export interface GetWebhookTriggerLogsArgs {
    namespace: string;
    registryId: string;
    resultOutputFile?: string;
    tags?: {[key: string]: any};
    triggerId: number;
}

/**
 * A collection of values returned by getWebhookTriggerLogs.
 */
export interface GetWebhookTriggerLogsResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly logs: outputs.Tcr.GetWebhookTriggerLogsLog[];
    readonly namespace: string;
    readonly registryId: string;
    readonly resultOutputFile?: string;
    readonly tags?: {[key: string]: any};
    readonly triggerId: number;
}
export function getWebhookTriggerLogsOutput(args: GetWebhookTriggerLogsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetWebhookTriggerLogsResult> {
    return pulumi.output(args).apply((a: any) => getWebhookTriggerLogs(a, opts))
}

/**
 * A collection of arguments for invoking getWebhookTriggerLogs.
 */
export interface GetWebhookTriggerLogsOutputArgs {
    namespace: pulumi.Input<string>;
    registryId: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    tags?: pulumi.Input<{[key: string]: any}>;
    triggerId: pulumi.Input<number>;
}
