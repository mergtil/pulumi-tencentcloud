// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class Repository extends pulumi.CustomResource {
    /**
     * Get an existing Repository resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RepositoryState, opts?: pulumi.CustomResourceOptions): Repository {
        return new Repository(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Tcr/repository:Repository';

    /**
     * Returns true if the given object is an instance of Repository.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Repository {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Repository.__pulumiType;
    }

    /**
     * Brief description of the repository. Valid length is [1~100].
     */
    public readonly briefDesc!: pulumi.Output<string | undefined>;
    /**
     * Create time.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Description of the repository. Valid length is [1~1000].
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * ID of the TCR instance.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * Indicate the repository is public or not.
     */
    public /*out*/ readonly isPublic!: pulumi.Output<boolean>;
    /**
     * Name of the TCR repository. Valid length is [2~200]. It can only contain lowercase letters, numbers and separators (`.`,
     * `_`, `-`, `/`), and cannot start, end or continue with separators. Support the use of multi-level address formats, such
     * as `sub1/sub2/repo`.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Name of the TCR namespace.
     */
    public readonly namespaceName!: pulumi.Output<string>;
    /**
     * Last updated time.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * URL of the repository.
     */
    public /*out*/ readonly url!: pulumi.Output<string>;

    /**
     * Create a Repository resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RepositoryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RepositoryArgs | RepositoryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RepositoryState | undefined;
            resourceInputs["briefDesc"] = state ? state.briefDesc : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["isPublic"] = state ? state.isPublic : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["namespaceName"] = state ? state.namespaceName : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["url"] = state ? state.url : undefined;
        } else {
            const args = argsOrState as RepositoryArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.namespaceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespaceName'");
            }
            resourceInputs["briefDesc"] = args ? args.briefDesc : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["namespaceName"] = args ? args.namespaceName : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["isPublic"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["url"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Repository.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Repository resources.
 */
export interface RepositoryState {
    /**
     * Brief description of the repository. Valid length is [1~100].
     */
    briefDesc?: pulumi.Input<string>;
    /**
     * Create time.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Description of the repository. Valid length is [1~1000].
     */
    description?: pulumi.Input<string>;
    /**
     * ID of the TCR instance.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Indicate the repository is public or not.
     */
    isPublic?: pulumi.Input<boolean>;
    /**
     * Name of the TCR repository. Valid length is [2~200]. It can only contain lowercase letters, numbers and separators (`.`,
     * `_`, `-`, `/`), and cannot start, end or continue with separators. Support the use of multi-level address formats, such
     * as `sub1/sub2/repo`.
     */
    name?: pulumi.Input<string>;
    /**
     * Name of the TCR namespace.
     */
    namespaceName?: pulumi.Input<string>;
    /**
     * Last updated time.
     */
    updateTime?: pulumi.Input<string>;
    /**
     * URL of the repository.
     */
    url?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Repository resource.
 */
export interface RepositoryArgs {
    /**
     * Brief description of the repository. Valid length is [1~100].
     */
    briefDesc?: pulumi.Input<string>;
    /**
     * Description of the repository. Valid length is [1~1000].
     */
    description?: pulumi.Input<string>;
    /**
     * ID of the TCR instance.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Name of the TCR repository. Valid length is [2~200]. It can only contain lowercase letters, numbers and separators (`.`,
     * `_`, `-`, `/`), and cannot start, end or continue with separators. Support the use of multi-level address formats, such
     * as `sub1/sub2/repo`.
     */
    name?: pulumi.Input<string>;
    /**
     * Name of the TCR namespace.
     */
    namespaceName: pulumi.Input<string>;
}
