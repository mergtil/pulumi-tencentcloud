// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class Namespace extends pulumi.CustomResource {
    /**
     * Get an existing Namespace resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NamespaceState, opts?: pulumi.CustomResourceOptions): Namespace {
        return new Namespace(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Tcr/namespace:Namespace';

    /**
     * Returns true if the given object is an instance of Namespace.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Namespace {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Namespace.__pulumiType;
    }

    /**
     * Vulnerability Whitelist.
     */
    public readonly cveWhitelistItems!: pulumi.Output<outputs.Tcr.NamespaceCveWhitelistItem[] | undefined>;
    /**
     * ID of the TCR instance.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * Scanning level, `True` is automatic, `False` is manual. Default is `false`.
     */
    public readonly isAutoScan!: pulumi.Output<boolean | undefined>;
    /**
     * Blocking switch, `True` is open, `False` is closed. Default is `false`.
     */
    public readonly isPreventVul!: pulumi.Output<boolean | undefined>;
    /**
     * Indicate that the namespace is public or not. Default is `false`.
     */
    public readonly isPublic!: pulumi.Output<boolean | undefined>;
    /**
     * Name of the TCR namespace. Valid length is [2~30]. It can only contain lowercase letters, numbers and separators (`.`,
     * `_`, `-`), and cannot start, end or continue with separators.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Block vulnerability level, currently only supports `low`, `medium`, `high`.
     */
    public readonly severity!: pulumi.Output<string | undefined>;

    /**
     * Create a Namespace resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NamespaceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NamespaceArgs | NamespaceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NamespaceState | undefined;
            resourceInputs["cveWhitelistItems"] = state ? state.cveWhitelistItems : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["isAutoScan"] = state ? state.isAutoScan : undefined;
            resourceInputs["isPreventVul"] = state ? state.isPreventVul : undefined;
            resourceInputs["isPublic"] = state ? state.isPublic : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["severity"] = state ? state.severity : undefined;
        } else {
            const args = argsOrState as NamespaceArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["cveWhitelistItems"] = args ? args.cveWhitelistItems : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["isAutoScan"] = args ? args.isAutoScan : undefined;
            resourceInputs["isPreventVul"] = args ? args.isPreventVul : undefined;
            resourceInputs["isPublic"] = args ? args.isPublic : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["severity"] = args ? args.severity : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Namespace.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Namespace resources.
 */
export interface NamespaceState {
    /**
     * Vulnerability Whitelist.
     */
    cveWhitelistItems?: pulumi.Input<pulumi.Input<inputs.Tcr.NamespaceCveWhitelistItem>[]>;
    /**
     * ID of the TCR instance.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Scanning level, `True` is automatic, `False` is manual. Default is `false`.
     */
    isAutoScan?: pulumi.Input<boolean>;
    /**
     * Blocking switch, `True` is open, `False` is closed. Default is `false`.
     */
    isPreventVul?: pulumi.Input<boolean>;
    /**
     * Indicate that the namespace is public or not. Default is `false`.
     */
    isPublic?: pulumi.Input<boolean>;
    /**
     * Name of the TCR namespace. Valid length is [2~30]. It can only contain lowercase letters, numbers and separators (`.`,
     * `_`, `-`), and cannot start, end or continue with separators.
     */
    name?: pulumi.Input<string>;
    /**
     * Block vulnerability level, currently only supports `low`, `medium`, `high`.
     */
    severity?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Namespace resource.
 */
export interface NamespaceArgs {
    /**
     * Vulnerability Whitelist.
     */
    cveWhitelistItems?: pulumi.Input<pulumi.Input<inputs.Tcr.NamespaceCveWhitelistItem>[]>;
    /**
     * ID of the TCR instance.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Scanning level, `True` is automatic, `False` is manual. Default is `false`.
     */
    isAutoScan?: pulumi.Input<boolean>;
    /**
     * Blocking switch, `True` is open, `False` is closed. Default is `false`.
     */
    isPreventVul?: pulumi.Input<boolean>;
    /**
     * Indicate that the namespace is public or not. Default is `false`.
     */
    isPublic?: pulumi.Input<boolean>;
    /**
     * Name of the TCR namespace. Valid length is [2~30]. It can only contain lowercase letters, numbers and separators (`.`,
     * `_`, `-`), and cannot start, end or continue with separators.
     */
    name?: pulumi.Input<string>;
    /**
     * Block vulnerability level, currently only supports `low`, `medium`, `high`.
     */
    severity?: pulumi.Input<string>;
}
