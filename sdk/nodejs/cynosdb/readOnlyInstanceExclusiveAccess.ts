// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class ReadOnlyInstanceExclusiveAccess extends pulumi.CustomResource {
    /**
     * Get an existing ReadOnlyInstanceExclusiveAccess resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ReadOnlyInstanceExclusiveAccessState, opts?: pulumi.CustomResourceOptions): ReadOnlyInstanceExclusiveAccess {
        return new ReadOnlyInstanceExclusiveAccess(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Cynosdb/readOnlyInstanceExclusiveAccess:ReadOnlyInstanceExclusiveAccess';

    /**
     * Returns true if the given object is an instance of ReadOnlyInstanceExclusiveAccess.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ReadOnlyInstanceExclusiveAccess {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ReadOnlyInstanceExclusiveAccess.__pulumiType;
    }

    /**
     * Cluster ID.
     */
    public readonly clusterId!: pulumi.Output<string>;
    /**
     * Need to activate a read-only instance ID with unique access.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * port.
     */
    public readonly port!: pulumi.Output<number>;
    /**
     * Security Group.
     */
    public readonly securityGroupIds!: pulumi.Output<string[] | undefined>;
    /**
     * The specified subnet ID.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * Specified VPC ID.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a ReadOnlyInstanceExclusiveAccess resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ReadOnlyInstanceExclusiveAccessArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ReadOnlyInstanceExclusiveAccessArgs | ReadOnlyInstanceExclusiveAccessState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ReadOnlyInstanceExclusiveAccessState | undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["securityGroupIds"] = state ? state.securityGroupIds : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as ReadOnlyInstanceExclusiveAccessArgs | undefined;
            if ((!args || args.clusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.port === undefined) && !opts.urn) {
                throw new Error("Missing required property 'port'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ReadOnlyInstanceExclusiveAccess.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ReadOnlyInstanceExclusiveAccess resources.
 */
export interface ReadOnlyInstanceExclusiveAccessState {
    /**
     * Cluster ID.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Need to activate a read-only instance ID with unique access.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * port.
     */
    port?: pulumi.Input<number>;
    /**
     * Security Group.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The specified subnet ID.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Specified VPC ID.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ReadOnlyInstanceExclusiveAccess resource.
 */
export interface ReadOnlyInstanceExclusiveAccessArgs {
    /**
     * Cluster ID.
     */
    clusterId: pulumi.Input<string>;
    /**
     * Need to activate a read-only instance ID with unique access.
     */
    instanceId: pulumi.Input<string>;
    /**
     * port.
     */
    port: pulumi.Input<number>;
    /**
     * Security Group.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The specified subnet ID.
     */
    subnetId: pulumi.Input<string>;
    /**
     * Specified VPC ID.
     */
    vpcId: pulumi.Input<string>;
}
