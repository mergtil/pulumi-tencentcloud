// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterState, opts?: pulumi.CustomResourceOptions): Cluster {
        return new Cluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Cynosdb/cluster:Cluster';

    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cluster.__pulumiType;
    }

    /**
     * Specify whether the cluster can auto-pause while `db_mode` is `SERVERLESS`. Values: `yes` (default), `no`.
     */
    public readonly autoPause!: pulumi.Output<string | undefined>;
    /**
     * Specify auto-pause delay in second while `db_mode` is `SERVERLESS`. Value range: `[600, 691200]`. Default: `600`.
     */
    public readonly autoPauseDelay!: pulumi.Output<number | undefined>;
    /**
     * Auto renew flag. Valid values are `0`(MANUAL_RENEW), `1`(AUTO_RENEW). Default value is `0`. Only works for PREPAID
     * cluster.
     */
    public readonly autoRenewFlag!: pulumi.Output<number | undefined>;
    /**
     * The available zone of the CynosDB Cluster.
     */
    public readonly availableZone!: pulumi.Output<string>;
    /**
     * The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. Default value is `POSTPAID_BY_HOUR`.
     */
    public readonly chargeType!: pulumi.Output<string | undefined>;
    /**
     * Charset used by CynosDB cluster.
     */
    public /*out*/ readonly charset!: pulumi.Output<string>;
    /**
     * Name of CynosDB cluster.
     */
    public readonly clusterName!: pulumi.Output<string>;
    /**
     * Status of the Cynosdb cluster.
     */
    public /*out*/ readonly clusterStatus!: pulumi.Output<string>;
    /**
     * Creation time of the CynosDB cluster.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Specify DB mode, only available when `db_type` is `MYSQL`. Values: `NORMAL` (Default), `SERVERLESS`.
     */
    public readonly dbMode!: pulumi.Output<string | undefined>;
    /**
     * Type of CynosDB, and available values include `MYSQL`.
     */
    public readonly dbType!: pulumi.Output<string>;
    /**
     * Version of CynosDB, which is related to `db_type`. For `MYSQL`, available value is `5.7`.
     */
    public readonly dbVersion!: pulumi.Output<string>;
    /**
     * Indicate whether to delete cluster instance directly or not. Default is false. If set true, the cluster and its `All
     * RELATED INSTANCES` will be deleted instead of staying recycle bin. Note: works for both `PREPAID` and `POSTPAID_BY_HOUR`
     * cluster.
     */
    public readonly forceDelete!: pulumi.Output<boolean | undefined>;
    /**
     * The number of CPU cores of read-write type instance in the CynosDB cluster. Required while creating normal cluster.
     * Note: modification of this field will take effect immediately, if want to upgrade on maintenance window, please upgrade
     * from console.
     */
    public readonly instanceCpuCore!: pulumi.Output<number | undefined>;
    /**
     * ID of instance.
     */
    public /*out*/ readonly instanceId!: pulumi.Output<string>;
    /**
     * Duration time for maintenance, unit in second. `3600` by default.
     */
    public readonly instanceMaintainDuration!: pulumi.Output<number | undefined>;
    /**
     * Offset time from 00:00, unit in second. For example, 03:00am should be `10800`. `10800` by default.
     */
    public readonly instanceMaintainStartTime!: pulumi.Output<number | undefined>;
    /**
     * Weekdays for maintenance. `["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]` by default.
     */
    public readonly instanceMaintainWeekdays!: pulumi.Output<string[]>;
    /**
     * Memory capacity of read-write type instance, unit in GB. Required while creating normal cluster. Note: modification of
     * this field will take effect immediately, if want to upgrade on maintenance window, please upgrade from console.
     */
    public readonly instanceMemorySize!: pulumi.Output<number | undefined>;
    /**
     * Name of instance.
     */
    public /*out*/ readonly instanceName!: pulumi.Output<string>;
    /**
     * Status of the instance.
     */
    public /*out*/ readonly instanceStatus!: pulumi.Output<string>;
    /**
     * Storage size of the instance, unit in GB.
     */
    public /*out*/ readonly instanceStorageSize!: pulumi.Output<number>;
    /**
     * Maximum CPU core count, required while `db_mode` is `SERVERLESS`, request DescribeServerlessInstanceSpecs for more
     * reference.
     */
    public readonly maxCpu!: pulumi.Output<number | undefined>;
    /**
     * Minimum CPU core count, required while `db_mode` is `SERVERLESS`, request DescribeServerlessInstanceSpecs for more
     * reference.
     */
    public readonly minCpu!: pulumi.Output<number | undefined>;
    /**
     * Recycling time of the old address, must be filled in when modifying the vpcRecycling time of the old address, must be
     * filled in when modifying the vpc.
     */
    public readonly oldIpReserveHours!: pulumi.Output<number | undefined>;
    /**
     * Specify parameter list of database. It is valid when prarm_template_id is set in create cluster. Use
     * `data.tencentcloud_mysql_default_params` to query available parameter details.
     */
    public readonly paramItems!: pulumi.Output<outputs.Cynosdb.ClusterParamItem[] | undefined>;
    /**
     * Password of `root` account.
     */
    public readonly password!: pulumi.Output<string>;
    /**
     * Port of CynosDB cluster.
     */
    public readonly port!: pulumi.Output<number | undefined>;
    /**
     * The ID of the parameter template.
     */
    public readonly prarmTemplateId!: pulumi.Output<number>;
    /**
     * The tenancy (time unit is month) of the prepaid instance. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`,
     * `10`, `11`, `12`, `24`, `36`. NOTE: it only works when charge_type is set to `PREPAID`.
     */
    public readonly prepaidPeriod!: pulumi.Output<number | undefined>;
    /**
     * ID of the project. `0` by default.
     */
    public readonly projectId!: pulumi.Output<number | undefined>;
    /**
     * Readonly addresses. Each element contains the following attributes:
     */
    public /*out*/ readonly roGroupAddrs!: pulumi.Output<outputs.Cynosdb.ClusterRoGroupAddr[]>;
    /**
     * ID of read-only instance group.
     */
    public /*out*/ readonly roGroupId!: pulumi.Output<string>;
    /**
     * List of instances in the read-only instance group.
     */
    public /*out*/ readonly roGroupInstances!: pulumi.Output<outputs.Cynosdb.ClusterRoGroupInstance[]>;
    /**
     * IDs of security group for `ro_group`.
     */
    public readonly roGroupSgs!: pulumi.Output<string[] | undefined>;
    /**
     * Read-write addresses. Each element contains the following attributes:
     */
    public /*out*/ readonly rwGroupAddrs!: pulumi.Output<outputs.Cynosdb.ClusterRwGroupAddr[]>;
    /**
     * ID of read-write instance group.
     */
    public /*out*/ readonly rwGroupId!: pulumi.Output<string>;
    /**
     * List of instances in the read-write instance group.
     */
    public /*out*/ readonly rwGroupInstances!: pulumi.Output<outputs.Cynosdb.ClusterRwGroupInstance[]>;
    /**
     * IDs of security group for `rw_group`.
     */
    public readonly rwGroupSgs!: pulumi.Output<string[] | undefined>;
    /**
     * Serverless cluster status. NOTE: This is a readonly attribute, to modify, please set `serverless_status_flag`.
     */
    public /*out*/ readonly serverlessStatus!: pulumi.Output<string>;
    /**
     * Specify whether to pause or resume serverless cluster. values: `resume`, `pause`.
     */
    public readonly serverlessStatusFlag!: pulumi.Output<string | undefined>;
    /**
     * Storage limit of CynosDB cluster instance, unit in GB. The maximum storage of a non-serverless instance in GB. NOTE: If
     * db_type is `MYSQL` and charge_type is `PREPAID`, the value cannot exceed the maximum storage corresponding to the CPU
     * and memory specifications, and the transaction mode is `order and pay`. when charge_type is `POSTPAID_BY_HOUR`, this
     * argument is unnecessary.
     */
    public readonly storageLimit!: pulumi.Output<number | undefined>;
    /**
     * Cluster storage billing mode, pay-as-you-go: `0`-yearly/monthly: `1`-The default is pay-as-you-go. When the DbType is
     * MYSQL, when the cluster computing billing mode is post-paid (including DbMode is SERVERLESS), the storage billing mode
     * can only be billing by volume; rollback and cloning do not support yearly subscriptions monthly storage.
     */
    public readonly storagePayMode!: pulumi.Output<number>;
    /**
     * Used storage of CynosDB cluster, unit in MB.
     */
    public /*out*/ readonly storageUsed!: pulumi.Output<number>;
    /**
     * ID of the subnet within this VPC.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * The tags of the CynosDB cluster.
     */
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * ID of the VPC.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterArgs | ClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClusterState | undefined;
            resourceInputs["autoPause"] = state ? state.autoPause : undefined;
            resourceInputs["autoPauseDelay"] = state ? state.autoPauseDelay : undefined;
            resourceInputs["autoRenewFlag"] = state ? state.autoRenewFlag : undefined;
            resourceInputs["availableZone"] = state ? state.availableZone : undefined;
            resourceInputs["chargeType"] = state ? state.chargeType : undefined;
            resourceInputs["charset"] = state ? state.charset : undefined;
            resourceInputs["clusterName"] = state ? state.clusterName : undefined;
            resourceInputs["clusterStatus"] = state ? state.clusterStatus : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["dbMode"] = state ? state.dbMode : undefined;
            resourceInputs["dbType"] = state ? state.dbType : undefined;
            resourceInputs["dbVersion"] = state ? state.dbVersion : undefined;
            resourceInputs["forceDelete"] = state ? state.forceDelete : undefined;
            resourceInputs["instanceCpuCore"] = state ? state.instanceCpuCore : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["instanceMaintainDuration"] = state ? state.instanceMaintainDuration : undefined;
            resourceInputs["instanceMaintainStartTime"] = state ? state.instanceMaintainStartTime : undefined;
            resourceInputs["instanceMaintainWeekdays"] = state ? state.instanceMaintainWeekdays : undefined;
            resourceInputs["instanceMemorySize"] = state ? state.instanceMemorySize : undefined;
            resourceInputs["instanceName"] = state ? state.instanceName : undefined;
            resourceInputs["instanceStatus"] = state ? state.instanceStatus : undefined;
            resourceInputs["instanceStorageSize"] = state ? state.instanceStorageSize : undefined;
            resourceInputs["maxCpu"] = state ? state.maxCpu : undefined;
            resourceInputs["minCpu"] = state ? state.minCpu : undefined;
            resourceInputs["oldIpReserveHours"] = state ? state.oldIpReserveHours : undefined;
            resourceInputs["paramItems"] = state ? state.paramItems : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["port"] = state ? state.port : undefined;
            resourceInputs["prarmTemplateId"] = state ? state.prarmTemplateId : undefined;
            resourceInputs["prepaidPeriod"] = state ? state.prepaidPeriod : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["roGroupAddrs"] = state ? state.roGroupAddrs : undefined;
            resourceInputs["roGroupId"] = state ? state.roGroupId : undefined;
            resourceInputs["roGroupInstances"] = state ? state.roGroupInstances : undefined;
            resourceInputs["roGroupSgs"] = state ? state.roGroupSgs : undefined;
            resourceInputs["rwGroupAddrs"] = state ? state.rwGroupAddrs : undefined;
            resourceInputs["rwGroupId"] = state ? state.rwGroupId : undefined;
            resourceInputs["rwGroupInstances"] = state ? state.rwGroupInstances : undefined;
            resourceInputs["rwGroupSgs"] = state ? state.rwGroupSgs : undefined;
            resourceInputs["serverlessStatus"] = state ? state.serverlessStatus : undefined;
            resourceInputs["serverlessStatusFlag"] = state ? state.serverlessStatusFlag : undefined;
            resourceInputs["storageLimit"] = state ? state.storageLimit : undefined;
            resourceInputs["storagePayMode"] = state ? state.storagePayMode : undefined;
            resourceInputs["storageUsed"] = state ? state.storageUsed : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as ClusterArgs | undefined;
            if ((!args || args.availableZone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'availableZone'");
            }
            if ((!args || args.clusterName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterName'");
            }
            if ((!args || args.dbType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbType'");
            }
            if ((!args || args.dbVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbVersion'");
            }
            if ((!args || args.password === undefined) && !opts.urn) {
                throw new Error("Missing required property 'password'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["autoPause"] = args ? args.autoPause : undefined;
            resourceInputs["autoPauseDelay"] = args ? args.autoPauseDelay : undefined;
            resourceInputs["autoRenewFlag"] = args ? args.autoRenewFlag : undefined;
            resourceInputs["availableZone"] = args ? args.availableZone : undefined;
            resourceInputs["chargeType"] = args ? args.chargeType : undefined;
            resourceInputs["clusterName"] = args ? args.clusterName : undefined;
            resourceInputs["dbMode"] = args ? args.dbMode : undefined;
            resourceInputs["dbType"] = args ? args.dbType : undefined;
            resourceInputs["dbVersion"] = args ? args.dbVersion : undefined;
            resourceInputs["forceDelete"] = args ? args.forceDelete : undefined;
            resourceInputs["instanceCpuCore"] = args ? args.instanceCpuCore : undefined;
            resourceInputs["instanceMaintainDuration"] = args ? args.instanceMaintainDuration : undefined;
            resourceInputs["instanceMaintainStartTime"] = args ? args.instanceMaintainStartTime : undefined;
            resourceInputs["instanceMaintainWeekdays"] = args ? args.instanceMaintainWeekdays : undefined;
            resourceInputs["instanceMemorySize"] = args ? args.instanceMemorySize : undefined;
            resourceInputs["maxCpu"] = args ? args.maxCpu : undefined;
            resourceInputs["minCpu"] = args ? args.minCpu : undefined;
            resourceInputs["oldIpReserveHours"] = args ? args.oldIpReserveHours : undefined;
            resourceInputs["paramItems"] = args ? args.paramItems : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["port"] = args ? args.port : undefined;
            resourceInputs["prarmTemplateId"] = args ? args.prarmTemplateId : undefined;
            resourceInputs["prepaidPeriod"] = args ? args.prepaidPeriod : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["roGroupSgs"] = args ? args.roGroupSgs : undefined;
            resourceInputs["rwGroupSgs"] = args ? args.rwGroupSgs : undefined;
            resourceInputs["serverlessStatusFlag"] = args ? args.serverlessStatusFlag : undefined;
            resourceInputs["storageLimit"] = args ? args.storageLimit : undefined;
            resourceInputs["storagePayMode"] = args ? args.storagePayMode : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["charset"] = undefined /*out*/;
            resourceInputs["clusterStatus"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["instanceId"] = undefined /*out*/;
            resourceInputs["instanceName"] = undefined /*out*/;
            resourceInputs["instanceStatus"] = undefined /*out*/;
            resourceInputs["instanceStorageSize"] = undefined /*out*/;
            resourceInputs["roGroupAddrs"] = undefined /*out*/;
            resourceInputs["roGroupId"] = undefined /*out*/;
            resourceInputs["roGroupInstances"] = undefined /*out*/;
            resourceInputs["rwGroupAddrs"] = undefined /*out*/;
            resourceInputs["rwGroupId"] = undefined /*out*/;
            resourceInputs["rwGroupInstances"] = undefined /*out*/;
            resourceInputs["serverlessStatus"] = undefined /*out*/;
            resourceInputs["storageUsed"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Cluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Cluster resources.
 */
export interface ClusterState {
    /**
     * Specify whether the cluster can auto-pause while `db_mode` is `SERVERLESS`. Values: `yes` (default), `no`.
     */
    autoPause?: pulumi.Input<string>;
    /**
     * Specify auto-pause delay in second while `db_mode` is `SERVERLESS`. Value range: `[600, 691200]`. Default: `600`.
     */
    autoPauseDelay?: pulumi.Input<number>;
    /**
     * Auto renew flag. Valid values are `0`(MANUAL_RENEW), `1`(AUTO_RENEW). Default value is `0`. Only works for PREPAID
     * cluster.
     */
    autoRenewFlag?: pulumi.Input<number>;
    /**
     * The available zone of the CynosDB Cluster.
     */
    availableZone?: pulumi.Input<string>;
    /**
     * The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. Default value is `POSTPAID_BY_HOUR`.
     */
    chargeType?: pulumi.Input<string>;
    /**
     * Charset used by CynosDB cluster.
     */
    charset?: pulumi.Input<string>;
    /**
     * Name of CynosDB cluster.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * Status of the Cynosdb cluster.
     */
    clusterStatus?: pulumi.Input<string>;
    /**
     * Creation time of the CynosDB cluster.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Specify DB mode, only available when `db_type` is `MYSQL`. Values: `NORMAL` (Default), `SERVERLESS`.
     */
    dbMode?: pulumi.Input<string>;
    /**
     * Type of CynosDB, and available values include `MYSQL`.
     */
    dbType?: pulumi.Input<string>;
    /**
     * Version of CynosDB, which is related to `db_type`. For `MYSQL`, available value is `5.7`.
     */
    dbVersion?: pulumi.Input<string>;
    /**
     * Indicate whether to delete cluster instance directly or not. Default is false. If set true, the cluster and its `All
     * RELATED INSTANCES` will be deleted instead of staying recycle bin. Note: works for both `PREPAID` and `POSTPAID_BY_HOUR`
     * cluster.
     */
    forceDelete?: pulumi.Input<boolean>;
    /**
     * The number of CPU cores of read-write type instance in the CynosDB cluster. Required while creating normal cluster.
     * Note: modification of this field will take effect immediately, if want to upgrade on maintenance window, please upgrade
     * from console.
     */
    instanceCpuCore?: pulumi.Input<number>;
    /**
     * ID of instance.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Duration time for maintenance, unit in second. `3600` by default.
     */
    instanceMaintainDuration?: pulumi.Input<number>;
    /**
     * Offset time from 00:00, unit in second. For example, 03:00am should be `10800`. `10800` by default.
     */
    instanceMaintainStartTime?: pulumi.Input<number>;
    /**
     * Weekdays for maintenance. `["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]` by default.
     */
    instanceMaintainWeekdays?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Memory capacity of read-write type instance, unit in GB. Required while creating normal cluster. Note: modification of
     * this field will take effect immediately, if want to upgrade on maintenance window, please upgrade from console.
     */
    instanceMemorySize?: pulumi.Input<number>;
    /**
     * Name of instance.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * Status of the instance.
     */
    instanceStatus?: pulumi.Input<string>;
    /**
     * Storage size of the instance, unit in GB.
     */
    instanceStorageSize?: pulumi.Input<number>;
    /**
     * Maximum CPU core count, required while `db_mode` is `SERVERLESS`, request DescribeServerlessInstanceSpecs for more
     * reference.
     */
    maxCpu?: pulumi.Input<number>;
    /**
     * Minimum CPU core count, required while `db_mode` is `SERVERLESS`, request DescribeServerlessInstanceSpecs for more
     * reference.
     */
    minCpu?: pulumi.Input<number>;
    /**
     * Recycling time of the old address, must be filled in when modifying the vpcRecycling time of the old address, must be
     * filled in when modifying the vpc.
     */
    oldIpReserveHours?: pulumi.Input<number>;
    /**
     * Specify parameter list of database. It is valid when prarm_template_id is set in create cluster. Use
     * `data.tencentcloud_mysql_default_params` to query available parameter details.
     */
    paramItems?: pulumi.Input<pulumi.Input<inputs.Cynosdb.ClusterParamItem>[]>;
    /**
     * Password of `root` account.
     */
    password?: pulumi.Input<string>;
    /**
     * Port of CynosDB cluster.
     */
    port?: pulumi.Input<number>;
    /**
     * The ID of the parameter template.
     */
    prarmTemplateId?: pulumi.Input<number>;
    /**
     * The tenancy (time unit is month) of the prepaid instance. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`,
     * `10`, `11`, `12`, `24`, `36`. NOTE: it only works when charge_type is set to `PREPAID`.
     */
    prepaidPeriod?: pulumi.Input<number>;
    /**
     * ID of the project. `0` by default.
     */
    projectId?: pulumi.Input<number>;
    /**
     * Readonly addresses. Each element contains the following attributes:
     */
    roGroupAddrs?: pulumi.Input<pulumi.Input<inputs.Cynosdb.ClusterRoGroupAddr>[]>;
    /**
     * ID of read-only instance group.
     */
    roGroupId?: pulumi.Input<string>;
    /**
     * List of instances in the read-only instance group.
     */
    roGroupInstances?: pulumi.Input<pulumi.Input<inputs.Cynosdb.ClusterRoGroupInstance>[]>;
    /**
     * IDs of security group for `ro_group`.
     */
    roGroupSgs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Read-write addresses. Each element contains the following attributes:
     */
    rwGroupAddrs?: pulumi.Input<pulumi.Input<inputs.Cynosdb.ClusterRwGroupAddr>[]>;
    /**
     * ID of read-write instance group.
     */
    rwGroupId?: pulumi.Input<string>;
    /**
     * List of instances in the read-write instance group.
     */
    rwGroupInstances?: pulumi.Input<pulumi.Input<inputs.Cynosdb.ClusterRwGroupInstance>[]>;
    /**
     * IDs of security group for `rw_group`.
     */
    rwGroupSgs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Serverless cluster status. NOTE: This is a readonly attribute, to modify, please set `serverless_status_flag`.
     */
    serverlessStatus?: pulumi.Input<string>;
    /**
     * Specify whether to pause or resume serverless cluster. values: `resume`, `pause`.
     */
    serverlessStatusFlag?: pulumi.Input<string>;
    /**
     * Storage limit of CynosDB cluster instance, unit in GB. The maximum storage of a non-serverless instance in GB. NOTE: If
     * db_type is `MYSQL` and charge_type is `PREPAID`, the value cannot exceed the maximum storage corresponding to the CPU
     * and memory specifications, and the transaction mode is `order and pay`. when charge_type is `POSTPAID_BY_HOUR`, this
     * argument is unnecessary.
     */
    storageLimit?: pulumi.Input<number>;
    /**
     * Cluster storage billing mode, pay-as-you-go: `0`-yearly/monthly: `1`-The default is pay-as-you-go. When the DbType is
     * MYSQL, when the cluster computing billing mode is post-paid (including DbMode is SERVERLESS), the storage billing mode
     * can only be billing by volume; rollback and cloning do not support yearly subscriptions monthly storage.
     */
    storagePayMode?: pulumi.Input<number>;
    /**
     * Used storage of CynosDB cluster, unit in MB.
     */
    storageUsed?: pulumi.Input<number>;
    /**
     * ID of the subnet within this VPC.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * The tags of the CynosDB cluster.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * ID of the VPC.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    /**
     * Specify whether the cluster can auto-pause while `db_mode` is `SERVERLESS`. Values: `yes` (default), `no`.
     */
    autoPause?: pulumi.Input<string>;
    /**
     * Specify auto-pause delay in second while `db_mode` is `SERVERLESS`. Value range: `[600, 691200]`. Default: `600`.
     */
    autoPauseDelay?: pulumi.Input<number>;
    /**
     * Auto renew flag. Valid values are `0`(MANUAL_RENEW), `1`(AUTO_RENEW). Default value is `0`. Only works for PREPAID
     * cluster.
     */
    autoRenewFlag?: pulumi.Input<number>;
    /**
     * The available zone of the CynosDB Cluster.
     */
    availableZone: pulumi.Input<string>;
    /**
     * The charge type of instance. Valid values are `PREPAID` and `POSTPAID_BY_HOUR`. Default value is `POSTPAID_BY_HOUR`.
     */
    chargeType?: pulumi.Input<string>;
    /**
     * Name of CynosDB cluster.
     */
    clusterName: pulumi.Input<string>;
    /**
     * Specify DB mode, only available when `db_type` is `MYSQL`. Values: `NORMAL` (Default), `SERVERLESS`.
     */
    dbMode?: pulumi.Input<string>;
    /**
     * Type of CynosDB, and available values include `MYSQL`.
     */
    dbType: pulumi.Input<string>;
    /**
     * Version of CynosDB, which is related to `db_type`. For `MYSQL`, available value is `5.7`.
     */
    dbVersion: pulumi.Input<string>;
    /**
     * Indicate whether to delete cluster instance directly or not. Default is false. If set true, the cluster and its `All
     * RELATED INSTANCES` will be deleted instead of staying recycle bin. Note: works for both `PREPAID` and `POSTPAID_BY_HOUR`
     * cluster.
     */
    forceDelete?: pulumi.Input<boolean>;
    /**
     * The number of CPU cores of read-write type instance in the CynosDB cluster. Required while creating normal cluster.
     * Note: modification of this field will take effect immediately, if want to upgrade on maintenance window, please upgrade
     * from console.
     */
    instanceCpuCore?: pulumi.Input<number>;
    /**
     * Duration time for maintenance, unit in second. `3600` by default.
     */
    instanceMaintainDuration?: pulumi.Input<number>;
    /**
     * Offset time from 00:00, unit in second. For example, 03:00am should be `10800`. `10800` by default.
     */
    instanceMaintainStartTime?: pulumi.Input<number>;
    /**
     * Weekdays for maintenance. `["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]` by default.
     */
    instanceMaintainWeekdays?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Memory capacity of read-write type instance, unit in GB. Required while creating normal cluster. Note: modification of
     * this field will take effect immediately, if want to upgrade on maintenance window, please upgrade from console.
     */
    instanceMemorySize?: pulumi.Input<number>;
    /**
     * Maximum CPU core count, required while `db_mode` is `SERVERLESS`, request DescribeServerlessInstanceSpecs for more
     * reference.
     */
    maxCpu?: pulumi.Input<number>;
    /**
     * Minimum CPU core count, required while `db_mode` is `SERVERLESS`, request DescribeServerlessInstanceSpecs for more
     * reference.
     */
    minCpu?: pulumi.Input<number>;
    /**
     * Recycling time of the old address, must be filled in when modifying the vpcRecycling time of the old address, must be
     * filled in when modifying the vpc.
     */
    oldIpReserveHours?: pulumi.Input<number>;
    /**
     * Specify parameter list of database. It is valid when prarm_template_id is set in create cluster. Use
     * `data.tencentcloud_mysql_default_params` to query available parameter details.
     */
    paramItems?: pulumi.Input<pulumi.Input<inputs.Cynosdb.ClusterParamItem>[]>;
    /**
     * Password of `root` account.
     */
    password: pulumi.Input<string>;
    /**
     * Port of CynosDB cluster.
     */
    port?: pulumi.Input<number>;
    /**
     * The ID of the parameter template.
     */
    prarmTemplateId?: pulumi.Input<number>;
    /**
     * The tenancy (time unit is month) of the prepaid instance. Valid values are `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`,
     * `10`, `11`, `12`, `24`, `36`. NOTE: it only works when charge_type is set to `PREPAID`.
     */
    prepaidPeriod?: pulumi.Input<number>;
    /**
     * ID of the project. `0` by default.
     */
    projectId?: pulumi.Input<number>;
    /**
     * IDs of security group for `ro_group`.
     */
    roGroupSgs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * IDs of security group for `rw_group`.
     */
    rwGroupSgs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specify whether to pause or resume serverless cluster. values: `resume`, `pause`.
     */
    serverlessStatusFlag?: pulumi.Input<string>;
    /**
     * Storage limit of CynosDB cluster instance, unit in GB. The maximum storage of a non-serverless instance in GB. NOTE: If
     * db_type is `MYSQL` and charge_type is `PREPAID`, the value cannot exceed the maximum storage corresponding to the CPU
     * and memory specifications, and the transaction mode is `order and pay`. when charge_type is `POSTPAID_BY_HOUR`, this
     * argument is unnecessary.
     */
    storageLimit?: pulumi.Input<number>;
    /**
     * Cluster storage billing mode, pay-as-you-go: `0`-yearly/monthly: `1`-The default is pay-as-you-go. When the DbType is
     * MYSQL, when the cluster computing billing mode is post-paid (including DbMode is SERVERLESS), the storage billing mode
     * can only be billing by volume; rollback and cloning do not support yearly subscriptions monthly storage.
     */
    storagePayMode?: pulumi.Input<number>;
    /**
     * ID of the subnet within this VPC.
     */
    subnetId: pulumi.Input<string>;
    /**
     * The tags of the CynosDB cluster.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * ID of the VPC.
     */
    vpcId: pulumi.Input<string>;
}
