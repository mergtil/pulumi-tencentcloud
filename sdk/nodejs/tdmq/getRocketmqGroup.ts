// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getRocketmqGroup(args: GetRocketmqGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetRocketmqGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Tdmq/getRocketmqGroup:getRocketmqGroup", {
        "clusterId": args.clusterId,
        "filterGroup": args.filterGroup,
        "filterOneGroup": args.filterOneGroup,
        "filterTopic": args.filterTopic,
        "namespaceId": args.namespaceId,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getRocketmqGroup.
 */
export interface GetRocketmqGroupArgs {
    clusterId: string;
    filterGroup?: string;
    filterOneGroup?: string;
    filterTopic?: string;
    namespaceId: string;
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getRocketmqGroup.
 */
export interface GetRocketmqGroupResult {
    readonly clusterId: string;
    readonly filterGroup?: string;
    readonly filterOneGroup?: string;
    readonly filterTopic?: string;
    readonly groups: outputs.Tdmq.GetRocketmqGroupGroup[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly namespaceId: string;
    readonly resultOutputFile?: string;
}
export function getRocketmqGroupOutput(args: GetRocketmqGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRocketmqGroupResult> {
    return pulumi.output(args).apply((a: any) => getRocketmqGroup(a, opts))
}

/**
 * A collection of arguments for invoking getRocketmqGroup.
 */
export interface GetRocketmqGroupOutputArgs {
    clusterId: pulumi.Input<string>;
    filterGroup?: pulumi.Input<string>;
    filterOneGroup?: pulumi.Input<string>;
    filterTopic?: pulumi.Input<string>;
    namespaceId: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
}
