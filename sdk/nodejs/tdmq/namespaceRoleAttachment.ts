// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class NamespaceRoleAttachment extends pulumi.CustomResource {
    /**
     * Get an existing NamespaceRoleAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: NamespaceRoleAttachmentState, opts?: pulumi.CustomResourceOptions): NamespaceRoleAttachment {
        return new NamespaceRoleAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Tdmq/namespaceRoleAttachment:NamespaceRoleAttachment';

    /**
     * Returns true if the given object is an instance of NamespaceRoleAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is NamespaceRoleAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === NamespaceRoleAttachment.__pulumiType;
    }

    /**
     * The id of tdmq cluster.
     */
    public readonly clusterId!: pulumi.Output<string>;
    /**
     * Creation time of resource.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * The name of tdmq namespace.
     */
    public readonly environId!: pulumi.Output<string>;
    /**
     * The permissions of tdmq role.
     */
    public readonly permissions!: pulumi.Output<string[]>;
    /**
     * The name of tdmq role.
     */
    public readonly roleName!: pulumi.Output<string>;

    /**
     * Create a NamespaceRoleAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: NamespaceRoleAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: NamespaceRoleAttachmentArgs | NamespaceRoleAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as NamespaceRoleAttachmentState | undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["environId"] = state ? state.environId : undefined;
            resourceInputs["permissions"] = state ? state.permissions : undefined;
            resourceInputs["roleName"] = state ? state.roleName : undefined;
        } else {
            const args = argsOrState as NamespaceRoleAttachmentArgs | undefined;
            if ((!args || args.clusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            if ((!args || args.environId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environId'");
            }
            if ((!args || args.permissions === undefined) && !opts.urn) {
                throw new Error("Missing required property 'permissions'");
            }
            if ((!args || args.roleName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'roleName'");
            }
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["environId"] = args ? args.environId : undefined;
            resourceInputs["permissions"] = args ? args.permissions : undefined;
            resourceInputs["roleName"] = args ? args.roleName : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(NamespaceRoleAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering NamespaceRoleAttachment resources.
 */
export interface NamespaceRoleAttachmentState {
    /**
     * The id of tdmq cluster.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Creation time of resource.
     */
    createTime?: pulumi.Input<string>;
    /**
     * The name of tdmq namespace.
     */
    environId?: pulumi.Input<string>;
    /**
     * The permissions of tdmq role.
     */
    permissions?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of tdmq role.
     */
    roleName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a NamespaceRoleAttachment resource.
 */
export interface NamespaceRoleAttachmentArgs {
    /**
     * The id of tdmq cluster.
     */
    clusterId: pulumi.Input<string>;
    /**
     * The name of tdmq namespace.
     */
    environId: pulumi.Input<string>;
    /**
     * The permissions of tdmq role.
     */
    permissions: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The name of tdmq role.
     */
    roleName: pulumi.Input<string>;
}
