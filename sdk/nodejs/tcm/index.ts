// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AccessLogConfigArgs, AccessLogConfigState } from "./accessLogConfig";
export type AccessLogConfig = import("./accessLogConfig").AccessLogConfig;
export const AccessLogConfig: typeof import("./accessLogConfig").AccessLogConfig = null as any;
utilities.lazyLoad(exports, ["AccessLogConfig"], () => require("./accessLogConfig"));

export { ClusterAttachmentArgs, ClusterAttachmentState } from "./clusterAttachment";
export type ClusterAttachment = import("./clusterAttachment").ClusterAttachment;
export const ClusterAttachment: typeof import("./clusterAttachment").ClusterAttachment = null as any;
utilities.lazyLoad(exports, ["ClusterAttachment"], () => require("./clusterAttachment"));

export { GetMeshArgs, GetMeshResult, GetMeshOutputArgs } from "./getMesh";
export const getMesh: typeof import("./getMesh").getMesh = null as any;
export const getMeshOutput: typeof import("./getMesh").getMeshOutput = null as any;
utilities.lazyLoad(exports, ["getMesh","getMeshOutput"], () => require("./getMesh"));

export { MeshArgs, MeshState } from "./mesh";
export type Mesh = import("./mesh").Mesh;
export const Mesh: typeof import("./mesh").Mesh = null as any;
utilities.lazyLoad(exports, ["Mesh"], () => require("./mesh"));

export { PrometheusAttachmentArgs, PrometheusAttachmentState } from "./prometheusAttachment";
export type PrometheusAttachment = import("./prometheusAttachment").PrometheusAttachment;
export const PrometheusAttachment: typeof import("./prometheusAttachment").PrometheusAttachment = null as any;
utilities.lazyLoad(exports, ["PrometheusAttachment"], () => require("./prometheusAttachment"));

export { TracingConfigArgs, TracingConfigState } from "./tracingConfig";
export type TracingConfig = import("./tracingConfig").TracingConfig;
export const TracingConfig: typeof import("./tracingConfig").TracingConfig = null as any;
utilities.lazyLoad(exports, ["TracingConfig"], () => require("./tracingConfig"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "tencentcloud:Tcm/accessLogConfig:AccessLogConfig":
                return new AccessLogConfig(name, <any>undefined, { urn })
            case "tencentcloud:Tcm/clusterAttachment:ClusterAttachment":
                return new ClusterAttachment(name, <any>undefined, { urn })
            case "tencentcloud:Tcm/mesh:Mesh":
                return new Mesh(name, <any>undefined, { urn })
            case "tencentcloud:Tcm/prometheusAttachment:PrometheusAttachment":
                return new PrometheusAttachment(name, <any>undefined, { urn })
            case "tencentcloud:Tcm/tracingConfig:TracingConfig":
                return new TracingConfig(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("tencentcloud", "Tcm/accessLogConfig", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Tcm/clusterAttachment", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Tcm/mesh", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Tcm/prometheusAttachment", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Tcm/tracingConfig", _module)
