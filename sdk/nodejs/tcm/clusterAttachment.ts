// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class ClusterAttachment extends pulumi.CustomResource {
    /**
     * Get an existing ClusterAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterAttachmentState, opts?: pulumi.CustomResourceOptions): ClusterAttachment {
        return new ClusterAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Tcm/clusterAttachment:ClusterAttachment';

    /**
     * Returns true if the given object is an instance of ClusterAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ClusterAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ClusterAttachment.__pulumiType;
    }

    /**
     * Cluster list.
     */
    public readonly clusterLists!: pulumi.Output<outputs.Tcm.ClusterAttachmentClusterList[]>;
    /**
     * Mesh ID.
     */
    public readonly meshId!: pulumi.Output<string>;

    /**
     * Create a ClusterAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterAttachmentArgs | ClusterAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClusterAttachmentState | undefined;
            resourceInputs["clusterLists"] = state ? state.clusterLists : undefined;
            resourceInputs["meshId"] = state ? state.meshId : undefined;
        } else {
            const args = argsOrState as ClusterAttachmentArgs | undefined;
            if ((!args || args.meshId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'meshId'");
            }
            resourceInputs["clusterLists"] = args ? args.clusterLists : undefined;
            resourceInputs["meshId"] = args ? args.meshId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ClusterAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ClusterAttachment resources.
 */
export interface ClusterAttachmentState {
    /**
     * Cluster list.
     */
    clusterLists?: pulumi.Input<pulumi.Input<inputs.Tcm.ClusterAttachmentClusterList>[]>;
    /**
     * Mesh ID.
     */
    meshId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ClusterAttachment resource.
 */
export interface ClusterAttachmentArgs {
    /**
     * Cluster list.
     */
    clusterLists?: pulumi.Input<pulumi.Input<inputs.Tcm.ClusterAttachmentClusterList>[]>;
    /**
     * Mesh ID.
     */
    meshId: pulumi.Input<string>;
}
