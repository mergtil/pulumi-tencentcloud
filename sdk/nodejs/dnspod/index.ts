// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { DomainInstanceArgs, DomainInstanceState } from "./domainInstance";
export type DomainInstance = import("./domainInstance").DomainInstance;
export const DomainInstance: typeof import("./domainInstance").DomainInstance = null as any;
utilities.lazyLoad(exports, ["DomainInstance"], () => require("./domainInstance"));

export { GetRecordsArgs, GetRecordsResult, GetRecordsOutputArgs } from "./getRecords";
export const getRecords: typeof import("./getRecords").getRecords = null as any;
export const getRecordsOutput: typeof import("./getRecords").getRecordsOutput = null as any;
utilities.lazyLoad(exports, ["getRecords","getRecordsOutput"], () => require("./getRecords"));

export { RecordArgs, RecordState } from "./record";
export type Record = import("./record").Record;
export const Record: typeof import("./record").Record = null as any;
utilities.lazyLoad(exports, ["Record"], () => require("./record"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "tencentcloud:Dnspod/domainInstance:DomainInstance":
                return new DomainInstance(name, <any>undefined, { urn })
            case "tencentcloud:Dnspod/record:Record":
                return new Record(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("tencentcloud", "Dnspod/domainInstance", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Dnspod/record", _module)
