// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class BucketVersion extends pulumi.CustomResource {
    /**
     * Get an existing BucketVersion resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BucketVersionState, opts?: pulumi.CustomResourceOptions): BucketVersion {
        return new BucketVersion(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Cos/bucketVersion:BucketVersion';

    /**
     * Returns true if the given object is an instance of BucketVersion.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BucketVersion {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BucketVersion.__pulumiType;
    }

    /**
     * Bucket format should be [custom name]-[appid], for example `mycos-1258798060`.
     */
    public readonly bucket!: pulumi.Output<string>;
    /**
     * Whether to enable versioning. Valid values: `Suspended`, `Enabled`.
     */
    public readonly status!: pulumi.Output<string>;

    /**
     * Create a BucketVersion resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BucketVersionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BucketVersionArgs | BucketVersionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BucketVersionState | undefined;
            resourceInputs["bucket"] = state ? state.bucket : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as BucketVersionArgs | undefined;
            if ((!args || args.bucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucket'");
            }
            if ((!args || args.status === undefined) && !opts.urn) {
                throw new Error("Missing required property 'status'");
            }
            resourceInputs["bucket"] = args ? args.bucket : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BucketVersion.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BucketVersion resources.
 */
export interface BucketVersionState {
    /**
     * Bucket format should be [custom name]-[appid], for example `mycos-1258798060`.
     */
    bucket?: pulumi.Input<string>;
    /**
     * Whether to enable versioning. Valid values: `Suspended`, `Enabled`.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BucketVersion resource.
 */
export interface BucketVersionArgs {
    /**
     * Bucket format should be [custom name]-[appid], for example `mycos-1258798060`.
     */
    bucket: pulumi.Input<string>;
    /**
     * Whether to enable versioning. Valid values: `Suspended`, `Enabled`.
     */
    status: pulumi.Input<string>;
}
