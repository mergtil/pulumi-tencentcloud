// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterState, opts?: pulumi.CustomResourceOptions): Cluster {
        return new Cluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Kubernetes/cluster:Cluster';

    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cluster.__pulumiType;
    }

    /**
     * If set to true, it will acquire the ClusterRole tke:admin. NOTE: this arguments cannot revoke to `false` after acquired.
     */
    public readonly acquireClusterAdminRole!: pulumi.Output<boolean | undefined>;
    /**
     * Specify cluster authentication configuration. Only available for managed cluster and `cluster_version` >= 1.20.
     */
    public readonly authOptions!: pulumi.Output<outputs.Kubernetes.ClusterAuthOptions | undefined>;
    /**
     * Whether the cluster level auto upgraded, valid for managed cluster.
     */
    public readonly autoUpgradeClusterLevel!: pulumi.Output<boolean | undefined>;
    /**
     * The number of basic pods. valid when enable_customized_pod_cidr=true.
     */
    public readonly basePodNum!: pulumi.Output<number | undefined>;
    /**
     * The certificate used for access.
     */
    public /*out*/ readonly certificationAuthority!: pulumi.Output<string>;
    /**
     * Claim expired seconds to recycle ENI. This field can only set when field `network_type` is 'VPC-CNI'.
     * `claim_expired_seconds` must greater or equal than 300 and less than 15768000.
     */
    public readonly claimExpiredSeconds!: pulumi.Output<number | undefined>;
    /**
     * Indicates whether to enable cluster node auto scaling. Default is false.
     *
     * @deprecated This argument is deprecated because the TKE auto-scaling group was no longer available.
     */
    public readonly clusterAsEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Specify Cluster Audit config. NOTE: Please make sure your TKE CamRole have permission to access CLS service.
     */
    public readonly clusterAudit!: pulumi.Output<outputs.Kubernetes.ClusterClusterAudit | undefined>;
    /**
     * A network address block of the cluster. Different from vpc cidr and cidr of other clusters within this vpc. Must be in
     * 10./192.168/172.[16-31] segments.
     */
    public readonly clusterCidr!: pulumi.Output<string | undefined>;
    /**
     * Deployment type of the cluster, the available values include: 'MANAGED_CLUSTER' and 'INDEPENDENT_CLUSTER'. Default is
     * 'MANAGED_CLUSTER'.
     */
    public readonly clusterDeployType!: pulumi.Output<string | undefined>;
    /**
     * Description of the cluster.
     */
    public readonly clusterDesc!: pulumi.Output<string | undefined>;
    /**
     * External network address to access.
     */
    public /*out*/ readonly clusterExternalEndpoint!: pulumi.Output<string>;
    /**
     * Customized parameters for master component,such as kube-apiserver, kube-controller-manager, kube-scheduler.
     */
    public readonly clusterExtraArgs!: pulumi.Output<outputs.Kubernetes.ClusterClusterExtraArgs | undefined>;
    /**
     * Open internet access or not. If this field is set 'true', the field below `worker_config` must be set. Because only
     * cluster with node is allowed enable access endpoint. You may open it through `tencentcloud_kubernetes_cluster_endpoint`.
     */
    public readonly clusterInternet!: pulumi.Output<boolean | undefined>;
    /**
     * Domain name for cluster Kube-apiserver internet access. Be careful if you modify value of this parameter, the
     * cluster_external_endpoint value may be changed automatically too.
     */
    public readonly clusterInternetDomain!: pulumi.Output<string | undefined>;
    /**
     * Specify security group, NOTE: This argument must not be empty if cluster internet enabled.
     */
    public readonly clusterInternetSecurityGroup!: pulumi.Output<string | undefined>;
    /**
     * Open intranet access or not. If this field is set 'true', the field below `worker_config` must be set. Because only
     * cluster with node is allowed enable access endpoint. You may open it through `tencentcloud_kubernetes_cluster_endpoint`.
     */
    public readonly clusterIntranet!: pulumi.Output<boolean | undefined>;
    /**
     * Domain name for cluster Kube-apiserver intranet access. Be careful if you modify value of this parameter, the
     * pgw_endpoint value may be changed automatically too.
     */
    public readonly clusterIntranetDomain!: pulumi.Output<string | undefined>;
    /**
     * Subnet id who can access this independent cluster, this field must and can only set when `cluster_intranet` is true.
     * `cluster_intranet_subnet_id` can not modify once be set.
     */
    public readonly clusterIntranetSubnetId!: pulumi.Output<string | undefined>;
    /**
     * Indicates whether `ipvs` is enabled. Default is true. False means `iptables` is enabled.
     */
    public readonly clusterIpvs!: pulumi.Output<boolean | undefined>;
    /**
     * Specify cluster level, valid for managed cluster, use data source `tencentcloud_kubernetes_cluster_levels` to query
     * available levels. Available value examples `L5`, `L20`, `L50`, `L100`, etc.
     */
    public readonly clusterLevel!: pulumi.Output<string>;
    /**
     * The maximum number of Pods per node in the cluster. Default is 256. The minimum value is 4. When its power unequal to 2,
     * it will round upward to the closest power of 2.
     */
    public readonly clusterMaxPodNum!: pulumi.Output<number | undefined>;
    /**
     * The maximum number of services in the cluster. Default is 256. The range is from 32 to 32768. When its power unequal to
     * 2, it will round upward to the closest power of 2.
     */
    public readonly clusterMaxServiceNum!: pulumi.Output<number | undefined>;
    /**
     * Name of the cluster.
     */
    public readonly clusterName!: pulumi.Output<string | undefined>;
    /**
     * Number of nodes in the cluster.
     */
    public /*out*/ readonly clusterNodeNum!: pulumi.Output<number>;
    /**
     * Operating system of the cluster, the available values include:
     * 'centos7.6.0_x64','ubuntu18.04.1x86_64','tlinux2.4x86_64'. Default is 'tlinux2.4x86_64'.
     */
    public readonly clusterOs!: pulumi.Output<string | undefined>;
    /**
     * Image type of the cluster os, the available values include: 'GENERAL'. Default is 'GENERAL'.
     */
    public readonly clusterOsType!: pulumi.Output<string | undefined>;
    /**
     * Subnet ID of the cluster, such as: subnet-b3p7d7q5.
     */
    public readonly clusterSubnetId!: pulumi.Output<string | undefined>;
    /**
     * Version of the cluster. Use `tencentcloud_kubernetes_available_cluster_versions` to get the upgradable cluster version.
     */
    public readonly clusterVersion!: pulumi.Output<string>;
    /**
     * Runtime type of the cluster, the available values include: 'docker' and 'containerd'.The Kubernetes v1.24 has removed
     * dockershim, so please use containerd in v1.24 or higher.Default is 'docker'.
     */
    public readonly containerRuntime!: pulumi.Output<string | undefined>;
    /**
     * Indicates whether cluster deletion protection is enabled. Default is false.
     */
    public readonly deletionProtection!: pulumi.Output<boolean | undefined>;
    /**
     * Docker graph path. Default is `/var/lib/docker`.
     */
    public readonly dockerGraphPath!: pulumi.Output<string | undefined>;
    /**
     * Domain name for access.
     */
    public /*out*/ readonly domain!: pulumi.Output<string>;
    /**
     * Whether to enable the custom mode of node podCIDR size. Default is false.
     */
    public readonly enableCustomizedPodCidr!: pulumi.Output<boolean | undefined>;
    /**
     * Subnet Ids for cluster with VPC-CNI network mode. This field can only set when field `network_type` is 'VPC-CNI'.
     * `eni_subnet_ids` can not empty once be set.
     */
    public readonly eniSubnetIds!: pulumi.Output<string[] | undefined>;
    /**
     * Specify cluster Event Persistence config. NOTE: Please make sure your TKE CamRole have permission to access CLS service.
     */
    public readonly eventPersistence!: pulumi.Output<outputs.Kubernetes.ClusterEventPersistence | undefined>;
    /**
     * create tke cluster by existed instances.
     */
    public readonly existInstances!: pulumi.Output<outputs.Kubernetes.ClusterExistInstance[] | undefined>;
    /**
     * Information of the add-on to be installed.
     */
    public readonly extensionAddons!: pulumi.Output<outputs.Kubernetes.ClusterExtensionAddon[] | undefined>;
    /**
     * Custom parameter information related to the node.
     */
    public readonly extraArgs!: pulumi.Output<string[] | undefined>;
    /**
     * Indicate to set desired pod number in node. valid when enable_customized_pod_cidr=true, and it takes effect for all
     * nodes.
     */
    public readonly globeDesiredPodNum!: pulumi.Output<number | undefined>;
    /**
     * Indicates whether to ignore the cluster cidr conflict error. Default is false.
     */
    public readonly ignoreClusterCidrConflict!: pulumi.Output<boolean | undefined>;
    /**
     * Indicates whether non-static ip mode is enabled. Default is false.
     */
    public readonly isNonStaticIpMode!: pulumi.Output<boolean | undefined>;
    /**
     * Kubernetes config.
     */
    public /*out*/ readonly kubeConfig!: pulumi.Output<string>;
    /**
     * Kubernetes config of private network.
     */
    public /*out*/ readonly kubeConfigIntranet!: pulumi.Output<string>;
    /**
     * Cluster kube-proxy mode, the available values include: 'kube-proxy-bpf'. Default is not set.When set to kube-proxy-bpf,
     * cluster version greater than 1.14 and with Tencent Linux 2.4 is required.
     */
    public readonly kubeProxyMode!: pulumi.Output<string | undefined>;
    /**
     * Labels of tke cluster nodes.
     */
    public readonly labels!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * Specify cluster log agent config.
     */
    public readonly logAgent!: pulumi.Output<outputs.Kubernetes.ClusterLogAgent | undefined>;
    /**
     * Security policies for managed cluster internet, like:'192.168.1.0/24' or '113.116.51.27', '0.0.0.0/0' means all. This
     * field can only set when field `cluster_deploy_type` is 'MANAGED_CLUSTER' and `cluster_internet` is true.
     * `managed_cluster_internet_security_policies` can not delete or empty once be set.
     *
     * @deprecated this argument was deprecated, use `cluster_internet_security_group` instead.
     */
    public readonly managedClusterInternetSecurityPolicies!: pulumi.Output<string[] | undefined>;
    /**
     * Deploy the machine configuration information of the 'MASTER_ETCD' service, and create <=7 units for common users.
     */
    public readonly masterConfigs!: pulumi.Output<outputs.Kubernetes.ClusterMasterConfig[] | undefined>;
    /**
     * Mount target. Default is not mounting.
     */
    public readonly mountTarget!: pulumi.Output<string | undefined>;
    /**
     * Cluster network type, the available values include: 'GR' and 'VPC-CNI' and 'CiliumOverlay'. Default is GR.
     */
    public readonly networkType!: pulumi.Output<string | undefined>;
    /**
     * Node name type of Cluster, the available values include: 'lan-ip' and 'hostname', Default is 'lan-ip'.
     */
    public readonly nodeNameType!: pulumi.Output<string | undefined>;
    /**
     * Global config effective for all node pools.
     */
    public readonly nodePoolGlobalConfigs!: pulumi.Output<outputs.Kubernetes.ClusterNodePoolGlobalConfig[]>;
    /**
     * Password of account.
     */
    public /*out*/ readonly password!: pulumi.Output<string>;
    /**
     * The Intranet address used for access.
     */
    public /*out*/ readonly pgwEndpoint!: pulumi.Output<string>;
    /**
     * Project ID, default value is 0.
     */
    public readonly projectId!: pulumi.Output<number | undefined>;
    /**
     * Container Runtime version.
     */
    public readonly runtimeVersion!: pulumi.Output<string | undefined>;
    /**
     * Access policy.
     */
    public /*out*/ readonly securityPolicies!: pulumi.Output<string[]>;
    /**
     * A network address block of the service. Different from vpc cidr and cidr of other clusters within this vpc. Must be in
     * 10./192.168/172.[16-31] segments.
     */
    public readonly serviceCidr!: pulumi.Output<string | undefined>;
    /**
     * The tags of the cluster.
     */
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * Sets whether the joining node participates in the schedule. Default is '0'. Participate in scheduling.
     */
    public readonly unschedulable!: pulumi.Output<number | undefined>;
    /**
     * Indicates whether upgrade all instances when cluster_version change. Default is false.
     */
    public readonly upgradeInstancesFollowCluster!: pulumi.Output<boolean | undefined>;
    /**
     * User name of account.
     */
    public /*out*/ readonly userName!: pulumi.Output<string>;
    /**
     * Vpc Id of the cluster.
     */
    public readonly vpcId!: pulumi.Output<string>;
    /**
     * Deploy the machine configuration information of the 'WORKER' service, and create <=20 units for common users. The other
     * 'WORK' service are added by 'tencentcloud_kubernetes_worker'.
     */
    public readonly workerConfigs!: pulumi.Output<outputs.Kubernetes.ClusterWorkerConfig[] | undefined>;
    /**
     * An information list of cvm within the 'WORKER' clusters. Each element contains the following attributes:
     */
    public /*out*/ readonly workerInstancesLists!: pulumi.Output<outputs.Kubernetes.ClusterWorkerInstancesList[]>;

    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterArgs | ClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClusterState | undefined;
            resourceInputs["acquireClusterAdminRole"] = state ? state.acquireClusterAdminRole : undefined;
            resourceInputs["authOptions"] = state ? state.authOptions : undefined;
            resourceInputs["autoUpgradeClusterLevel"] = state ? state.autoUpgradeClusterLevel : undefined;
            resourceInputs["basePodNum"] = state ? state.basePodNum : undefined;
            resourceInputs["certificationAuthority"] = state ? state.certificationAuthority : undefined;
            resourceInputs["claimExpiredSeconds"] = state ? state.claimExpiredSeconds : undefined;
            resourceInputs["clusterAsEnabled"] = state ? state.clusterAsEnabled : undefined;
            resourceInputs["clusterAudit"] = state ? state.clusterAudit : undefined;
            resourceInputs["clusterCidr"] = state ? state.clusterCidr : undefined;
            resourceInputs["clusterDeployType"] = state ? state.clusterDeployType : undefined;
            resourceInputs["clusterDesc"] = state ? state.clusterDesc : undefined;
            resourceInputs["clusterExternalEndpoint"] = state ? state.clusterExternalEndpoint : undefined;
            resourceInputs["clusterExtraArgs"] = state ? state.clusterExtraArgs : undefined;
            resourceInputs["clusterInternet"] = state ? state.clusterInternet : undefined;
            resourceInputs["clusterInternetDomain"] = state ? state.clusterInternetDomain : undefined;
            resourceInputs["clusterInternetSecurityGroup"] = state ? state.clusterInternetSecurityGroup : undefined;
            resourceInputs["clusterIntranet"] = state ? state.clusterIntranet : undefined;
            resourceInputs["clusterIntranetDomain"] = state ? state.clusterIntranetDomain : undefined;
            resourceInputs["clusterIntranetSubnetId"] = state ? state.clusterIntranetSubnetId : undefined;
            resourceInputs["clusterIpvs"] = state ? state.clusterIpvs : undefined;
            resourceInputs["clusterLevel"] = state ? state.clusterLevel : undefined;
            resourceInputs["clusterMaxPodNum"] = state ? state.clusterMaxPodNum : undefined;
            resourceInputs["clusterMaxServiceNum"] = state ? state.clusterMaxServiceNum : undefined;
            resourceInputs["clusterName"] = state ? state.clusterName : undefined;
            resourceInputs["clusterNodeNum"] = state ? state.clusterNodeNum : undefined;
            resourceInputs["clusterOs"] = state ? state.clusterOs : undefined;
            resourceInputs["clusterOsType"] = state ? state.clusterOsType : undefined;
            resourceInputs["clusterSubnetId"] = state ? state.clusterSubnetId : undefined;
            resourceInputs["clusterVersion"] = state ? state.clusterVersion : undefined;
            resourceInputs["containerRuntime"] = state ? state.containerRuntime : undefined;
            resourceInputs["deletionProtection"] = state ? state.deletionProtection : undefined;
            resourceInputs["dockerGraphPath"] = state ? state.dockerGraphPath : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["enableCustomizedPodCidr"] = state ? state.enableCustomizedPodCidr : undefined;
            resourceInputs["eniSubnetIds"] = state ? state.eniSubnetIds : undefined;
            resourceInputs["eventPersistence"] = state ? state.eventPersistence : undefined;
            resourceInputs["existInstances"] = state ? state.existInstances : undefined;
            resourceInputs["extensionAddons"] = state ? state.extensionAddons : undefined;
            resourceInputs["extraArgs"] = state ? state.extraArgs : undefined;
            resourceInputs["globeDesiredPodNum"] = state ? state.globeDesiredPodNum : undefined;
            resourceInputs["ignoreClusterCidrConflict"] = state ? state.ignoreClusterCidrConflict : undefined;
            resourceInputs["isNonStaticIpMode"] = state ? state.isNonStaticIpMode : undefined;
            resourceInputs["kubeConfig"] = state ? state.kubeConfig : undefined;
            resourceInputs["kubeConfigIntranet"] = state ? state.kubeConfigIntranet : undefined;
            resourceInputs["kubeProxyMode"] = state ? state.kubeProxyMode : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["logAgent"] = state ? state.logAgent : undefined;
            resourceInputs["managedClusterInternetSecurityPolicies"] = state ? state.managedClusterInternetSecurityPolicies : undefined;
            resourceInputs["masterConfigs"] = state ? state.masterConfigs : undefined;
            resourceInputs["mountTarget"] = state ? state.mountTarget : undefined;
            resourceInputs["networkType"] = state ? state.networkType : undefined;
            resourceInputs["nodeNameType"] = state ? state.nodeNameType : undefined;
            resourceInputs["nodePoolGlobalConfigs"] = state ? state.nodePoolGlobalConfigs : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["pgwEndpoint"] = state ? state.pgwEndpoint : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["runtimeVersion"] = state ? state.runtimeVersion : undefined;
            resourceInputs["securityPolicies"] = state ? state.securityPolicies : undefined;
            resourceInputs["serviceCidr"] = state ? state.serviceCidr : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["unschedulable"] = state ? state.unschedulable : undefined;
            resourceInputs["upgradeInstancesFollowCluster"] = state ? state.upgradeInstancesFollowCluster : undefined;
            resourceInputs["userName"] = state ? state.userName : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["workerConfigs"] = state ? state.workerConfigs : undefined;
            resourceInputs["workerInstancesLists"] = state ? state.workerInstancesLists : undefined;
        } else {
            const args = argsOrState as ClusterArgs | undefined;
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["acquireClusterAdminRole"] = args ? args.acquireClusterAdminRole : undefined;
            resourceInputs["authOptions"] = args ? args.authOptions : undefined;
            resourceInputs["autoUpgradeClusterLevel"] = args ? args.autoUpgradeClusterLevel : undefined;
            resourceInputs["basePodNum"] = args ? args.basePodNum : undefined;
            resourceInputs["claimExpiredSeconds"] = args ? args.claimExpiredSeconds : undefined;
            resourceInputs["clusterAsEnabled"] = args ? args.clusterAsEnabled : undefined;
            resourceInputs["clusterAudit"] = args ? args.clusterAudit : undefined;
            resourceInputs["clusterCidr"] = args ? args.clusterCidr : undefined;
            resourceInputs["clusterDeployType"] = args ? args.clusterDeployType : undefined;
            resourceInputs["clusterDesc"] = args ? args.clusterDesc : undefined;
            resourceInputs["clusterExtraArgs"] = args ? args.clusterExtraArgs : undefined;
            resourceInputs["clusterInternet"] = args ? args.clusterInternet : undefined;
            resourceInputs["clusterInternetDomain"] = args ? args.clusterInternetDomain : undefined;
            resourceInputs["clusterInternetSecurityGroup"] = args ? args.clusterInternetSecurityGroup : undefined;
            resourceInputs["clusterIntranet"] = args ? args.clusterIntranet : undefined;
            resourceInputs["clusterIntranetDomain"] = args ? args.clusterIntranetDomain : undefined;
            resourceInputs["clusterIntranetSubnetId"] = args ? args.clusterIntranetSubnetId : undefined;
            resourceInputs["clusterIpvs"] = args ? args.clusterIpvs : undefined;
            resourceInputs["clusterLevel"] = args ? args.clusterLevel : undefined;
            resourceInputs["clusterMaxPodNum"] = args ? args.clusterMaxPodNum : undefined;
            resourceInputs["clusterMaxServiceNum"] = args ? args.clusterMaxServiceNum : undefined;
            resourceInputs["clusterName"] = args ? args.clusterName : undefined;
            resourceInputs["clusterOs"] = args ? args.clusterOs : undefined;
            resourceInputs["clusterOsType"] = args ? args.clusterOsType : undefined;
            resourceInputs["clusterSubnetId"] = args ? args.clusterSubnetId : undefined;
            resourceInputs["clusterVersion"] = args ? args.clusterVersion : undefined;
            resourceInputs["containerRuntime"] = args ? args.containerRuntime : undefined;
            resourceInputs["deletionProtection"] = args ? args.deletionProtection : undefined;
            resourceInputs["dockerGraphPath"] = args ? args.dockerGraphPath : undefined;
            resourceInputs["enableCustomizedPodCidr"] = args ? args.enableCustomizedPodCidr : undefined;
            resourceInputs["eniSubnetIds"] = args ? args.eniSubnetIds : undefined;
            resourceInputs["eventPersistence"] = args ? args.eventPersistence : undefined;
            resourceInputs["existInstances"] = args ? args.existInstances : undefined;
            resourceInputs["extensionAddons"] = args ? args.extensionAddons : undefined;
            resourceInputs["extraArgs"] = args ? args.extraArgs : undefined;
            resourceInputs["globeDesiredPodNum"] = args ? args.globeDesiredPodNum : undefined;
            resourceInputs["ignoreClusterCidrConflict"] = args ? args.ignoreClusterCidrConflict : undefined;
            resourceInputs["isNonStaticIpMode"] = args ? args.isNonStaticIpMode : undefined;
            resourceInputs["kubeProxyMode"] = args ? args.kubeProxyMode : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["logAgent"] = args ? args.logAgent : undefined;
            resourceInputs["managedClusterInternetSecurityPolicies"] = args ? args.managedClusterInternetSecurityPolicies : undefined;
            resourceInputs["masterConfigs"] = args ? args.masterConfigs : undefined;
            resourceInputs["mountTarget"] = args ? args.mountTarget : undefined;
            resourceInputs["networkType"] = args ? args.networkType : undefined;
            resourceInputs["nodeNameType"] = args ? args.nodeNameType : undefined;
            resourceInputs["nodePoolGlobalConfigs"] = args ? args.nodePoolGlobalConfigs : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["runtimeVersion"] = args ? args.runtimeVersion : undefined;
            resourceInputs["serviceCidr"] = args ? args.serviceCidr : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["unschedulable"] = args ? args.unschedulable : undefined;
            resourceInputs["upgradeInstancesFollowCluster"] = args ? args.upgradeInstancesFollowCluster : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["workerConfigs"] = args ? args.workerConfigs : undefined;
            resourceInputs["certificationAuthority"] = undefined /*out*/;
            resourceInputs["clusterExternalEndpoint"] = undefined /*out*/;
            resourceInputs["clusterNodeNum"] = undefined /*out*/;
            resourceInputs["domain"] = undefined /*out*/;
            resourceInputs["kubeConfig"] = undefined /*out*/;
            resourceInputs["kubeConfigIntranet"] = undefined /*out*/;
            resourceInputs["password"] = undefined /*out*/;
            resourceInputs["pgwEndpoint"] = undefined /*out*/;
            resourceInputs["securityPolicies"] = undefined /*out*/;
            resourceInputs["userName"] = undefined /*out*/;
            resourceInputs["workerInstancesLists"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Cluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Cluster resources.
 */
export interface ClusterState {
    /**
     * If set to true, it will acquire the ClusterRole tke:admin. NOTE: this arguments cannot revoke to `false` after acquired.
     */
    acquireClusterAdminRole?: pulumi.Input<boolean>;
    /**
     * Specify cluster authentication configuration. Only available for managed cluster and `cluster_version` >= 1.20.
     */
    authOptions?: pulumi.Input<inputs.Kubernetes.ClusterAuthOptions>;
    /**
     * Whether the cluster level auto upgraded, valid for managed cluster.
     */
    autoUpgradeClusterLevel?: pulumi.Input<boolean>;
    /**
     * The number of basic pods. valid when enable_customized_pod_cidr=true.
     */
    basePodNum?: pulumi.Input<number>;
    /**
     * The certificate used for access.
     */
    certificationAuthority?: pulumi.Input<string>;
    /**
     * Claim expired seconds to recycle ENI. This field can only set when field `network_type` is 'VPC-CNI'.
     * `claim_expired_seconds` must greater or equal than 300 and less than 15768000.
     */
    claimExpiredSeconds?: pulumi.Input<number>;
    /**
     * Indicates whether to enable cluster node auto scaling. Default is false.
     *
     * @deprecated This argument is deprecated because the TKE auto-scaling group was no longer available.
     */
    clusterAsEnabled?: pulumi.Input<boolean>;
    /**
     * Specify Cluster Audit config. NOTE: Please make sure your TKE CamRole have permission to access CLS service.
     */
    clusterAudit?: pulumi.Input<inputs.Kubernetes.ClusterClusterAudit>;
    /**
     * A network address block of the cluster. Different from vpc cidr and cidr of other clusters within this vpc. Must be in
     * 10./192.168/172.[16-31] segments.
     */
    clusterCidr?: pulumi.Input<string>;
    /**
     * Deployment type of the cluster, the available values include: 'MANAGED_CLUSTER' and 'INDEPENDENT_CLUSTER'. Default is
     * 'MANAGED_CLUSTER'.
     */
    clusterDeployType?: pulumi.Input<string>;
    /**
     * Description of the cluster.
     */
    clusterDesc?: pulumi.Input<string>;
    /**
     * External network address to access.
     */
    clusterExternalEndpoint?: pulumi.Input<string>;
    /**
     * Customized parameters for master component,such as kube-apiserver, kube-controller-manager, kube-scheduler.
     */
    clusterExtraArgs?: pulumi.Input<inputs.Kubernetes.ClusterClusterExtraArgs>;
    /**
     * Open internet access or not. If this field is set 'true', the field below `worker_config` must be set. Because only
     * cluster with node is allowed enable access endpoint. You may open it through `tencentcloud_kubernetes_cluster_endpoint`.
     */
    clusterInternet?: pulumi.Input<boolean>;
    /**
     * Domain name for cluster Kube-apiserver internet access. Be careful if you modify value of this parameter, the
     * cluster_external_endpoint value may be changed automatically too.
     */
    clusterInternetDomain?: pulumi.Input<string>;
    /**
     * Specify security group, NOTE: This argument must not be empty if cluster internet enabled.
     */
    clusterInternetSecurityGroup?: pulumi.Input<string>;
    /**
     * Open intranet access or not. If this field is set 'true', the field below `worker_config` must be set. Because only
     * cluster with node is allowed enable access endpoint. You may open it through `tencentcloud_kubernetes_cluster_endpoint`.
     */
    clusterIntranet?: pulumi.Input<boolean>;
    /**
     * Domain name for cluster Kube-apiserver intranet access. Be careful if you modify value of this parameter, the
     * pgw_endpoint value may be changed automatically too.
     */
    clusterIntranetDomain?: pulumi.Input<string>;
    /**
     * Subnet id who can access this independent cluster, this field must and can only set when `cluster_intranet` is true.
     * `cluster_intranet_subnet_id` can not modify once be set.
     */
    clusterIntranetSubnetId?: pulumi.Input<string>;
    /**
     * Indicates whether `ipvs` is enabled. Default is true. False means `iptables` is enabled.
     */
    clusterIpvs?: pulumi.Input<boolean>;
    /**
     * Specify cluster level, valid for managed cluster, use data source `tencentcloud_kubernetes_cluster_levels` to query
     * available levels. Available value examples `L5`, `L20`, `L50`, `L100`, etc.
     */
    clusterLevel?: pulumi.Input<string>;
    /**
     * The maximum number of Pods per node in the cluster. Default is 256. The minimum value is 4. When its power unequal to 2,
     * it will round upward to the closest power of 2.
     */
    clusterMaxPodNum?: pulumi.Input<number>;
    /**
     * The maximum number of services in the cluster. Default is 256. The range is from 32 to 32768. When its power unequal to
     * 2, it will round upward to the closest power of 2.
     */
    clusterMaxServiceNum?: pulumi.Input<number>;
    /**
     * Name of the cluster.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * Number of nodes in the cluster.
     */
    clusterNodeNum?: pulumi.Input<number>;
    /**
     * Operating system of the cluster, the available values include:
     * 'centos7.6.0_x64','ubuntu18.04.1x86_64','tlinux2.4x86_64'. Default is 'tlinux2.4x86_64'.
     */
    clusterOs?: pulumi.Input<string>;
    /**
     * Image type of the cluster os, the available values include: 'GENERAL'. Default is 'GENERAL'.
     */
    clusterOsType?: pulumi.Input<string>;
    /**
     * Subnet ID of the cluster, such as: subnet-b3p7d7q5.
     */
    clusterSubnetId?: pulumi.Input<string>;
    /**
     * Version of the cluster. Use `tencentcloud_kubernetes_available_cluster_versions` to get the upgradable cluster version.
     */
    clusterVersion?: pulumi.Input<string>;
    /**
     * Runtime type of the cluster, the available values include: 'docker' and 'containerd'.The Kubernetes v1.24 has removed
     * dockershim, so please use containerd in v1.24 or higher.Default is 'docker'.
     */
    containerRuntime?: pulumi.Input<string>;
    /**
     * Indicates whether cluster deletion protection is enabled. Default is false.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * Docker graph path. Default is `/var/lib/docker`.
     */
    dockerGraphPath?: pulumi.Input<string>;
    /**
     * Domain name for access.
     */
    domain?: pulumi.Input<string>;
    /**
     * Whether to enable the custom mode of node podCIDR size. Default is false.
     */
    enableCustomizedPodCidr?: pulumi.Input<boolean>;
    /**
     * Subnet Ids for cluster with VPC-CNI network mode. This field can only set when field `network_type` is 'VPC-CNI'.
     * `eni_subnet_ids` can not empty once be set.
     */
    eniSubnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specify cluster Event Persistence config. NOTE: Please make sure your TKE CamRole have permission to access CLS service.
     */
    eventPersistence?: pulumi.Input<inputs.Kubernetes.ClusterEventPersistence>;
    /**
     * create tke cluster by existed instances.
     */
    existInstances?: pulumi.Input<pulumi.Input<inputs.Kubernetes.ClusterExistInstance>[]>;
    /**
     * Information of the add-on to be installed.
     */
    extensionAddons?: pulumi.Input<pulumi.Input<inputs.Kubernetes.ClusterExtensionAddon>[]>;
    /**
     * Custom parameter information related to the node.
     */
    extraArgs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicate to set desired pod number in node. valid when enable_customized_pod_cidr=true, and it takes effect for all
     * nodes.
     */
    globeDesiredPodNum?: pulumi.Input<number>;
    /**
     * Indicates whether to ignore the cluster cidr conflict error. Default is false.
     */
    ignoreClusterCidrConflict?: pulumi.Input<boolean>;
    /**
     * Indicates whether non-static ip mode is enabled. Default is false.
     */
    isNonStaticIpMode?: pulumi.Input<boolean>;
    /**
     * Kubernetes config.
     */
    kubeConfig?: pulumi.Input<string>;
    /**
     * Kubernetes config of private network.
     */
    kubeConfigIntranet?: pulumi.Input<string>;
    /**
     * Cluster kube-proxy mode, the available values include: 'kube-proxy-bpf'. Default is not set.When set to kube-proxy-bpf,
     * cluster version greater than 1.14 and with Tencent Linux 2.4 is required.
     */
    kubeProxyMode?: pulumi.Input<string>;
    /**
     * Labels of tke cluster nodes.
     */
    labels?: pulumi.Input<{[key: string]: any}>;
    /**
     * Specify cluster log agent config.
     */
    logAgent?: pulumi.Input<inputs.Kubernetes.ClusterLogAgent>;
    /**
     * Security policies for managed cluster internet, like:'192.168.1.0/24' or '113.116.51.27', '0.0.0.0/0' means all. This
     * field can only set when field `cluster_deploy_type` is 'MANAGED_CLUSTER' and `cluster_internet` is true.
     * `managed_cluster_internet_security_policies` can not delete or empty once be set.
     *
     * @deprecated this argument was deprecated, use `cluster_internet_security_group` instead.
     */
    managedClusterInternetSecurityPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Deploy the machine configuration information of the 'MASTER_ETCD' service, and create <=7 units for common users.
     */
    masterConfigs?: pulumi.Input<pulumi.Input<inputs.Kubernetes.ClusterMasterConfig>[]>;
    /**
     * Mount target. Default is not mounting.
     */
    mountTarget?: pulumi.Input<string>;
    /**
     * Cluster network type, the available values include: 'GR' and 'VPC-CNI' and 'CiliumOverlay'. Default is GR.
     */
    networkType?: pulumi.Input<string>;
    /**
     * Node name type of Cluster, the available values include: 'lan-ip' and 'hostname', Default is 'lan-ip'.
     */
    nodeNameType?: pulumi.Input<string>;
    /**
     * Global config effective for all node pools.
     */
    nodePoolGlobalConfigs?: pulumi.Input<pulumi.Input<inputs.Kubernetes.ClusterNodePoolGlobalConfig>[]>;
    /**
     * Password of account.
     */
    password?: pulumi.Input<string>;
    /**
     * The Intranet address used for access.
     */
    pgwEndpoint?: pulumi.Input<string>;
    /**
     * Project ID, default value is 0.
     */
    projectId?: pulumi.Input<number>;
    /**
     * Container Runtime version.
     */
    runtimeVersion?: pulumi.Input<string>;
    /**
     * Access policy.
     */
    securityPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A network address block of the service. Different from vpc cidr and cidr of other clusters within this vpc. Must be in
     * 10./192.168/172.[16-31] segments.
     */
    serviceCidr?: pulumi.Input<string>;
    /**
     * The tags of the cluster.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Sets whether the joining node participates in the schedule. Default is '0'. Participate in scheduling.
     */
    unschedulable?: pulumi.Input<number>;
    /**
     * Indicates whether upgrade all instances when cluster_version change. Default is false.
     */
    upgradeInstancesFollowCluster?: pulumi.Input<boolean>;
    /**
     * User name of account.
     */
    userName?: pulumi.Input<string>;
    /**
     * Vpc Id of the cluster.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * Deploy the machine configuration information of the 'WORKER' service, and create <=20 units for common users. The other
     * 'WORK' service are added by 'tencentcloud_kubernetes_worker'.
     */
    workerConfigs?: pulumi.Input<pulumi.Input<inputs.Kubernetes.ClusterWorkerConfig>[]>;
    /**
     * An information list of cvm within the 'WORKER' clusters. Each element contains the following attributes:
     */
    workerInstancesLists?: pulumi.Input<pulumi.Input<inputs.Kubernetes.ClusterWorkerInstancesList>[]>;
}

/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    /**
     * If set to true, it will acquire the ClusterRole tke:admin. NOTE: this arguments cannot revoke to `false` after acquired.
     */
    acquireClusterAdminRole?: pulumi.Input<boolean>;
    /**
     * Specify cluster authentication configuration. Only available for managed cluster and `cluster_version` >= 1.20.
     */
    authOptions?: pulumi.Input<inputs.Kubernetes.ClusterAuthOptions>;
    /**
     * Whether the cluster level auto upgraded, valid for managed cluster.
     */
    autoUpgradeClusterLevel?: pulumi.Input<boolean>;
    /**
     * The number of basic pods. valid when enable_customized_pod_cidr=true.
     */
    basePodNum?: pulumi.Input<number>;
    /**
     * Claim expired seconds to recycle ENI. This field can only set when field `network_type` is 'VPC-CNI'.
     * `claim_expired_seconds` must greater or equal than 300 and less than 15768000.
     */
    claimExpiredSeconds?: pulumi.Input<number>;
    /**
     * Indicates whether to enable cluster node auto scaling. Default is false.
     *
     * @deprecated This argument is deprecated because the TKE auto-scaling group was no longer available.
     */
    clusterAsEnabled?: pulumi.Input<boolean>;
    /**
     * Specify Cluster Audit config. NOTE: Please make sure your TKE CamRole have permission to access CLS service.
     */
    clusterAudit?: pulumi.Input<inputs.Kubernetes.ClusterClusterAudit>;
    /**
     * A network address block of the cluster. Different from vpc cidr and cidr of other clusters within this vpc. Must be in
     * 10./192.168/172.[16-31] segments.
     */
    clusterCidr?: pulumi.Input<string>;
    /**
     * Deployment type of the cluster, the available values include: 'MANAGED_CLUSTER' and 'INDEPENDENT_CLUSTER'. Default is
     * 'MANAGED_CLUSTER'.
     */
    clusterDeployType?: pulumi.Input<string>;
    /**
     * Description of the cluster.
     */
    clusterDesc?: pulumi.Input<string>;
    /**
     * Customized parameters for master component,such as kube-apiserver, kube-controller-manager, kube-scheduler.
     */
    clusterExtraArgs?: pulumi.Input<inputs.Kubernetes.ClusterClusterExtraArgs>;
    /**
     * Open internet access or not. If this field is set 'true', the field below `worker_config` must be set. Because only
     * cluster with node is allowed enable access endpoint. You may open it through `tencentcloud_kubernetes_cluster_endpoint`.
     */
    clusterInternet?: pulumi.Input<boolean>;
    /**
     * Domain name for cluster Kube-apiserver internet access. Be careful if you modify value of this parameter, the
     * cluster_external_endpoint value may be changed automatically too.
     */
    clusterInternetDomain?: pulumi.Input<string>;
    /**
     * Specify security group, NOTE: This argument must not be empty if cluster internet enabled.
     */
    clusterInternetSecurityGroup?: pulumi.Input<string>;
    /**
     * Open intranet access or not. If this field is set 'true', the field below `worker_config` must be set. Because only
     * cluster with node is allowed enable access endpoint. You may open it through `tencentcloud_kubernetes_cluster_endpoint`.
     */
    clusterIntranet?: pulumi.Input<boolean>;
    /**
     * Domain name for cluster Kube-apiserver intranet access. Be careful if you modify value of this parameter, the
     * pgw_endpoint value may be changed automatically too.
     */
    clusterIntranetDomain?: pulumi.Input<string>;
    /**
     * Subnet id who can access this independent cluster, this field must and can only set when `cluster_intranet` is true.
     * `cluster_intranet_subnet_id` can not modify once be set.
     */
    clusterIntranetSubnetId?: pulumi.Input<string>;
    /**
     * Indicates whether `ipvs` is enabled. Default is true. False means `iptables` is enabled.
     */
    clusterIpvs?: pulumi.Input<boolean>;
    /**
     * Specify cluster level, valid for managed cluster, use data source `tencentcloud_kubernetes_cluster_levels` to query
     * available levels. Available value examples `L5`, `L20`, `L50`, `L100`, etc.
     */
    clusterLevel?: pulumi.Input<string>;
    /**
     * The maximum number of Pods per node in the cluster. Default is 256. The minimum value is 4. When its power unequal to 2,
     * it will round upward to the closest power of 2.
     */
    clusterMaxPodNum?: pulumi.Input<number>;
    /**
     * The maximum number of services in the cluster. Default is 256. The range is from 32 to 32768. When its power unequal to
     * 2, it will round upward to the closest power of 2.
     */
    clusterMaxServiceNum?: pulumi.Input<number>;
    /**
     * Name of the cluster.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * Operating system of the cluster, the available values include:
     * 'centos7.6.0_x64','ubuntu18.04.1x86_64','tlinux2.4x86_64'. Default is 'tlinux2.4x86_64'.
     */
    clusterOs?: pulumi.Input<string>;
    /**
     * Image type of the cluster os, the available values include: 'GENERAL'. Default is 'GENERAL'.
     */
    clusterOsType?: pulumi.Input<string>;
    /**
     * Subnet ID of the cluster, such as: subnet-b3p7d7q5.
     */
    clusterSubnetId?: pulumi.Input<string>;
    /**
     * Version of the cluster. Use `tencentcloud_kubernetes_available_cluster_versions` to get the upgradable cluster version.
     */
    clusterVersion?: pulumi.Input<string>;
    /**
     * Runtime type of the cluster, the available values include: 'docker' and 'containerd'.The Kubernetes v1.24 has removed
     * dockershim, so please use containerd in v1.24 or higher.Default is 'docker'.
     */
    containerRuntime?: pulumi.Input<string>;
    /**
     * Indicates whether cluster deletion protection is enabled. Default is false.
     */
    deletionProtection?: pulumi.Input<boolean>;
    /**
     * Docker graph path. Default is `/var/lib/docker`.
     */
    dockerGraphPath?: pulumi.Input<string>;
    /**
     * Whether to enable the custom mode of node podCIDR size. Default is false.
     */
    enableCustomizedPodCidr?: pulumi.Input<boolean>;
    /**
     * Subnet Ids for cluster with VPC-CNI network mode. This field can only set when field `network_type` is 'VPC-CNI'.
     * `eni_subnet_ids` can not empty once be set.
     */
    eniSubnetIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specify cluster Event Persistence config. NOTE: Please make sure your TKE CamRole have permission to access CLS service.
     */
    eventPersistence?: pulumi.Input<inputs.Kubernetes.ClusterEventPersistence>;
    /**
     * create tke cluster by existed instances.
     */
    existInstances?: pulumi.Input<pulumi.Input<inputs.Kubernetes.ClusterExistInstance>[]>;
    /**
     * Information of the add-on to be installed.
     */
    extensionAddons?: pulumi.Input<pulumi.Input<inputs.Kubernetes.ClusterExtensionAddon>[]>;
    /**
     * Custom parameter information related to the node.
     */
    extraArgs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicate to set desired pod number in node. valid when enable_customized_pod_cidr=true, and it takes effect for all
     * nodes.
     */
    globeDesiredPodNum?: pulumi.Input<number>;
    /**
     * Indicates whether to ignore the cluster cidr conflict error. Default is false.
     */
    ignoreClusterCidrConflict?: pulumi.Input<boolean>;
    /**
     * Indicates whether non-static ip mode is enabled. Default is false.
     */
    isNonStaticIpMode?: pulumi.Input<boolean>;
    /**
     * Cluster kube-proxy mode, the available values include: 'kube-proxy-bpf'. Default is not set.When set to kube-proxy-bpf,
     * cluster version greater than 1.14 and with Tencent Linux 2.4 is required.
     */
    kubeProxyMode?: pulumi.Input<string>;
    /**
     * Labels of tke cluster nodes.
     */
    labels?: pulumi.Input<{[key: string]: any}>;
    /**
     * Specify cluster log agent config.
     */
    logAgent?: pulumi.Input<inputs.Kubernetes.ClusterLogAgent>;
    /**
     * Security policies for managed cluster internet, like:'192.168.1.0/24' or '113.116.51.27', '0.0.0.0/0' means all. This
     * field can only set when field `cluster_deploy_type` is 'MANAGED_CLUSTER' and `cluster_internet` is true.
     * `managed_cluster_internet_security_policies` can not delete or empty once be set.
     *
     * @deprecated this argument was deprecated, use `cluster_internet_security_group` instead.
     */
    managedClusterInternetSecurityPolicies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Deploy the machine configuration information of the 'MASTER_ETCD' service, and create <=7 units for common users.
     */
    masterConfigs?: pulumi.Input<pulumi.Input<inputs.Kubernetes.ClusterMasterConfig>[]>;
    /**
     * Mount target. Default is not mounting.
     */
    mountTarget?: pulumi.Input<string>;
    /**
     * Cluster network type, the available values include: 'GR' and 'VPC-CNI' and 'CiliumOverlay'. Default is GR.
     */
    networkType?: pulumi.Input<string>;
    /**
     * Node name type of Cluster, the available values include: 'lan-ip' and 'hostname', Default is 'lan-ip'.
     */
    nodeNameType?: pulumi.Input<string>;
    /**
     * Global config effective for all node pools.
     */
    nodePoolGlobalConfigs?: pulumi.Input<pulumi.Input<inputs.Kubernetes.ClusterNodePoolGlobalConfig>[]>;
    /**
     * Project ID, default value is 0.
     */
    projectId?: pulumi.Input<number>;
    /**
     * Container Runtime version.
     */
    runtimeVersion?: pulumi.Input<string>;
    /**
     * A network address block of the service. Different from vpc cidr and cidr of other clusters within this vpc. Must be in
     * 10./192.168/172.[16-31] segments.
     */
    serviceCidr?: pulumi.Input<string>;
    /**
     * The tags of the cluster.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Sets whether the joining node participates in the schedule. Default is '0'. Participate in scheduling.
     */
    unschedulable?: pulumi.Input<number>;
    /**
     * Indicates whether upgrade all instances when cluster_version change. Default is false.
     */
    upgradeInstancesFollowCluster?: pulumi.Input<boolean>;
    /**
     * Vpc Id of the cluster.
     */
    vpcId: pulumi.Input<string>;
    /**
     * Deploy the machine configuration information of the 'WORKER' service, and create <=20 units for common users. The other
     * 'WORK' service are added by 'tencentcloud_kubernetes_worker'.
     */
    workerConfigs?: pulumi.Input<pulumi.Input<inputs.Kubernetes.ClusterWorkerConfig>[]>;
}
