// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class Command extends pulumi.CustomResource {
    /**
     * Get an existing Command resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CommandState, opts?: pulumi.CustomResourceOptions): Command {
        return new Command(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Tat/command:Command';

    /**
     * Returns true if the given object is an instance of Command.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Command {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Command.__pulumiType;
    }

    /**
     * Command name. The name can be up to 60 bytes, and contain [a-z], [A-Z], [0-9] and [_-.].
     */
    public readonly commandName!: pulumi.Output<string>;
    /**
     * Command type. `SHELL` and `POWERSHELL` are supported. The default value is `SHELL`.
     */
    public readonly commandType!: pulumi.Output<string | undefined>;
    /**
     * Command. The maximum length of Base64 encoding is 64KB.
     */
    public readonly content!: pulumi.Output<string>;
    /**
     * Command creator. `TAT` indicates a public command and `USER` indicates a personal command.
     */
    public /*out*/ readonly createdBy!: pulumi.Output<string>;
    /**
     * Command creation time.
     */
    public /*out*/ readonly createdTime!: pulumi.Output<string>;
    /**
     * The default value of the custom parameter value when it is enabled. The field type is JSON encoded string. For example,
     * {&amp;#39;varA&amp;#39;: &amp;#39;222&amp;#39;}.`key` is the name of the custom parameter and value is the default
     * value. Both `key` and `value` are strings.If no parameter value is provided in the `InvokeCommand` API, the default
     * value is used.Up to 20 custom parameters are supported.The name of the custom parameter cannot exceed 64 characters and
     * can contain [a-z], [A-Z], [0-9] and [-_].
     */
    public readonly defaultParameters!: pulumi.Output<string | undefined>;
    /**
     * Command description. The maximum length is 120 characters.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Whether to enable the custom parameter feature.This cannot be modified once created.Default value: `false`.
     */
    public readonly enableParameter!: pulumi.Output<boolean | undefined>;
    /**
     * Formatted description of the command. This parameter is an empty string for user commands and contains values for public
     * commands.
     */
    public /*out*/ readonly formattedDescription!: pulumi.Output<string>;
    /**
     * The COS bucket URL for uploading logs. The URL must start with `https`, such as
     * `https://BucketName-123454321.cos.ap-beijing.myqcloud.com`.
     */
    public readonly outputCosBucketUrl!: pulumi.Output<string | undefined>;
    /**
     * The COS bucket directory where the logs are saved. Check below for the rules of the directory name.1. It must be a
     * combination of number, letters, and visible characters. Up to 60 characters are allowed.2. Use a slash (/) to create a
     * subdirectory.3. Consecutive dots (.) and slashes (/) are not allowed. It can not start with a slash (/).
     */
    public readonly outputCosKeyPrefix!: pulumi.Output<string | undefined>;
    /**
     * Tags bound to the command. At most 10 tags are allowed.
     */
    public readonly tags!: pulumi.Output<outputs.Tat.CommandTag[] | undefined>;
    /**
     * Command timeout period. Default value: 60 seconds. Value range: [1, 86400].
     */
    public readonly timeout!: pulumi.Output<number | undefined>;
    /**
     * Command update time.
     */
    public /*out*/ readonly updatedTime!: pulumi.Output<string>;
    /**
     * The username used to execute the command on the CVM or Lighthouse instance.The principle of least privilege is the best
     * practice for permission management. We recommend you execute TAT commands as a general user. By default, the root user
     * is used to execute commands on Linux and the System user is used on Windows.
     */
    public readonly username!: pulumi.Output<string | undefined>;
    /**
     * Command execution path. The default value is /root for `SHELL` commands and C:/Program Files/qcloudtat_agent/workdir for
     * `POWERSHELL` commands.
     */
    public readonly workingDirectory!: pulumi.Output<string | undefined>;

    /**
     * Create a Command resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CommandArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CommandArgs | CommandState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CommandState | undefined;
            resourceInputs["commandName"] = state ? state.commandName : undefined;
            resourceInputs["commandType"] = state ? state.commandType : undefined;
            resourceInputs["content"] = state ? state.content : undefined;
            resourceInputs["createdBy"] = state ? state.createdBy : undefined;
            resourceInputs["createdTime"] = state ? state.createdTime : undefined;
            resourceInputs["defaultParameters"] = state ? state.defaultParameters : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enableParameter"] = state ? state.enableParameter : undefined;
            resourceInputs["formattedDescription"] = state ? state.formattedDescription : undefined;
            resourceInputs["outputCosBucketUrl"] = state ? state.outputCosBucketUrl : undefined;
            resourceInputs["outputCosKeyPrefix"] = state ? state.outputCosKeyPrefix : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["timeout"] = state ? state.timeout : undefined;
            resourceInputs["updatedTime"] = state ? state.updatedTime : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
            resourceInputs["workingDirectory"] = state ? state.workingDirectory : undefined;
        } else {
            const args = argsOrState as CommandArgs | undefined;
            if ((!args || args.commandName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'commandName'");
            }
            if ((!args || args.content === undefined) && !opts.urn) {
                throw new Error("Missing required property 'content'");
            }
            resourceInputs["commandName"] = args ? args.commandName : undefined;
            resourceInputs["commandType"] = args ? args.commandType : undefined;
            resourceInputs["content"] = args ? args.content : undefined;
            resourceInputs["defaultParameters"] = args ? args.defaultParameters : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enableParameter"] = args ? args.enableParameter : undefined;
            resourceInputs["outputCosBucketUrl"] = args ? args.outputCosBucketUrl : undefined;
            resourceInputs["outputCosKeyPrefix"] = args ? args.outputCosKeyPrefix : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["workingDirectory"] = args ? args.workingDirectory : undefined;
            resourceInputs["createdBy"] = undefined /*out*/;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["formattedDescription"] = undefined /*out*/;
            resourceInputs["updatedTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Command.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Command resources.
 */
export interface CommandState {
    /**
     * Command name. The name can be up to 60 bytes, and contain [a-z], [A-Z], [0-9] and [_-.].
     */
    commandName?: pulumi.Input<string>;
    /**
     * Command type. `SHELL` and `POWERSHELL` are supported. The default value is `SHELL`.
     */
    commandType?: pulumi.Input<string>;
    /**
     * Command. The maximum length of Base64 encoding is 64KB.
     */
    content?: pulumi.Input<string>;
    /**
     * Command creator. `TAT` indicates a public command and `USER` indicates a personal command.
     */
    createdBy?: pulumi.Input<string>;
    /**
     * Command creation time.
     */
    createdTime?: pulumi.Input<string>;
    /**
     * The default value of the custom parameter value when it is enabled. The field type is JSON encoded string. For example,
     * {&amp;#39;varA&amp;#39;: &amp;#39;222&amp;#39;}.`key` is the name of the custom parameter and value is the default
     * value. Both `key` and `value` are strings.If no parameter value is provided in the `InvokeCommand` API, the default
     * value is used.Up to 20 custom parameters are supported.The name of the custom parameter cannot exceed 64 characters and
     * can contain [a-z], [A-Z], [0-9] and [-_].
     */
    defaultParameters?: pulumi.Input<string>;
    /**
     * Command description. The maximum length is 120 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether to enable the custom parameter feature.This cannot be modified once created.Default value: `false`.
     */
    enableParameter?: pulumi.Input<boolean>;
    /**
     * Formatted description of the command. This parameter is an empty string for user commands and contains values for public
     * commands.
     */
    formattedDescription?: pulumi.Input<string>;
    /**
     * The COS bucket URL for uploading logs. The URL must start with `https`, such as
     * `https://BucketName-123454321.cos.ap-beijing.myqcloud.com`.
     */
    outputCosBucketUrl?: pulumi.Input<string>;
    /**
     * The COS bucket directory where the logs are saved. Check below for the rules of the directory name.1. It must be a
     * combination of number, letters, and visible characters. Up to 60 characters are allowed.2. Use a slash (/) to create a
     * subdirectory.3. Consecutive dots (.) and slashes (/) are not allowed. It can not start with a slash (/).
     */
    outputCosKeyPrefix?: pulumi.Input<string>;
    /**
     * Tags bound to the command. At most 10 tags are allowed.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Tat.CommandTag>[]>;
    /**
     * Command timeout period. Default value: 60 seconds. Value range: [1, 86400].
     */
    timeout?: pulumi.Input<number>;
    /**
     * Command update time.
     */
    updatedTime?: pulumi.Input<string>;
    /**
     * The username used to execute the command on the CVM or Lighthouse instance.The principle of least privilege is the best
     * practice for permission management. We recommend you execute TAT commands as a general user. By default, the root user
     * is used to execute commands on Linux and the System user is used on Windows.
     */
    username?: pulumi.Input<string>;
    /**
     * Command execution path. The default value is /root for `SHELL` commands and C:/Program Files/qcloudtat_agent/workdir for
     * `POWERSHELL` commands.
     */
    workingDirectory?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Command resource.
 */
export interface CommandArgs {
    /**
     * Command name. The name can be up to 60 bytes, and contain [a-z], [A-Z], [0-9] and [_-.].
     */
    commandName: pulumi.Input<string>;
    /**
     * Command type. `SHELL` and `POWERSHELL` are supported. The default value is `SHELL`.
     */
    commandType?: pulumi.Input<string>;
    /**
     * Command. The maximum length of Base64 encoding is 64KB.
     */
    content: pulumi.Input<string>;
    /**
     * The default value of the custom parameter value when it is enabled. The field type is JSON encoded string. For example,
     * {&amp;#39;varA&amp;#39;: &amp;#39;222&amp;#39;}.`key` is the name of the custom parameter and value is the default
     * value. Both `key` and `value` are strings.If no parameter value is provided in the `InvokeCommand` API, the default
     * value is used.Up to 20 custom parameters are supported.The name of the custom parameter cannot exceed 64 characters and
     * can contain [a-z], [A-Z], [0-9] and [-_].
     */
    defaultParameters?: pulumi.Input<string>;
    /**
     * Command description. The maximum length is 120 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether to enable the custom parameter feature.This cannot be modified once created.Default value: `false`.
     */
    enableParameter?: pulumi.Input<boolean>;
    /**
     * The COS bucket URL for uploading logs. The URL must start with `https`, such as
     * `https://BucketName-123454321.cos.ap-beijing.myqcloud.com`.
     */
    outputCosBucketUrl?: pulumi.Input<string>;
    /**
     * The COS bucket directory where the logs are saved. Check below for the rules of the directory name.1. It must be a
     * combination of number, letters, and visible characters. Up to 60 characters are allowed.2. Use a slash (/) to create a
     * subdirectory.3. Consecutive dots (.) and slashes (/) are not allowed. It can not start with a slash (/).
     */
    outputCosKeyPrefix?: pulumi.Input<string>;
    /**
     * Tags bound to the command. At most 10 tags are allowed.
     */
    tags?: pulumi.Input<pulumi.Input<inputs.Tat.CommandTag>[]>;
    /**
     * Command timeout period. Default value: 60 seconds. Value range: [1, 86400].
     */
    timeout?: pulumi.Input<number>;
    /**
     * The username used to execute the command on the CVM or Lighthouse instance.The principle of least privilege is the best
     * practice for permission management. We recommend you execute TAT commands as a general user. By default, the root user
     * is used to execute commands on Linux and the System user is used on Windows.
     */
    username?: pulumi.Input<string>;
    /**
     * Command execution path. The default value is /root for `SHELL` commands and C:/Program Files/qcloudtat_agent/workdir for
     * `POWERSHELL` commands.
     */
    workingDirectory?: pulumi.Input<string>;
}
