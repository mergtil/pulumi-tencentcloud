// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class InvocationCommandAttachment extends pulumi.CustomResource {
    /**
     * Get an existing InvocationCommandAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InvocationCommandAttachmentState, opts?: pulumi.CustomResourceOptions): InvocationCommandAttachment {
        return new InvocationCommandAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Tat/invocationCommandAttachment:InvocationCommandAttachment';

    /**
     * Returns true if the given object is an instance of InvocationCommandAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is InvocationCommandAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === InvocationCommandAttachment.__pulumiType;
    }

    /**
     * Command ID.
     */
    public /*out*/ readonly commandId!: pulumi.Output<string>;
    /**
     * Command name. The name can be up to 60 bytes, and contain [a-z], [A-Z], [0-9] and [_-.].
     */
    public readonly commandName!: pulumi.Output<string | undefined>;
    /**
     * Command type. SHELL and POWERSHELL are supported. The default value is SHELL.
     */
    public readonly commandType!: pulumi.Output<string | undefined>;
    /**
     * Base64-encoded command. The maximum length is 64 KB.
     */
    public readonly content!: pulumi.Output<string>;
    /**
     * The default value of the custom parameter value when it is enabled. The field type is JSON encoded string. For example,
     * {varA: 222}.key is the name of the custom parameter and value is the default value. Both key and value are strings.If
     * Parameters is not provided, the default values specified here are used.Up to 20 custom parameters are supported.The name
     * of the custom parameter cannot exceed 64 characters and can contain [a-z], [A-Z], [0-9] and [-_].
     */
    public readonly defaultParameters!: pulumi.Output<string | undefined>;
    /**
     * Command description. The maximum length is 120 characters.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Whether to enable the custom parameter feature.This cannot be modified once created.Default value: false.
     */
    public readonly enableParameter!: pulumi.Output<boolean | undefined>;
    /**
     * ID of instances about to execute commands. Supported instance types: CVM LIGHTHOUSE.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * The COS bucket URL for uploading logs; The URL must start with https, such as
     * https://BucketName-123454321.cos.ap-beijing.myqcloud.com.
     */
    public readonly outputCosBucketUrl!: pulumi.Output<string | undefined>;
    /**
     * The COS bucket directory where the logs are saved; Check below for the rules of the directory name: 1 It must be a
     * combination of number, letters, and visible characters, Up to 60 characters are allowed; 2 Use a slash (/) to create a
     * subdirectory; 3 can not be used as the folder name; It cannot start with a slash (/), and cannot contain consecutive
     * slashes.
     */
    public readonly outputCosKeyPrefix!: pulumi.Output<string | undefined>;
    /**
     * Custom parameters of Command. The field type is JSON encoded string. For example, {varA: 222}.key is the name of the
     * custom parameter and value is the default value. Both key and value are strings.If no parameter value is provided, the
     * DefaultParameters is used.Up to 20 custom parameters are supported.The name of the custom parameter cannot exceed 64
     * characters and can contain [a-z], [A-Z], [0-9] and [-_].
     */
    public readonly parameters!: pulumi.Output<string | undefined>;
    /**
     * Whether to save the command. Valid values:rue: SaveFalse:Do not saveThe default value is False.
     */
    public readonly saveCommand!: pulumi.Output<boolean | undefined>;
    /**
     * Command timeout period. Default value: 60 seconds. Value range: [1, 86400].
     */
    public readonly timeout!: pulumi.Output<number | undefined>;
    /**
     * The username used to execute the command on the CVM or Lighthouse instance.The principle of least privilege is the best
     * practice for permission management. We recommend you execute TAT commands as a general user. By default, the user root
     * is used to execute commands on Linux and the user System is used on Windows.
     */
    public readonly username!: pulumi.Output<string | undefined>;
    /**
     * Command execution path. The default value is /root for SHELL commands and C:Program Filesqcloudtat_agentworkdir for
     * POWERSHELL commands.
     */
    public readonly workingDirectory!: pulumi.Output<string | undefined>;

    /**
     * Create a InvocationCommandAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InvocationCommandAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InvocationCommandAttachmentArgs | InvocationCommandAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InvocationCommandAttachmentState | undefined;
            resourceInputs["commandId"] = state ? state.commandId : undefined;
            resourceInputs["commandName"] = state ? state.commandName : undefined;
            resourceInputs["commandType"] = state ? state.commandType : undefined;
            resourceInputs["content"] = state ? state.content : undefined;
            resourceInputs["defaultParameters"] = state ? state.defaultParameters : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["enableParameter"] = state ? state.enableParameter : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["outputCosBucketUrl"] = state ? state.outputCosBucketUrl : undefined;
            resourceInputs["outputCosKeyPrefix"] = state ? state.outputCosKeyPrefix : undefined;
            resourceInputs["parameters"] = state ? state.parameters : undefined;
            resourceInputs["saveCommand"] = state ? state.saveCommand : undefined;
            resourceInputs["timeout"] = state ? state.timeout : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
            resourceInputs["workingDirectory"] = state ? state.workingDirectory : undefined;
        } else {
            const args = argsOrState as InvocationCommandAttachmentArgs | undefined;
            if ((!args || args.content === undefined) && !opts.urn) {
                throw new Error("Missing required property 'content'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["commandName"] = args ? args.commandName : undefined;
            resourceInputs["commandType"] = args ? args.commandType : undefined;
            resourceInputs["content"] = args ? args.content : undefined;
            resourceInputs["defaultParameters"] = args ? args.defaultParameters : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["enableParameter"] = args ? args.enableParameter : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["outputCosBucketUrl"] = args ? args.outputCosBucketUrl : undefined;
            resourceInputs["outputCosKeyPrefix"] = args ? args.outputCosKeyPrefix : undefined;
            resourceInputs["parameters"] = args ? args.parameters : undefined;
            resourceInputs["saveCommand"] = args ? args.saveCommand : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["workingDirectory"] = args ? args.workingDirectory : undefined;
            resourceInputs["commandId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(InvocationCommandAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering InvocationCommandAttachment resources.
 */
export interface InvocationCommandAttachmentState {
    /**
     * Command ID.
     */
    commandId?: pulumi.Input<string>;
    /**
     * Command name. The name can be up to 60 bytes, and contain [a-z], [A-Z], [0-9] and [_-.].
     */
    commandName?: pulumi.Input<string>;
    /**
     * Command type. SHELL and POWERSHELL are supported. The default value is SHELL.
     */
    commandType?: pulumi.Input<string>;
    /**
     * Base64-encoded command. The maximum length is 64 KB.
     */
    content?: pulumi.Input<string>;
    /**
     * The default value of the custom parameter value when it is enabled. The field type is JSON encoded string. For example,
     * {varA: 222}.key is the name of the custom parameter and value is the default value. Both key and value are strings.If
     * Parameters is not provided, the default values specified here are used.Up to 20 custom parameters are supported.The name
     * of the custom parameter cannot exceed 64 characters and can contain [a-z], [A-Z], [0-9] and [-_].
     */
    defaultParameters?: pulumi.Input<string>;
    /**
     * Command description. The maximum length is 120 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether to enable the custom parameter feature.This cannot be modified once created.Default value: false.
     */
    enableParameter?: pulumi.Input<boolean>;
    /**
     * ID of instances about to execute commands. Supported instance types: CVM LIGHTHOUSE.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The COS bucket URL for uploading logs; The URL must start with https, such as
     * https://BucketName-123454321.cos.ap-beijing.myqcloud.com.
     */
    outputCosBucketUrl?: pulumi.Input<string>;
    /**
     * The COS bucket directory where the logs are saved; Check below for the rules of the directory name: 1 It must be a
     * combination of number, letters, and visible characters, Up to 60 characters are allowed; 2 Use a slash (/) to create a
     * subdirectory; 3 can not be used as the folder name; It cannot start with a slash (/), and cannot contain consecutive
     * slashes.
     */
    outputCosKeyPrefix?: pulumi.Input<string>;
    /**
     * Custom parameters of Command. The field type is JSON encoded string. For example, {varA: 222}.key is the name of the
     * custom parameter and value is the default value. Both key and value are strings.If no parameter value is provided, the
     * DefaultParameters is used.Up to 20 custom parameters are supported.The name of the custom parameter cannot exceed 64
     * characters and can contain [a-z], [A-Z], [0-9] and [-_].
     */
    parameters?: pulumi.Input<string>;
    /**
     * Whether to save the command. Valid values:rue: SaveFalse:Do not saveThe default value is False.
     */
    saveCommand?: pulumi.Input<boolean>;
    /**
     * Command timeout period. Default value: 60 seconds. Value range: [1, 86400].
     */
    timeout?: pulumi.Input<number>;
    /**
     * The username used to execute the command on the CVM or Lighthouse instance.The principle of least privilege is the best
     * practice for permission management. We recommend you execute TAT commands as a general user. By default, the user root
     * is used to execute commands on Linux and the user System is used on Windows.
     */
    username?: pulumi.Input<string>;
    /**
     * Command execution path. The default value is /root for SHELL commands and C:Program Filesqcloudtat_agentworkdir for
     * POWERSHELL commands.
     */
    workingDirectory?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a InvocationCommandAttachment resource.
 */
export interface InvocationCommandAttachmentArgs {
    /**
     * Command name. The name can be up to 60 bytes, and contain [a-z], [A-Z], [0-9] and [_-.].
     */
    commandName?: pulumi.Input<string>;
    /**
     * Command type. SHELL and POWERSHELL are supported. The default value is SHELL.
     */
    commandType?: pulumi.Input<string>;
    /**
     * Base64-encoded command. The maximum length is 64 KB.
     */
    content: pulumi.Input<string>;
    /**
     * The default value of the custom parameter value when it is enabled. The field type is JSON encoded string. For example,
     * {varA: 222}.key is the name of the custom parameter and value is the default value. Both key and value are strings.If
     * Parameters is not provided, the default values specified here are used.Up to 20 custom parameters are supported.The name
     * of the custom parameter cannot exceed 64 characters and can contain [a-z], [A-Z], [0-9] and [-_].
     */
    defaultParameters?: pulumi.Input<string>;
    /**
     * Command description. The maximum length is 120 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Whether to enable the custom parameter feature.This cannot be modified once created.Default value: false.
     */
    enableParameter?: pulumi.Input<boolean>;
    /**
     * ID of instances about to execute commands. Supported instance types: CVM LIGHTHOUSE.
     */
    instanceId: pulumi.Input<string>;
    /**
     * The COS bucket URL for uploading logs; The URL must start with https, such as
     * https://BucketName-123454321.cos.ap-beijing.myqcloud.com.
     */
    outputCosBucketUrl?: pulumi.Input<string>;
    /**
     * The COS bucket directory where the logs are saved; Check below for the rules of the directory name: 1 It must be a
     * combination of number, letters, and visible characters, Up to 60 characters are allowed; 2 Use a slash (/) to create a
     * subdirectory; 3 can not be used as the folder name; It cannot start with a slash (/), and cannot contain consecutive
     * slashes.
     */
    outputCosKeyPrefix?: pulumi.Input<string>;
    /**
     * Custom parameters of Command. The field type is JSON encoded string. For example, {varA: 222}.key is the name of the
     * custom parameter and value is the default value. Both key and value are strings.If no parameter value is provided, the
     * DefaultParameters is used.Up to 20 custom parameters are supported.The name of the custom parameter cannot exceed 64
     * characters and can contain [a-z], [A-Z], [0-9] and [-_].
     */
    parameters?: pulumi.Input<string>;
    /**
     * Whether to save the command. Valid values:rue: SaveFalse:Do not saveThe default value is False.
     */
    saveCommand?: pulumi.Input<boolean>;
    /**
     * Command timeout period. Default value: 60 seconds. Value range: [1, 86400].
     */
    timeout?: pulumi.Input<number>;
    /**
     * The username used to execute the command on the CVM or Lighthouse instance.The principle of least privilege is the best
     * practice for permission management. We recommend you execute TAT commands as a general user. By default, the user root
     * is used to execute commands on Linux and the user System is used on Windows.
     */
    username?: pulumi.Input<string>;
    /**
     * Command execution path. The default value is /root for SHELL commands and C:Program Filesqcloudtat_agentworkdir for
     * POWERSHELL commands.
     */
    workingDirectory?: pulumi.Input<string>;
}
