// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class LiveTranscodeTemplate extends pulumi.CustomResource {
    /**
     * Get an existing LiveTranscodeTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LiveTranscodeTemplateState, opts?: pulumi.CustomResourceOptions): LiveTranscodeTemplate {
        return new LiveTranscodeTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Css/liveTranscodeTemplate:LiveTranscodeTemplate';

    /**
     * Returns true if the given object is an instance of LiveTranscodeTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LiveTranscodeTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LiveTranscodeTemplate.__pulumiType;
    }

    /**
     * default aac, not support now.
     */
    public readonly acodec!: pulumi.Output<string | undefined>;
    /**
     * high speed mode adapt bitrate, support 0 - 0.5.
     */
    public readonly adaptBitratePercent!: pulumi.Output<number | undefined>;
    /**
     * enable high speed mode, default 0, 1 for enable, 0 for no.
     */
    public readonly aiTransCode!: pulumi.Output<number | undefined>;
    /**
     * default 0, range 0 - 500.
     */
    public readonly audioBitrate!: pulumi.Output<number | undefined>;
    /**
     * base on origin bitrate if origin bitrate is lower than the setting bitrate. default 0, 1 for yes, 0 for no.
     */
    public readonly bitrateToOrig!: pulumi.Output<number | undefined>;
    /**
     * template desc.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * DRM tracks, support AUDIO/SD/HD/UHD1/UHD2.
     */
    public readonly drmTracks!: pulumi.Output<string | undefined>;
    /**
     * DRM type, support fairplay/normalaes/widevine.
     */
    public readonly drmType!: pulumi.Output<string | undefined>;
    /**
     * video fps, default 0, range 0 - 60.
     */
    public readonly fps!: pulumi.Output<number | undefined>;
    /**
     * base on origin fps if origin fps is lower than the setting fps. default 0, 1 for yes, 0 for no.
     */
    public readonly fpsToOrig!: pulumi.Output<number | undefined>;
    /**
     * gop of the video, second, default origin of the video, range 2 - 6.
     */
    public readonly gop!: pulumi.Output<number | undefined>;
    /**
     * template height, default 0, range 0 - 3000, must be pow of 2, needed while AiTransCode = 1.
     */
    public readonly height!: pulumi.Output<number | undefined>;
    /**
     * base on origin height if origin height is lower than the setting height. default 0, 1 for yes, 0 for no.
     */
    public readonly heightToOrig!: pulumi.Output<number | undefined>;
    /**
     * keep audio or not, default 1 for yes, 0 for no.
     */
    public readonly needAudio!: pulumi.Output<number | undefined>;
    /**
     * keep video or not, default 1 for yes, 0 for no.
     */
    public readonly needVideo!: pulumi.Output<number | undefined>;
    /**
     * quality of the video, default baseline, support baseline/main/high.
     */
    public readonly profile!: pulumi.Output<string | undefined>;
    /**
     * roate degree, default 0, support 0/90/180/270.
     */
    public readonly rotate!: pulumi.Output<number | undefined>;
    /**
     * let the short edge as the height.
     */
    public readonly shortEdgeAsHeight!: pulumi.Output<number | undefined>;
    /**
     * template name, only support 0-9 and a-z.
     */
    public readonly templateName!: pulumi.Output<string>;
    /**
     * video codec, default origin, support h264/h265/origin.
     */
    public readonly vcodec!: pulumi.Output<string | undefined>;
    /**
     * video bitrate, 0 for origin, range 0kbps - 8000kbps.
     */
    public readonly videoBitrate!: pulumi.Output<number>;
    /**
     * template width, default 0, range 0 - 3000, must be pow of 2.
     */
    public readonly width!: pulumi.Output<number | undefined>;

    /**
     * Create a LiveTranscodeTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LiveTranscodeTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LiveTranscodeTemplateArgs | LiveTranscodeTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LiveTranscodeTemplateState | undefined;
            resourceInputs["acodec"] = state ? state.acodec : undefined;
            resourceInputs["adaptBitratePercent"] = state ? state.adaptBitratePercent : undefined;
            resourceInputs["aiTransCode"] = state ? state.aiTransCode : undefined;
            resourceInputs["audioBitrate"] = state ? state.audioBitrate : undefined;
            resourceInputs["bitrateToOrig"] = state ? state.bitrateToOrig : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["drmTracks"] = state ? state.drmTracks : undefined;
            resourceInputs["drmType"] = state ? state.drmType : undefined;
            resourceInputs["fps"] = state ? state.fps : undefined;
            resourceInputs["fpsToOrig"] = state ? state.fpsToOrig : undefined;
            resourceInputs["gop"] = state ? state.gop : undefined;
            resourceInputs["height"] = state ? state.height : undefined;
            resourceInputs["heightToOrig"] = state ? state.heightToOrig : undefined;
            resourceInputs["needAudio"] = state ? state.needAudio : undefined;
            resourceInputs["needVideo"] = state ? state.needVideo : undefined;
            resourceInputs["profile"] = state ? state.profile : undefined;
            resourceInputs["rotate"] = state ? state.rotate : undefined;
            resourceInputs["shortEdgeAsHeight"] = state ? state.shortEdgeAsHeight : undefined;
            resourceInputs["templateName"] = state ? state.templateName : undefined;
            resourceInputs["vcodec"] = state ? state.vcodec : undefined;
            resourceInputs["videoBitrate"] = state ? state.videoBitrate : undefined;
            resourceInputs["width"] = state ? state.width : undefined;
        } else {
            const args = argsOrState as LiveTranscodeTemplateArgs | undefined;
            if ((!args || args.templateName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'templateName'");
            }
            if ((!args || args.videoBitrate === undefined) && !opts.urn) {
                throw new Error("Missing required property 'videoBitrate'");
            }
            resourceInputs["acodec"] = args ? args.acodec : undefined;
            resourceInputs["adaptBitratePercent"] = args ? args.adaptBitratePercent : undefined;
            resourceInputs["aiTransCode"] = args ? args.aiTransCode : undefined;
            resourceInputs["audioBitrate"] = args ? args.audioBitrate : undefined;
            resourceInputs["bitrateToOrig"] = args ? args.bitrateToOrig : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["drmTracks"] = args ? args.drmTracks : undefined;
            resourceInputs["drmType"] = args ? args.drmType : undefined;
            resourceInputs["fps"] = args ? args.fps : undefined;
            resourceInputs["fpsToOrig"] = args ? args.fpsToOrig : undefined;
            resourceInputs["gop"] = args ? args.gop : undefined;
            resourceInputs["height"] = args ? args.height : undefined;
            resourceInputs["heightToOrig"] = args ? args.heightToOrig : undefined;
            resourceInputs["needAudio"] = args ? args.needAudio : undefined;
            resourceInputs["needVideo"] = args ? args.needVideo : undefined;
            resourceInputs["profile"] = args ? args.profile : undefined;
            resourceInputs["rotate"] = args ? args.rotate : undefined;
            resourceInputs["shortEdgeAsHeight"] = args ? args.shortEdgeAsHeight : undefined;
            resourceInputs["templateName"] = args ? args.templateName : undefined;
            resourceInputs["vcodec"] = args ? args.vcodec : undefined;
            resourceInputs["videoBitrate"] = args ? args.videoBitrate : undefined;
            resourceInputs["width"] = args ? args.width : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LiveTranscodeTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LiveTranscodeTemplate resources.
 */
export interface LiveTranscodeTemplateState {
    /**
     * default aac, not support now.
     */
    acodec?: pulumi.Input<string>;
    /**
     * high speed mode adapt bitrate, support 0 - 0.5.
     */
    adaptBitratePercent?: pulumi.Input<number>;
    /**
     * enable high speed mode, default 0, 1 for enable, 0 for no.
     */
    aiTransCode?: pulumi.Input<number>;
    /**
     * default 0, range 0 - 500.
     */
    audioBitrate?: pulumi.Input<number>;
    /**
     * base on origin bitrate if origin bitrate is lower than the setting bitrate. default 0, 1 for yes, 0 for no.
     */
    bitrateToOrig?: pulumi.Input<number>;
    /**
     * template desc.
     */
    description?: pulumi.Input<string>;
    /**
     * DRM tracks, support AUDIO/SD/HD/UHD1/UHD2.
     */
    drmTracks?: pulumi.Input<string>;
    /**
     * DRM type, support fairplay/normalaes/widevine.
     */
    drmType?: pulumi.Input<string>;
    /**
     * video fps, default 0, range 0 - 60.
     */
    fps?: pulumi.Input<number>;
    /**
     * base on origin fps if origin fps is lower than the setting fps. default 0, 1 for yes, 0 for no.
     */
    fpsToOrig?: pulumi.Input<number>;
    /**
     * gop of the video, second, default origin of the video, range 2 - 6.
     */
    gop?: pulumi.Input<number>;
    /**
     * template height, default 0, range 0 - 3000, must be pow of 2, needed while AiTransCode = 1.
     */
    height?: pulumi.Input<number>;
    /**
     * base on origin height if origin height is lower than the setting height. default 0, 1 for yes, 0 for no.
     */
    heightToOrig?: pulumi.Input<number>;
    /**
     * keep audio or not, default 1 for yes, 0 for no.
     */
    needAudio?: pulumi.Input<number>;
    /**
     * keep video or not, default 1 for yes, 0 for no.
     */
    needVideo?: pulumi.Input<number>;
    /**
     * quality of the video, default baseline, support baseline/main/high.
     */
    profile?: pulumi.Input<string>;
    /**
     * roate degree, default 0, support 0/90/180/270.
     */
    rotate?: pulumi.Input<number>;
    /**
     * let the short edge as the height.
     */
    shortEdgeAsHeight?: pulumi.Input<number>;
    /**
     * template name, only support 0-9 and a-z.
     */
    templateName?: pulumi.Input<string>;
    /**
     * video codec, default origin, support h264/h265/origin.
     */
    vcodec?: pulumi.Input<string>;
    /**
     * video bitrate, 0 for origin, range 0kbps - 8000kbps.
     */
    videoBitrate?: pulumi.Input<number>;
    /**
     * template width, default 0, range 0 - 3000, must be pow of 2.
     */
    width?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a LiveTranscodeTemplate resource.
 */
export interface LiveTranscodeTemplateArgs {
    /**
     * default aac, not support now.
     */
    acodec?: pulumi.Input<string>;
    /**
     * high speed mode adapt bitrate, support 0 - 0.5.
     */
    adaptBitratePercent?: pulumi.Input<number>;
    /**
     * enable high speed mode, default 0, 1 for enable, 0 for no.
     */
    aiTransCode?: pulumi.Input<number>;
    /**
     * default 0, range 0 - 500.
     */
    audioBitrate?: pulumi.Input<number>;
    /**
     * base on origin bitrate if origin bitrate is lower than the setting bitrate. default 0, 1 for yes, 0 for no.
     */
    bitrateToOrig?: pulumi.Input<number>;
    /**
     * template desc.
     */
    description?: pulumi.Input<string>;
    /**
     * DRM tracks, support AUDIO/SD/HD/UHD1/UHD2.
     */
    drmTracks?: pulumi.Input<string>;
    /**
     * DRM type, support fairplay/normalaes/widevine.
     */
    drmType?: pulumi.Input<string>;
    /**
     * video fps, default 0, range 0 - 60.
     */
    fps?: pulumi.Input<number>;
    /**
     * base on origin fps if origin fps is lower than the setting fps. default 0, 1 for yes, 0 for no.
     */
    fpsToOrig?: pulumi.Input<number>;
    /**
     * gop of the video, second, default origin of the video, range 2 - 6.
     */
    gop?: pulumi.Input<number>;
    /**
     * template height, default 0, range 0 - 3000, must be pow of 2, needed while AiTransCode = 1.
     */
    height?: pulumi.Input<number>;
    /**
     * base on origin height if origin height is lower than the setting height. default 0, 1 for yes, 0 for no.
     */
    heightToOrig?: pulumi.Input<number>;
    /**
     * keep audio or not, default 1 for yes, 0 for no.
     */
    needAudio?: pulumi.Input<number>;
    /**
     * keep video or not, default 1 for yes, 0 for no.
     */
    needVideo?: pulumi.Input<number>;
    /**
     * quality of the video, default baseline, support baseline/main/high.
     */
    profile?: pulumi.Input<string>;
    /**
     * roate degree, default 0, support 0/90/180/270.
     */
    rotate?: pulumi.Input<number>;
    /**
     * let the short edge as the height.
     */
    shortEdgeAsHeight?: pulumi.Input<number>;
    /**
     * template name, only support 0-9 and a-z.
     */
    templateName: pulumi.Input<string>;
    /**
     * video codec, default origin, support h264/h265/origin.
     */
    vcodec?: pulumi.Input<string>;
    /**
     * video bitrate, 0 for origin, range 0kbps - 8000kbps.
     */
    videoBitrate: pulumi.Input<number>;
    /**
     * template width, default 0, range 0 - 3000, must be pow of 2.
     */
    width?: pulumi.Input<number>;
}
