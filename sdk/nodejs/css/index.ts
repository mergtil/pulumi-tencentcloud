// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AuthenticateDomainOwnerOperationArgs, AuthenticateDomainOwnerOperationState } from "./authenticateDomainOwnerOperation";
export type AuthenticateDomainOwnerOperation = import("./authenticateDomainOwnerOperation").AuthenticateDomainOwnerOperation;
export const AuthenticateDomainOwnerOperation: typeof import("./authenticateDomainOwnerOperation").AuthenticateDomainOwnerOperation = null as any;
utilities.lazyLoad(exports, ["AuthenticateDomainOwnerOperation"], () => require("./authenticateDomainOwnerOperation"));

export { DomainArgs, DomainState } from "./domain";
export type Domain = import("./domain").Domain;
export const Domain: typeof import("./domain").Domain = null as any;
utilities.lazyLoad(exports, ["Domain"], () => require("./domain"));

export { GetDomainsArgs, GetDomainsResult, GetDomainsOutputArgs } from "./getDomains";
export const getDomains: typeof import("./getDomains").getDomains = null as any;
export const getDomainsOutput: typeof import("./getDomains").getDomainsOutput = null as any;
utilities.lazyLoad(exports, ["getDomains","getDomainsOutput"], () => require("./getDomains"));

export { LiveTranscodeRuleAttachmentArgs, LiveTranscodeRuleAttachmentState } from "./liveTranscodeRuleAttachment";
export type LiveTranscodeRuleAttachment = import("./liveTranscodeRuleAttachment").LiveTranscodeRuleAttachment;
export const LiveTranscodeRuleAttachment: typeof import("./liveTranscodeRuleAttachment").LiveTranscodeRuleAttachment = null as any;
utilities.lazyLoad(exports, ["LiveTranscodeRuleAttachment"], () => require("./liveTranscodeRuleAttachment"));

export { LiveTranscodeTemplateArgs, LiveTranscodeTemplateState } from "./liveTranscodeTemplate";
export type LiveTranscodeTemplate = import("./liveTranscodeTemplate").LiveTranscodeTemplate;
export const LiveTranscodeTemplate: typeof import("./liveTranscodeTemplate").LiveTranscodeTemplate = null as any;
utilities.lazyLoad(exports, ["LiveTranscodeTemplate"], () => require("./liveTranscodeTemplate"));

export { PlayAuthKeyConfigArgs, PlayAuthKeyConfigState } from "./playAuthKeyConfig";
export type PlayAuthKeyConfig = import("./playAuthKeyConfig").PlayAuthKeyConfig;
export const PlayAuthKeyConfig: typeof import("./playAuthKeyConfig").PlayAuthKeyConfig = null as any;
utilities.lazyLoad(exports, ["PlayAuthKeyConfig"], () => require("./playAuthKeyConfig"));

export { PlayDomainCertAttachmentArgs, PlayDomainCertAttachmentState } from "./playDomainCertAttachment";
export type PlayDomainCertAttachment = import("./playDomainCertAttachment").PlayDomainCertAttachment;
export const PlayDomainCertAttachment: typeof import("./playDomainCertAttachment").PlayDomainCertAttachment = null as any;
utilities.lazyLoad(exports, ["PlayDomainCertAttachment"], () => require("./playDomainCertAttachment"));

export { PullStreamTaskArgs, PullStreamTaskState } from "./pullStreamTask";
export type PullStreamTask = import("./pullStreamTask").PullStreamTask;
export const PullStreamTask: typeof import("./pullStreamTask").PullStreamTask = null as any;
utilities.lazyLoad(exports, ["PullStreamTask"], () => require("./pullStreamTask"));

export { PushAuthKeyConfigArgs, PushAuthKeyConfigState } from "./pushAuthKeyConfig";
export type PushAuthKeyConfig = import("./pushAuthKeyConfig").PushAuthKeyConfig;
export const PushAuthKeyConfig: typeof import("./pushAuthKeyConfig").PushAuthKeyConfig = null as any;
utilities.lazyLoad(exports, ["PushAuthKeyConfig"], () => require("./pushAuthKeyConfig"));

export { WatermarkArgs, WatermarkState } from "./watermark";
export type Watermark = import("./watermark").Watermark;
export const Watermark: typeof import("./watermark").Watermark = null as any;
utilities.lazyLoad(exports, ["Watermark"], () => require("./watermark"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "tencentcloud:Css/authenticateDomainOwnerOperation:AuthenticateDomainOwnerOperation":
                return new AuthenticateDomainOwnerOperation(name, <any>undefined, { urn })
            case "tencentcloud:Css/domain:Domain":
                return new Domain(name, <any>undefined, { urn })
            case "tencentcloud:Css/liveTranscodeRuleAttachment:LiveTranscodeRuleAttachment":
                return new LiveTranscodeRuleAttachment(name, <any>undefined, { urn })
            case "tencentcloud:Css/liveTranscodeTemplate:LiveTranscodeTemplate":
                return new LiveTranscodeTemplate(name, <any>undefined, { urn })
            case "tencentcloud:Css/playAuthKeyConfig:PlayAuthKeyConfig":
                return new PlayAuthKeyConfig(name, <any>undefined, { urn })
            case "tencentcloud:Css/playDomainCertAttachment:PlayDomainCertAttachment":
                return new PlayDomainCertAttachment(name, <any>undefined, { urn })
            case "tencentcloud:Css/pullStreamTask:PullStreamTask":
                return new PullStreamTask(name, <any>undefined, { urn })
            case "tencentcloud:Css/pushAuthKeyConfig:PushAuthKeyConfig":
                return new PushAuthKeyConfig(name, <any>undefined, { urn })
            case "tencentcloud:Css/watermark:Watermark":
                return new Watermark(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("tencentcloud", "Css/authenticateDomainOwnerOperation", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Css/domain", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Css/liveTranscodeRuleAttachment", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Css/liveTranscodeTemplate", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Css/playAuthKeyConfig", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Css/playDomainCertAttachment", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Css/pullStreamTask", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Css/pushAuthKeyConfig", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Css/watermark", _module)
