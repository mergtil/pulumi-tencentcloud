// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Deprecatedaudit/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * Indicate whether to turn on audit logging or not.
     */
    public readonly auditSwitch!: pulumi.Output<boolean>;
    /**
     * Name of the cos bucket to save audit log. Caution: the validation of existing cos bucket will not be checked by
     * terraform.
     */
    public readonly cosBucket!: pulumi.Output<string>;
    /**
     * Region of the cos bucket.
     */
    public readonly cosRegion!: pulumi.Output<string>;
    /**
     * Indicate whether the log is encrypt with KMS algorithm or not.
     */
    public readonly enableKmsEncry!: pulumi.Output<boolean | undefined>;
    /**
     * Existing CMK unique key. This field can be get by data source `tencentcloud_audit_key_alias`. Caution: the region of the
     * KMS must be as same as the `cos_region`.
     */
    public readonly keyId!: pulumi.Output<string | undefined>;
    /**
     * The log file name prefix. The length ranges from 3 to 40. If not set, the account ID will be the log file prefix.
     */
    public readonly logFilePrefix!: pulumi.Output<string>;
    /**
     * Name of audit. Valid length ranges from 3 to 128. Only alpha character or numbers or '_' supported.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Event attribute filter. Valid values: `1`, `2`, `3`. `1` for readonly, `2` for write-only, `3` for all.
     */
    public readonly readWriteAttribute!: pulumi.Output<number>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            resourceInputs["auditSwitch"] = state ? state.auditSwitch : undefined;
            resourceInputs["cosBucket"] = state ? state.cosBucket : undefined;
            resourceInputs["cosRegion"] = state ? state.cosRegion : undefined;
            resourceInputs["enableKmsEncry"] = state ? state.enableKmsEncry : undefined;
            resourceInputs["keyId"] = state ? state.keyId : undefined;
            resourceInputs["logFilePrefix"] = state ? state.logFilePrefix : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["readWriteAttribute"] = state ? state.readWriteAttribute : undefined;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            if ((!args || args.auditSwitch === undefined) && !opts.urn) {
                throw new Error("Missing required property 'auditSwitch'");
            }
            if ((!args || args.cosBucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cosBucket'");
            }
            if ((!args || args.cosRegion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cosRegion'");
            }
            if ((!args || args.readWriteAttribute === undefined) && !opts.urn) {
                throw new Error("Missing required property 'readWriteAttribute'");
            }
            resourceInputs["auditSwitch"] = args ? args.auditSwitch : undefined;
            resourceInputs["cosBucket"] = args ? args.cosBucket : undefined;
            resourceInputs["cosRegion"] = args ? args.cosRegion : undefined;
            resourceInputs["enableKmsEncry"] = args ? args.enableKmsEncry : undefined;
            resourceInputs["keyId"] = args ? args.keyId : undefined;
            resourceInputs["logFilePrefix"] = args ? args.logFilePrefix : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["readWriteAttribute"] = args ? args.readWriteAttribute : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    /**
     * Indicate whether to turn on audit logging or not.
     */
    auditSwitch?: pulumi.Input<boolean>;
    /**
     * Name of the cos bucket to save audit log. Caution: the validation of existing cos bucket will not be checked by
     * terraform.
     */
    cosBucket?: pulumi.Input<string>;
    /**
     * Region of the cos bucket.
     */
    cosRegion?: pulumi.Input<string>;
    /**
     * Indicate whether the log is encrypt with KMS algorithm or not.
     */
    enableKmsEncry?: pulumi.Input<boolean>;
    /**
     * Existing CMK unique key. This field can be get by data source `tencentcloud_audit_key_alias`. Caution: the region of the
     * KMS must be as same as the `cos_region`.
     */
    keyId?: pulumi.Input<string>;
    /**
     * The log file name prefix. The length ranges from 3 to 40. If not set, the account ID will be the log file prefix.
     */
    logFilePrefix?: pulumi.Input<string>;
    /**
     * Name of audit. Valid length ranges from 3 to 128. Only alpha character or numbers or '_' supported.
     */
    name?: pulumi.Input<string>;
    /**
     * Event attribute filter. Valid values: `1`, `2`, `3`. `1` for readonly, `2` for write-only, `3` for all.
     */
    readWriteAttribute?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * Indicate whether to turn on audit logging or not.
     */
    auditSwitch: pulumi.Input<boolean>;
    /**
     * Name of the cos bucket to save audit log. Caution: the validation of existing cos bucket will not be checked by
     * terraform.
     */
    cosBucket: pulumi.Input<string>;
    /**
     * Region of the cos bucket.
     */
    cosRegion: pulumi.Input<string>;
    /**
     * Indicate whether the log is encrypt with KMS algorithm or not.
     */
    enableKmsEncry?: pulumi.Input<boolean>;
    /**
     * Existing CMK unique key. This field can be get by data source `tencentcloud_audit_key_alias`. Caution: the region of the
     * KMS must be as same as the `cos_region`.
     */
    keyId?: pulumi.Input<string>;
    /**
     * The log file name prefix. The length ranges from 3 to 40. If not set, the account ID will be the log file prefix.
     */
    logFilePrefix?: pulumi.Input<string>;
    /**
     * Name of audit. Valid length ranges from 3 to 128. Only alpha character or numbers or '_' supported.
     */
    name?: pulumi.Input<string>;
    /**
     * Event attribute filter. Valid values: `1`, `2`, `3`. `1` for readonly, `2` for write-only, `3` for all.
     */
    readWriteAttribute: pulumi.Input<number>;
}
