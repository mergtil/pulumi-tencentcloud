// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class DdosPolicyAttachment extends pulumi.CustomResource {
    /**
     * Get an existing DdosPolicyAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DdosPolicyAttachmentState, opts?: pulumi.CustomResourceOptions): DdosPolicyAttachment {
        return new DdosPolicyAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Dayu/ddosPolicyAttachment:DdosPolicyAttachment';

    /**
     * Returns true if the given object is an instance of DdosPolicyAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DdosPolicyAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DdosPolicyAttachment.__pulumiType;
    }

    /**
     * ID of the policy.
     */
    public readonly policyId!: pulumi.Output<string>;
    /**
     * ID of the attached resource.
     */
    public readonly resourceId!: pulumi.Output<string>;
    /**
     * Type of the resource that the DDoS policy works for. Valid values are `bgpip`, `bgp`, `bgp-multip`, `net`.
     */
    public readonly resourceType!: pulumi.Output<string>;

    /**
     * Create a DdosPolicyAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DdosPolicyAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DdosPolicyAttachmentArgs | DdosPolicyAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DdosPolicyAttachmentState | undefined;
            resourceInputs["policyId"] = state ? state.policyId : undefined;
            resourceInputs["resourceId"] = state ? state.resourceId : undefined;
            resourceInputs["resourceType"] = state ? state.resourceType : undefined;
        } else {
            const args = argsOrState as DdosPolicyAttachmentArgs | undefined;
            if ((!args || args.policyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policyId'");
            }
            if ((!args || args.resourceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceId'");
            }
            if ((!args || args.resourceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceType'");
            }
            resourceInputs["policyId"] = args ? args.policyId : undefined;
            resourceInputs["resourceId"] = args ? args.resourceId : undefined;
            resourceInputs["resourceType"] = args ? args.resourceType : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DdosPolicyAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DdosPolicyAttachment resources.
 */
export interface DdosPolicyAttachmentState {
    /**
     * ID of the policy.
     */
    policyId?: pulumi.Input<string>;
    /**
     * ID of the attached resource.
     */
    resourceId?: pulumi.Input<string>;
    /**
     * Type of the resource that the DDoS policy works for. Valid values are `bgpip`, `bgp`, `bgp-multip`, `net`.
     */
    resourceType?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DdosPolicyAttachment resource.
 */
export interface DdosPolicyAttachmentArgs {
    /**
     * ID of the policy.
     */
    policyId: pulumi.Input<string>;
    /**
     * ID of the attached resource.
     */
    resourceId: pulumi.Input<string>;
    /**
     * Type of the resource that the DDoS policy works for. Valid values are `bgpip`, `bgp`, `bgp-multip`, `net`.
     */
    resourceType: pulumi.Input<string>;
}
