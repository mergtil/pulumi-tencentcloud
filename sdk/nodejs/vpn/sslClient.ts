// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class SslClient extends pulumi.CustomResource {
    /**
     * Get an existing SslClient resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SslClientState, opts?: pulumi.CustomResourceOptions): SslClient {
        return new SslClient(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Vpn/sslClient:SslClient';

    /**
     * Returns true if the given object is an instance of SslClient.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SslClient {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SslClient.__pulumiType;
    }

    /**
     * The name of ssl vpn client to be created.
     */
    public readonly sslVpnClientName!: pulumi.Output<string>;
    /**
     * VPN ssl server id.
     */
    public readonly sslVpnServerId!: pulumi.Output<string>;

    /**
     * Create a SslClient resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SslClientArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SslClientArgs | SslClientState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SslClientState | undefined;
            resourceInputs["sslVpnClientName"] = state ? state.sslVpnClientName : undefined;
            resourceInputs["sslVpnServerId"] = state ? state.sslVpnServerId : undefined;
        } else {
            const args = argsOrState as SslClientArgs | undefined;
            if ((!args || args.sslVpnClientName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sslVpnClientName'");
            }
            if ((!args || args.sslVpnServerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sslVpnServerId'");
            }
            resourceInputs["sslVpnClientName"] = args ? args.sslVpnClientName : undefined;
            resourceInputs["sslVpnServerId"] = args ? args.sslVpnServerId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SslClient.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SslClient resources.
 */
export interface SslClientState {
    /**
     * The name of ssl vpn client to be created.
     */
    sslVpnClientName?: pulumi.Input<string>;
    /**
     * VPN ssl server id.
     */
    sslVpnServerId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SslClient resource.
 */
export interface SslClientArgs {
    /**
     * The name of ssl vpn client to be created.
     */
    sslVpnClientName: pulumi.Input<string>;
    /**
     * VPN ssl server id.
     */
    sslVpnServerId: pulumi.Input<string>;
}
