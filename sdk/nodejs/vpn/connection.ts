// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class Connection extends pulumi.CustomResource {
    /**
     * Get an existing Connection resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ConnectionState, opts?: pulumi.CustomResourceOptions): Connection {
        return new Connection(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Vpn/connection:Connection';

    /**
     * Returns true if the given object is an instance of Connection.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Connection {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Connection.__pulumiType;
    }

    /**
     * Create time of the VPN connection.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * ID of the customer gateway.
     */
    public readonly customerGatewayId!: pulumi.Output<string>;
    /**
     * The action after DPD timeout. Valid values: clear (disconnect) and restart (try again). It is valid when DpdEnable is 1.
     */
    public readonly dpdAction!: pulumi.Output<string>;
    /**
     * Specifies whether to enable DPD. Valid values: 0 (disable) and 1 (enable).
     */
    public readonly dpdEnable!: pulumi.Output<number>;
    /**
     * DPD timeout period.Valid value ranges: [30~60], Default: 30; unit: second. If the request is not responded within this
     * period, the peer end is considered not exists. This parameter is valid when the value of DpdEnable is 1.
     */
    public readonly dpdTimeout!: pulumi.Output<number>;
    /**
     * Whether intra-tunnel health checks are supported.
     */
    public readonly enableHealthCheck!: pulumi.Output<boolean>;
    /**
     * Encrypt proto of the VPN connection.
     */
    public /*out*/ readonly encryptProto!: pulumi.Output<string>;
    /**
     * Health check the address of this terminal.
     */
    public readonly healthCheckLocalIp!: pulumi.Output<string>;
    /**
     * Health check peer address.
     */
    public readonly healthCheckRemoteIp!: pulumi.Output<string>;
    /**
     * DH group name of the IKE operation specification. Valid values: `GROUP1`, `GROUP2`, `GROUP5`, `GROUP14`, `GROUP24`.
     * Default value is `GROUP1`.
     */
    public readonly ikeDhGroupName!: pulumi.Output<string | undefined>;
    /**
     * Exchange mode of the IKE operation specification. Valid values: `AGGRESSIVE`, `MAIN`. Default value is `MAIN`.
     */
    public readonly ikeExchangeMode!: pulumi.Output<string | undefined>;
    /**
     * Local address of IKE operation specification, valid when ike_local_identity is `ADDRESS`, generally the value is
     * `public_ip_address` of the related VPN gateway.
     */
    public readonly ikeLocalAddress!: pulumi.Output<string | undefined>;
    /**
     * Local FQDN name of the IKE operation specification.
     */
    public readonly ikeLocalFqdnName!: pulumi.Output<string | undefined>;
    /**
     * Local identity way of IKE operation specification. Valid values: `ADDRESS`, `FQDN`. Default value is `ADDRESS`.
     */
    public readonly ikeLocalIdentity!: pulumi.Output<string | undefined>;
    /**
     * Proto authenticate algorithm of the IKE operation specification. Valid values: `MD5`, `SHA`, `SHA-256`. Default Value is
     * `MD5`.
     */
    public readonly ikeProtoAuthenAlgorithm!: pulumi.Output<string | undefined>;
    /**
     * Proto encrypt algorithm of the IKE operation specification. Valid values: `3DES-CBC`, `AES-CBC-128`, `AES-CBC-192`,
     * `AES-CBC-256`, `DES-CBC`, `SM4`, `AES128GCM128`, `AES192GCM128`, `AES256GCM128`,`AES128GCM128`, `AES192GCM128`,
     * `AES256GCM128`. Default value is `3DES-CBC`.
     */
    public readonly ikeProtoEncryAlgorithm!: pulumi.Output<string | undefined>;
    /**
     * Remote address of IKE operation specification, valid when ike_remote_identity is `ADDRESS`, generally the value is
     * `public_ip_address` of the related customer gateway.
     */
    public readonly ikeRemoteAddress!: pulumi.Output<string | undefined>;
    /**
     * Remote FQDN name of the IKE operation specification.
     */
    public readonly ikeRemoteFqdnName!: pulumi.Output<string | undefined>;
    /**
     * Remote identity way of IKE operation specification. Valid values: `ADDRESS`, `FQDN`. Default value is `ADDRESS`.
     */
    public readonly ikeRemoteIdentity!: pulumi.Output<string | undefined>;
    /**
     * SA lifetime of the IKE operation specification, unit is `second`. The value ranges from 60 to 604800. Default value is
     * 86400 seconds.
     */
    public readonly ikeSaLifetimeSeconds!: pulumi.Output<number | undefined>;
    /**
     * Version of the IKE operation specification, values: `IKEV1`, `IKEV2`. Default value is `IKEV1`.
     */
    public readonly ikeVersion!: pulumi.Output<string | undefined>;
    /**
     * Encrypt algorithm of the IPSEC operation specification. Valid values: `3DES-CBC`, `AES-CBC-128`, `AES-CBC-192`,
     * `AES-CBC-256`, `DES-CBC`, `SM4`, `NULL`, `AES128GCM128`, `AES192GCM128`, `AES256GCM128`. Default value is `3DES-CBC`.
     */
    public readonly ipsecEncryptAlgorithm!: pulumi.Output<string | undefined>;
    /**
     * Integrity algorithm of the IPSEC operation specification. Valid values: `SHA1`, `MD5`, `SHA-256`. Default value is
     * `MD5`.
     */
    public readonly ipsecIntegrityAlgorithm!: pulumi.Output<string | undefined>;
    /**
     * PFS DH group. Valid value: `GROUP1`, `GROUP2`, `GROUP5`, `GROUP14`, `GROUP24`, `NULL`. Default value is `NULL`.
     */
    public readonly ipsecPfsDhGroup!: pulumi.Output<string | undefined>;
    /**
     * SA lifetime of the IPSEC operation specification, unit is second. Valid value ranges: [180~604800]. Default value is
     * 3600 seconds.
     */
    public readonly ipsecSaLifetimeSeconds!: pulumi.Output<number | undefined>;
    /**
     * SA lifetime of the IPSEC operation specification, unit is KB. The value should not be less then 2560. Default value is
     * 1843200.
     */
    public readonly ipsecSaLifetimeTraffic!: pulumi.Output<number | undefined>;
    /**
     * Indicate whether is ccn type. Modification of this field only impacts force new logic of `vpc_id`. If `is_ccn_type` is
     * true, modification of `vpc_id` will be ignored.
     */
    public /*out*/ readonly isCcnType!: pulumi.Output<boolean>;
    /**
     * Name of the VPN connection. The length of character is limited to 1-60.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Net status of the VPN connection. Valid value: `AVAILABLE`.
     */
    public /*out*/ readonly netStatus!: pulumi.Output<string>;
    /**
     * Pre-shared key of the VPN connection.
     */
    public readonly preShareKey!: pulumi.Output<string>;
    /**
     * Route type of the VPN connection.
     */
    public /*out*/ readonly routeType!: pulumi.Output<string>;
    /**
     * Security group policy of the VPN connection.
     */
    public readonly securityGroupPolicies!: pulumi.Output<outputs.Vpn.ConnectionSecurityGroupPolicy[]>;
    /**
     * State of the connection. Valid value: `PENDING`, `AVAILABLE`, `DELETING`.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * A list of tags used to associate different resources.
     */
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * ID of the VPC. Required if vpn gateway is not in `CCN` type, and doesn't make sense for `CCN` vpn gateway.
     */
    public readonly vpcId!: pulumi.Output<string | undefined>;
    /**
     * ID of the VPN gateway.
     */
    public readonly vpnGatewayId!: pulumi.Output<string>;
    /**
     * Vpn proto of the VPN connection.
     */
    public /*out*/ readonly vpnProto!: pulumi.Output<string>;

    /**
     * Create a Connection resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ConnectionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ConnectionArgs | ConnectionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ConnectionState | undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["customerGatewayId"] = state ? state.customerGatewayId : undefined;
            resourceInputs["dpdAction"] = state ? state.dpdAction : undefined;
            resourceInputs["dpdEnable"] = state ? state.dpdEnable : undefined;
            resourceInputs["dpdTimeout"] = state ? state.dpdTimeout : undefined;
            resourceInputs["enableHealthCheck"] = state ? state.enableHealthCheck : undefined;
            resourceInputs["encryptProto"] = state ? state.encryptProto : undefined;
            resourceInputs["healthCheckLocalIp"] = state ? state.healthCheckLocalIp : undefined;
            resourceInputs["healthCheckRemoteIp"] = state ? state.healthCheckRemoteIp : undefined;
            resourceInputs["ikeDhGroupName"] = state ? state.ikeDhGroupName : undefined;
            resourceInputs["ikeExchangeMode"] = state ? state.ikeExchangeMode : undefined;
            resourceInputs["ikeLocalAddress"] = state ? state.ikeLocalAddress : undefined;
            resourceInputs["ikeLocalFqdnName"] = state ? state.ikeLocalFqdnName : undefined;
            resourceInputs["ikeLocalIdentity"] = state ? state.ikeLocalIdentity : undefined;
            resourceInputs["ikeProtoAuthenAlgorithm"] = state ? state.ikeProtoAuthenAlgorithm : undefined;
            resourceInputs["ikeProtoEncryAlgorithm"] = state ? state.ikeProtoEncryAlgorithm : undefined;
            resourceInputs["ikeRemoteAddress"] = state ? state.ikeRemoteAddress : undefined;
            resourceInputs["ikeRemoteFqdnName"] = state ? state.ikeRemoteFqdnName : undefined;
            resourceInputs["ikeRemoteIdentity"] = state ? state.ikeRemoteIdentity : undefined;
            resourceInputs["ikeSaLifetimeSeconds"] = state ? state.ikeSaLifetimeSeconds : undefined;
            resourceInputs["ikeVersion"] = state ? state.ikeVersion : undefined;
            resourceInputs["ipsecEncryptAlgorithm"] = state ? state.ipsecEncryptAlgorithm : undefined;
            resourceInputs["ipsecIntegrityAlgorithm"] = state ? state.ipsecIntegrityAlgorithm : undefined;
            resourceInputs["ipsecPfsDhGroup"] = state ? state.ipsecPfsDhGroup : undefined;
            resourceInputs["ipsecSaLifetimeSeconds"] = state ? state.ipsecSaLifetimeSeconds : undefined;
            resourceInputs["ipsecSaLifetimeTraffic"] = state ? state.ipsecSaLifetimeTraffic : undefined;
            resourceInputs["isCcnType"] = state ? state.isCcnType : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["netStatus"] = state ? state.netStatus : undefined;
            resourceInputs["preShareKey"] = state ? state.preShareKey : undefined;
            resourceInputs["routeType"] = state ? state.routeType : undefined;
            resourceInputs["securityGroupPolicies"] = state ? state.securityGroupPolicies : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vpnGatewayId"] = state ? state.vpnGatewayId : undefined;
            resourceInputs["vpnProto"] = state ? state.vpnProto : undefined;
        } else {
            const args = argsOrState as ConnectionArgs | undefined;
            if ((!args || args.customerGatewayId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'customerGatewayId'");
            }
            if ((!args || args.preShareKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'preShareKey'");
            }
            if ((!args || args.securityGroupPolicies === undefined) && !opts.urn) {
                throw new Error("Missing required property 'securityGroupPolicies'");
            }
            if ((!args || args.vpnGatewayId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpnGatewayId'");
            }
            resourceInputs["customerGatewayId"] = args ? args.customerGatewayId : undefined;
            resourceInputs["dpdAction"] = args ? args.dpdAction : undefined;
            resourceInputs["dpdEnable"] = args ? args.dpdEnable : undefined;
            resourceInputs["dpdTimeout"] = args ? args.dpdTimeout : undefined;
            resourceInputs["enableHealthCheck"] = args ? args.enableHealthCheck : undefined;
            resourceInputs["healthCheckLocalIp"] = args ? args.healthCheckLocalIp : undefined;
            resourceInputs["healthCheckRemoteIp"] = args ? args.healthCheckRemoteIp : undefined;
            resourceInputs["ikeDhGroupName"] = args ? args.ikeDhGroupName : undefined;
            resourceInputs["ikeExchangeMode"] = args ? args.ikeExchangeMode : undefined;
            resourceInputs["ikeLocalAddress"] = args ? args.ikeLocalAddress : undefined;
            resourceInputs["ikeLocalFqdnName"] = args ? args.ikeLocalFqdnName : undefined;
            resourceInputs["ikeLocalIdentity"] = args ? args.ikeLocalIdentity : undefined;
            resourceInputs["ikeProtoAuthenAlgorithm"] = args ? args.ikeProtoAuthenAlgorithm : undefined;
            resourceInputs["ikeProtoEncryAlgorithm"] = args ? args.ikeProtoEncryAlgorithm : undefined;
            resourceInputs["ikeRemoteAddress"] = args ? args.ikeRemoteAddress : undefined;
            resourceInputs["ikeRemoteFqdnName"] = args ? args.ikeRemoteFqdnName : undefined;
            resourceInputs["ikeRemoteIdentity"] = args ? args.ikeRemoteIdentity : undefined;
            resourceInputs["ikeSaLifetimeSeconds"] = args ? args.ikeSaLifetimeSeconds : undefined;
            resourceInputs["ikeVersion"] = args ? args.ikeVersion : undefined;
            resourceInputs["ipsecEncryptAlgorithm"] = args ? args.ipsecEncryptAlgorithm : undefined;
            resourceInputs["ipsecIntegrityAlgorithm"] = args ? args.ipsecIntegrityAlgorithm : undefined;
            resourceInputs["ipsecPfsDhGroup"] = args ? args.ipsecPfsDhGroup : undefined;
            resourceInputs["ipsecSaLifetimeSeconds"] = args ? args.ipsecSaLifetimeSeconds : undefined;
            resourceInputs["ipsecSaLifetimeTraffic"] = args ? args.ipsecSaLifetimeTraffic : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["preShareKey"] = args ? args.preShareKey : undefined;
            resourceInputs["securityGroupPolicies"] = args ? args.securityGroupPolicies : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["vpnGatewayId"] = args ? args.vpnGatewayId : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["encryptProto"] = undefined /*out*/;
            resourceInputs["isCcnType"] = undefined /*out*/;
            resourceInputs["netStatus"] = undefined /*out*/;
            resourceInputs["routeType"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["vpnProto"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Connection.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Connection resources.
 */
export interface ConnectionState {
    /**
     * Create time of the VPN connection.
     */
    createTime?: pulumi.Input<string>;
    /**
     * ID of the customer gateway.
     */
    customerGatewayId?: pulumi.Input<string>;
    /**
     * The action after DPD timeout. Valid values: clear (disconnect) and restart (try again). It is valid when DpdEnable is 1.
     */
    dpdAction?: pulumi.Input<string>;
    /**
     * Specifies whether to enable DPD. Valid values: 0 (disable) and 1 (enable).
     */
    dpdEnable?: pulumi.Input<number>;
    /**
     * DPD timeout period.Valid value ranges: [30~60], Default: 30; unit: second. If the request is not responded within this
     * period, the peer end is considered not exists. This parameter is valid when the value of DpdEnable is 1.
     */
    dpdTimeout?: pulumi.Input<number>;
    /**
     * Whether intra-tunnel health checks are supported.
     */
    enableHealthCheck?: pulumi.Input<boolean>;
    /**
     * Encrypt proto of the VPN connection.
     */
    encryptProto?: pulumi.Input<string>;
    /**
     * Health check the address of this terminal.
     */
    healthCheckLocalIp?: pulumi.Input<string>;
    /**
     * Health check peer address.
     */
    healthCheckRemoteIp?: pulumi.Input<string>;
    /**
     * DH group name of the IKE operation specification. Valid values: `GROUP1`, `GROUP2`, `GROUP5`, `GROUP14`, `GROUP24`.
     * Default value is `GROUP1`.
     */
    ikeDhGroupName?: pulumi.Input<string>;
    /**
     * Exchange mode of the IKE operation specification. Valid values: `AGGRESSIVE`, `MAIN`. Default value is `MAIN`.
     */
    ikeExchangeMode?: pulumi.Input<string>;
    /**
     * Local address of IKE operation specification, valid when ike_local_identity is `ADDRESS`, generally the value is
     * `public_ip_address` of the related VPN gateway.
     */
    ikeLocalAddress?: pulumi.Input<string>;
    /**
     * Local FQDN name of the IKE operation specification.
     */
    ikeLocalFqdnName?: pulumi.Input<string>;
    /**
     * Local identity way of IKE operation specification. Valid values: `ADDRESS`, `FQDN`. Default value is `ADDRESS`.
     */
    ikeLocalIdentity?: pulumi.Input<string>;
    /**
     * Proto authenticate algorithm of the IKE operation specification. Valid values: `MD5`, `SHA`, `SHA-256`. Default Value is
     * `MD5`.
     */
    ikeProtoAuthenAlgorithm?: pulumi.Input<string>;
    /**
     * Proto encrypt algorithm of the IKE operation specification. Valid values: `3DES-CBC`, `AES-CBC-128`, `AES-CBC-192`,
     * `AES-CBC-256`, `DES-CBC`, `SM4`, `AES128GCM128`, `AES192GCM128`, `AES256GCM128`,`AES128GCM128`, `AES192GCM128`,
     * `AES256GCM128`. Default value is `3DES-CBC`.
     */
    ikeProtoEncryAlgorithm?: pulumi.Input<string>;
    /**
     * Remote address of IKE operation specification, valid when ike_remote_identity is `ADDRESS`, generally the value is
     * `public_ip_address` of the related customer gateway.
     */
    ikeRemoteAddress?: pulumi.Input<string>;
    /**
     * Remote FQDN name of the IKE operation specification.
     */
    ikeRemoteFqdnName?: pulumi.Input<string>;
    /**
     * Remote identity way of IKE operation specification. Valid values: `ADDRESS`, `FQDN`. Default value is `ADDRESS`.
     */
    ikeRemoteIdentity?: pulumi.Input<string>;
    /**
     * SA lifetime of the IKE operation specification, unit is `second`. The value ranges from 60 to 604800. Default value is
     * 86400 seconds.
     */
    ikeSaLifetimeSeconds?: pulumi.Input<number>;
    /**
     * Version of the IKE operation specification, values: `IKEV1`, `IKEV2`. Default value is `IKEV1`.
     */
    ikeVersion?: pulumi.Input<string>;
    /**
     * Encrypt algorithm of the IPSEC operation specification. Valid values: `3DES-CBC`, `AES-CBC-128`, `AES-CBC-192`,
     * `AES-CBC-256`, `DES-CBC`, `SM4`, `NULL`, `AES128GCM128`, `AES192GCM128`, `AES256GCM128`. Default value is `3DES-CBC`.
     */
    ipsecEncryptAlgorithm?: pulumi.Input<string>;
    /**
     * Integrity algorithm of the IPSEC operation specification. Valid values: `SHA1`, `MD5`, `SHA-256`. Default value is
     * `MD5`.
     */
    ipsecIntegrityAlgorithm?: pulumi.Input<string>;
    /**
     * PFS DH group. Valid value: `GROUP1`, `GROUP2`, `GROUP5`, `GROUP14`, `GROUP24`, `NULL`. Default value is `NULL`.
     */
    ipsecPfsDhGroup?: pulumi.Input<string>;
    /**
     * SA lifetime of the IPSEC operation specification, unit is second. Valid value ranges: [180~604800]. Default value is
     * 3600 seconds.
     */
    ipsecSaLifetimeSeconds?: pulumi.Input<number>;
    /**
     * SA lifetime of the IPSEC operation specification, unit is KB. The value should not be less then 2560. Default value is
     * 1843200.
     */
    ipsecSaLifetimeTraffic?: pulumi.Input<number>;
    /**
     * Indicate whether is ccn type. Modification of this field only impacts force new logic of `vpc_id`. If `is_ccn_type` is
     * true, modification of `vpc_id` will be ignored.
     */
    isCcnType?: pulumi.Input<boolean>;
    /**
     * Name of the VPN connection. The length of character is limited to 1-60.
     */
    name?: pulumi.Input<string>;
    /**
     * Net status of the VPN connection. Valid value: `AVAILABLE`.
     */
    netStatus?: pulumi.Input<string>;
    /**
     * Pre-shared key of the VPN connection.
     */
    preShareKey?: pulumi.Input<string>;
    /**
     * Route type of the VPN connection.
     */
    routeType?: pulumi.Input<string>;
    /**
     * Security group policy of the VPN connection.
     */
    securityGroupPolicies?: pulumi.Input<pulumi.Input<inputs.Vpn.ConnectionSecurityGroupPolicy>[]>;
    /**
     * State of the connection. Valid value: `PENDING`, `AVAILABLE`, `DELETING`.
     */
    state?: pulumi.Input<string>;
    /**
     * A list of tags used to associate different resources.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * ID of the VPC. Required if vpn gateway is not in `CCN` type, and doesn't make sense for `CCN` vpn gateway.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * ID of the VPN gateway.
     */
    vpnGatewayId?: pulumi.Input<string>;
    /**
     * Vpn proto of the VPN connection.
     */
    vpnProto?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Connection resource.
 */
export interface ConnectionArgs {
    /**
     * ID of the customer gateway.
     */
    customerGatewayId: pulumi.Input<string>;
    /**
     * The action after DPD timeout. Valid values: clear (disconnect) and restart (try again). It is valid when DpdEnable is 1.
     */
    dpdAction?: pulumi.Input<string>;
    /**
     * Specifies whether to enable DPD. Valid values: 0 (disable) and 1 (enable).
     */
    dpdEnable?: pulumi.Input<number>;
    /**
     * DPD timeout period.Valid value ranges: [30~60], Default: 30; unit: second. If the request is not responded within this
     * period, the peer end is considered not exists. This parameter is valid when the value of DpdEnable is 1.
     */
    dpdTimeout?: pulumi.Input<number>;
    /**
     * Whether intra-tunnel health checks are supported.
     */
    enableHealthCheck?: pulumi.Input<boolean>;
    /**
     * Health check the address of this terminal.
     */
    healthCheckLocalIp?: pulumi.Input<string>;
    /**
     * Health check peer address.
     */
    healthCheckRemoteIp?: pulumi.Input<string>;
    /**
     * DH group name of the IKE operation specification. Valid values: `GROUP1`, `GROUP2`, `GROUP5`, `GROUP14`, `GROUP24`.
     * Default value is `GROUP1`.
     */
    ikeDhGroupName?: pulumi.Input<string>;
    /**
     * Exchange mode of the IKE operation specification. Valid values: `AGGRESSIVE`, `MAIN`. Default value is `MAIN`.
     */
    ikeExchangeMode?: pulumi.Input<string>;
    /**
     * Local address of IKE operation specification, valid when ike_local_identity is `ADDRESS`, generally the value is
     * `public_ip_address` of the related VPN gateway.
     */
    ikeLocalAddress?: pulumi.Input<string>;
    /**
     * Local FQDN name of the IKE operation specification.
     */
    ikeLocalFqdnName?: pulumi.Input<string>;
    /**
     * Local identity way of IKE operation specification. Valid values: `ADDRESS`, `FQDN`. Default value is `ADDRESS`.
     */
    ikeLocalIdentity?: pulumi.Input<string>;
    /**
     * Proto authenticate algorithm of the IKE operation specification. Valid values: `MD5`, `SHA`, `SHA-256`. Default Value is
     * `MD5`.
     */
    ikeProtoAuthenAlgorithm?: pulumi.Input<string>;
    /**
     * Proto encrypt algorithm of the IKE operation specification. Valid values: `3DES-CBC`, `AES-CBC-128`, `AES-CBC-192`,
     * `AES-CBC-256`, `DES-CBC`, `SM4`, `AES128GCM128`, `AES192GCM128`, `AES256GCM128`,`AES128GCM128`, `AES192GCM128`,
     * `AES256GCM128`. Default value is `3DES-CBC`.
     */
    ikeProtoEncryAlgorithm?: pulumi.Input<string>;
    /**
     * Remote address of IKE operation specification, valid when ike_remote_identity is `ADDRESS`, generally the value is
     * `public_ip_address` of the related customer gateway.
     */
    ikeRemoteAddress?: pulumi.Input<string>;
    /**
     * Remote FQDN name of the IKE operation specification.
     */
    ikeRemoteFqdnName?: pulumi.Input<string>;
    /**
     * Remote identity way of IKE operation specification. Valid values: `ADDRESS`, `FQDN`. Default value is `ADDRESS`.
     */
    ikeRemoteIdentity?: pulumi.Input<string>;
    /**
     * SA lifetime of the IKE operation specification, unit is `second`. The value ranges from 60 to 604800. Default value is
     * 86400 seconds.
     */
    ikeSaLifetimeSeconds?: pulumi.Input<number>;
    /**
     * Version of the IKE operation specification, values: `IKEV1`, `IKEV2`. Default value is `IKEV1`.
     */
    ikeVersion?: pulumi.Input<string>;
    /**
     * Encrypt algorithm of the IPSEC operation specification. Valid values: `3DES-CBC`, `AES-CBC-128`, `AES-CBC-192`,
     * `AES-CBC-256`, `DES-CBC`, `SM4`, `NULL`, `AES128GCM128`, `AES192GCM128`, `AES256GCM128`. Default value is `3DES-CBC`.
     */
    ipsecEncryptAlgorithm?: pulumi.Input<string>;
    /**
     * Integrity algorithm of the IPSEC operation specification. Valid values: `SHA1`, `MD5`, `SHA-256`. Default value is
     * `MD5`.
     */
    ipsecIntegrityAlgorithm?: pulumi.Input<string>;
    /**
     * PFS DH group. Valid value: `GROUP1`, `GROUP2`, `GROUP5`, `GROUP14`, `GROUP24`, `NULL`. Default value is `NULL`.
     */
    ipsecPfsDhGroup?: pulumi.Input<string>;
    /**
     * SA lifetime of the IPSEC operation specification, unit is second. Valid value ranges: [180~604800]. Default value is
     * 3600 seconds.
     */
    ipsecSaLifetimeSeconds?: pulumi.Input<number>;
    /**
     * SA lifetime of the IPSEC operation specification, unit is KB. The value should not be less then 2560. Default value is
     * 1843200.
     */
    ipsecSaLifetimeTraffic?: pulumi.Input<number>;
    /**
     * Name of the VPN connection. The length of character is limited to 1-60.
     */
    name?: pulumi.Input<string>;
    /**
     * Pre-shared key of the VPN connection.
     */
    preShareKey: pulumi.Input<string>;
    /**
     * Security group policy of the VPN connection.
     */
    securityGroupPolicies: pulumi.Input<pulumi.Input<inputs.Vpn.ConnectionSecurityGroupPolicy>[]>;
    /**
     * A list of tags used to associate different resources.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * ID of the VPC. Required if vpn gateway is not in `CCN` type, and doesn't make sense for `CCN` vpn gateway.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * ID of the VPN gateway.
     */
    vpnGatewayId: pulumi.Input<string>;
}
