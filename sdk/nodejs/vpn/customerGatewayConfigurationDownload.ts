// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class CustomerGatewayConfigurationDownload extends pulumi.CustomResource {
    /**
     * Get an existing CustomerGatewayConfigurationDownload resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CustomerGatewayConfigurationDownloadState, opts?: pulumi.CustomResourceOptions): CustomerGatewayConfigurationDownload {
        return new CustomerGatewayConfigurationDownload(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Vpn/customerGatewayConfigurationDownload:CustomerGatewayConfigurationDownload';

    /**
     * Returns true if the given object is an instance of CustomerGatewayConfigurationDownload.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CustomerGatewayConfigurationDownload {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CustomerGatewayConfigurationDownload.__pulumiType;
    }

    /**
     * xml configuration.
     */
    public /*out*/ readonly customerGatewayConfiguration!: pulumi.Output<string>;
    /**
     * Customer Gateway Vendor Info.
     */
    public readonly customerGatewayVendor!: pulumi.Output<outputs.Vpn.CustomerGatewayConfigurationDownloadCustomerGatewayVendor>;
    /**
     * VPN connection access device physical interface name.
     */
    public readonly interfaceName!: pulumi.Output<string>;
    /**
     * VPN Connection Instance id.
     */
    public readonly vpnConnectionId!: pulumi.Output<string>;
    /**
     * VPN Gateway Instance ID.
     */
    public readonly vpnGatewayId!: pulumi.Output<string>;

    /**
     * Create a CustomerGatewayConfigurationDownload resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CustomerGatewayConfigurationDownloadArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CustomerGatewayConfigurationDownloadArgs | CustomerGatewayConfigurationDownloadState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CustomerGatewayConfigurationDownloadState | undefined;
            resourceInputs["customerGatewayConfiguration"] = state ? state.customerGatewayConfiguration : undefined;
            resourceInputs["customerGatewayVendor"] = state ? state.customerGatewayVendor : undefined;
            resourceInputs["interfaceName"] = state ? state.interfaceName : undefined;
            resourceInputs["vpnConnectionId"] = state ? state.vpnConnectionId : undefined;
            resourceInputs["vpnGatewayId"] = state ? state.vpnGatewayId : undefined;
        } else {
            const args = argsOrState as CustomerGatewayConfigurationDownloadArgs | undefined;
            if ((!args || args.customerGatewayVendor === undefined) && !opts.urn) {
                throw new Error("Missing required property 'customerGatewayVendor'");
            }
            if ((!args || args.interfaceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'interfaceName'");
            }
            if ((!args || args.vpnConnectionId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpnConnectionId'");
            }
            if ((!args || args.vpnGatewayId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpnGatewayId'");
            }
            resourceInputs["customerGatewayVendor"] = args ? args.customerGatewayVendor : undefined;
            resourceInputs["interfaceName"] = args ? args.interfaceName : undefined;
            resourceInputs["vpnConnectionId"] = args ? args.vpnConnectionId : undefined;
            resourceInputs["vpnGatewayId"] = args ? args.vpnGatewayId : undefined;
            resourceInputs["customerGatewayConfiguration"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CustomerGatewayConfigurationDownload.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CustomerGatewayConfigurationDownload resources.
 */
export interface CustomerGatewayConfigurationDownloadState {
    /**
     * xml configuration.
     */
    customerGatewayConfiguration?: pulumi.Input<string>;
    /**
     * Customer Gateway Vendor Info.
     */
    customerGatewayVendor?: pulumi.Input<inputs.Vpn.CustomerGatewayConfigurationDownloadCustomerGatewayVendor>;
    /**
     * VPN connection access device physical interface name.
     */
    interfaceName?: pulumi.Input<string>;
    /**
     * VPN Connection Instance id.
     */
    vpnConnectionId?: pulumi.Input<string>;
    /**
     * VPN Gateway Instance ID.
     */
    vpnGatewayId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CustomerGatewayConfigurationDownload resource.
 */
export interface CustomerGatewayConfigurationDownloadArgs {
    /**
     * Customer Gateway Vendor Info.
     */
    customerGatewayVendor: pulumi.Input<inputs.Vpn.CustomerGatewayConfigurationDownloadCustomerGatewayVendor>;
    /**
     * VPN connection access device physical interface name.
     */
    interfaceName: pulumi.Input<string>;
    /**
     * VPN Connection Instance id.
     */
    vpnConnectionId: pulumi.Input<string>;
    /**
     * VPN Gateway Instance ID.
     */
    vpnGatewayId: pulumi.Input<string>;
}
