// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class LoadBalancer extends pulumi.CustomResource {
    /**
     * Get an existing LoadBalancer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: LoadBalancerState, opts?: pulumi.CustomResourceOptions): LoadBalancer {
        return new LoadBalancer(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:As/loadBalancer:LoadBalancer';

    /**
     * Returns true if the given object is an instance of LoadBalancer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is LoadBalancer {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === LoadBalancer.__pulumiType;
    }

    /**
     * ID of a scaling group.
     */
    public readonly autoScalingGroupId!: pulumi.Output<string>;
    /**
     * List of application load balancers. The maximum number of application-type load balancers bound to each scaling group is
     * 100. Both LoadBalancerIds and ForwardLoadBalancers can specify at most one at the same time.
     */
    public readonly forwardLoadBalancers!: pulumi.Output<outputs.As.LoadBalancerForwardLoadBalancer[] | undefined>;
    /**
     * List of traditional load balancer IDs. The maximum number of traditional load balancers bound to each scaling group is
     * 20. Both LoadBalancerIds and ForwardLoadBalancers can specify at most one at the same time.
     */
    public readonly loadBalancerIds!: pulumi.Output<string[] | undefined>;

    /**
     * Create a LoadBalancer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: LoadBalancerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: LoadBalancerArgs | LoadBalancerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as LoadBalancerState | undefined;
            resourceInputs["autoScalingGroupId"] = state ? state.autoScalingGroupId : undefined;
            resourceInputs["forwardLoadBalancers"] = state ? state.forwardLoadBalancers : undefined;
            resourceInputs["loadBalancerIds"] = state ? state.loadBalancerIds : undefined;
        } else {
            const args = argsOrState as LoadBalancerArgs | undefined;
            if ((!args || args.autoScalingGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'autoScalingGroupId'");
            }
            resourceInputs["autoScalingGroupId"] = args ? args.autoScalingGroupId : undefined;
            resourceInputs["forwardLoadBalancers"] = args ? args.forwardLoadBalancers : undefined;
            resourceInputs["loadBalancerIds"] = args ? args.loadBalancerIds : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(LoadBalancer.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering LoadBalancer resources.
 */
export interface LoadBalancerState {
    /**
     * ID of a scaling group.
     */
    autoScalingGroupId?: pulumi.Input<string>;
    /**
     * List of application load balancers. The maximum number of application-type load balancers bound to each scaling group is
     * 100. Both LoadBalancerIds and ForwardLoadBalancers can specify at most one at the same time.
     */
    forwardLoadBalancers?: pulumi.Input<pulumi.Input<inputs.As.LoadBalancerForwardLoadBalancer>[]>;
    /**
     * List of traditional load balancer IDs. The maximum number of traditional load balancers bound to each scaling group is
     * 20. Both LoadBalancerIds and ForwardLoadBalancers can specify at most one at the same time.
     */
    loadBalancerIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a LoadBalancer resource.
 */
export interface LoadBalancerArgs {
    /**
     * ID of a scaling group.
     */
    autoScalingGroupId: pulumi.Input<string>;
    /**
     * List of application load balancers. The maximum number of application-type load balancers bound to each scaling group is
     * 100. Both LoadBalancerIds and ForwardLoadBalancers can specify at most one at the same time.
     */
    forwardLoadBalancers?: pulumi.Input<pulumi.Input<inputs.As.LoadBalancerForwardLoadBalancer>[]>;
    /**
     * List of traditional load balancer IDs. The maximum number of traditional load balancers bound to each scaling group is
     * 20. Both LoadBalancerIds and ForwardLoadBalancers can specify at most one at the same time.
     */
    loadBalancerIds?: pulumi.Input<pulumi.Input<string>[]>;
}
