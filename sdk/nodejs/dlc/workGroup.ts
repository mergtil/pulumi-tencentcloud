// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class WorkGroup extends pulumi.CustomResource {
    /**
     * Get an existing WorkGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkGroupState, opts?: pulumi.CustomResourceOptions): WorkGroup {
        return new WorkGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Dlc/workGroup:WorkGroup';

    /**
     * Returns true if the given object is an instance of WorkGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkGroup.__pulumiType;
    }

    /**
     * A collection of user IDs that has been bound to the workgroup.
     */
    public /*out*/ readonly userIds!: pulumi.Output<string[]>;
    /**
     * Description of Work Group.
     */
    public readonly workGroupDescription!: pulumi.Output<string | undefined>;
    /**
     * Name of Work Group.
     */
    public readonly workGroupName!: pulumi.Output<string>;

    /**
     * Create a WorkGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkGroupArgs | WorkGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkGroupState | undefined;
            resourceInputs["userIds"] = state ? state.userIds : undefined;
            resourceInputs["workGroupDescription"] = state ? state.workGroupDescription : undefined;
            resourceInputs["workGroupName"] = state ? state.workGroupName : undefined;
        } else {
            const args = argsOrState as WorkGroupArgs | undefined;
            if ((!args || args.workGroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workGroupName'");
            }
            resourceInputs["workGroupDescription"] = args ? args.workGroupDescription : undefined;
            resourceInputs["workGroupName"] = args ? args.workGroupName : undefined;
            resourceInputs["userIds"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WorkGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WorkGroup resources.
 */
export interface WorkGroupState {
    /**
     * A collection of user IDs that has been bound to the workgroup.
     */
    userIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Description of Work Group.
     */
    workGroupDescription?: pulumi.Input<string>;
    /**
     * Name of Work Group.
     */
    workGroupName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WorkGroup resource.
 */
export interface WorkGroupArgs {
    /**
     * Description of Work Group.
     */
    workGroupDescription?: pulumi.Input<string>;
    /**
     * Name of Work Group.
     */
    workGroupName: pulumi.Input<string>;
}
