// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { CertificateArgs, CertificateState } from "./certificate";
export type Certificate = import("./certificate").Certificate;
export const Certificate: typeof import("./certificate").Certificate = null as any;
utilities.lazyLoad(exports, ["Certificate"], () => require("./certificate"));

export { FreeCertificateArgs, FreeCertificateState } from "./freeCertificate";
export type FreeCertificate = import("./freeCertificate").FreeCertificate;
export const FreeCertificate: typeof import("./freeCertificate").FreeCertificate = null as any;
utilities.lazyLoad(exports, ["FreeCertificate"], () => require("./freeCertificate"));

export { GetCertificatesArgs, GetCertificatesResult, GetCertificatesOutputArgs } from "./getCertificates";
export const getCertificates: typeof import("./getCertificates").getCertificates = null as any;
export const getCertificatesOutput: typeof import("./getCertificates").getCertificatesOutput = null as any;
utilities.lazyLoad(exports, ["getCertificates","getCertificatesOutput"], () => require("./getCertificates"));

export { PayCertificateArgs, PayCertificateState } from "./payCertificate";
export type PayCertificate = import("./payCertificate").PayCertificate;
export const PayCertificate: typeof import("./payCertificate").PayCertificate = null as any;
utilities.lazyLoad(exports, ["PayCertificate"], () => require("./payCertificate"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "tencentcloud:Ssl/certificate:Certificate":
                return new Certificate(name, <any>undefined, { urn })
            case "tencentcloud:Ssl/freeCertificate:FreeCertificate":
                return new FreeCertificate(name, <any>undefined, { urn })
            case "tencentcloud:Ssl/payCertificate:PayCertificate":
                return new PayCertificate(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("tencentcloud", "Ssl/certificate", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Ssl/freeCertificate", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Ssl/payCertificate", _module)
