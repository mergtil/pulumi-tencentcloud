// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { DcxArgs, DcxState } from "./dcx";
export type Dcx = import("./dcx").Dcx;
export const Dcx: typeof import("./dcx").Dcx = null as any;
utilities.lazyLoad(exports, ["Dcx"], () => require("./dcx"));

export { ExtraConfigArgs, ExtraConfigState } from "./extraConfig";
export type ExtraConfig = import("./extraConfig").ExtraConfig;
export const ExtraConfig: typeof import("./extraConfig").ExtraConfig = null as any;
utilities.lazyLoad(exports, ["ExtraConfig"], () => require("./extraConfig"));

export { GetInstancesArgs, GetInstancesResult, GetInstancesOutputArgs } from "./getInstances";
export const getInstances: typeof import("./getInstances").getInstances = null as any;
export const getInstancesOutput: typeof import("./getInstances").getInstancesOutput = null as any;
utilities.lazyLoad(exports, ["getInstances","getInstancesOutput"], () => require("./getInstances"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "tencentcloud:Dcx/dcx:Dcx":
                return new Dcx(name, <any>undefined, { urn })
            case "tencentcloud:Dcx/extraConfig:ExtraConfig":
                return new ExtraConfig(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("tencentcloud", "Dcx/dcx", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Dcx/extraConfig", _module)
