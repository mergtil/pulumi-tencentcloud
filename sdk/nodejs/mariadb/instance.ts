// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class Instance extends pulumi.CustomResource {
    /**
     * Get an existing Instance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: InstanceState, opts?: pulumi.CustomResourceOptions): Instance {
        return new Instance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Mariadb/instance:Instance';

    /**
     * Returns true if the given object is an instance of Instance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Instance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Instance.__pulumiType;
    }

    /**
     * ID of the application to which the instance belongs.
     */
    public /*out*/ readonly appId!: pulumi.Output<number>;
    /**
     * Automatic renewal flag, 1: automatic renewal, 2: no automatic renewal.
     */
    public readonly autoRenewFlag!: pulumi.Output<number>;
    /**
     * Whether to automatically use the voucher for payment, the default is not used.
     */
    public readonly autoVoucher!: pulumi.Output<boolean | undefined>;
    /**
     * Number of CPU cores of the instance.
     */
    public /*out*/ readonly cpu!: pulumi.Output<number>;
    /**
     * Instance creation time, the format is 2006-01-02 15:04:05.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Database Engine.
     */
    public /*out*/ readonly dbEngine!: pulumi.Output<string>;
    /**
     * Database engine version, currently available: 8.0.18, 10.1.9, 5.7.17. If not passed, the default is Percona 5.7.17.
     */
    public readonly dbVersionId!: pulumi.Output<string>;
    /**
     * Number of DCN disaster recovery instances.
     */
    public /*out*/ readonly dcnDstNum!: pulumi.Output<number>;
    /**
     * DCN flag, 0-none, 1-primary instance, 2-disaster backup instance.
     */
    public /*out*/ readonly dcnFlag!: pulumi.Output<number>;
    /**
     * DCN source instance ID.
     */
    public readonly dcnInstanceId!: pulumi.Output<string | undefined>;
    /**
     * DCN source region.
     */
    public readonly dcnRegion!: pulumi.Output<string | undefined>;
    /**
     * DCN status, 0-none, 1-creating, 2-synchronizing, 3-disconnected.
     */
    public /*out*/ readonly dcnStatus!: pulumi.Output<number>;
    /**
     * Exclusive cluster ID, if it is empty, it means a normal instance.
     */
    public /*out*/ readonly exclusterId!: pulumi.Output<string>;
    /**
     * Parameter list. The optional values of this interface are: character_set_server (character set, required) enum:
     * utf8,latin1,gbk,utf8mb4,gb18030, lower_case_table_names (table name case sensitive, required, 0 - sensitive; 1 -
     * insensitive), innodb_page_size (innodb data page, Default 16K), sync_mode (sync mode: 0 - asynchronous; 1 - strong
     * synchronous; 2 - strong synchronous can degenerate. The default is strong synchronous can degenerate).
     */
    public readonly initParams!: pulumi.Output<outputs.Mariadb.InstanceInitParam[] | undefined>;
    /**
     * Instance ID, uniquely identifies a TDSQL instance.
     */
    public /*out*/ readonly instanceId!: pulumi.Output<string>;
    /**
     * Instance name, you can set the name of the instance independently through this field.
     */
    public readonly instanceName!: pulumi.Output<string>;
    /**
     * 1: primary instance (exclusive), 2: primary instance, 3: disaster recovery instance, 4: disaster recovery instance
     * (exclusive type).
     */
    public /*out*/ readonly instanceType!: pulumi.Output<number>;
    /**
     * Whether IPv6 is supported.
     */
    public readonly ipv6Flag!: pulumi.Output<number>;
    /**
     * Whether the instance supports auditing. 1-supported; 0-not supported.
     */
    public /*out*/ readonly isAuditSupported!: pulumi.Output<number>;
    /**
     * Whether data encryption is supported. 1-supported; 0-not supported.
     */
    public /*out*/ readonly isEncryptSupported!: pulumi.Output<number>;
    /**
     * Whether it is a temporary instance, 0 means no, non-zero means yes.
     */
    public /*out*/ readonly isTmp!: pulumi.Output<number>;
    /**
     * Asynchronous task process ID when the instance is in an asynchronous task.
     */
    public /*out*/ readonly locker!: pulumi.Output<number>;
    /**
     * Machine Model.
     */
    public /*out*/ readonly machine!: pulumi.Output<string>;
    /**
     * Memory size, unit: GB, can be obtained by querying instance specifications through DescribeDBInstanceSpecs.
     */
    public readonly memory!: pulumi.Output<number>;
    /**
     * Number of nodes, 2 is one master and one slave, 3 is one master and two slaves.
     */
    public readonly nodeCount!: pulumi.Output<number>;
    /**
     * Payment Mode.
     */
    public /*out*/ readonly paymode!: pulumi.Output<string>;
    /**
     * The duration of the purchase, unit: month.
     */
    public readonly period!: pulumi.Output<number | undefined>;
    /**
     * Instance expiration time, the format is 2006-01-02 15:04:05.
     */
    public /*out*/ readonly periodEndTime!: pulumi.Output<string>;
    /**
     * Product Type ID.
     */
    public /*out*/ readonly pid!: pulumi.Output<number>;
    /**
     * Project ID, which can be obtained by viewing the project list, if not passed, it will be associated with the default
     * project.
     */
    public readonly projectId!: pulumi.Output<number>;
    /**
     * Maximum Qps value.
     */
    public /*out*/ readonly qps!: pulumi.Output<number>;
    /**
     * The name of the region where the instance is located, such as ap-shanghai.
     */
    public /*out*/ readonly region!: pulumi.Output<string>;
    /**
     * Security group ID list.
     */
    public readonly securityGroupIds!: pulumi.Output<string[] | undefined>;
    /**
     * Instance status: 0 creating, 1 process processing, 2 running, 3 instance not initialized, -1 instance isolated, 4
     * instance initializing, 5 instance deleting, 6 instance restarting, 7 data migration.
     */
    public /*out*/ readonly status!: pulumi.Output<number>;
    /**
     * Description of the current running state of the instance.
     */
    public /*out*/ readonly statusDesc!: pulumi.Output<string>;
    /**
     * Storage size, unit: GB. You can query instance specifications through DescribeDBInstanceSpecs to obtain the lower and
     * upper limits of disk specifications corresponding to different memory sizes.
     */
    public readonly storage!: pulumi.Output<number>;
    /**
     * Virtual private network subnet ID, required when VpcId is not empty.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * tag list.
     */
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * TDSQL version information.
     */
    public /*out*/ readonly tdsqlVersion!: pulumi.Output<string>;
    /**
     * The account to which the instance belongs.
     */
    public /*out*/ readonly uin!: pulumi.Output<string>;
    /**
     * The last update time of the instance in the format of 2006-01-02 15:04:05.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * Intranet IP address.
     */
    public readonly vip!: pulumi.Output<string>;
    /**
     * Intranet IPv6.
     */
    public /*out*/ readonly vipv6!: pulumi.Output<string>;
    /**
     * A list of voucher IDs. Currently, only one voucher can be specified.
     */
    public readonly voucherIds!: pulumi.Output<string[] | undefined>;
    /**
     * Virtual private network ID, if not passed, it means that it is created as a basic network.
     */
    public readonly vpcId!: pulumi.Output<string>;
    /**
     * Intranet port.
     */
    public /*out*/ readonly vport!: pulumi.Output<number>;
    /**
     * The domain name accessed from the external network, which can be resolved by the public network.
     */
    public /*out*/ readonly wanDomain!: pulumi.Output<string>;
    /**
     * Internet port.
     */
    public /*out*/ readonly wanPort!: pulumi.Output<number>;
    /**
     * Internet IPv6 port.
     */
    public /*out*/ readonly wanPortIpv6!: pulumi.Output<number>;
    /**
     * External network status, 0-unopened; 1-opened; 2-closed; 3-opening.
     */
    public /*out*/ readonly wanStatus!: pulumi.Output<number>;
    /**
     * Internet IPv6 status.
     */
    public /*out*/ readonly wanStatusIpv6!: pulumi.Output<number>;
    /**
     * Extranet IP address, accessible from the public network.
     */
    public /*out*/ readonly wanVip!: pulumi.Output<string>;
    /**
     * Internet IPv6.
     */
    public /*out*/ readonly wanVipv6!: pulumi.Output<string>;
    /**
     * Instance node availability zone distribution, up to two availability zones can be filled. When the shard specification
     * is one master and two slaves, two of the nodes are in the first availability zone.
     */
    public readonly zones!: pulumi.Output<string[]>;

    /**
     * Create a Instance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: InstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: InstanceArgs | InstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as InstanceState | undefined;
            resourceInputs["appId"] = state ? state.appId : undefined;
            resourceInputs["autoRenewFlag"] = state ? state.autoRenewFlag : undefined;
            resourceInputs["autoVoucher"] = state ? state.autoVoucher : undefined;
            resourceInputs["cpu"] = state ? state.cpu : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["dbEngine"] = state ? state.dbEngine : undefined;
            resourceInputs["dbVersionId"] = state ? state.dbVersionId : undefined;
            resourceInputs["dcnDstNum"] = state ? state.dcnDstNum : undefined;
            resourceInputs["dcnFlag"] = state ? state.dcnFlag : undefined;
            resourceInputs["dcnInstanceId"] = state ? state.dcnInstanceId : undefined;
            resourceInputs["dcnRegion"] = state ? state.dcnRegion : undefined;
            resourceInputs["dcnStatus"] = state ? state.dcnStatus : undefined;
            resourceInputs["exclusterId"] = state ? state.exclusterId : undefined;
            resourceInputs["initParams"] = state ? state.initParams : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["instanceName"] = state ? state.instanceName : undefined;
            resourceInputs["instanceType"] = state ? state.instanceType : undefined;
            resourceInputs["ipv6Flag"] = state ? state.ipv6Flag : undefined;
            resourceInputs["isAuditSupported"] = state ? state.isAuditSupported : undefined;
            resourceInputs["isEncryptSupported"] = state ? state.isEncryptSupported : undefined;
            resourceInputs["isTmp"] = state ? state.isTmp : undefined;
            resourceInputs["locker"] = state ? state.locker : undefined;
            resourceInputs["machine"] = state ? state.machine : undefined;
            resourceInputs["memory"] = state ? state.memory : undefined;
            resourceInputs["nodeCount"] = state ? state.nodeCount : undefined;
            resourceInputs["paymode"] = state ? state.paymode : undefined;
            resourceInputs["period"] = state ? state.period : undefined;
            resourceInputs["periodEndTime"] = state ? state.periodEndTime : undefined;
            resourceInputs["pid"] = state ? state.pid : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["qps"] = state ? state.qps : undefined;
            resourceInputs["region"] = state ? state.region : undefined;
            resourceInputs["securityGroupIds"] = state ? state.securityGroupIds : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["statusDesc"] = state ? state.statusDesc : undefined;
            resourceInputs["storage"] = state ? state.storage : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["tdsqlVersion"] = state ? state.tdsqlVersion : undefined;
            resourceInputs["uin"] = state ? state.uin : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["vip"] = state ? state.vip : undefined;
            resourceInputs["vipv6"] = state ? state.vipv6 : undefined;
            resourceInputs["voucherIds"] = state ? state.voucherIds : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vport"] = state ? state.vport : undefined;
            resourceInputs["wanDomain"] = state ? state.wanDomain : undefined;
            resourceInputs["wanPort"] = state ? state.wanPort : undefined;
            resourceInputs["wanPortIpv6"] = state ? state.wanPortIpv6 : undefined;
            resourceInputs["wanStatus"] = state ? state.wanStatus : undefined;
            resourceInputs["wanStatusIpv6"] = state ? state.wanStatusIpv6 : undefined;
            resourceInputs["wanVip"] = state ? state.wanVip : undefined;
            resourceInputs["wanVipv6"] = state ? state.wanVipv6 : undefined;
            resourceInputs["zones"] = state ? state.zones : undefined;
        } else {
            const args = argsOrState as InstanceArgs | undefined;
            if ((!args || args.memory === undefined) && !opts.urn) {
                throw new Error("Missing required property 'memory'");
            }
            if ((!args || args.nodeCount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'nodeCount'");
            }
            if ((!args || args.storage === undefined) && !opts.urn) {
                throw new Error("Missing required property 'storage'");
            }
            if ((!args || args.zones === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zones'");
            }
            resourceInputs["autoRenewFlag"] = args ? args.autoRenewFlag : undefined;
            resourceInputs["autoVoucher"] = args ? args.autoVoucher : undefined;
            resourceInputs["dbVersionId"] = args ? args.dbVersionId : undefined;
            resourceInputs["dcnInstanceId"] = args ? args.dcnInstanceId : undefined;
            resourceInputs["dcnRegion"] = args ? args.dcnRegion : undefined;
            resourceInputs["initParams"] = args ? args.initParams : undefined;
            resourceInputs["instanceName"] = args ? args.instanceName : undefined;
            resourceInputs["ipv6Flag"] = args ? args.ipv6Flag : undefined;
            resourceInputs["memory"] = args ? args.memory : undefined;
            resourceInputs["nodeCount"] = args ? args.nodeCount : undefined;
            resourceInputs["period"] = args ? args.period : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["securityGroupIds"] = args ? args.securityGroupIds : undefined;
            resourceInputs["storage"] = args ? args.storage : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vip"] = args ? args.vip : undefined;
            resourceInputs["voucherIds"] = args ? args.voucherIds : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["zones"] = args ? args.zones : undefined;
            resourceInputs["appId"] = undefined /*out*/;
            resourceInputs["cpu"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["dbEngine"] = undefined /*out*/;
            resourceInputs["dcnDstNum"] = undefined /*out*/;
            resourceInputs["dcnFlag"] = undefined /*out*/;
            resourceInputs["dcnStatus"] = undefined /*out*/;
            resourceInputs["exclusterId"] = undefined /*out*/;
            resourceInputs["instanceId"] = undefined /*out*/;
            resourceInputs["instanceType"] = undefined /*out*/;
            resourceInputs["isAuditSupported"] = undefined /*out*/;
            resourceInputs["isEncryptSupported"] = undefined /*out*/;
            resourceInputs["isTmp"] = undefined /*out*/;
            resourceInputs["locker"] = undefined /*out*/;
            resourceInputs["machine"] = undefined /*out*/;
            resourceInputs["paymode"] = undefined /*out*/;
            resourceInputs["periodEndTime"] = undefined /*out*/;
            resourceInputs["pid"] = undefined /*out*/;
            resourceInputs["qps"] = undefined /*out*/;
            resourceInputs["region"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["statusDesc"] = undefined /*out*/;
            resourceInputs["tdsqlVersion"] = undefined /*out*/;
            resourceInputs["uin"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["vipv6"] = undefined /*out*/;
            resourceInputs["vport"] = undefined /*out*/;
            resourceInputs["wanDomain"] = undefined /*out*/;
            resourceInputs["wanPort"] = undefined /*out*/;
            resourceInputs["wanPortIpv6"] = undefined /*out*/;
            resourceInputs["wanStatus"] = undefined /*out*/;
            resourceInputs["wanStatusIpv6"] = undefined /*out*/;
            resourceInputs["wanVip"] = undefined /*out*/;
            resourceInputs["wanVipv6"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Instance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Instance resources.
 */
export interface InstanceState {
    /**
     * ID of the application to which the instance belongs.
     */
    appId?: pulumi.Input<number>;
    /**
     * Automatic renewal flag, 1: automatic renewal, 2: no automatic renewal.
     */
    autoRenewFlag?: pulumi.Input<number>;
    /**
     * Whether to automatically use the voucher for payment, the default is not used.
     */
    autoVoucher?: pulumi.Input<boolean>;
    /**
     * Number of CPU cores of the instance.
     */
    cpu?: pulumi.Input<number>;
    /**
     * Instance creation time, the format is 2006-01-02 15:04:05.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Database Engine.
     */
    dbEngine?: pulumi.Input<string>;
    /**
     * Database engine version, currently available: 8.0.18, 10.1.9, 5.7.17. If not passed, the default is Percona 5.7.17.
     */
    dbVersionId?: pulumi.Input<string>;
    /**
     * Number of DCN disaster recovery instances.
     */
    dcnDstNum?: pulumi.Input<number>;
    /**
     * DCN flag, 0-none, 1-primary instance, 2-disaster backup instance.
     */
    dcnFlag?: pulumi.Input<number>;
    /**
     * DCN source instance ID.
     */
    dcnInstanceId?: pulumi.Input<string>;
    /**
     * DCN source region.
     */
    dcnRegion?: pulumi.Input<string>;
    /**
     * DCN status, 0-none, 1-creating, 2-synchronizing, 3-disconnected.
     */
    dcnStatus?: pulumi.Input<number>;
    /**
     * Exclusive cluster ID, if it is empty, it means a normal instance.
     */
    exclusterId?: pulumi.Input<string>;
    /**
     * Parameter list. The optional values of this interface are: character_set_server (character set, required) enum:
     * utf8,latin1,gbk,utf8mb4,gb18030, lower_case_table_names (table name case sensitive, required, 0 - sensitive; 1 -
     * insensitive), innodb_page_size (innodb data page, Default 16K), sync_mode (sync mode: 0 - asynchronous; 1 - strong
     * synchronous; 2 - strong synchronous can degenerate. The default is strong synchronous can degenerate).
     */
    initParams?: pulumi.Input<pulumi.Input<inputs.Mariadb.InstanceInitParam>[]>;
    /**
     * Instance ID, uniquely identifies a TDSQL instance.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Instance name, you can set the name of the instance independently through this field.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * 1: primary instance (exclusive), 2: primary instance, 3: disaster recovery instance, 4: disaster recovery instance
     * (exclusive type).
     */
    instanceType?: pulumi.Input<number>;
    /**
     * Whether IPv6 is supported.
     */
    ipv6Flag?: pulumi.Input<number>;
    /**
     * Whether the instance supports auditing. 1-supported; 0-not supported.
     */
    isAuditSupported?: pulumi.Input<number>;
    /**
     * Whether data encryption is supported. 1-supported; 0-not supported.
     */
    isEncryptSupported?: pulumi.Input<number>;
    /**
     * Whether it is a temporary instance, 0 means no, non-zero means yes.
     */
    isTmp?: pulumi.Input<number>;
    /**
     * Asynchronous task process ID when the instance is in an asynchronous task.
     */
    locker?: pulumi.Input<number>;
    /**
     * Machine Model.
     */
    machine?: pulumi.Input<string>;
    /**
     * Memory size, unit: GB, can be obtained by querying instance specifications through DescribeDBInstanceSpecs.
     */
    memory?: pulumi.Input<number>;
    /**
     * Number of nodes, 2 is one master and one slave, 3 is one master and two slaves.
     */
    nodeCount?: pulumi.Input<number>;
    /**
     * Payment Mode.
     */
    paymode?: pulumi.Input<string>;
    /**
     * The duration of the purchase, unit: month.
     */
    period?: pulumi.Input<number>;
    /**
     * Instance expiration time, the format is 2006-01-02 15:04:05.
     */
    periodEndTime?: pulumi.Input<string>;
    /**
     * Product Type ID.
     */
    pid?: pulumi.Input<number>;
    /**
     * Project ID, which can be obtained by viewing the project list, if not passed, it will be associated with the default
     * project.
     */
    projectId?: pulumi.Input<number>;
    /**
     * Maximum Qps value.
     */
    qps?: pulumi.Input<number>;
    /**
     * The name of the region where the instance is located, such as ap-shanghai.
     */
    region?: pulumi.Input<string>;
    /**
     * Security group ID list.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Instance status: 0 creating, 1 process processing, 2 running, 3 instance not initialized, -1 instance isolated, 4
     * instance initializing, 5 instance deleting, 6 instance restarting, 7 data migration.
     */
    status?: pulumi.Input<number>;
    /**
     * Description of the current running state of the instance.
     */
    statusDesc?: pulumi.Input<string>;
    /**
     * Storage size, unit: GB. You can query instance specifications through DescribeDBInstanceSpecs to obtain the lower and
     * upper limits of disk specifications corresponding to different memory sizes.
     */
    storage?: pulumi.Input<number>;
    /**
     * Virtual private network subnet ID, required when VpcId is not empty.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * tag list.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * TDSQL version information.
     */
    tdsqlVersion?: pulumi.Input<string>;
    /**
     * The account to which the instance belongs.
     */
    uin?: pulumi.Input<string>;
    /**
     * The last update time of the instance in the format of 2006-01-02 15:04:05.
     */
    updateTime?: pulumi.Input<string>;
    /**
     * Intranet IP address.
     */
    vip?: pulumi.Input<string>;
    /**
     * Intranet IPv6.
     */
    vipv6?: pulumi.Input<string>;
    /**
     * A list of voucher IDs. Currently, only one voucher can be specified.
     */
    voucherIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Virtual private network ID, if not passed, it means that it is created as a basic network.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * Intranet port.
     */
    vport?: pulumi.Input<number>;
    /**
     * The domain name accessed from the external network, which can be resolved by the public network.
     */
    wanDomain?: pulumi.Input<string>;
    /**
     * Internet port.
     */
    wanPort?: pulumi.Input<number>;
    /**
     * Internet IPv6 port.
     */
    wanPortIpv6?: pulumi.Input<number>;
    /**
     * External network status, 0-unopened; 1-opened; 2-closed; 3-opening.
     */
    wanStatus?: pulumi.Input<number>;
    /**
     * Internet IPv6 status.
     */
    wanStatusIpv6?: pulumi.Input<number>;
    /**
     * Extranet IP address, accessible from the public network.
     */
    wanVip?: pulumi.Input<string>;
    /**
     * Internet IPv6.
     */
    wanVipv6?: pulumi.Input<string>;
    /**
     * Instance node availability zone distribution, up to two availability zones can be filled. When the shard specification
     * is one master and two slaves, two of the nodes are in the first availability zone.
     */
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a Instance resource.
 */
export interface InstanceArgs {
    /**
     * Automatic renewal flag, 1: automatic renewal, 2: no automatic renewal.
     */
    autoRenewFlag?: pulumi.Input<number>;
    /**
     * Whether to automatically use the voucher for payment, the default is not used.
     */
    autoVoucher?: pulumi.Input<boolean>;
    /**
     * Database engine version, currently available: 8.0.18, 10.1.9, 5.7.17. If not passed, the default is Percona 5.7.17.
     */
    dbVersionId?: pulumi.Input<string>;
    /**
     * DCN source instance ID.
     */
    dcnInstanceId?: pulumi.Input<string>;
    /**
     * DCN source region.
     */
    dcnRegion?: pulumi.Input<string>;
    /**
     * Parameter list. The optional values of this interface are: character_set_server (character set, required) enum:
     * utf8,latin1,gbk,utf8mb4,gb18030, lower_case_table_names (table name case sensitive, required, 0 - sensitive; 1 -
     * insensitive), innodb_page_size (innodb data page, Default 16K), sync_mode (sync mode: 0 - asynchronous; 1 - strong
     * synchronous; 2 - strong synchronous can degenerate. The default is strong synchronous can degenerate).
     */
    initParams?: pulumi.Input<pulumi.Input<inputs.Mariadb.InstanceInitParam>[]>;
    /**
     * Instance name, you can set the name of the instance independently through this field.
     */
    instanceName?: pulumi.Input<string>;
    /**
     * Whether IPv6 is supported.
     */
    ipv6Flag?: pulumi.Input<number>;
    /**
     * Memory size, unit: GB, can be obtained by querying instance specifications through DescribeDBInstanceSpecs.
     */
    memory: pulumi.Input<number>;
    /**
     * Number of nodes, 2 is one master and one slave, 3 is one master and two slaves.
     */
    nodeCount: pulumi.Input<number>;
    /**
     * The duration of the purchase, unit: month.
     */
    period?: pulumi.Input<number>;
    /**
     * Project ID, which can be obtained by viewing the project list, if not passed, it will be associated with the default
     * project.
     */
    projectId?: pulumi.Input<number>;
    /**
     * Security group ID list.
     */
    securityGroupIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Storage size, unit: GB. You can query instance specifications through DescribeDBInstanceSpecs to obtain the lower and
     * upper limits of disk specifications corresponding to different memory sizes.
     */
    storage: pulumi.Input<number>;
    /**
     * Virtual private network subnet ID, required when VpcId is not empty.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * tag list.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Intranet IP address.
     */
    vip?: pulumi.Input<string>;
    /**
     * A list of voucher IDs. Currently, only one voucher can be specified.
     */
    voucherIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Virtual private network ID, if not passed, it means that it is created as a basic network.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * Instance node availability zone distribution, up to two availability zones can be filled. When the shard specification
     * is one master and two slaves, two of the nodes are in the first availability zone.
     */
    zones: pulumi.Input<pulumi.Input<string>[]>;
}
