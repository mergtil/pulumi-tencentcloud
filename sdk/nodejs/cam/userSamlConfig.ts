// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class UserSamlConfig extends pulumi.CustomResource {
    /**
     * Get an existing UserSamlConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserSamlConfigState, opts?: pulumi.CustomResourceOptions): UserSamlConfig {
        return new UserSamlConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Cam/userSamlConfig:UserSamlConfig';

    /**
     * Returns true if the given object is an instance of UserSamlConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is UserSamlConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === UserSamlConfig.__pulumiType;
    }

    /**
     * The path used to save the samlMetadat file.
     */
    public readonly metadataDocumentFile!: pulumi.Output<string | undefined>;
    /**
     * SAML metadata document, xml format, support string content or file path.
     */
    public readonly samlMetadataDocument!: pulumi.Output<string>;
    /**
     * Status: `0`: not set, `11`: enabled, `2`: disabled.
     */
    public /*out*/ readonly status!: pulumi.Output<number>;

    /**
     * Create a UserSamlConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserSamlConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserSamlConfigArgs | UserSamlConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UserSamlConfigState | undefined;
            resourceInputs["metadataDocumentFile"] = state ? state.metadataDocumentFile : undefined;
            resourceInputs["samlMetadataDocument"] = state ? state.samlMetadataDocument : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as UserSamlConfigArgs | undefined;
            if ((!args || args.samlMetadataDocument === undefined) && !opts.urn) {
                throw new Error("Missing required property 'samlMetadataDocument'");
            }
            resourceInputs["metadataDocumentFile"] = args ? args.metadataDocumentFile : undefined;
            resourceInputs["samlMetadataDocument"] = args ? args.samlMetadataDocument : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(UserSamlConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering UserSamlConfig resources.
 */
export interface UserSamlConfigState {
    /**
     * The path used to save the samlMetadat file.
     */
    metadataDocumentFile?: pulumi.Input<string>;
    /**
     * SAML metadata document, xml format, support string content or file path.
     */
    samlMetadataDocument?: pulumi.Input<string>;
    /**
     * Status: `0`: not set, `11`: enabled, `2`: disabled.
     */
    status?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a UserSamlConfig resource.
 */
export interface UserSamlConfigArgs {
    /**
     * The path used to save the samlMetadat file.
     */
    metadataDocumentFile?: pulumi.Input<string>;
    /**
     * SAML metadata document, xml format, support string content or file path.
     */
    samlMetadataDocument: pulumi.Input<string>;
}
