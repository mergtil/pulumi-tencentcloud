// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { GetGroupMembershipsArgs, GetGroupMembershipsResult, GetGroupMembershipsOutputArgs } from "./getGroupMemberships";
export const getGroupMemberships: typeof import("./getGroupMemberships").getGroupMemberships = null as any;
export const getGroupMembershipsOutput: typeof import("./getGroupMemberships").getGroupMembershipsOutput = null as any;
utilities.lazyLoad(exports, ["getGroupMemberships","getGroupMembershipsOutput"], () => require("./getGroupMemberships"));

export { GetGroupPolicyAttachmentsArgs, GetGroupPolicyAttachmentsResult, GetGroupPolicyAttachmentsOutputArgs } from "./getGroupPolicyAttachments";
export const getGroupPolicyAttachments: typeof import("./getGroupPolicyAttachments").getGroupPolicyAttachments = null as any;
export const getGroupPolicyAttachmentsOutput: typeof import("./getGroupPolicyAttachments").getGroupPolicyAttachmentsOutput = null as any;
utilities.lazyLoad(exports, ["getGroupPolicyAttachments","getGroupPolicyAttachmentsOutput"], () => require("./getGroupPolicyAttachments"));

export { GetGroupsArgs, GetGroupsResult, GetGroupsOutputArgs } from "./getGroups";
export const getGroups: typeof import("./getGroups").getGroups = null as any;
export const getGroupsOutput: typeof import("./getGroups").getGroupsOutput = null as any;
utilities.lazyLoad(exports, ["getGroups","getGroupsOutput"], () => require("./getGroups"));

export { GetPoliciesArgs, GetPoliciesResult, GetPoliciesOutputArgs } from "./getPolicies";
export const getPolicies: typeof import("./getPolicies").getPolicies = null as any;
export const getPoliciesOutput: typeof import("./getPolicies").getPoliciesOutput = null as any;
utilities.lazyLoad(exports, ["getPolicies","getPoliciesOutput"], () => require("./getPolicies"));

export { GetRolePolicyAttachmentsArgs, GetRolePolicyAttachmentsResult, GetRolePolicyAttachmentsOutputArgs } from "./getRolePolicyAttachments";
export const getRolePolicyAttachments: typeof import("./getRolePolicyAttachments").getRolePolicyAttachments = null as any;
export const getRolePolicyAttachmentsOutput: typeof import("./getRolePolicyAttachments").getRolePolicyAttachmentsOutput = null as any;
utilities.lazyLoad(exports, ["getRolePolicyAttachments","getRolePolicyAttachmentsOutput"], () => require("./getRolePolicyAttachments"));

export { GetRolesArgs, GetRolesResult, GetRolesOutputArgs } from "./getRoles";
export const getRoles: typeof import("./getRoles").getRoles = null as any;
export const getRolesOutput: typeof import("./getRoles").getRolesOutput = null as any;
utilities.lazyLoad(exports, ["getRoles","getRolesOutput"], () => require("./getRoles"));

export { GetSamlProvidersArgs, GetSamlProvidersResult, GetSamlProvidersOutputArgs } from "./getSamlProviders";
export const getSamlProviders: typeof import("./getSamlProviders").getSamlProviders = null as any;
export const getSamlProvidersOutput: typeof import("./getSamlProviders").getSamlProvidersOutput = null as any;
utilities.lazyLoad(exports, ["getSamlProviders","getSamlProvidersOutput"], () => require("./getSamlProviders"));

export { GetUserPolicyAttachmentsArgs, GetUserPolicyAttachmentsResult, GetUserPolicyAttachmentsOutputArgs } from "./getUserPolicyAttachments";
export const getUserPolicyAttachments: typeof import("./getUserPolicyAttachments").getUserPolicyAttachments = null as any;
export const getUserPolicyAttachmentsOutput: typeof import("./getUserPolicyAttachments").getUserPolicyAttachmentsOutput = null as any;
utilities.lazyLoad(exports, ["getUserPolicyAttachments","getUserPolicyAttachmentsOutput"], () => require("./getUserPolicyAttachments"));

export { GetUsersArgs, GetUsersResult, GetUsersOutputArgs } from "./getUsers";
export const getUsers: typeof import("./getUsers").getUsers = null as any;
export const getUsersOutput: typeof import("./getUsers").getUsersOutput = null as any;
utilities.lazyLoad(exports, ["getUsers","getUsersOutput"], () => require("./getUsers"));

export { GroupArgs, GroupState } from "./group";
export type Group = import("./group").Group;
export const Group: typeof import("./group").Group = null as any;
utilities.lazyLoad(exports, ["Group"], () => require("./group"));

export { GroupMembershipArgs, GroupMembershipState } from "./groupMembership";
export type GroupMembership = import("./groupMembership").GroupMembership;
export const GroupMembership: typeof import("./groupMembership").GroupMembership = null as any;
utilities.lazyLoad(exports, ["GroupMembership"], () => require("./groupMembership"));

export { GroupPolicyAttachmentArgs, GroupPolicyAttachmentState } from "./groupPolicyAttachment";
export type GroupPolicyAttachment = import("./groupPolicyAttachment").GroupPolicyAttachment;
export const GroupPolicyAttachment: typeof import("./groupPolicyAttachment").GroupPolicyAttachment = null as any;
utilities.lazyLoad(exports, ["GroupPolicyAttachment"], () => require("./groupPolicyAttachment"));

export { OidcSsoArgs, OidcSsoState } from "./oidcSso";
export type OidcSso = import("./oidcSso").OidcSso;
export const OidcSso: typeof import("./oidcSso").OidcSso = null as any;
utilities.lazyLoad(exports, ["OidcSso"], () => require("./oidcSso"));

export { PolicyArgs, PolicyState } from "./policy";
export type Policy = import("./policy").Policy;
export const Policy: typeof import("./policy").Policy = null as any;
utilities.lazyLoad(exports, ["Policy"], () => require("./policy"));

export { PolicyByNameArgs, PolicyByNameState } from "./policyByName";
export type PolicyByName = import("./policyByName").PolicyByName;
export const PolicyByName: typeof import("./policyByName").PolicyByName = null as any;
utilities.lazyLoad(exports, ["PolicyByName"], () => require("./policyByName"));

export { RoleArgs, RoleState } from "./role";
export type Role = import("./role").Role;
export const Role: typeof import("./role").Role = null as any;
utilities.lazyLoad(exports, ["Role"], () => require("./role"));

export { RoleByNameArgs, RoleByNameState } from "./roleByName";
export type RoleByName = import("./roleByName").RoleByName;
export const RoleByName: typeof import("./roleByName").RoleByName = null as any;
utilities.lazyLoad(exports, ["RoleByName"], () => require("./roleByName"));

export { RolePolicyAttachmentArgs, RolePolicyAttachmentState } from "./rolePolicyAttachment";
export type RolePolicyAttachment = import("./rolePolicyAttachment").RolePolicyAttachment;
export const RolePolicyAttachment: typeof import("./rolePolicyAttachment").RolePolicyAttachment = null as any;
utilities.lazyLoad(exports, ["RolePolicyAttachment"], () => require("./rolePolicyAttachment"));

export { RolePolicyAttachmentByNameArgs, RolePolicyAttachmentByNameState } from "./rolePolicyAttachmentByName";
export type RolePolicyAttachmentByName = import("./rolePolicyAttachmentByName").RolePolicyAttachmentByName;
export const RolePolicyAttachmentByName: typeof import("./rolePolicyAttachmentByName").RolePolicyAttachmentByName = null as any;
utilities.lazyLoad(exports, ["RolePolicyAttachmentByName"], () => require("./rolePolicyAttachmentByName"));

export { RoleSsoArgs, RoleSsoState } from "./roleSso";
export type RoleSso = import("./roleSso").RoleSso;
export const RoleSso: typeof import("./roleSso").RoleSso = null as any;
utilities.lazyLoad(exports, ["RoleSso"], () => require("./roleSso"));

export { SamlProviderArgs, SamlProviderState } from "./samlProvider";
export type SamlProvider = import("./samlProvider").SamlProvider;
export const SamlProvider: typeof import("./samlProvider").SamlProvider = null as any;
utilities.lazyLoad(exports, ["SamlProvider"], () => require("./samlProvider"));

export { ServiceLinkedRoleArgs, ServiceLinkedRoleState } from "./serviceLinkedRole";
export type ServiceLinkedRole = import("./serviceLinkedRole").ServiceLinkedRole;
export const ServiceLinkedRole: typeof import("./serviceLinkedRole").ServiceLinkedRole = null as any;
utilities.lazyLoad(exports, ["ServiceLinkedRole"], () => require("./serviceLinkedRole"));

export { UserArgs, UserState } from "./user";
export type User = import("./user").User;
export const User: typeof import("./user").User = null as any;
utilities.lazyLoad(exports, ["User"], () => require("./user"));

export { UserPolicyAttachmentArgs, UserPolicyAttachmentState } from "./userPolicyAttachment";
export type UserPolicyAttachment = import("./userPolicyAttachment").UserPolicyAttachment;
export const UserPolicyAttachment: typeof import("./userPolicyAttachment").UserPolicyAttachment = null as any;
utilities.lazyLoad(exports, ["UserPolicyAttachment"], () => require("./userPolicyAttachment"));

export { UserSamlConfigArgs, UserSamlConfigState } from "./userSamlConfig";
export type UserSamlConfig = import("./userSamlConfig").UserSamlConfig;
export const UserSamlConfig: typeof import("./userSamlConfig").UserSamlConfig = null as any;
utilities.lazyLoad(exports, ["UserSamlConfig"], () => require("./userSamlConfig"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "tencentcloud:Cam/group:Group":
                return new Group(name, <any>undefined, { urn })
            case "tencentcloud:Cam/groupMembership:GroupMembership":
                return new GroupMembership(name, <any>undefined, { urn })
            case "tencentcloud:Cam/groupPolicyAttachment:GroupPolicyAttachment":
                return new GroupPolicyAttachment(name, <any>undefined, { urn })
            case "tencentcloud:Cam/oidcSso:OidcSso":
                return new OidcSso(name, <any>undefined, { urn })
            case "tencentcloud:Cam/policy:Policy":
                return new Policy(name, <any>undefined, { urn })
            case "tencentcloud:Cam/policyByName:PolicyByName":
                return new PolicyByName(name, <any>undefined, { urn })
            case "tencentcloud:Cam/role:Role":
                return new Role(name, <any>undefined, { urn })
            case "tencentcloud:Cam/roleByName:RoleByName":
                return new RoleByName(name, <any>undefined, { urn })
            case "tencentcloud:Cam/rolePolicyAttachment:RolePolicyAttachment":
                return new RolePolicyAttachment(name, <any>undefined, { urn })
            case "tencentcloud:Cam/rolePolicyAttachmentByName:RolePolicyAttachmentByName":
                return new RolePolicyAttachmentByName(name, <any>undefined, { urn })
            case "tencentcloud:Cam/roleSso:RoleSso":
                return new RoleSso(name, <any>undefined, { urn })
            case "tencentcloud:Cam/samlProvider:SamlProvider":
                return new SamlProvider(name, <any>undefined, { urn })
            case "tencentcloud:Cam/serviceLinkedRole:ServiceLinkedRole":
                return new ServiceLinkedRole(name, <any>undefined, { urn })
            case "tencentcloud:Cam/user:User":
                return new User(name, <any>undefined, { urn })
            case "tencentcloud:Cam/userPolicyAttachment:UserPolicyAttachment":
                return new UserPolicyAttachment(name, <any>undefined, { urn })
            case "tencentcloud:Cam/userSamlConfig:UserSamlConfig":
                return new UserSamlConfig(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("tencentcloud", "Cam/group", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Cam/groupMembership", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Cam/groupPolicyAttachment", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Cam/oidcSso", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Cam/policy", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Cam/policyByName", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Cam/role", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Cam/roleByName", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Cam/rolePolicyAttachment", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Cam/rolePolicyAttachmentByName", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Cam/roleSso", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Cam/samlProvider", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Cam/serviceLinkedRole", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Cam/user", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Cam/userPolicyAttachment", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Cam/userSamlConfig", _module)
