// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class RoleByName extends pulumi.CustomResource {
    /**
     * Get an existing RoleByName resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RoleByNameState, opts?: pulumi.CustomResourceOptions): RoleByName {
        return new RoleByName(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Cam/roleByName:RoleByName';

    /**
     * Returns true if the given object is an instance of RoleByName.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RoleByName {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RoleByName.__pulumiType;
    }

    /**
     * Indicates whether the CAM role can login or not.
     */
    public readonly consoleLogin!: pulumi.Output<boolean | undefined>;
    /**
     * Create time of the CAM role.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Description of the CAM role.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Document of the CAM role. The syntax refers to [CAM POLICY](https://intl.cloud.tencent.com/document/product/598/10604).
     * There are some notes when using this para in terraform: 1. The elements in json claimed supporting two types as `string`
     * and `array` only support type `array`; 2. Terraform does not support the `root` syntax, when appears, it must be
     * replaced with the uin it stands for.
     */
    public readonly document!: pulumi.Output<string>;
    /**
     * Name of CAM role.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * A list of tags used to associate different resources.
     */
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * The last update time of the CAM role.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;

    /**
     * Create a RoleByName resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RoleByNameArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RoleByNameArgs | RoleByNameState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RoleByNameState | undefined;
            resourceInputs["consoleLogin"] = state ? state.consoleLogin : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["document"] = state ? state.document : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        } else {
            const args = argsOrState as RoleByNameArgs | undefined;
            if ((!args || args.document === undefined) && !opts.urn) {
                throw new Error("Missing required property 'document'");
            }
            resourceInputs["consoleLogin"] = args ? args.consoleLogin : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["document"] = args ? args.document : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RoleByName.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RoleByName resources.
 */
export interface RoleByNameState {
    /**
     * Indicates whether the CAM role can login or not.
     */
    consoleLogin?: pulumi.Input<boolean>;
    /**
     * Create time of the CAM role.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Description of the CAM role.
     */
    description?: pulumi.Input<string>;
    /**
     * Document of the CAM role. The syntax refers to [CAM POLICY](https://intl.cloud.tencent.com/document/product/598/10604).
     * There are some notes when using this para in terraform: 1. The elements in json claimed supporting two types as `string`
     * and `array` only support type `array`; 2. Terraform does not support the `root` syntax, when appears, it must be
     * replaced with the uin it stands for.
     */
    document?: pulumi.Input<string>;
    /**
     * Name of CAM role.
     */
    name?: pulumi.Input<string>;
    /**
     * A list of tags used to associate different resources.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * The last update time of the CAM role.
     */
    updateTime?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RoleByName resource.
 */
export interface RoleByNameArgs {
    /**
     * Indicates whether the CAM role can login or not.
     */
    consoleLogin?: pulumi.Input<boolean>;
    /**
     * Description of the CAM role.
     */
    description?: pulumi.Input<string>;
    /**
     * Document of the CAM role. The syntax refers to [CAM POLICY](https://intl.cloud.tencent.com/document/product/598/10604).
     * There are some notes when using this para in terraform: 1. The elements in json claimed supporting two types as `string`
     * and `array` only support type `array`; 2. Terraform does not support the `root` syntax, when appears, it must be
     * replaced with the uin it stands for.
     */
    document: pulumi.Input<string>;
    /**
     * Name of CAM role.
     */
    name?: pulumi.Input<string>;
    /**
     * A list of tags used to associate different resources.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
}
