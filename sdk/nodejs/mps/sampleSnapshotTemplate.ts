// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class SampleSnapshotTemplate extends pulumi.CustomResource {
    /**
     * Get an existing SampleSnapshotTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SampleSnapshotTemplateState, opts?: pulumi.CustomResourceOptions): SampleSnapshotTemplate {
        return new SampleSnapshotTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Mps/sampleSnapshotTemplate:SampleSnapshotTemplate';

    /**
     * Returns true if the given object is an instance of SampleSnapshotTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SampleSnapshotTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SampleSnapshotTemplate.__pulumiType;
    }

    /**
     * Template description information, length limit: 256 characters.
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * Filling type, when the aspect ratio of the video stream configuration is inconsistent with the aspect ratio of the
     * original video, the processing method for transcoding is filling. Optional filling type:stretch: Stretching, stretching
     * each frame to fill the entire screen, which may cause the transcoded video to be squashed or stretched.black: Leave
     * black, keep the video aspect ratio unchanged, and fill the rest of the edge with black.white: Leave blank, keep the
     * aspect ratio of the video, and fill the rest of the edge with white.gauss: Gaussian blur, keep the aspect ratio of the
     * video unchanged, and use Gaussian blur for the rest of the edge.Default value: black.
     */
    public readonly fillType!: pulumi.Output<string | undefined>;
    /**
     * Image format, the value can be jpg, png, webp. Default is jpg.
     */
    public readonly format!: pulumi.Output<string | undefined>;
    /**
     * The maximum value of the snapshot height (or short side), value range: 0 and [128, 4096], unit: px.When Width and Height
     * are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When Width is
     * not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is specified
     * by the user.Default value: 0.
     */
    public readonly height!: pulumi.Output<number | undefined>;
    /**
     * Sample snapshot template name, length limit: 64 characters.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Adaptive resolution, optional value:open: At this time, Width represents the long side of the video, Height represents
     * the short side of the video.close: At this point, Width represents the width of the video, and Height represents the
     * height of the video.Default value: open.
     */
    public readonly resolutionAdaptive!: pulumi.Output<string | undefined>;
    /**
     * Sampling interval.When SampleType is Percent, specify the percentage of the sampling interval.When SampleType is Time,
     * specify the sampling interval time in seconds.
     */
    public readonly sampleInterval!: pulumi.Output<number>;
    /**
     * Sampling snapshot type, optional value:Percent/Time.
     */
    public readonly sampleType!: pulumi.Output<string>;
    /**
     * The maximum value of the snapshot width (or long side), value range: 0 and [128, 4096], unit: px.When Width and Height
     * are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When Width is
     * not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is specified
     * by the user.Default value: 0.
     */
    public readonly width!: pulumi.Output<number | undefined>;

    /**
     * Create a SampleSnapshotTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SampleSnapshotTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SampleSnapshotTemplateArgs | SampleSnapshotTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SampleSnapshotTemplateState | undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["fillType"] = state ? state.fillType : undefined;
            resourceInputs["format"] = state ? state.format : undefined;
            resourceInputs["height"] = state ? state.height : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resolutionAdaptive"] = state ? state.resolutionAdaptive : undefined;
            resourceInputs["sampleInterval"] = state ? state.sampleInterval : undefined;
            resourceInputs["sampleType"] = state ? state.sampleType : undefined;
            resourceInputs["width"] = state ? state.width : undefined;
        } else {
            const args = argsOrState as SampleSnapshotTemplateArgs | undefined;
            if ((!args || args.sampleInterval === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sampleInterval'");
            }
            if ((!args || args.sampleType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sampleType'");
            }
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["fillType"] = args ? args.fillType : undefined;
            resourceInputs["format"] = args ? args.format : undefined;
            resourceInputs["height"] = args ? args.height : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resolutionAdaptive"] = args ? args.resolutionAdaptive : undefined;
            resourceInputs["sampleInterval"] = args ? args.sampleInterval : undefined;
            resourceInputs["sampleType"] = args ? args.sampleType : undefined;
            resourceInputs["width"] = args ? args.width : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SampleSnapshotTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SampleSnapshotTemplate resources.
 */
export interface SampleSnapshotTemplateState {
    /**
     * Template description information, length limit: 256 characters.
     */
    comment?: pulumi.Input<string>;
    /**
     * Filling type, when the aspect ratio of the video stream configuration is inconsistent with the aspect ratio of the
     * original video, the processing method for transcoding is filling. Optional filling type:stretch: Stretching, stretching
     * each frame to fill the entire screen, which may cause the transcoded video to be squashed or stretched.black: Leave
     * black, keep the video aspect ratio unchanged, and fill the rest of the edge with black.white: Leave blank, keep the
     * aspect ratio of the video, and fill the rest of the edge with white.gauss: Gaussian blur, keep the aspect ratio of the
     * video unchanged, and use Gaussian blur for the rest of the edge.Default value: black.
     */
    fillType?: pulumi.Input<string>;
    /**
     * Image format, the value can be jpg, png, webp. Default is jpg.
     */
    format?: pulumi.Input<string>;
    /**
     * The maximum value of the snapshot height (or short side), value range: 0 and [128, 4096], unit: px.When Width and Height
     * are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When Width is
     * not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is specified
     * by the user.Default value: 0.
     */
    height?: pulumi.Input<number>;
    /**
     * Sample snapshot template name, length limit: 64 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * Adaptive resolution, optional value:open: At this time, Width represents the long side of the video, Height represents
     * the short side of the video.close: At this point, Width represents the width of the video, and Height represents the
     * height of the video.Default value: open.
     */
    resolutionAdaptive?: pulumi.Input<string>;
    /**
     * Sampling interval.When SampleType is Percent, specify the percentage of the sampling interval.When SampleType is Time,
     * specify the sampling interval time in seconds.
     */
    sampleInterval?: pulumi.Input<number>;
    /**
     * Sampling snapshot type, optional value:Percent/Time.
     */
    sampleType?: pulumi.Input<string>;
    /**
     * The maximum value of the snapshot width (or long side), value range: 0 and [128, 4096], unit: px.When Width and Height
     * are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When Width is
     * not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is specified
     * by the user.Default value: 0.
     */
    width?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SampleSnapshotTemplate resource.
 */
export interface SampleSnapshotTemplateArgs {
    /**
     * Template description information, length limit: 256 characters.
     */
    comment?: pulumi.Input<string>;
    /**
     * Filling type, when the aspect ratio of the video stream configuration is inconsistent with the aspect ratio of the
     * original video, the processing method for transcoding is filling. Optional filling type:stretch: Stretching, stretching
     * each frame to fill the entire screen, which may cause the transcoded video to be squashed or stretched.black: Leave
     * black, keep the video aspect ratio unchanged, and fill the rest of the edge with black.white: Leave blank, keep the
     * aspect ratio of the video, and fill the rest of the edge with white.gauss: Gaussian blur, keep the aspect ratio of the
     * video unchanged, and use Gaussian blur for the rest of the edge.Default value: black.
     */
    fillType?: pulumi.Input<string>;
    /**
     * Image format, the value can be jpg, png, webp. Default is jpg.
     */
    format?: pulumi.Input<string>;
    /**
     * The maximum value of the snapshot height (or short side), value range: 0 and [128, 4096], unit: px.When Width and Height
     * are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When Width is
     * not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is specified
     * by the user.Default value: 0.
     */
    height?: pulumi.Input<number>;
    /**
     * Sample snapshot template name, length limit: 64 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * Adaptive resolution, optional value:open: At this time, Width represents the long side of the video, Height represents
     * the short side of the video.close: At this point, Width represents the width of the video, and Height represents the
     * height of the video.Default value: open.
     */
    resolutionAdaptive?: pulumi.Input<string>;
    /**
     * Sampling interval.When SampleType is Percent, specify the percentage of the sampling interval.When SampleType is Time,
     * specify the sampling interval time in seconds.
     */
    sampleInterval: pulumi.Input<number>;
    /**
     * Sampling snapshot type, optional value:Percent/Time.
     */
    sampleType: pulumi.Input<string>;
    /**
     * The maximum value of the snapshot width (or long side), value range: 0 and [128, 4096], unit: px.When Width and Height
     * are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When Width is
     * not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is specified
     * by the user.Default value: 0.
     */
    width?: pulumi.Input<number>;
}
