// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class AnimatedGraphicsTemplate extends pulumi.CustomResource {
    /**
     * Get an existing AnimatedGraphicsTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AnimatedGraphicsTemplateState, opts?: pulumi.CustomResourceOptions): AnimatedGraphicsTemplate {
        return new AnimatedGraphicsTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Mps/animatedGraphicsTemplate:AnimatedGraphicsTemplate';

    /**
     * Returns true if the given object is an instance of AnimatedGraphicsTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AnimatedGraphicsTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AnimatedGraphicsTemplate.__pulumiType;
    }

    /**
     * Template description information, length limit: 256 characters.
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * Animation format, the values are gif and webp. Default is gif.
     */
    public readonly format!: pulumi.Output<string | undefined>;
    /**
     * Frame rate, value range: [1, 30], unit: Hz.
     */
    public readonly fps!: pulumi.Output<number>;
    /**
     * The maximum value of the animation height (or short side), value range: 0 and [128, 4096], unit: px.When Width and
     * Height are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When
     * Width is not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is
     * specified by the user.Default value: 0.
     */
    public readonly height!: pulumi.Output<number | undefined>;
    /**
     * Rotation diagram template name, length limit: 64 characters.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Image quality, value range: [1, 100], default value is 75.
     */
    public readonly quality!: pulumi.Output<number | undefined>;
    /**
     * Adaptive resolution, optional value:open: At this time, Width represents the long side of the video, Height represents
     * the short side of the video.close: At this point, Width represents the width of the video, and Height represents the
     * height of the video.Default value: open.
     */
    public readonly resolutionAdaptive!: pulumi.Output<string | undefined>;
    /**
     * The maximum value of the animation width (or long side), value range: 0 and [128, 4096], unit: px.When Width and Height
     * are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When Width is
     * not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is specified
     * by the user.Default value: 0.
     */
    public readonly width!: pulumi.Output<number | undefined>;

    /**
     * Create a AnimatedGraphicsTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AnimatedGraphicsTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AnimatedGraphicsTemplateArgs | AnimatedGraphicsTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AnimatedGraphicsTemplateState | undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["format"] = state ? state.format : undefined;
            resourceInputs["fps"] = state ? state.fps : undefined;
            resourceInputs["height"] = state ? state.height : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["quality"] = state ? state.quality : undefined;
            resourceInputs["resolutionAdaptive"] = state ? state.resolutionAdaptive : undefined;
            resourceInputs["width"] = state ? state.width : undefined;
        } else {
            const args = argsOrState as AnimatedGraphicsTemplateArgs | undefined;
            if ((!args || args.fps === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fps'");
            }
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["format"] = args ? args.format : undefined;
            resourceInputs["fps"] = args ? args.fps : undefined;
            resourceInputs["height"] = args ? args.height : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["quality"] = args ? args.quality : undefined;
            resourceInputs["resolutionAdaptive"] = args ? args.resolutionAdaptive : undefined;
            resourceInputs["width"] = args ? args.width : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AnimatedGraphicsTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AnimatedGraphicsTemplate resources.
 */
export interface AnimatedGraphicsTemplateState {
    /**
     * Template description information, length limit: 256 characters.
     */
    comment?: pulumi.Input<string>;
    /**
     * Animation format, the values are gif and webp. Default is gif.
     */
    format?: pulumi.Input<string>;
    /**
     * Frame rate, value range: [1, 30], unit: Hz.
     */
    fps?: pulumi.Input<number>;
    /**
     * The maximum value of the animation height (or short side), value range: 0 and [128, 4096], unit: px.When Width and
     * Height are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When
     * Width is not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is
     * specified by the user.Default value: 0.
     */
    height?: pulumi.Input<number>;
    /**
     * Rotation diagram template name, length limit: 64 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * Image quality, value range: [1, 100], default value is 75.
     */
    quality?: pulumi.Input<number>;
    /**
     * Adaptive resolution, optional value:open: At this time, Width represents the long side of the video, Height represents
     * the short side of the video.close: At this point, Width represents the width of the video, and Height represents the
     * height of the video.Default value: open.
     */
    resolutionAdaptive?: pulumi.Input<string>;
    /**
     * The maximum value of the animation width (or long side), value range: 0 and [128, 4096], unit: px.When Width and Height
     * are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When Width is
     * not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is specified
     * by the user.Default value: 0.
     */
    width?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a AnimatedGraphicsTemplate resource.
 */
export interface AnimatedGraphicsTemplateArgs {
    /**
     * Template description information, length limit: 256 characters.
     */
    comment?: pulumi.Input<string>;
    /**
     * Animation format, the values are gif and webp. Default is gif.
     */
    format?: pulumi.Input<string>;
    /**
     * Frame rate, value range: [1, 30], unit: Hz.
     */
    fps: pulumi.Input<number>;
    /**
     * The maximum value of the animation height (or short side), value range: 0 and [128, 4096], unit: px.When Width and
     * Height are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When
     * Width is not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is
     * specified by the user.Default value: 0.
     */
    height?: pulumi.Input<number>;
    /**
     * Rotation diagram template name, length limit: 64 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * Image quality, value range: [1, 100], default value is 75.
     */
    quality?: pulumi.Input<number>;
    /**
     * Adaptive resolution, optional value:open: At this time, Width represents the long side of the video, Height represents
     * the short side of the video.close: At this point, Width represents the width of the video, and Height represents the
     * height of the video.Default value: open.
     */
    resolutionAdaptive?: pulumi.Input<string>;
    /**
     * The maximum value of the animation width (or long side), value range: 0 and [128, 4096], unit: px.When Width and Height
     * are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When Width is
     * not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is specified
     * by the user.Default value: 0.
     */
    width?: pulumi.Input<number>;
}
