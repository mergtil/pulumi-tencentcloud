// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class AiAnalysisTemplate extends pulumi.CustomResource {
    /**
     * Get an existing AiAnalysisTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AiAnalysisTemplateState, opts?: pulumi.CustomResourceOptions): AiAnalysisTemplate {
        return new AiAnalysisTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Mps/aiAnalysisTemplate:AiAnalysisTemplate';

    /**
     * Returns true if the given object is an instance of AiAnalysisTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AiAnalysisTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AiAnalysisTemplate.__pulumiType;
    }

    /**
     * Ai classification task control parameters.
     */
    public readonly classificationConfigure!: pulumi.Output<outputs.Mps.AiAnalysisTemplateClassificationConfigure | undefined>;
    /**
     * Ai analysis template description information, length limit: 256 characters.
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * Ai cover task control parameters.
     */
    public readonly coverConfigure!: pulumi.Output<outputs.Mps.AiAnalysisTemplateCoverConfigure | undefined>;
    /**
     * Ai frame tag task control parameters.
     */
    public readonly frameTagConfigure!: pulumi.Output<outputs.Mps.AiAnalysisTemplateFrameTagConfigure | undefined>;
    /**
     * Ai analysis template name, length limit: 64 characters.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Ai tag task control parameters.
     */
    public readonly tagConfigure!: pulumi.Output<outputs.Mps.AiAnalysisTemplateTagConfigure | undefined>;

    /**
     * Create a AiAnalysisTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: AiAnalysisTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AiAnalysisTemplateArgs | AiAnalysisTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AiAnalysisTemplateState | undefined;
            resourceInputs["classificationConfigure"] = state ? state.classificationConfigure : undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["coverConfigure"] = state ? state.coverConfigure : undefined;
            resourceInputs["frameTagConfigure"] = state ? state.frameTagConfigure : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["tagConfigure"] = state ? state.tagConfigure : undefined;
        } else {
            const args = argsOrState as AiAnalysisTemplateArgs | undefined;
            resourceInputs["classificationConfigure"] = args ? args.classificationConfigure : undefined;
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["coverConfigure"] = args ? args.coverConfigure : undefined;
            resourceInputs["frameTagConfigure"] = args ? args.frameTagConfigure : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tagConfigure"] = args ? args.tagConfigure : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AiAnalysisTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AiAnalysisTemplate resources.
 */
export interface AiAnalysisTemplateState {
    /**
     * Ai classification task control parameters.
     */
    classificationConfigure?: pulumi.Input<inputs.Mps.AiAnalysisTemplateClassificationConfigure>;
    /**
     * Ai analysis template description information, length limit: 256 characters.
     */
    comment?: pulumi.Input<string>;
    /**
     * Ai cover task control parameters.
     */
    coverConfigure?: pulumi.Input<inputs.Mps.AiAnalysisTemplateCoverConfigure>;
    /**
     * Ai frame tag task control parameters.
     */
    frameTagConfigure?: pulumi.Input<inputs.Mps.AiAnalysisTemplateFrameTagConfigure>;
    /**
     * Ai analysis template name, length limit: 64 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * Ai tag task control parameters.
     */
    tagConfigure?: pulumi.Input<inputs.Mps.AiAnalysisTemplateTagConfigure>;
}

/**
 * The set of arguments for constructing a AiAnalysisTemplate resource.
 */
export interface AiAnalysisTemplateArgs {
    /**
     * Ai classification task control parameters.
     */
    classificationConfigure?: pulumi.Input<inputs.Mps.AiAnalysisTemplateClassificationConfigure>;
    /**
     * Ai analysis template description information, length limit: 256 characters.
     */
    comment?: pulumi.Input<string>;
    /**
     * Ai cover task control parameters.
     */
    coverConfigure?: pulumi.Input<inputs.Mps.AiAnalysisTemplateCoverConfigure>;
    /**
     * Ai frame tag task control parameters.
     */
    frameTagConfigure?: pulumi.Input<inputs.Mps.AiAnalysisTemplateFrameTagConfigure>;
    /**
     * Ai analysis template name, length limit: 64 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * Ai tag task control parameters.
     */
    tagConfigure?: pulumi.Input<inputs.Mps.AiAnalysisTemplateTagConfigure>;
}
