// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class Attachment extends pulumi.CustomResource {
    /**
     * Get an existing Attachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AttachmentState, opts?: pulumi.CustomResourceOptions): Attachment {
        return new Attachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Ccn/attachment:Attachment';

    /**
     * Returns true if the given object is an instance of Attachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Attachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Attachment.__pulumiType;
    }

    /**
     * Time of attaching.
     */
    public /*out*/ readonly attachedTime!: pulumi.Output<string>;
    /**
     * ID of the CCN.
     */
    public readonly ccnId!: pulumi.Output<string>;
    /**
     * Uin of the ccn attached. Default is ``, which means the uin of this account. This parameter is used with case when
     * attaching ccn of other account to the instance of this account. For now only support instance type `VPC`.
     */
    public readonly ccnUin!: pulumi.Output<string>;
    /**
     * A network address block of the instance that is attached.
     */
    public /*out*/ readonly cidrBlocks!: pulumi.Output<string[]>;
    /**
     * Remark of attachment.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * ID of instance is attached.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * The region that the instance locates at.
     */
    public readonly instanceRegion!: pulumi.Output<string>;
    /**
     * Type of attached instance network, and available values include `VPC`, `DIRECTCONNECT`, `BMVPC` and `VPNGW`. Note:
     * `VPNGW` type is only for whitelist customer now.
     */
    public readonly instanceType!: pulumi.Output<string>;
    /**
     * Route id list.
     */
    public /*out*/ readonly routeIds!: pulumi.Output<string[]>;
    /**
     * States of instance is attached. Valid values: `PENDING`, `ACTIVE`, `EXPIRED`, `REJECTED`, `DELETED`, `FAILED`,
     * `ATTACHING`, `DETACHING` and `DETACHFAILED`. `FAILED` means asynchronous forced disassociation after 2 hours.
     * `DETACHFAILED` means asynchronous forced disassociation after 2 hours.
     */
    public /*out*/ readonly state!: pulumi.Output<string>;

    /**
     * Create a Attachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AttachmentArgs | AttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AttachmentState | undefined;
            resourceInputs["attachedTime"] = state ? state.attachedTime : undefined;
            resourceInputs["ccnId"] = state ? state.ccnId : undefined;
            resourceInputs["ccnUin"] = state ? state.ccnUin : undefined;
            resourceInputs["cidrBlocks"] = state ? state.cidrBlocks : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["instanceRegion"] = state ? state.instanceRegion : undefined;
            resourceInputs["instanceType"] = state ? state.instanceType : undefined;
            resourceInputs["routeIds"] = state ? state.routeIds : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
        } else {
            const args = argsOrState as AttachmentArgs | undefined;
            if ((!args || args.ccnId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ccnId'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.instanceRegion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceRegion'");
            }
            if ((!args || args.instanceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceType'");
            }
            resourceInputs["ccnId"] = args ? args.ccnId : undefined;
            resourceInputs["ccnUin"] = args ? args.ccnUin : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["instanceRegion"] = args ? args.instanceRegion : undefined;
            resourceInputs["instanceType"] = args ? args.instanceType : undefined;
            resourceInputs["attachedTime"] = undefined /*out*/;
            resourceInputs["cidrBlocks"] = undefined /*out*/;
            resourceInputs["routeIds"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Attachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Attachment resources.
 */
export interface AttachmentState {
    /**
     * Time of attaching.
     */
    attachedTime?: pulumi.Input<string>;
    /**
     * ID of the CCN.
     */
    ccnId?: pulumi.Input<string>;
    /**
     * Uin of the ccn attached. Default is ``, which means the uin of this account. This parameter is used with case when
     * attaching ccn of other account to the instance of this account. For now only support instance type `VPC`.
     */
    ccnUin?: pulumi.Input<string>;
    /**
     * A network address block of the instance that is attached.
     */
    cidrBlocks?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Remark of attachment.
     */
    description?: pulumi.Input<string>;
    /**
     * ID of instance is attached.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * The region that the instance locates at.
     */
    instanceRegion?: pulumi.Input<string>;
    /**
     * Type of attached instance network, and available values include `VPC`, `DIRECTCONNECT`, `BMVPC` and `VPNGW`. Note:
     * `VPNGW` type is only for whitelist customer now.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * Route id list.
     */
    routeIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * States of instance is attached. Valid values: `PENDING`, `ACTIVE`, `EXPIRED`, `REJECTED`, `DELETED`, `FAILED`,
     * `ATTACHING`, `DETACHING` and `DETACHFAILED`. `FAILED` means asynchronous forced disassociation after 2 hours.
     * `DETACHFAILED` means asynchronous forced disassociation after 2 hours.
     */
    state?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Attachment resource.
 */
export interface AttachmentArgs {
    /**
     * ID of the CCN.
     */
    ccnId: pulumi.Input<string>;
    /**
     * Uin of the ccn attached. Default is ``, which means the uin of this account. This parameter is used with case when
     * attaching ccn of other account to the instance of this account. For now only support instance type `VPC`.
     */
    ccnUin?: pulumi.Input<string>;
    /**
     * Remark of attachment.
     */
    description?: pulumi.Input<string>;
    /**
     * ID of instance is attached.
     */
    instanceId: pulumi.Input<string>;
    /**
     * The region that the instance locates at.
     */
    instanceRegion: pulumi.Input<string>;
    /**
     * Type of attached instance network, and available values include `VPC`, `DIRECTCONNECT`, `BMVPC` and `VPNGW`. Note:
     * `VPNGW` type is only for whitelist customer now.
     */
    instanceType: pulumi.Input<string>;
}
