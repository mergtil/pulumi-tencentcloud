// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getCrossBorderFlowMonitor(args: GetCrossBorderFlowMonitorArgs, opts?: pulumi.InvokeOptions): Promise<GetCrossBorderFlowMonitorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Ccn/getCrossBorderFlowMonitor:getCrossBorderFlowMonitor", {
        "ccnId": args.ccnId,
        "ccnUin": args.ccnUin,
        "destinationRegion": args.destinationRegion,
        "endTime": args.endTime,
        "period": args.period,
        "resultOutputFile": args.resultOutputFile,
        "sourceRegion": args.sourceRegion,
        "startTime": args.startTime,
    }, opts);
}

/**
 * A collection of arguments for invoking getCrossBorderFlowMonitor.
 */
export interface GetCrossBorderFlowMonitorArgs {
    ccnId: string;
    ccnUin: string;
    destinationRegion: string;
    endTime: string;
    period: number;
    resultOutputFile?: string;
    sourceRegion: string;
    startTime: string;
}

/**
 * A collection of values returned by getCrossBorderFlowMonitor.
 */
export interface GetCrossBorderFlowMonitorResult {
    readonly ccnId: string;
    readonly ccnUin: string;
    readonly crossBorderFlowMonitorDatas: outputs.Ccn.GetCrossBorderFlowMonitorCrossBorderFlowMonitorData[];
    readonly destinationRegion: string;
    readonly endTime: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly period: number;
    readonly resultOutputFile?: string;
    readonly sourceRegion: string;
    readonly startTime: string;
}
export function getCrossBorderFlowMonitorOutput(args: GetCrossBorderFlowMonitorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCrossBorderFlowMonitorResult> {
    return pulumi.output(args).apply((a: any) => getCrossBorderFlowMonitor(a, opts))
}

/**
 * A collection of arguments for invoking getCrossBorderFlowMonitor.
 */
export interface GetCrossBorderFlowMonitorOutputArgs {
    ccnId: pulumi.Input<string>;
    ccnUin: pulumi.Input<string>;
    destinationRegion: pulumi.Input<string>;
    endTime: pulumi.Input<string>;
    period: pulumi.Input<number>;
    resultOutputFile?: pulumi.Input<string>;
    sourceRegion: pulumi.Input<string>;
    startTime: pulumi.Input<string>;
}
