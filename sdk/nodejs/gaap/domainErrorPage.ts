// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class DomainErrorPage extends pulumi.CustomResource {
    /**
     * Get an existing DomainErrorPage resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DomainErrorPageState, opts?: pulumi.CustomResourceOptions): DomainErrorPage {
        return new DomainErrorPage(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Gaap/domainErrorPage:DomainErrorPage';

    /**
     * Returns true if the given object is an instance of DomainErrorPage.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DomainErrorPage {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DomainErrorPage.__pulumiType;
    }

    /**
     * New response body.
     */
    public readonly body!: pulumi.Output<string>;
    /**
     * Response headers to be removed.
     */
    public readonly clearHeaders!: pulumi.Output<string[] | undefined>;
    /**
     * HTTP domain.
     */
    public readonly domain!: pulumi.Output<string>;
    /**
     * Original error codes.
     */
    public readonly errorCodes!: pulumi.Output<number[]>;
    /**
     * ID of the layer7 listener.
     */
    public readonly listenerId!: pulumi.Output<string>;
    /**
     * New error code.
     */
    public readonly newErrorCode!: pulumi.Output<number | undefined>;
    /**
     * Response headers to be set.
     */
    public readonly setHeaders!: pulumi.Output<{[key: string]: any} | undefined>;

    /**
     * Create a DomainErrorPage resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DomainErrorPageArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DomainErrorPageArgs | DomainErrorPageState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DomainErrorPageState | undefined;
            resourceInputs["body"] = state ? state.body : undefined;
            resourceInputs["clearHeaders"] = state ? state.clearHeaders : undefined;
            resourceInputs["domain"] = state ? state.domain : undefined;
            resourceInputs["errorCodes"] = state ? state.errorCodes : undefined;
            resourceInputs["listenerId"] = state ? state.listenerId : undefined;
            resourceInputs["newErrorCode"] = state ? state.newErrorCode : undefined;
            resourceInputs["setHeaders"] = state ? state.setHeaders : undefined;
        } else {
            const args = argsOrState as DomainErrorPageArgs | undefined;
            if ((!args || args.body === undefined) && !opts.urn) {
                throw new Error("Missing required property 'body'");
            }
            if ((!args || args.domain === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domain'");
            }
            if ((!args || args.errorCodes === undefined) && !opts.urn) {
                throw new Error("Missing required property 'errorCodes'");
            }
            if ((!args || args.listenerId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'listenerId'");
            }
            resourceInputs["body"] = args ? args.body : undefined;
            resourceInputs["clearHeaders"] = args ? args.clearHeaders : undefined;
            resourceInputs["domain"] = args ? args.domain : undefined;
            resourceInputs["errorCodes"] = args ? args.errorCodes : undefined;
            resourceInputs["listenerId"] = args ? args.listenerId : undefined;
            resourceInputs["newErrorCode"] = args ? args.newErrorCode : undefined;
            resourceInputs["setHeaders"] = args ? args.setHeaders : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DomainErrorPage.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DomainErrorPage resources.
 */
export interface DomainErrorPageState {
    /**
     * New response body.
     */
    body?: pulumi.Input<string>;
    /**
     * Response headers to be removed.
     */
    clearHeaders?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * HTTP domain.
     */
    domain?: pulumi.Input<string>;
    /**
     * Original error codes.
     */
    errorCodes?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * ID of the layer7 listener.
     */
    listenerId?: pulumi.Input<string>;
    /**
     * New error code.
     */
    newErrorCode?: pulumi.Input<number>;
    /**
     * Response headers to be set.
     */
    setHeaders?: pulumi.Input<{[key: string]: any}>;
}

/**
 * The set of arguments for constructing a DomainErrorPage resource.
 */
export interface DomainErrorPageArgs {
    /**
     * New response body.
     */
    body: pulumi.Input<string>;
    /**
     * Response headers to be removed.
     */
    clearHeaders?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * HTTP domain.
     */
    domain: pulumi.Input<string>;
    /**
     * Original error codes.
     */
    errorCodes: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * ID of the layer7 listener.
     */
    listenerId: pulumi.Input<string>;
    /**
     * New error code.
     */
    newErrorCode?: pulumi.Input<number>;
    /**
     * Response headers to be set.
     */
    setHeaders?: pulumi.Input<{[key: string]: any}>;
}
