// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class ApiAppAttachment extends pulumi.CustomResource {
    /**
     * Get an existing ApiAppAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApiAppAttachmentState, opts?: pulumi.CustomResourceOptions): ApiAppAttachment {
        return new ApiAppAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:ApiGateway/apiAppAttachment:ApiAppAttachment';

    /**
     * Returns true if the given object is an instance of ApiAppAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApiAppAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApiAppAttachment.__pulumiType;
    }

    /**
     * The unique ID of the application to be bound.
     */
    public readonly apiAppId!: pulumi.Output<string>;
    /**
     * The unique ID of the API to be bound.
     */
    public readonly apiId!: pulumi.Output<string>;
    /**
     * The environment to be bound.
     */
    public readonly environment!: pulumi.Output<string>;
    /**
     * The unique ID of the service to be bound.
     */
    public readonly serviceId!: pulumi.Output<string>;

    /**
     * Create a ApiAppAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApiAppAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApiAppAttachmentArgs | ApiAppAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApiAppAttachmentState | undefined;
            resourceInputs["apiAppId"] = state ? state.apiAppId : undefined;
            resourceInputs["apiId"] = state ? state.apiId : undefined;
            resourceInputs["environment"] = state ? state.environment : undefined;
            resourceInputs["serviceId"] = state ? state.serviceId : undefined;
        } else {
            const args = argsOrState as ApiAppAttachmentArgs | undefined;
            if ((!args || args.apiAppId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiAppId'");
            }
            if ((!args || args.apiId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiId'");
            }
            if ((!args || args.environment === undefined) && !opts.urn) {
                throw new Error("Missing required property 'environment'");
            }
            if ((!args || args.serviceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceId'");
            }
            resourceInputs["apiAppId"] = args ? args.apiAppId : undefined;
            resourceInputs["apiId"] = args ? args.apiId : undefined;
            resourceInputs["environment"] = args ? args.environment : undefined;
            resourceInputs["serviceId"] = args ? args.serviceId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApiAppAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApiAppAttachment resources.
 */
export interface ApiAppAttachmentState {
    /**
     * The unique ID of the application to be bound.
     */
    apiAppId?: pulumi.Input<string>;
    /**
     * The unique ID of the API to be bound.
     */
    apiId?: pulumi.Input<string>;
    /**
     * The environment to be bound.
     */
    environment?: pulumi.Input<string>;
    /**
     * The unique ID of the service to be bound.
     */
    serviceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApiAppAttachment resource.
 */
export interface ApiAppAttachmentArgs {
    /**
     * The unique ID of the application to be bound.
     */
    apiAppId: pulumi.Input<string>;
    /**
     * The unique ID of the API to be bound.
     */
    apiId: pulumi.Input<string>;
    /**
     * The environment to be bound.
     */
    environment: pulumi.Input<string>;
    /**
     * The unique ID of the service to be bound.
     */
    serviceId: pulumi.Input<string>;
}
