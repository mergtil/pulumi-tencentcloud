// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getPlugins(args: GetPluginsArgs, opts?: pulumi.InvokeOptions): Promise<GetPluginsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:ApiGateway/getPlugins:getPlugins", {
        "environmentName": args.environmentName,
        "pluginId": args.pluginId,
        "resultOutputFile": args.resultOutputFile,
        "serviceId": args.serviceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getPlugins.
 */
export interface GetPluginsArgs {
    environmentName: string;
    pluginId: string;
    resultOutputFile?: string;
    serviceId: string;
}

/**
 * A collection of values returned by getPlugins.
 */
export interface GetPluginsResult {
    readonly environmentName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly pluginId: string;
    readonly resultOutputFile?: string;
    readonly results: outputs.ApiGateway.GetPluginsResult[];
    readonly serviceId: string;
}
export function getPluginsOutput(args: GetPluginsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPluginsResult> {
    return pulumi.output(args).apply((a: any) => getPlugins(a, opts))
}

/**
 * A collection of arguments for invoking getPlugins.
 */
export interface GetPluginsOutputArgs {
    environmentName: pulumi.Input<string>;
    pluginId: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    serviceId: pulumi.Input<string>;
}
