// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getGroupOffsets(args: GetGroupOffsetsArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupOffsetsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Ckafka/getGroupOffsets:getGroupOffsets", {
        "group": args.group,
        "instanceId": args.instanceId,
        "resultOutputFile": args.resultOutputFile,
        "searchWord": args.searchWord,
        "topics": args.topics,
    }, opts);
}

/**
 * A collection of arguments for invoking getGroupOffsets.
 */
export interface GetGroupOffsetsArgs {
    group: string;
    instanceId: string;
    resultOutputFile?: string;
    searchWord?: string;
    topics?: string[];
}

/**
 * A collection of values returned by getGroupOffsets.
 */
export interface GetGroupOffsetsResult {
    readonly group: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: string;
    readonly resultOutputFile?: string;
    readonly searchWord?: string;
    readonly topicLists: outputs.Ckafka.GetGroupOffsetsTopicList[];
    readonly topics?: string[];
}
export function getGroupOffsetsOutput(args: GetGroupOffsetsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetGroupOffsetsResult> {
    return pulumi.output(args).apply((a: any) => getGroupOffsets(a, opts))
}

/**
 * A collection of arguments for invoking getGroupOffsets.
 */
export interface GetGroupOffsetsOutputArgs {
    group: pulumi.Input<string>;
    instanceId: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    searchWord?: pulumi.Input<string>;
    topics?: pulumi.Input<pulumi.Input<string>[]>;
}
