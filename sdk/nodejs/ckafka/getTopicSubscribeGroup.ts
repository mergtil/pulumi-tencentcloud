// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getTopicSubscribeGroup(args: GetTopicSubscribeGroupArgs, opts?: pulumi.InvokeOptions): Promise<GetTopicSubscribeGroupResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Ckafka/getTopicSubscribeGroup:getTopicSubscribeGroup", {
        "instanceId": args.instanceId,
        "resultOutputFile": args.resultOutputFile,
        "topicName": args.topicName,
    }, opts);
}

/**
 * A collection of arguments for invoking getTopicSubscribeGroup.
 */
export interface GetTopicSubscribeGroupArgs {
    instanceId: string;
    resultOutputFile?: string;
    topicName: string;
}

/**
 * A collection of values returned by getTopicSubscribeGroup.
 */
export interface GetTopicSubscribeGroupResult {
    readonly groupsInfos: outputs.Ckafka.GetTopicSubscribeGroupGroupsInfo[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceId: string;
    readonly resultOutputFile?: string;
    readonly topicName: string;
}
export function getTopicSubscribeGroupOutput(args: GetTopicSubscribeGroupOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTopicSubscribeGroupResult> {
    return pulumi.output(args).apply((a: any) => getTopicSubscribeGroup(a, opts))
}

/**
 * A collection of arguments for invoking getTopicSubscribeGroup.
 */
export interface GetTopicSubscribeGroupOutputArgs {
    instanceId: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    topicName: pulumi.Input<string>;
}
