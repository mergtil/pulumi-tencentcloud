// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ApplicationProxyArgs, ApplicationProxyState } from "./applicationProxy";
export type ApplicationProxy = import("./applicationProxy").ApplicationProxy;
export const ApplicationProxy: typeof import("./applicationProxy").ApplicationProxy = null as any;
utilities.lazyLoad(exports, ["ApplicationProxy"], () => require("./applicationProxy"));

export { ApplicationProxyRuleArgs, ApplicationProxyRuleState } from "./applicationProxyRule";
export type ApplicationProxyRule = import("./applicationProxyRule").ApplicationProxyRule;
export const ApplicationProxyRule: typeof import("./applicationProxyRule").ApplicationProxyRule = null as any;
utilities.lazyLoad(exports, ["ApplicationProxyRule"], () => require("./applicationProxyRule"));

export { GetRuleEngineSettingsArgs, GetRuleEngineSettingsResult, GetRuleEngineSettingsOutputArgs } from "./getRuleEngineSettings";
export const getRuleEngineSettings: typeof import("./getRuleEngineSettings").getRuleEngineSettings = null as any;
export const getRuleEngineSettingsOutput: typeof import("./getRuleEngineSettings").getRuleEngineSettingsOutput = null as any;
utilities.lazyLoad(exports, ["getRuleEngineSettings","getRuleEngineSettingsOutput"], () => require("./getRuleEngineSettings"));

export { GetZoneAvailablePlansArgs, GetZoneAvailablePlansResult, GetZoneAvailablePlansOutputArgs } from "./getZoneAvailablePlans";
export const getZoneAvailablePlans: typeof import("./getZoneAvailablePlans").getZoneAvailablePlans = null as any;
export const getZoneAvailablePlansOutput: typeof import("./getZoneAvailablePlans").getZoneAvailablePlansOutput = null as any;
utilities.lazyLoad(exports, ["getZoneAvailablePlans","getZoneAvailablePlansOutput"], () => require("./getZoneAvailablePlans"));

export { OriginGroupArgs, OriginGroupState } from "./originGroup";
export type OriginGroup = import("./originGroup").OriginGroup;
export const OriginGroup: typeof import("./originGroup").OriginGroup = null as any;
utilities.lazyLoad(exports, ["OriginGroup"], () => require("./originGroup"));

export { RuleEngineArgs, RuleEngineState } from "./ruleEngine";
export type RuleEngine = import("./ruleEngine").RuleEngine;
export const RuleEngine: typeof import("./ruleEngine").RuleEngine = null as any;
utilities.lazyLoad(exports, ["RuleEngine"], () => require("./ruleEngine"));

export { ZoneArgs, ZoneState } from "./zone";
export type Zone = import("./zone").Zone;
export const Zone: typeof import("./zone").Zone = null as any;
utilities.lazyLoad(exports, ["Zone"], () => require("./zone"));

export { ZoneSettingArgs, ZoneSettingState } from "./zoneSetting";
export type ZoneSetting = import("./zoneSetting").ZoneSetting;
export const ZoneSetting: typeof import("./zoneSetting").ZoneSetting = null as any;
utilities.lazyLoad(exports, ["ZoneSetting"], () => require("./zoneSetting"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "tencentcloud:Teo/applicationProxy:ApplicationProxy":
                return new ApplicationProxy(name, <any>undefined, { urn })
            case "tencentcloud:Teo/applicationProxyRule:ApplicationProxyRule":
                return new ApplicationProxyRule(name, <any>undefined, { urn })
            case "tencentcloud:Teo/originGroup:OriginGroup":
                return new OriginGroup(name, <any>undefined, { urn })
            case "tencentcloud:Teo/ruleEngine:RuleEngine":
                return new RuleEngine(name, <any>undefined, { urn })
            case "tencentcloud:Teo/zone:Zone":
                return new Zone(name, <any>undefined, { urn })
            case "tencentcloud:Teo/zoneSetting:ZoneSetting":
                return new ZoneSetting(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("tencentcloud", "Teo/applicationProxy", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Teo/applicationProxyRule", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Teo/originGroup", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Teo/ruleEngine", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Teo/zone", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Teo/zoneSetting", _module)
