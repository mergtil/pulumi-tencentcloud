// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class Zone extends pulumi.CustomResource {
    /**
     * Get an existing Zone resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ZoneState, opts?: pulumi.CustomResourceOptions): Zone {
        return new Zone(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Teo/zone:Zone';

    /**
     * Returns true if the given object is an instance of Zone.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Zone {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Zone.__pulumiType;
    }

    /**
     * Acceleration area of the zone. Valid values: `mainland`, `overseas`.
     */
    public /*out*/ readonly area!: pulumi.Output<string>;
    /**
     * Specifies whether CNAME acceleration is enabled. Valid values: `enabled`, `disabled`.
     */
    public readonly cnameSpeedUp!: pulumi.Output<string>;
    /**
     * Ownership verification status of the site when it accesses via CNAME.- `finished`: The site is verified.- `pending`: The
     * site is waiting for verification.
     */
    public /*out*/ readonly cnameStatus!: pulumi.Output<string>;
    /**
     * Site creation date.
     */
    public /*out*/ readonly createdOn!: pulumi.Output<string>;
    /**
     * Site modification date.
     */
    public /*out*/ readonly modifiedOn!: pulumi.Output<string>;
    /**
     * List of name servers assigned by Tencent Cloud.
     */
    public /*out*/ readonly nameServers!: pulumi.Output<string[]>;
    /**
     * Name server used by the site.
     */
    public /*out*/ readonly originalNameServers!: pulumi.Output<string[]>;
    /**
     * Indicates whether the site is disabled.
     */
    public readonly paused!: pulumi.Output<boolean>;
    /**
     * Plan type of the zone. See details in data source `zone_available_plans`.
     */
    public readonly planType!: pulumi.Output<string>;
    /**
     * Billing resources of the zone.
     */
    public /*out*/ readonly resources!: pulumi.Output<outputs.Teo.ZoneResource[]>;
    /**
     * Site status. Valid values:- `active`: NS is switched.- `pending`: NS is not switched.- `moved`: NS is moved.-
     * `deactivated`: this site is blocked.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * Tag description list.
     */
    public readonly tags!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * Specifies how the site is connected to EdgeOne.- `full`: The site is connected via NS.- `partial`: The site is connected
     * via CNAME.
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * User-defined name server information. Note: This field may return null, indicating that no valid value can be obtained.
     */
    public readonly vanityNameServers!: pulumi.Output<outputs.Teo.ZoneVanityNameServers | undefined>;
    /**
     * User-defined name server IP information. Note: This field may return null, indicating that no valid value can be
     * obtained.
     */
    public /*out*/ readonly vanityNameServersIps!: pulumi.Output<outputs.Teo.ZoneVanityNameServersIp[]>;
    /**
     * Site ID.
     */
    public /*out*/ readonly zoneId!: pulumi.Output<string>;
    /**
     * Site name.
     */
    public readonly zoneName!: pulumi.Output<string>;

    /**
     * Create a Zone resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ZoneArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ZoneArgs | ZoneState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ZoneState | undefined;
            resourceInputs["area"] = state ? state.area : undefined;
            resourceInputs["cnameSpeedUp"] = state ? state.cnameSpeedUp : undefined;
            resourceInputs["cnameStatus"] = state ? state.cnameStatus : undefined;
            resourceInputs["createdOn"] = state ? state.createdOn : undefined;
            resourceInputs["modifiedOn"] = state ? state.modifiedOn : undefined;
            resourceInputs["nameServers"] = state ? state.nameServers : undefined;
            resourceInputs["originalNameServers"] = state ? state.originalNameServers : undefined;
            resourceInputs["paused"] = state ? state.paused : undefined;
            resourceInputs["planType"] = state ? state.planType : undefined;
            resourceInputs["resources"] = state ? state.resources : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["vanityNameServers"] = state ? state.vanityNameServers : undefined;
            resourceInputs["vanityNameServersIps"] = state ? state.vanityNameServersIps : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
            resourceInputs["zoneName"] = state ? state.zoneName : undefined;
        } else {
            const args = argsOrState as ZoneArgs | undefined;
            if ((!args || args.planType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'planType'");
            }
            if ((!args || args.zoneName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneName'");
            }
            resourceInputs["cnameSpeedUp"] = args ? args.cnameSpeedUp : undefined;
            resourceInputs["paused"] = args ? args.paused : undefined;
            resourceInputs["planType"] = args ? args.planType : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["vanityNameServers"] = args ? args.vanityNameServers : undefined;
            resourceInputs["zoneName"] = args ? args.zoneName : undefined;
            resourceInputs["area"] = undefined /*out*/;
            resourceInputs["cnameStatus"] = undefined /*out*/;
            resourceInputs["createdOn"] = undefined /*out*/;
            resourceInputs["modifiedOn"] = undefined /*out*/;
            resourceInputs["nameServers"] = undefined /*out*/;
            resourceInputs["originalNameServers"] = undefined /*out*/;
            resourceInputs["resources"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["vanityNameServersIps"] = undefined /*out*/;
            resourceInputs["zoneId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Zone.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Zone resources.
 */
export interface ZoneState {
    /**
     * Acceleration area of the zone. Valid values: `mainland`, `overseas`.
     */
    area?: pulumi.Input<string>;
    /**
     * Specifies whether CNAME acceleration is enabled. Valid values: `enabled`, `disabled`.
     */
    cnameSpeedUp?: pulumi.Input<string>;
    /**
     * Ownership verification status of the site when it accesses via CNAME.- `finished`: The site is verified.- `pending`: The
     * site is waiting for verification.
     */
    cnameStatus?: pulumi.Input<string>;
    /**
     * Site creation date.
     */
    createdOn?: pulumi.Input<string>;
    /**
     * Site modification date.
     */
    modifiedOn?: pulumi.Input<string>;
    /**
     * List of name servers assigned by Tencent Cloud.
     */
    nameServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Name server used by the site.
     */
    originalNameServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates whether the site is disabled.
     */
    paused?: pulumi.Input<boolean>;
    /**
     * Plan type of the zone. See details in data source `zone_available_plans`.
     */
    planType?: pulumi.Input<string>;
    /**
     * Billing resources of the zone.
     */
    resources?: pulumi.Input<pulumi.Input<inputs.Teo.ZoneResource>[]>;
    /**
     * Site status. Valid values:- `active`: NS is switched.- `pending`: NS is not switched.- `moved`: NS is moved.-
     * `deactivated`: this site is blocked.
     */
    status?: pulumi.Input<string>;
    /**
     * Tag description list.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Specifies how the site is connected to EdgeOne.- `full`: The site is connected via NS.- `partial`: The site is connected
     * via CNAME.
     */
    type?: pulumi.Input<string>;
    /**
     * User-defined name server information. Note: This field may return null, indicating that no valid value can be obtained.
     */
    vanityNameServers?: pulumi.Input<inputs.Teo.ZoneVanityNameServers>;
    /**
     * User-defined name server IP information. Note: This field may return null, indicating that no valid value can be
     * obtained.
     */
    vanityNameServersIps?: pulumi.Input<pulumi.Input<inputs.Teo.ZoneVanityNameServersIp>[]>;
    /**
     * Site ID.
     */
    zoneId?: pulumi.Input<string>;
    /**
     * Site name.
     */
    zoneName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Zone resource.
 */
export interface ZoneArgs {
    /**
     * Specifies whether CNAME acceleration is enabled. Valid values: `enabled`, `disabled`.
     */
    cnameSpeedUp?: pulumi.Input<string>;
    /**
     * Indicates whether the site is disabled.
     */
    paused?: pulumi.Input<boolean>;
    /**
     * Plan type of the zone. See details in data source `zone_available_plans`.
     */
    planType: pulumi.Input<string>;
    /**
     * Tag description list.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * Specifies how the site is connected to EdgeOne.- `full`: The site is connected via NS.- `partial`: The site is connected
     * via CNAME.
     */
    type?: pulumi.Input<string>;
    /**
     * User-defined name server information. Note: This field may return null, indicating that no valid value can be obtained.
     */
    vanityNameServers?: pulumi.Input<inputs.Teo.ZoneVanityNameServers>;
    /**
     * Site name.
     */
    zoneName: pulumi.Input<string>;
}
