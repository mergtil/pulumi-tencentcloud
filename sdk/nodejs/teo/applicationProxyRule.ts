// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class ApplicationProxyRule extends pulumi.CustomResource {
    /**
     * Get an existing ApplicationProxyRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationProxyRuleState, opts?: pulumi.CustomResourceOptions): ApplicationProxyRule {
        return new ApplicationProxyRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Teo/applicationProxyRule:ApplicationProxyRule';

    /**
     * Returns true if the given object is an instance of ApplicationProxyRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApplicationProxyRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApplicationProxyRule.__pulumiType;
    }

    /**
     * Passes the client IP. Default value is OFF.When Proto is TCP, valid values:- `TOA`: Pass the client IP via TOA.- `PPV1`:
     * Pass the client IP via Proxy Protocol V1.- `PPV2`: Pass the client IP via Proxy Protocol V2.- `OFF`: Do not pass the
     * client IP.When Proto=UDP, valid values:- `PPV2`: Pass the client IP via Proxy Protocol V2.- `OFF`: Do not pass the
     * client IP.
     */
    public readonly forwardClientIp!: pulumi.Output<string>;
    /**
     * Origin port, supported formats: single port: 80; Port segment: 81-90, 81 to 90 ports.
     */
    public readonly originPort!: pulumi.Output<string>;
    /**
     * Origin server type.- `custom`: Specified origins.- `origins`: An origin group.
     */
    public readonly originType!: pulumi.Output<string>;
    /**
     * Origin server information.When `OriginType` is custom, this field value indicates multiple origin servers in either of
     * the following formats:- `IP`:Port- Domain name:Port.When `OriginType` is origins, it indicates the origin group ID.
     */
    public readonly originValues!: pulumi.Output<string[]>;
    /**
     * Valid values:- port number: `80` means port 80.- port range: `81-90` means port range 81-90.
     */
    public readonly ports!: pulumi.Output<string[]>;
    /**
     * Protocol. Valid values: `TCP`, `UDP`.
     */
    public readonly proto!: pulumi.Output<string>;
    /**
     * Proxy ID.
     */
    public readonly proxyId!: pulumi.Output<string>;
    /**
     * Rule ID.
     */
    public /*out*/ readonly ruleId!: pulumi.Output<string>;
    /**
     * Specifies whether to enable session persistence. Default value is false.
     */
    public readonly sessionPersist!: pulumi.Output<boolean>;
    /**
     * Status of this application proxy rule. Valid values to set is `online` and `offline`.- `online`: Enable.- `offline`:
     * Disable.- `progress`: Deploying.- `stopping`: Disabling.- `fail`: Deployment/Disabling failed.
     */
    public readonly status!: pulumi.Output<string>;
    /**
     * Site ID.
     */
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a ApplicationProxyRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationProxyRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationProxyRuleArgs | ApplicationProxyRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplicationProxyRuleState | undefined;
            resourceInputs["forwardClientIp"] = state ? state.forwardClientIp : undefined;
            resourceInputs["originPort"] = state ? state.originPort : undefined;
            resourceInputs["originType"] = state ? state.originType : undefined;
            resourceInputs["originValues"] = state ? state.originValues : undefined;
            resourceInputs["ports"] = state ? state.ports : undefined;
            resourceInputs["proto"] = state ? state.proto : undefined;
            resourceInputs["proxyId"] = state ? state.proxyId : undefined;
            resourceInputs["ruleId"] = state ? state.ruleId : undefined;
            resourceInputs["sessionPersist"] = state ? state.sessionPersist : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as ApplicationProxyRuleArgs | undefined;
            if ((!args || args.originPort === undefined) && !opts.urn) {
                throw new Error("Missing required property 'originPort'");
            }
            if ((!args || args.originType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'originType'");
            }
            if ((!args || args.originValues === undefined) && !opts.urn) {
                throw new Error("Missing required property 'originValues'");
            }
            if ((!args || args.ports === undefined) && !opts.urn) {
                throw new Error("Missing required property 'ports'");
            }
            if ((!args || args.proto === undefined) && !opts.urn) {
                throw new Error("Missing required property 'proto'");
            }
            if ((!args || args.proxyId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'proxyId'");
            }
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["forwardClientIp"] = args ? args.forwardClientIp : undefined;
            resourceInputs["originPort"] = args ? args.originPort : undefined;
            resourceInputs["originType"] = args ? args.originType : undefined;
            resourceInputs["originValues"] = args ? args.originValues : undefined;
            resourceInputs["ports"] = args ? args.ports : undefined;
            resourceInputs["proto"] = args ? args.proto : undefined;
            resourceInputs["proxyId"] = args ? args.proxyId : undefined;
            resourceInputs["sessionPersist"] = args ? args.sessionPersist : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["ruleId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApplicationProxyRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApplicationProxyRule resources.
 */
export interface ApplicationProxyRuleState {
    /**
     * Passes the client IP. Default value is OFF.When Proto is TCP, valid values:- `TOA`: Pass the client IP via TOA.- `PPV1`:
     * Pass the client IP via Proxy Protocol V1.- `PPV2`: Pass the client IP via Proxy Protocol V2.- `OFF`: Do not pass the
     * client IP.When Proto=UDP, valid values:- `PPV2`: Pass the client IP via Proxy Protocol V2.- `OFF`: Do not pass the
     * client IP.
     */
    forwardClientIp?: pulumi.Input<string>;
    /**
     * Origin port, supported formats: single port: 80; Port segment: 81-90, 81 to 90 ports.
     */
    originPort?: pulumi.Input<string>;
    /**
     * Origin server type.- `custom`: Specified origins.- `origins`: An origin group.
     */
    originType?: pulumi.Input<string>;
    /**
     * Origin server information.When `OriginType` is custom, this field value indicates multiple origin servers in either of
     * the following formats:- `IP`:Port- Domain name:Port.When `OriginType` is origins, it indicates the origin group ID.
     */
    originValues?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Valid values:- port number: `80` means port 80.- port range: `81-90` means port range 81-90.
     */
    ports?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Protocol. Valid values: `TCP`, `UDP`.
     */
    proto?: pulumi.Input<string>;
    /**
     * Proxy ID.
     */
    proxyId?: pulumi.Input<string>;
    /**
     * Rule ID.
     */
    ruleId?: pulumi.Input<string>;
    /**
     * Specifies whether to enable session persistence. Default value is false.
     */
    sessionPersist?: pulumi.Input<boolean>;
    /**
     * Status of this application proxy rule. Valid values to set is `online` and `offline`.- `online`: Enable.- `offline`:
     * Disable.- `progress`: Deploying.- `stopping`: Disabling.- `fail`: Deployment/Disabling failed.
     */
    status?: pulumi.Input<string>;
    /**
     * Site ID.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApplicationProxyRule resource.
 */
export interface ApplicationProxyRuleArgs {
    /**
     * Passes the client IP. Default value is OFF.When Proto is TCP, valid values:- `TOA`: Pass the client IP via TOA.- `PPV1`:
     * Pass the client IP via Proxy Protocol V1.- `PPV2`: Pass the client IP via Proxy Protocol V2.- `OFF`: Do not pass the
     * client IP.When Proto=UDP, valid values:- `PPV2`: Pass the client IP via Proxy Protocol V2.- `OFF`: Do not pass the
     * client IP.
     */
    forwardClientIp?: pulumi.Input<string>;
    /**
     * Origin port, supported formats: single port: 80; Port segment: 81-90, 81 to 90 ports.
     */
    originPort: pulumi.Input<string>;
    /**
     * Origin server type.- `custom`: Specified origins.- `origins`: An origin group.
     */
    originType: pulumi.Input<string>;
    /**
     * Origin server information.When `OriginType` is custom, this field value indicates multiple origin servers in either of
     * the following formats:- `IP`:Port- Domain name:Port.When `OriginType` is origins, it indicates the origin group ID.
     */
    originValues: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Valid values:- port number: `80` means port 80.- port range: `81-90` means port range 81-90.
     */
    ports: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Protocol. Valid values: `TCP`, `UDP`.
     */
    proto: pulumi.Input<string>;
    /**
     * Proxy ID.
     */
    proxyId: pulumi.Input<string>;
    /**
     * Specifies whether to enable session persistence. Default value is false.
     */
    sessionPersist?: pulumi.Input<boolean>;
    /**
     * Status of this application proxy rule. Valid values to set is `online` and `offline`.- `online`: Enable.- `offline`:
     * Disable.- `progress`: Deploying.- `stopping`: Disabling.- `fail`: Deployment/Disabling failed.
     */
    status?: pulumi.Input<string>;
    /**
     * Site ID.
     */
    zoneId: pulumi.Input<string>;
}
