// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class ApiRateLimitRule extends pulumi.CustomResource {
    /**
     * Get an existing ApiRateLimitRule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApiRateLimitRuleState, opts?: pulumi.CustomResourceOptions): ApiRateLimitRule {
        return new ApiRateLimitRule(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Tsf/apiRateLimitRule:ApiRateLimitRule';

    /**
     * Returns true if the given object is an instance of ApiRateLimitRule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApiRateLimitRule {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApiRateLimitRule.__pulumiType;
    }

    /**
     * Api Id.
     */
    public readonly apiId!: pulumi.Output<string>;
    /**
     * creation time.
     */
    public /*out*/ readonly createdTime!: pulumi.Output<string>;
    /**
     * describe.
     */
    public /*out*/ readonly description!: pulumi.Output<string>;
    /**
     * qps value.
     */
    public readonly maxQps!: pulumi.Output<number>;
    /**
     * Rule content.
     */
    public /*out*/ readonly ruleContent!: pulumi.Output<string>;
    /**
     * rule Id.
     */
    public /*out*/ readonly ruleId!: pulumi.Output<string>;
    /**
     * Current limit name.
     */
    public /*out*/ readonly ruleName!: pulumi.Output<string>;
    /**
     * Tsf Rule ID.
     */
    public /*out*/ readonly tsfRuleId!: pulumi.Output<string>;
    /**
     * update time.
     */
    public /*out*/ readonly updatedTime!: pulumi.Output<string>;
    /**
     * Enabled/disabled, enabled/disabled, if not passed, it is enabled by default.
     */
    public readonly usableStatus!: pulumi.Output<string>;

    /**
     * Create a ApiRateLimitRule resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApiRateLimitRuleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApiRateLimitRuleArgs | ApiRateLimitRuleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApiRateLimitRuleState | undefined;
            resourceInputs["apiId"] = state ? state.apiId : undefined;
            resourceInputs["createdTime"] = state ? state.createdTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["maxQps"] = state ? state.maxQps : undefined;
            resourceInputs["ruleContent"] = state ? state.ruleContent : undefined;
            resourceInputs["ruleId"] = state ? state.ruleId : undefined;
            resourceInputs["ruleName"] = state ? state.ruleName : undefined;
            resourceInputs["tsfRuleId"] = state ? state.tsfRuleId : undefined;
            resourceInputs["updatedTime"] = state ? state.updatedTime : undefined;
            resourceInputs["usableStatus"] = state ? state.usableStatus : undefined;
        } else {
            const args = argsOrState as ApiRateLimitRuleArgs | undefined;
            if ((!args || args.apiId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'apiId'");
            }
            if ((!args || args.maxQps === undefined) && !opts.urn) {
                throw new Error("Missing required property 'maxQps'");
            }
            resourceInputs["apiId"] = args ? args.apiId : undefined;
            resourceInputs["maxQps"] = args ? args.maxQps : undefined;
            resourceInputs["usableStatus"] = args ? args.usableStatus : undefined;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["description"] = undefined /*out*/;
            resourceInputs["ruleContent"] = undefined /*out*/;
            resourceInputs["ruleId"] = undefined /*out*/;
            resourceInputs["ruleName"] = undefined /*out*/;
            resourceInputs["tsfRuleId"] = undefined /*out*/;
            resourceInputs["updatedTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApiRateLimitRule.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApiRateLimitRule resources.
 */
export interface ApiRateLimitRuleState {
    /**
     * Api Id.
     */
    apiId?: pulumi.Input<string>;
    /**
     * creation time.
     */
    createdTime?: pulumi.Input<string>;
    /**
     * describe.
     */
    description?: pulumi.Input<string>;
    /**
     * qps value.
     */
    maxQps?: pulumi.Input<number>;
    /**
     * Rule content.
     */
    ruleContent?: pulumi.Input<string>;
    /**
     * rule Id.
     */
    ruleId?: pulumi.Input<string>;
    /**
     * Current limit name.
     */
    ruleName?: pulumi.Input<string>;
    /**
     * Tsf Rule ID.
     */
    tsfRuleId?: pulumi.Input<string>;
    /**
     * update time.
     */
    updatedTime?: pulumi.Input<string>;
    /**
     * Enabled/disabled, enabled/disabled, if not passed, it is enabled by default.
     */
    usableStatus?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApiRateLimitRule resource.
 */
export interface ApiRateLimitRuleArgs {
    /**
     * Api Id.
     */
    apiId: pulumi.Input<string>;
    /**
     * qps value.
     */
    maxQps: pulumi.Input<number>;
    /**
     * Enabled/disabled, enabled/disabled, if not passed, it is enabled by default.
     */
    usableStatus?: pulumi.Input<string>;
}
