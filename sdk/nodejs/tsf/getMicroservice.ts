// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getMicroservice(args: GetMicroserviceArgs, opts?: pulumi.InvokeOptions): Promise<GetMicroserviceResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Tsf/getMicroservice:getMicroservice", {
        "microserviceIdLists": args.microserviceIdLists,
        "microserviceNameLists": args.microserviceNameLists,
        "namespaceId": args.namespaceId,
        "resultOutputFile": args.resultOutputFile,
        "statuses": args.statuses,
    }, opts);
}

/**
 * A collection of arguments for invoking getMicroservice.
 */
export interface GetMicroserviceArgs {
    microserviceIdLists?: string[];
    microserviceNameLists?: string[];
    namespaceId: string;
    resultOutputFile?: string;
    statuses?: string[];
}

/**
 * A collection of values returned by getMicroservice.
 */
export interface GetMicroserviceResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly microserviceIdLists?: string[];
    readonly microserviceNameLists?: string[];
    readonly namespaceId: string;
    readonly resultOutputFile?: string;
    readonly results: outputs.Tsf.GetMicroserviceResult[];
    readonly statuses?: string[];
}
export function getMicroserviceOutput(args: GetMicroserviceOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMicroserviceResult> {
    return pulumi.output(args).apply((a: any) => getMicroservice(a, opts))
}

/**
 * A collection of arguments for invoking getMicroservice.
 */
export interface GetMicroserviceOutputArgs {
    microserviceIdLists?: pulumi.Input<pulumi.Input<string>[]>;
    microserviceNameLists?: pulumi.Input<pulumi.Input<string>[]>;
    namespaceId: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    statuses?: pulumi.Input<pulumi.Input<string>[]>;
}
