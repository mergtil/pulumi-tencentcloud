// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class DeployContainerGroup extends pulumi.CustomResource {
    /**
     * Get an existing DeployContainerGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DeployContainerGroupState, opts?: pulumi.CustomResourceOptions): DeployContainerGroup {
        return new DeployContainerGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Tsf/deployContainerGroup:DeployContainerGroup';

    /**
     * Returns true if the given object is an instance of DeployContainerGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DeployContainerGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DeployContainerGroup.__pulumiType;
    }

    /**
     * The maximum number of CPU cores allocated to the agent container corresponds to the limit field in Kubernetes.
     */
    public readonly agentCpuLimit!: pulumi.Output<string>;
    /**
     * The number of CPU cores allocated to the agent container corresponds to the request field in Kubernetes.
     */
    public readonly agentCpuRequest!: pulumi.Output<string>;
    /**
     * The maximum amount of memory in MiB allocated to the agent container corresponds to the &amp;#39;limit&amp;#39; field in
     * Kubernetes.
     */
    public readonly agentMemLimit!: pulumi.Output<string>;
    /**
     * The amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
     */
    public readonly agentMemRequest!: pulumi.Output<string>;
    /**
     * javaagent info: SERVICE_AGENT/OT_AGENT.
     */
    public readonly agentProfileLists!: pulumi.Output<outputs.Tsf.DeployContainerGroupAgentProfileList[]>;
    /**
     * The maximum number of CPU cores for the business container, corresponding to the limit in K8S. If not specified, it
     * defaults to twice the request.
     */
    public readonly cpuLimit!: pulumi.Output<string>;
    /**
     * The number of CPU cores allocated to the business container, corresponding to the request in K8S. The default value is
     * 0.25.
     */
    public readonly cpuRequest!: pulumi.Output<string>;
    /**
     * Whether to deploy the agent container. If this parameter is not specified, the agent container will not be deployed by
     * default.
     */
    public readonly deployAgent!: pulumi.Output<boolean>;
    /**
     * Not start right away.
     */
    public readonly doNotStart!: pulumi.Output<boolean>;
    /**
     * The environment variables that the application runs in the deployment group. If this parameter is not specified, no
     * additional environment variables are set by default.
     */
    public readonly envs!: pulumi.Output<outputs.Tsf.DeployContainerGroupEnv[]>;
    /**
     * group Id.
     */
    public readonly groupId!: pulumi.Output<string>;
    /**
     * The configuration information for health checks. If this parameter is not specified, the health check is not set by
     * default.
     */
    public readonly healthCheckSettings!: pulumi.Output<outputs.Tsf.DeployContainerGroupHealthCheckSettings | undefined>;
    /**
     * Whether to perform incremental deployment. The default value is false, which means full update.
     */
    public readonly incrementalDeployment!: pulumi.Output<boolean>;
    /**
     * instance number.
     */
    public readonly instanceNum!: pulumi.Output<number>;
    /**
     * The maximum amount of CPU cores allocated to the istio proxy container corresponds to the &amp;#39;limit&amp;#39; field
     * in Kubernetes.
     */
    public readonly istioCpuLimit!: pulumi.Output<string>;
    /**
     * The number of CPU cores allocated to the istio proxy container corresponds to the &amp;#39;request&amp;#39; field in
     * Kubernetes.
     */
    public readonly istioCpuRequest!: pulumi.Output<string>;
    /**
     * The maximum amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
     */
    public readonly istioMemLimit!: pulumi.Output<string>;
    /**
     * The amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
     */
    public readonly istioMemRequest!: pulumi.Output<string>;
    /**
     * jvm options.
     */
    public readonly jvmOpts!: pulumi.Output<string>;
    /**
     * MaxSurge parameter in Kubernetes rolling update strategy.
     */
    public readonly maxSurge!: pulumi.Output<string>;
    /**
     * MaxUnavailable parameter in Kubernetes rolling update strategy.
     */
    public readonly maxUnavailable!: pulumi.Output<string>;
    /**
     * The maximum memory size in MiB for the business container, corresponding to the limit in K8S. If not specified, it
     * defaults to twice the request.
     */
    public readonly memLimit!: pulumi.Output<string>;
    /**
     * The amount of memory in MiB allocated to the business container, corresponding to the request in K8S. The default value
     * is 640 MiB.
     */
    public readonly memRequest!: pulumi.Output<string>;
    /**
     * (Priority use) New image name, such as /tsf/nginx.
     */
    public readonly repoName!: pulumi.Output<string>;
    /**
     * repo type, tcr or leave it blank.
     */
    public readonly repoType!: pulumi.Output<string>;
    /**
     * old image name, eg: /tsf/server.
     */
    public readonly reponame!: pulumi.Output<string>;
    /**
     * Node scheduling strategy. If this parameter is not specified, the node scheduling strategy will not be used by default.
     */
    public readonly schedulingStrategy!: pulumi.Output<outputs.Tsf.DeployContainerGroupSchedulingStrategy>;
    /**
     * image server.
     */
    public readonly server!: pulumi.Output<string>;
    /**
     * Network settings for container deployment groups.
     */
    public readonly serviceSetting!: pulumi.Output<outputs.Tsf.DeployContainerGroupServiceSetting>;
    /**
     * image version name, v1.
     */
    public readonly tagName!: pulumi.Output<string>;
    /**
     * update Interval, is required when rolling update.
     */
    public readonly updateIvl!: pulumi.Output<number>;
    /**
     * Update method: 0 for fast update, 1 for rolling update.
     */
    public readonly updateType!: pulumi.Output<number>;
    /**
     * Whether to clear the volume information. Default is false.
     */
    public readonly volumeClean!: pulumi.Output<boolean>;
    /**
     * Volume information, as a list.
     */
    public readonly volumeInfoLists!: pulumi.Output<outputs.Tsf.DeployContainerGroupVolumeInfoList[]>;
    /**
     * Volume mount point information, list type.
     */
    public readonly volumeMountInfoLists!: pulumi.Output<outputs.Tsf.DeployContainerGroupVolumeMountInfoList[]>;
    /**
     * warmup setting.
     */
    public readonly warmupSetting!: pulumi.Output<outputs.Tsf.DeployContainerGroupWarmupSetting>;

    /**
     * Create a DeployContainerGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DeployContainerGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DeployContainerGroupArgs | DeployContainerGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DeployContainerGroupState | undefined;
            resourceInputs["agentCpuLimit"] = state ? state.agentCpuLimit : undefined;
            resourceInputs["agentCpuRequest"] = state ? state.agentCpuRequest : undefined;
            resourceInputs["agentMemLimit"] = state ? state.agentMemLimit : undefined;
            resourceInputs["agentMemRequest"] = state ? state.agentMemRequest : undefined;
            resourceInputs["agentProfileLists"] = state ? state.agentProfileLists : undefined;
            resourceInputs["cpuLimit"] = state ? state.cpuLimit : undefined;
            resourceInputs["cpuRequest"] = state ? state.cpuRequest : undefined;
            resourceInputs["deployAgent"] = state ? state.deployAgent : undefined;
            resourceInputs["doNotStart"] = state ? state.doNotStart : undefined;
            resourceInputs["envs"] = state ? state.envs : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["healthCheckSettings"] = state ? state.healthCheckSettings : undefined;
            resourceInputs["incrementalDeployment"] = state ? state.incrementalDeployment : undefined;
            resourceInputs["instanceNum"] = state ? state.instanceNum : undefined;
            resourceInputs["istioCpuLimit"] = state ? state.istioCpuLimit : undefined;
            resourceInputs["istioCpuRequest"] = state ? state.istioCpuRequest : undefined;
            resourceInputs["istioMemLimit"] = state ? state.istioMemLimit : undefined;
            resourceInputs["istioMemRequest"] = state ? state.istioMemRequest : undefined;
            resourceInputs["jvmOpts"] = state ? state.jvmOpts : undefined;
            resourceInputs["maxSurge"] = state ? state.maxSurge : undefined;
            resourceInputs["maxUnavailable"] = state ? state.maxUnavailable : undefined;
            resourceInputs["memLimit"] = state ? state.memLimit : undefined;
            resourceInputs["memRequest"] = state ? state.memRequest : undefined;
            resourceInputs["repoName"] = state ? state.repoName : undefined;
            resourceInputs["repoType"] = state ? state.repoType : undefined;
            resourceInputs["reponame"] = state ? state.reponame : undefined;
            resourceInputs["schedulingStrategy"] = state ? state.schedulingStrategy : undefined;
            resourceInputs["server"] = state ? state.server : undefined;
            resourceInputs["serviceSetting"] = state ? state.serviceSetting : undefined;
            resourceInputs["tagName"] = state ? state.tagName : undefined;
            resourceInputs["updateIvl"] = state ? state.updateIvl : undefined;
            resourceInputs["updateType"] = state ? state.updateType : undefined;
            resourceInputs["volumeClean"] = state ? state.volumeClean : undefined;
            resourceInputs["volumeInfoLists"] = state ? state.volumeInfoLists : undefined;
            resourceInputs["volumeMountInfoLists"] = state ? state.volumeMountInfoLists : undefined;
            resourceInputs["warmupSetting"] = state ? state.warmupSetting : undefined;
        } else {
            const args = argsOrState as DeployContainerGroupArgs | undefined;
            if ((!args || args.groupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            if ((!args || args.instanceNum === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceNum'");
            }
            if ((!args || args.tagName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tagName'");
            }
            resourceInputs["agentCpuLimit"] = args ? args.agentCpuLimit : undefined;
            resourceInputs["agentCpuRequest"] = args ? args.agentCpuRequest : undefined;
            resourceInputs["agentMemLimit"] = args ? args.agentMemLimit : undefined;
            resourceInputs["agentMemRequest"] = args ? args.agentMemRequest : undefined;
            resourceInputs["agentProfileLists"] = args ? args.agentProfileLists : undefined;
            resourceInputs["cpuLimit"] = args ? args.cpuLimit : undefined;
            resourceInputs["cpuRequest"] = args ? args.cpuRequest : undefined;
            resourceInputs["deployAgent"] = args ? args.deployAgent : undefined;
            resourceInputs["doNotStart"] = args ? args.doNotStart : undefined;
            resourceInputs["envs"] = args ? args.envs : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["healthCheckSettings"] = args ? args.healthCheckSettings : undefined;
            resourceInputs["incrementalDeployment"] = args ? args.incrementalDeployment : undefined;
            resourceInputs["instanceNum"] = args ? args.instanceNum : undefined;
            resourceInputs["istioCpuLimit"] = args ? args.istioCpuLimit : undefined;
            resourceInputs["istioCpuRequest"] = args ? args.istioCpuRequest : undefined;
            resourceInputs["istioMemLimit"] = args ? args.istioMemLimit : undefined;
            resourceInputs["istioMemRequest"] = args ? args.istioMemRequest : undefined;
            resourceInputs["jvmOpts"] = args ? args.jvmOpts : undefined;
            resourceInputs["maxSurge"] = args ? args.maxSurge : undefined;
            resourceInputs["maxUnavailable"] = args ? args.maxUnavailable : undefined;
            resourceInputs["memLimit"] = args ? args.memLimit : undefined;
            resourceInputs["memRequest"] = args ? args.memRequest : undefined;
            resourceInputs["repoName"] = args ? args.repoName : undefined;
            resourceInputs["repoType"] = args ? args.repoType : undefined;
            resourceInputs["reponame"] = args ? args.reponame : undefined;
            resourceInputs["schedulingStrategy"] = args ? args.schedulingStrategy : undefined;
            resourceInputs["server"] = args ? args.server : undefined;
            resourceInputs["serviceSetting"] = args ? args.serviceSetting : undefined;
            resourceInputs["tagName"] = args ? args.tagName : undefined;
            resourceInputs["updateIvl"] = args ? args.updateIvl : undefined;
            resourceInputs["updateType"] = args ? args.updateType : undefined;
            resourceInputs["volumeClean"] = args ? args.volumeClean : undefined;
            resourceInputs["volumeInfoLists"] = args ? args.volumeInfoLists : undefined;
            resourceInputs["volumeMountInfoLists"] = args ? args.volumeMountInfoLists : undefined;
            resourceInputs["warmupSetting"] = args ? args.warmupSetting : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DeployContainerGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DeployContainerGroup resources.
 */
export interface DeployContainerGroupState {
    /**
     * The maximum number of CPU cores allocated to the agent container corresponds to the limit field in Kubernetes.
     */
    agentCpuLimit?: pulumi.Input<string>;
    /**
     * The number of CPU cores allocated to the agent container corresponds to the request field in Kubernetes.
     */
    agentCpuRequest?: pulumi.Input<string>;
    /**
     * The maximum amount of memory in MiB allocated to the agent container corresponds to the &amp;#39;limit&amp;#39; field in
     * Kubernetes.
     */
    agentMemLimit?: pulumi.Input<string>;
    /**
     * The amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
     */
    agentMemRequest?: pulumi.Input<string>;
    /**
     * javaagent info: SERVICE_AGENT/OT_AGENT.
     */
    agentProfileLists?: pulumi.Input<pulumi.Input<inputs.Tsf.DeployContainerGroupAgentProfileList>[]>;
    /**
     * The maximum number of CPU cores for the business container, corresponding to the limit in K8S. If not specified, it
     * defaults to twice the request.
     */
    cpuLimit?: pulumi.Input<string>;
    /**
     * The number of CPU cores allocated to the business container, corresponding to the request in K8S. The default value is
     * 0.25.
     */
    cpuRequest?: pulumi.Input<string>;
    /**
     * Whether to deploy the agent container. If this parameter is not specified, the agent container will not be deployed by
     * default.
     */
    deployAgent?: pulumi.Input<boolean>;
    /**
     * Not start right away.
     */
    doNotStart?: pulumi.Input<boolean>;
    /**
     * The environment variables that the application runs in the deployment group. If this parameter is not specified, no
     * additional environment variables are set by default.
     */
    envs?: pulumi.Input<pulumi.Input<inputs.Tsf.DeployContainerGroupEnv>[]>;
    /**
     * group Id.
     */
    groupId?: pulumi.Input<string>;
    /**
     * The configuration information for health checks. If this parameter is not specified, the health check is not set by
     * default.
     */
    healthCheckSettings?: pulumi.Input<inputs.Tsf.DeployContainerGroupHealthCheckSettings>;
    /**
     * Whether to perform incremental deployment. The default value is false, which means full update.
     */
    incrementalDeployment?: pulumi.Input<boolean>;
    /**
     * instance number.
     */
    instanceNum?: pulumi.Input<number>;
    /**
     * The maximum amount of CPU cores allocated to the istio proxy container corresponds to the &amp;#39;limit&amp;#39; field
     * in Kubernetes.
     */
    istioCpuLimit?: pulumi.Input<string>;
    /**
     * The number of CPU cores allocated to the istio proxy container corresponds to the &amp;#39;request&amp;#39; field in
     * Kubernetes.
     */
    istioCpuRequest?: pulumi.Input<string>;
    /**
     * The maximum amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
     */
    istioMemLimit?: pulumi.Input<string>;
    /**
     * The amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
     */
    istioMemRequest?: pulumi.Input<string>;
    /**
     * jvm options.
     */
    jvmOpts?: pulumi.Input<string>;
    /**
     * MaxSurge parameter in Kubernetes rolling update strategy.
     */
    maxSurge?: pulumi.Input<string>;
    /**
     * MaxUnavailable parameter in Kubernetes rolling update strategy.
     */
    maxUnavailable?: pulumi.Input<string>;
    /**
     * The maximum memory size in MiB for the business container, corresponding to the limit in K8S. If not specified, it
     * defaults to twice the request.
     */
    memLimit?: pulumi.Input<string>;
    /**
     * The amount of memory in MiB allocated to the business container, corresponding to the request in K8S. The default value
     * is 640 MiB.
     */
    memRequest?: pulumi.Input<string>;
    /**
     * (Priority use) New image name, such as /tsf/nginx.
     */
    repoName?: pulumi.Input<string>;
    /**
     * repo type, tcr or leave it blank.
     */
    repoType?: pulumi.Input<string>;
    /**
     * old image name, eg: /tsf/server.
     */
    reponame?: pulumi.Input<string>;
    /**
     * Node scheduling strategy. If this parameter is not specified, the node scheduling strategy will not be used by default.
     */
    schedulingStrategy?: pulumi.Input<inputs.Tsf.DeployContainerGroupSchedulingStrategy>;
    /**
     * image server.
     */
    server?: pulumi.Input<string>;
    /**
     * Network settings for container deployment groups.
     */
    serviceSetting?: pulumi.Input<inputs.Tsf.DeployContainerGroupServiceSetting>;
    /**
     * image version name, v1.
     */
    tagName?: pulumi.Input<string>;
    /**
     * update Interval, is required when rolling update.
     */
    updateIvl?: pulumi.Input<number>;
    /**
     * Update method: 0 for fast update, 1 for rolling update.
     */
    updateType?: pulumi.Input<number>;
    /**
     * Whether to clear the volume information. Default is false.
     */
    volumeClean?: pulumi.Input<boolean>;
    /**
     * Volume information, as a list.
     */
    volumeInfoLists?: pulumi.Input<pulumi.Input<inputs.Tsf.DeployContainerGroupVolumeInfoList>[]>;
    /**
     * Volume mount point information, list type.
     */
    volumeMountInfoLists?: pulumi.Input<pulumi.Input<inputs.Tsf.DeployContainerGroupVolumeMountInfoList>[]>;
    /**
     * warmup setting.
     */
    warmupSetting?: pulumi.Input<inputs.Tsf.DeployContainerGroupWarmupSetting>;
}

/**
 * The set of arguments for constructing a DeployContainerGroup resource.
 */
export interface DeployContainerGroupArgs {
    /**
     * The maximum number of CPU cores allocated to the agent container corresponds to the limit field in Kubernetes.
     */
    agentCpuLimit?: pulumi.Input<string>;
    /**
     * The number of CPU cores allocated to the agent container corresponds to the request field in Kubernetes.
     */
    agentCpuRequest?: pulumi.Input<string>;
    /**
     * The maximum amount of memory in MiB allocated to the agent container corresponds to the &amp;#39;limit&amp;#39; field in
     * Kubernetes.
     */
    agentMemLimit?: pulumi.Input<string>;
    /**
     * The amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
     */
    agentMemRequest?: pulumi.Input<string>;
    /**
     * javaagent info: SERVICE_AGENT/OT_AGENT.
     */
    agentProfileLists?: pulumi.Input<pulumi.Input<inputs.Tsf.DeployContainerGroupAgentProfileList>[]>;
    /**
     * The maximum number of CPU cores for the business container, corresponding to the limit in K8S. If not specified, it
     * defaults to twice the request.
     */
    cpuLimit?: pulumi.Input<string>;
    /**
     * The number of CPU cores allocated to the business container, corresponding to the request in K8S. The default value is
     * 0.25.
     */
    cpuRequest?: pulumi.Input<string>;
    /**
     * Whether to deploy the agent container. If this parameter is not specified, the agent container will not be deployed by
     * default.
     */
    deployAgent?: pulumi.Input<boolean>;
    /**
     * Not start right away.
     */
    doNotStart?: pulumi.Input<boolean>;
    /**
     * The environment variables that the application runs in the deployment group. If this parameter is not specified, no
     * additional environment variables are set by default.
     */
    envs?: pulumi.Input<pulumi.Input<inputs.Tsf.DeployContainerGroupEnv>[]>;
    /**
     * group Id.
     */
    groupId: pulumi.Input<string>;
    /**
     * The configuration information for health checks. If this parameter is not specified, the health check is not set by
     * default.
     */
    healthCheckSettings?: pulumi.Input<inputs.Tsf.DeployContainerGroupHealthCheckSettings>;
    /**
     * Whether to perform incremental deployment. The default value is false, which means full update.
     */
    incrementalDeployment?: pulumi.Input<boolean>;
    /**
     * instance number.
     */
    instanceNum: pulumi.Input<number>;
    /**
     * The maximum amount of CPU cores allocated to the istio proxy container corresponds to the &amp;#39;limit&amp;#39; field
     * in Kubernetes.
     */
    istioCpuLimit?: pulumi.Input<string>;
    /**
     * The number of CPU cores allocated to the istio proxy container corresponds to the &amp;#39;request&amp;#39; field in
     * Kubernetes.
     */
    istioCpuRequest?: pulumi.Input<string>;
    /**
     * The maximum amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
     */
    istioMemLimit?: pulumi.Input<string>;
    /**
     * The amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
     */
    istioMemRequest?: pulumi.Input<string>;
    /**
     * jvm options.
     */
    jvmOpts?: pulumi.Input<string>;
    /**
     * MaxSurge parameter in Kubernetes rolling update strategy.
     */
    maxSurge?: pulumi.Input<string>;
    /**
     * MaxUnavailable parameter in Kubernetes rolling update strategy.
     */
    maxUnavailable?: pulumi.Input<string>;
    /**
     * The maximum memory size in MiB for the business container, corresponding to the limit in K8S. If not specified, it
     * defaults to twice the request.
     */
    memLimit?: pulumi.Input<string>;
    /**
     * The amount of memory in MiB allocated to the business container, corresponding to the request in K8S. The default value
     * is 640 MiB.
     */
    memRequest?: pulumi.Input<string>;
    /**
     * (Priority use) New image name, such as /tsf/nginx.
     */
    repoName?: pulumi.Input<string>;
    /**
     * repo type, tcr or leave it blank.
     */
    repoType?: pulumi.Input<string>;
    /**
     * old image name, eg: /tsf/server.
     */
    reponame?: pulumi.Input<string>;
    /**
     * Node scheduling strategy. If this parameter is not specified, the node scheduling strategy will not be used by default.
     */
    schedulingStrategy?: pulumi.Input<inputs.Tsf.DeployContainerGroupSchedulingStrategy>;
    /**
     * image server.
     */
    server?: pulumi.Input<string>;
    /**
     * Network settings for container deployment groups.
     */
    serviceSetting?: pulumi.Input<inputs.Tsf.DeployContainerGroupServiceSetting>;
    /**
     * image version name, v1.
     */
    tagName: pulumi.Input<string>;
    /**
     * update Interval, is required when rolling update.
     */
    updateIvl?: pulumi.Input<number>;
    /**
     * Update method: 0 for fast update, 1 for rolling update.
     */
    updateType?: pulumi.Input<number>;
    /**
     * Whether to clear the volume information. Default is false.
     */
    volumeClean?: pulumi.Input<boolean>;
    /**
     * Volume information, as a list.
     */
    volumeInfoLists?: pulumi.Input<pulumi.Input<inputs.Tsf.DeployContainerGroupVolumeInfoList>[]>;
    /**
     * Volume mount point information, list type.
     */
    volumeMountInfoLists?: pulumi.Input<pulumi.Input<inputs.Tsf.DeployContainerGroupVolumeMountInfoList>[]>;
    /**
     * warmup setting.
     */
    warmupSetting?: pulumi.Input<inputs.Tsf.DeployContainerGroupWarmupSetting>;
}
