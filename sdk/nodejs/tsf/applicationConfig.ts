// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class ApplicationConfig extends pulumi.CustomResource {
    /**
     * Get an existing ApplicationConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationConfigState, opts?: pulumi.CustomResourceOptions): ApplicationConfig {
        return new ApplicationConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Tsf/applicationConfig:ApplicationConfig';

    /**
     * Returns true if the given object is an instance of ApplicationConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApplicationConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApplicationConfig.__pulumiType;
    }

    /**
     * Application ID.
     */
    public readonly applicationId!: pulumi.Output<string>;
    /**
     * configuration item name.
     */
    public readonly configName!: pulumi.Output<string>;
    /**
     * configuration item value type.
     */
    public readonly configType!: pulumi.Output<string | undefined>;
    /**
     * configuration item value.
     */
    public readonly configValue!: pulumi.Output<string>;
    /**
     * configuration item version.
     */
    public readonly configVersion!: pulumi.Output<string>;
    /**
     * configuration item version description.
     */
    public readonly configVersionDesc!: pulumi.Output<string | undefined>;
    /**
     * Base64 encoded configuration items.
     */
    public readonly encodeWithBase64!: pulumi.Output<boolean | undefined>;
    /**
     * Program id list.
     */
    public readonly programIdLists!: pulumi.Output<string[] | undefined>;

    /**
     * Create a ApplicationConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationConfigArgs | ApplicationConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplicationConfigState | undefined;
            resourceInputs["applicationId"] = state ? state.applicationId : undefined;
            resourceInputs["configName"] = state ? state.configName : undefined;
            resourceInputs["configType"] = state ? state.configType : undefined;
            resourceInputs["configValue"] = state ? state.configValue : undefined;
            resourceInputs["configVersion"] = state ? state.configVersion : undefined;
            resourceInputs["configVersionDesc"] = state ? state.configVersionDesc : undefined;
            resourceInputs["encodeWithBase64"] = state ? state.encodeWithBase64 : undefined;
            resourceInputs["programIdLists"] = state ? state.programIdLists : undefined;
        } else {
            const args = argsOrState as ApplicationConfigArgs | undefined;
            if ((!args || args.applicationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'applicationId'");
            }
            if ((!args || args.configName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configName'");
            }
            if ((!args || args.configValue === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configValue'");
            }
            if ((!args || args.configVersion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configVersion'");
            }
            resourceInputs["applicationId"] = args ? args.applicationId : undefined;
            resourceInputs["configName"] = args ? args.configName : undefined;
            resourceInputs["configType"] = args ? args.configType : undefined;
            resourceInputs["configValue"] = args ? args.configValue : undefined;
            resourceInputs["configVersion"] = args ? args.configVersion : undefined;
            resourceInputs["configVersionDesc"] = args ? args.configVersionDesc : undefined;
            resourceInputs["encodeWithBase64"] = args ? args.encodeWithBase64 : undefined;
            resourceInputs["programIdLists"] = args ? args.programIdLists : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApplicationConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApplicationConfig resources.
 */
export interface ApplicationConfigState {
    /**
     * Application ID.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * configuration item name.
     */
    configName?: pulumi.Input<string>;
    /**
     * configuration item value type.
     */
    configType?: pulumi.Input<string>;
    /**
     * configuration item value.
     */
    configValue?: pulumi.Input<string>;
    /**
     * configuration item version.
     */
    configVersion?: pulumi.Input<string>;
    /**
     * configuration item version description.
     */
    configVersionDesc?: pulumi.Input<string>;
    /**
     * Base64 encoded configuration items.
     */
    encodeWithBase64?: pulumi.Input<boolean>;
    /**
     * Program id list.
     */
    programIdLists?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ApplicationConfig resource.
 */
export interface ApplicationConfigArgs {
    /**
     * Application ID.
     */
    applicationId: pulumi.Input<string>;
    /**
     * configuration item name.
     */
    configName: pulumi.Input<string>;
    /**
     * configuration item value type.
     */
    configType?: pulumi.Input<string>;
    /**
     * configuration item value.
     */
    configValue: pulumi.Input<string>;
    /**
     * configuration item version.
     */
    configVersion: pulumi.Input<string>;
    /**
     * configuration item version description.
     */
    configVersionDesc?: pulumi.Input<string>;
    /**
     * Base64 encoded configuration items.
     */
    encodeWithBase64?: pulumi.Input<boolean>;
    /**
     * Program id list.
     */
    programIdLists?: pulumi.Input<pulumi.Input<string>[]>;
}
