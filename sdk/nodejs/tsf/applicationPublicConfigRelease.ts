// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class ApplicationPublicConfigRelease extends pulumi.CustomResource {
    /**
     * Get an existing ApplicationPublicConfigRelease resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ApplicationPublicConfigReleaseState, opts?: pulumi.CustomResourceOptions): ApplicationPublicConfigRelease {
        return new ApplicationPublicConfigRelease(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Tsf/applicationPublicConfigRelease:ApplicationPublicConfigRelease';

    /**
     * Returns true if the given object is an instance of ApplicationPublicConfigRelease.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ApplicationPublicConfigRelease {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ApplicationPublicConfigRelease.__pulumiType;
    }

    /**
     * ConfigId.
     */
    public readonly configId!: pulumi.Output<string>;
    /**
     * namespace-id.
     */
    public readonly namespaceId!: pulumi.Output<string>;
    /**
     * Release description.
     */
    public readonly releaseDesc!: pulumi.Output<string | undefined>;

    /**
     * Create a ApplicationPublicConfigRelease resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ApplicationPublicConfigReleaseArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ApplicationPublicConfigReleaseArgs | ApplicationPublicConfigReleaseState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ApplicationPublicConfigReleaseState | undefined;
            resourceInputs["configId"] = state ? state.configId : undefined;
            resourceInputs["namespaceId"] = state ? state.namespaceId : undefined;
            resourceInputs["releaseDesc"] = state ? state.releaseDesc : undefined;
        } else {
            const args = argsOrState as ApplicationPublicConfigReleaseArgs | undefined;
            if ((!args || args.configId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'configId'");
            }
            if ((!args || args.namespaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespaceId'");
            }
            resourceInputs["configId"] = args ? args.configId : undefined;
            resourceInputs["namespaceId"] = args ? args.namespaceId : undefined;
            resourceInputs["releaseDesc"] = args ? args.releaseDesc : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ApplicationPublicConfigRelease.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ApplicationPublicConfigRelease resources.
 */
export interface ApplicationPublicConfigReleaseState {
    /**
     * ConfigId.
     */
    configId?: pulumi.Input<string>;
    /**
     * namespace-id.
     */
    namespaceId?: pulumi.Input<string>;
    /**
     * Release description.
     */
    releaseDesc?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ApplicationPublicConfigRelease resource.
 */
export interface ApplicationPublicConfigReleaseArgs {
    /**
     * ConfigId.
     */
    configId: pulumi.Input<string>;
    /**
     * namespace-id.
     */
    namespaceId: pulumi.Input<string>;
    /**
     * Release description.
     */
    releaseDesc?: pulumi.Input<string>;
}
