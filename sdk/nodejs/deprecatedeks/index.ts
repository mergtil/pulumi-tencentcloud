// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ClusterArgs, ClusterState } from "./cluster";
export type Cluster = import("./cluster").Cluster;
export const Cluster: typeof import("./cluster").Cluster = null as any;
utilities.lazyLoad(exports, ["Cluster"], () => require("./cluster"));

export { ContainerInstanceArgs, ContainerInstanceState } from "./containerInstance";
export type ContainerInstance = import("./containerInstance").ContainerInstance;
export const ContainerInstance: typeof import("./containerInstance").ContainerInstance = null as any;
utilities.lazyLoad(exports, ["ContainerInstance"], () => require("./containerInstance"));

export { GetClusterCredentialArgs, GetClusterCredentialResult, GetClusterCredentialOutputArgs } from "./getClusterCredential";
export const getClusterCredential: typeof import("./getClusterCredential").getClusterCredential = null as any;
export const getClusterCredentialOutput: typeof import("./getClusterCredential").getClusterCredentialOutput = null as any;
utilities.lazyLoad(exports, ["getClusterCredential","getClusterCredentialOutput"], () => require("./getClusterCredential"));

export { GetClustersArgs, GetClustersResult, GetClustersOutputArgs } from "./getClusters";
export const getClusters: typeof import("./getClusters").getClusters = null as any;
export const getClustersOutput: typeof import("./getClusters").getClustersOutput = null as any;
utilities.lazyLoad(exports, ["getClusters","getClustersOutput"], () => require("./getClusters"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "tencentcloud:Deprecatedeks/cluster:Cluster":
                return new Cluster(name, <any>undefined, { urn })
            case "tencentcloud:Deprecatedeks/containerInstance:ContainerInstance":
                return new ContainerInstance(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("tencentcloud", "Deprecatedeks/cluster", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Deprecatedeks/containerInstance", _module)
