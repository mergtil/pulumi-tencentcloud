// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class IncreBackupMigration extends pulumi.CustomResource {
    /**
     * Get an existing IncreBackupMigration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IncreBackupMigrationState, opts?: pulumi.CustomResourceOptions): IncreBackupMigration {
        return new IncreBackupMigration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Sqlserver/increBackupMigration:IncreBackupMigration';

    /**
     * Returns true if the given object is an instance of IncreBackupMigration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IncreBackupMigration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IncreBackupMigration.__pulumiType;
    }

    /**
     * Incremental backup file. If the UploadType of a full backup file is COS_URL, fill in URL here. If the UploadType is
     * COS_UPLOAD, fill in the name of the backup file here. Only 1 backup file is supported, but a backup file can involve
     * multiple databases.
     */
    public readonly backupFiles!: pulumi.Output<string[] | undefined>;
    /**
     * Backup import task ID, which is returned through the API CreateBackupMigration.
     */
    public readonly backupMigrationId!: pulumi.Output<string>;
    /**
     * Incremental import task ID.
     */
    public /*out*/ readonly incrementalMigrationId!: pulumi.Output<string>;
    /**
     * ID of imported target instance.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * Whether restoration is required. No: not required. Yes: required. Not required by default.
     */
    public readonly isRecovery!: pulumi.Output<string | undefined>;

    /**
     * Create a IncreBackupMigration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IncreBackupMigrationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IncreBackupMigrationArgs | IncreBackupMigrationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IncreBackupMigrationState | undefined;
            resourceInputs["backupFiles"] = state ? state.backupFiles : undefined;
            resourceInputs["backupMigrationId"] = state ? state.backupMigrationId : undefined;
            resourceInputs["incrementalMigrationId"] = state ? state.incrementalMigrationId : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["isRecovery"] = state ? state.isRecovery : undefined;
        } else {
            const args = argsOrState as IncreBackupMigrationArgs | undefined;
            if ((!args || args.backupMigrationId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backupMigrationId'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            resourceInputs["backupFiles"] = args ? args.backupFiles : undefined;
            resourceInputs["backupMigrationId"] = args ? args.backupMigrationId : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["isRecovery"] = args ? args.isRecovery : undefined;
            resourceInputs["incrementalMigrationId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IncreBackupMigration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IncreBackupMigration resources.
 */
export interface IncreBackupMigrationState {
    /**
     * Incremental backup file. If the UploadType of a full backup file is COS_URL, fill in URL here. If the UploadType is
     * COS_UPLOAD, fill in the name of the backup file here. Only 1 backup file is supported, but a backup file can involve
     * multiple databases.
     */
    backupFiles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Backup import task ID, which is returned through the API CreateBackupMigration.
     */
    backupMigrationId?: pulumi.Input<string>;
    /**
     * Incremental import task ID.
     */
    incrementalMigrationId?: pulumi.Input<string>;
    /**
     * ID of imported target instance.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Whether restoration is required. No: not required. Yes: required. Not required by default.
     */
    isRecovery?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IncreBackupMigration resource.
 */
export interface IncreBackupMigrationArgs {
    /**
     * Incremental backup file. If the UploadType of a full backup file is COS_URL, fill in URL here. If the UploadType is
     * COS_UPLOAD, fill in the name of the backup file here. Only 1 backup file is supported, but a backup file can involve
     * multiple databases.
     */
    backupFiles?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Backup import task ID, which is returned through the API CreateBackupMigration.
     */
    backupMigrationId: pulumi.Input<string>;
    /**
     * ID of imported target instance.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Whether restoration is required. No: not required. Yes: required. Not required by default.
     */
    isRecovery?: pulumi.Input<string>;
}
