// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class Tablegroup extends pulumi.CustomResource {
    /**
     * Get an existing Tablegroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TablegroupState, opts?: pulumi.CustomResourceOptions): Tablegroup {
        return new Tablegroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Tcaplus/tablegroup:Tablegroup';

    /**
     * Returns true if the given object is an instance of Tablegroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Tablegroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Tablegroup.__pulumiType;
    }

    /**
     * ID of the TcaplusDB cluster to which the table group belongs.
     */
    public readonly clusterId!: pulumi.Output<string>;
    /**
     * Create time of the TcaplusDB table group.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Number of tables.
     */
    public /*out*/ readonly tableCount!: pulumi.Output<number>;
    /**
     * Name of the TcaplusDB table group. Name length should be between 1 and 30.
     */
    public readonly tablegroupName!: pulumi.Output<string>;
    /**
     * Total storage size (MB).
     */
    public /*out*/ readonly totalSize!: pulumi.Output<number>;

    /**
     * Create a Tablegroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TablegroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TablegroupArgs | TablegroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TablegroupState | undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["tableCount"] = state ? state.tableCount : undefined;
            resourceInputs["tablegroupName"] = state ? state.tablegroupName : undefined;
            resourceInputs["totalSize"] = state ? state.totalSize : undefined;
        } else {
            const args = argsOrState as TablegroupArgs | undefined;
            if ((!args || args.clusterId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterId'");
            }
            if ((!args || args.tablegroupName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tablegroupName'");
            }
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["tablegroupName"] = args ? args.tablegroupName : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["tableCount"] = undefined /*out*/;
            resourceInputs["totalSize"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Tablegroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Tablegroup resources.
 */
export interface TablegroupState {
    /**
     * ID of the TcaplusDB cluster to which the table group belongs.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Create time of the TcaplusDB table group.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Number of tables.
     */
    tableCount?: pulumi.Input<number>;
    /**
     * Name of the TcaplusDB table group. Name length should be between 1 and 30.
     */
    tablegroupName?: pulumi.Input<string>;
    /**
     * Total storage size (MB).
     */
    totalSize?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a Tablegroup resource.
 */
export interface TablegroupArgs {
    /**
     * ID of the TcaplusDB cluster to which the table group belongs.
     */
    clusterId: pulumi.Input<string>;
    /**
     * Name of the TcaplusDB table group. Name length should be between 1 and 30.
     */
    tablegroupName: pulumi.Input<string>;
}
