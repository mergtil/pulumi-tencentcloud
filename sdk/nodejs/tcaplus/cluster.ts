// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class Cluster extends pulumi.CustomResource {
    /**
     * Get an existing Cluster resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ClusterState, opts?: pulumi.CustomResourceOptions): Cluster {
        return new Cluster(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Tcaplus/cluster:Cluster';

    /**
     * Returns true if the given object is an instance of Cluster.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Cluster {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Cluster.__pulumiType;
    }

    /**
     * Access ID of the TcaplusDB cluster.For TcaplusDB SDK connect.
     */
    public /*out*/ readonly apiAccessId!: pulumi.Output<string>;
    /**
     * Access IP of the TcaplusDB cluster.For TcaplusDB SDK connect.
     */
    public /*out*/ readonly apiAccessIp!: pulumi.Output<string>;
    /**
     * Access port of the TcaplusDB cluster.For TcaplusDB SDK connect.
     */
    public /*out*/ readonly apiAccessPort!: pulumi.Output<number>;
    /**
     * Name of the TcaplusDB cluster. Name length should be between 1 and 30.
     */
    public readonly clusterName!: pulumi.Output<string>;
    /**
     * Create time of the TcaplusDB cluster.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * IDL type of the TcaplusDB cluster. Valid values: `PROTO` and `TDR`.
     */
    public readonly idlType!: pulumi.Output<string>;
    /**
     * Network type of the TcaplusDB cluster.
     */
    public /*out*/ readonly networkType!: pulumi.Output<string>;
    /**
     * Expiration time of old password after password update, unit: second.
     */
    public readonly oldPasswordExpireLast!: pulumi.Output<number | undefined>;
    /**
     * Expiration time of the old password. If `password_status` is `unmodifiable`, it means the old password has not yet
     * expired.
     */
    public /*out*/ readonly oldPasswordExpireTime!: pulumi.Output<string>;
    /**
     * Password of the TcaplusDB cluster. Password length should be between 12 and 16. The password must be a *mix* of
     * uppercase letters (A-Z), lowercase *letters* (a-z) and *numbers* (0-9).
     */
    public readonly password!: pulumi.Output<string>;
    /**
     * Password status of the TcaplusDB cluster. Valid values: `unmodifiable`, `modifiable`. `unmodifiable`. which means the
     * password can not be changed in this moment; `modifiable`, which means the password can be changed in this moment.
     */
    public /*out*/ readonly passwordStatus!: pulumi.Output<string>;
    /**
     * Subnet id of the TcaplusDB cluster.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * VPC id of the TcaplusDB cluster.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a Cluster resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ClusterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ClusterArgs | ClusterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ClusterState | undefined;
            resourceInputs["apiAccessId"] = state ? state.apiAccessId : undefined;
            resourceInputs["apiAccessIp"] = state ? state.apiAccessIp : undefined;
            resourceInputs["apiAccessPort"] = state ? state.apiAccessPort : undefined;
            resourceInputs["clusterName"] = state ? state.clusterName : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["idlType"] = state ? state.idlType : undefined;
            resourceInputs["networkType"] = state ? state.networkType : undefined;
            resourceInputs["oldPasswordExpireLast"] = state ? state.oldPasswordExpireLast : undefined;
            resourceInputs["oldPasswordExpireTime"] = state ? state.oldPasswordExpireTime : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["passwordStatus"] = state ? state.passwordStatus : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as ClusterArgs | undefined;
            if ((!args || args.clusterName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'clusterName'");
            }
            if ((!args || args.idlType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'idlType'");
            }
            if ((!args || args.password === undefined) && !opts.urn) {
                throw new Error("Missing required property 'password'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["clusterName"] = args ? args.clusterName : undefined;
            resourceInputs["idlType"] = args ? args.idlType : undefined;
            resourceInputs["oldPasswordExpireLast"] = args ? args.oldPasswordExpireLast : undefined;
            resourceInputs["password"] = args?.password ? pulumi.secret(args.password) : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["apiAccessId"] = undefined /*out*/;
            resourceInputs["apiAccessIp"] = undefined /*out*/;
            resourceInputs["apiAccessPort"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["networkType"] = undefined /*out*/;
            resourceInputs["oldPasswordExpireTime"] = undefined /*out*/;
            resourceInputs["passwordStatus"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["password"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Cluster.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Cluster resources.
 */
export interface ClusterState {
    /**
     * Access ID of the TcaplusDB cluster.For TcaplusDB SDK connect.
     */
    apiAccessId?: pulumi.Input<string>;
    /**
     * Access IP of the TcaplusDB cluster.For TcaplusDB SDK connect.
     */
    apiAccessIp?: pulumi.Input<string>;
    /**
     * Access port of the TcaplusDB cluster.For TcaplusDB SDK connect.
     */
    apiAccessPort?: pulumi.Input<number>;
    /**
     * Name of the TcaplusDB cluster. Name length should be between 1 and 30.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * Create time of the TcaplusDB cluster.
     */
    createTime?: pulumi.Input<string>;
    /**
     * IDL type of the TcaplusDB cluster. Valid values: `PROTO` and `TDR`.
     */
    idlType?: pulumi.Input<string>;
    /**
     * Network type of the TcaplusDB cluster.
     */
    networkType?: pulumi.Input<string>;
    /**
     * Expiration time of old password after password update, unit: second.
     */
    oldPasswordExpireLast?: pulumi.Input<number>;
    /**
     * Expiration time of the old password. If `password_status` is `unmodifiable`, it means the old password has not yet
     * expired.
     */
    oldPasswordExpireTime?: pulumi.Input<string>;
    /**
     * Password of the TcaplusDB cluster. Password length should be between 12 and 16. The password must be a *mix* of
     * uppercase letters (A-Z), lowercase *letters* (a-z) and *numbers* (0-9).
     */
    password?: pulumi.Input<string>;
    /**
     * Password status of the TcaplusDB cluster. Valid values: `unmodifiable`, `modifiable`. `unmodifiable`. which means the
     * password can not be changed in this moment; `modifiable`, which means the password can be changed in this moment.
     */
    passwordStatus?: pulumi.Input<string>;
    /**
     * Subnet id of the TcaplusDB cluster.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * VPC id of the TcaplusDB cluster.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Cluster resource.
 */
export interface ClusterArgs {
    /**
     * Name of the TcaplusDB cluster. Name length should be between 1 and 30.
     */
    clusterName: pulumi.Input<string>;
    /**
     * IDL type of the TcaplusDB cluster. Valid values: `PROTO` and `TDR`.
     */
    idlType: pulumi.Input<string>;
    /**
     * Expiration time of old password after password update, unit: second.
     */
    oldPasswordExpireLast?: pulumi.Input<number>;
    /**
     * Password of the TcaplusDB cluster. Password length should be between 12 and 16. The password must be a *mix* of
     * uppercase letters (A-Z), lowercase *letters* (a-z) and *numbers* (0-9).
     */
    password: pulumi.Input<string>;
    /**
     * Subnet id of the TcaplusDB cluster.
     */
    subnetId: pulumi.Input<string>;
    /**
     * VPC id of the TcaplusDB cluster.
     */
    vpcId: pulumi.Input<string>;
}
