// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getRouteConflicts(args: GetRouteConflictsArgs, opts?: pulumi.InvokeOptions): Promise<GetRouteConflictsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Vpc/getRouteConflicts:getRouteConflicts", {
        "destinationCidrBlocks": args.destinationCidrBlocks,
        "resultOutputFile": args.resultOutputFile,
        "routeTableId": args.routeTableId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRouteConflicts.
 */
export interface GetRouteConflictsArgs {
    destinationCidrBlocks: string[];
    resultOutputFile?: string;
    routeTableId: string;
}

/**
 * A collection of values returned by getRouteConflicts.
 */
export interface GetRouteConflictsResult {
    readonly destinationCidrBlocks: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly resultOutputFile?: string;
    readonly routeConflictSets: outputs.Vpc.GetRouteConflictsRouteConflictSet[];
    readonly routeTableId: string;
}
export function getRouteConflictsOutput(args: GetRouteConflictsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRouteConflictsResult> {
    return pulumi.output(args).apply((a: any) => getRouteConflicts(a, opts))
}

/**
 * A collection of arguments for invoking getRouteConflicts.
 */
export interface GetRouteConflictsOutputArgs {
    destinationCidrBlocks: pulumi.Input<pulumi.Input<string>[]>;
    resultOutputFile?: pulumi.Input<string>;
    routeTableId: pulumi.Input<string>;
}
