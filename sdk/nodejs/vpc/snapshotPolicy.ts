// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class SnapshotPolicy extends pulumi.CustomResource {
    /**
     * Get an existing SnapshotPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SnapshotPolicyState, opts?: pulumi.CustomResourceOptions): SnapshotPolicy {
        return new SnapshotPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Vpc/snapshotPolicy:SnapshotPolicy';

    /**
     * Returns true if the given object is an instance of SnapshotPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SnapshotPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SnapshotPolicy.__pulumiType;
    }

    /**
     * Time backup strategy. Note: This field may return null, indicating that no valid value can be obtained.
     */
    public readonly backupPolicies!: pulumi.Output<outputs.Vpc.SnapshotPolicyBackupPolicy[] | undefined>;
    /**
     * Backup strategy type, `operate`: operate backup, `time`: schedule backup.
     */
    public readonly backupType!: pulumi.Output<string>;
    /**
     * cos bucket.
     */
    public readonly cosBucket!: pulumi.Output<string>;
    /**
     * The region where the cos bucket is located.
     */
    public readonly cosRegion!: pulumi.Output<string>;
    /**
     * Whether to create a new cos bucket, the default is False.Note: This field may return null, indicating that no valid
     * value can be obtained.
     */
    public readonly createNewCos!: pulumi.Output<boolean>;
    /**
     * Creation time.Note: This field may return null, indicating that no valid value can be obtained.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Enabled state, True-enabled, False-disabled, the default is True.
     */
    public /*out*/ readonly enable!: pulumi.Output<boolean>;
    /**
     * The retention time supports 1 to 365 days.
     */
    public readonly keepTime!: pulumi.Output<number>;
    /**
     * Snapshot policy Id.
     */
    public /*out*/ readonly snapshotPolicyId!: pulumi.Output<string>;
    /**
     * Snapshot policy name.
     */
    public readonly snapshotPolicyName!: pulumi.Output<string>;

    /**
     * Create a SnapshotPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SnapshotPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SnapshotPolicyArgs | SnapshotPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SnapshotPolicyState | undefined;
            resourceInputs["backupPolicies"] = state ? state.backupPolicies : undefined;
            resourceInputs["backupType"] = state ? state.backupType : undefined;
            resourceInputs["cosBucket"] = state ? state.cosBucket : undefined;
            resourceInputs["cosRegion"] = state ? state.cosRegion : undefined;
            resourceInputs["createNewCos"] = state ? state.createNewCos : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["enable"] = state ? state.enable : undefined;
            resourceInputs["keepTime"] = state ? state.keepTime : undefined;
            resourceInputs["snapshotPolicyId"] = state ? state.snapshotPolicyId : undefined;
            resourceInputs["snapshotPolicyName"] = state ? state.snapshotPolicyName : undefined;
        } else {
            const args = argsOrState as SnapshotPolicyArgs | undefined;
            if ((!args || args.backupType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'backupType'");
            }
            if ((!args || args.cosBucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cosBucket'");
            }
            if ((!args || args.cosRegion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cosRegion'");
            }
            if ((!args || args.createNewCos === undefined) && !opts.urn) {
                throw new Error("Missing required property 'createNewCos'");
            }
            if ((!args || args.keepTime === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keepTime'");
            }
            if ((!args || args.snapshotPolicyName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'snapshotPolicyName'");
            }
            resourceInputs["backupPolicies"] = args ? args.backupPolicies : undefined;
            resourceInputs["backupType"] = args ? args.backupType : undefined;
            resourceInputs["cosBucket"] = args ? args.cosBucket : undefined;
            resourceInputs["cosRegion"] = args ? args.cosRegion : undefined;
            resourceInputs["createNewCos"] = args ? args.createNewCos : undefined;
            resourceInputs["keepTime"] = args ? args.keepTime : undefined;
            resourceInputs["snapshotPolicyName"] = args ? args.snapshotPolicyName : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["enable"] = undefined /*out*/;
            resourceInputs["snapshotPolicyId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SnapshotPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SnapshotPolicy resources.
 */
export interface SnapshotPolicyState {
    /**
     * Time backup strategy. Note: This field may return null, indicating that no valid value can be obtained.
     */
    backupPolicies?: pulumi.Input<pulumi.Input<inputs.Vpc.SnapshotPolicyBackupPolicy>[]>;
    /**
     * Backup strategy type, `operate`: operate backup, `time`: schedule backup.
     */
    backupType?: pulumi.Input<string>;
    /**
     * cos bucket.
     */
    cosBucket?: pulumi.Input<string>;
    /**
     * The region where the cos bucket is located.
     */
    cosRegion?: pulumi.Input<string>;
    /**
     * Whether to create a new cos bucket, the default is False.Note: This field may return null, indicating that no valid
     * value can be obtained.
     */
    createNewCos?: pulumi.Input<boolean>;
    /**
     * Creation time.Note: This field may return null, indicating that no valid value can be obtained.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Enabled state, True-enabled, False-disabled, the default is True.
     */
    enable?: pulumi.Input<boolean>;
    /**
     * The retention time supports 1 to 365 days.
     */
    keepTime?: pulumi.Input<number>;
    /**
     * Snapshot policy Id.
     */
    snapshotPolicyId?: pulumi.Input<string>;
    /**
     * Snapshot policy name.
     */
    snapshotPolicyName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a SnapshotPolicy resource.
 */
export interface SnapshotPolicyArgs {
    /**
     * Time backup strategy. Note: This field may return null, indicating that no valid value can be obtained.
     */
    backupPolicies?: pulumi.Input<pulumi.Input<inputs.Vpc.SnapshotPolicyBackupPolicy>[]>;
    /**
     * Backup strategy type, `operate`: operate backup, `time`: schedule backup.
     */
    backupType: pulumi.Input<string>;
    /**
     * cos bucket.
     */
    cosBucket: pulumi.Input<string>;
    /**
     * The region where the cos bucket is located.
     */
    cosRegion: pulumi.Input<string>;
    /**
     * Whether to create a new cos bucket, the default is False.Note: This field may return null, indicating that no valid
     * value can be obtained.
     */
    createNewCos: pulumi.Input<boolean>;
    /**
     * The retention time supports 1 to 365 days.
     */
    keepTime: pulumi.Input<number>;
    /**
     * Snapshot policy name.
     */
    snapshotPolicyName: pulumi.Input<string>;
}
