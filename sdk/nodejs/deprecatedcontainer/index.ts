// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { ClusterArgs, ClusterState } from "./cluster";
export type Cluster = import("./cluster").Cluster;
export const Cluster: typeof import("./cluster").Cluster = null as any;
utilities.lazyLoad(exports, ["Cluster"], () => require("./cluster"));

export { ClusterInstanceArgs, ClusterInstanceState } from "./clusterInstance";
export type ClusterInstance = import("./clusterInstance").ClusterInstance;
export const ClusterInstance: typeof import("./clusterInstance").ClusterInstance = null as any;
utilities.lazyLoad(exports, ["ClusterInstance"], () => require("./clusterInstance"));

export { GetClusterInstancesArgs, GetClusterInstancesResult, GetClusterInstancesOutputArgs } from "./getClusterInstances";
export const getClusterInstances: typeof import("./getClusterInstances").getClusterInstances = null as any;
export const getClusterInstancesOutput: typeof import("./getClusterInstances").getClusterInstancesOutput = null as any;
utilities.lazyLoad(exports, ["getClusterInstances","getClusterInstancesOutput"], () => require("./getClusterInstances"));

export { GetClustersArgs, GetClustersResult, GetClustersOutputArgs } from "./getClusters";
export const getClusters: typeof import("./getClusters").getClusters = null as any;
export const getClustersOutput: typeof import("./getClusters").getClustersOutput = null as any;
utilities.lazyLoad(exports, ["getClusters","getClustersOutput"], () => require("./getClusters"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "tencentcloud:Deprecatedcontainer/cluster:Cluster":
                return new Cluster(name, <any>undefined, { urn })
            case "tencentcloud:Deprecatedcontainer/clusterInstance:ClusterInstance":
                return new ClusterInstance(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("tencentcloud", "Deprecatedcontainer/cluster", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Deprecatedcontainer/clusterInstance", _module)
