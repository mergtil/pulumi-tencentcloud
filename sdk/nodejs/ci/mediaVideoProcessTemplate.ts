// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class MediaVideoProcessTemplate extends pulumi.CustomResource {
    /**
     * Get an existing MediaVideoProcessTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MediaVideoProcessTemplateState, opts?: pulumi.CustomResourceOptions): MediaVideoProcessTemplate {
        return new MediaVideoProcessTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Ci/mediaVideoProcessTemplate:MediaVideoProcessTemplate';

    /**
     * Returns true if the given object is an instance of MediaVideoProcessTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MediaVideoProcessTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MediaVideoProcessTemplate.__pulumiType;
    }

    /**
     * bucket name.
     */
    public readonly bucket!: pulumi.Output<string>;
    /**
     * color enhancement.
     */
    public readonly colorEnhance!: pulumi.Output<outputs.Ci.MediaVideoProcessTemplateColorEnhance | undefined>;
    /**
     * detail enhancement, ColorEnhance and MsSharpen cannot both be empty.
     */
    public readonly msSharpen!: pulumi.Output<outputs.Ci.MediaVideoProcessTemplateMsSharpen | undefined>;
    /**
     * The template name only supports `Chinese`, `English`, `numbers`, `_`, `-` and `*`.
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a MediaVideoProcessTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MediaVideoProcessTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MediaVideoProcessTemplateArgs | MediaVideoProcessTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MediaVideoProcessTemplateState | undefined;
            resourceInputs["bucket"] = state ? state.bucket : undefined;
            resourceInputs["colorEnhance"] = state ? state.colorEnhance : undefined;
            resourceInputs["msSharpen"] = state ? state.msSharpen : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as MediaVideoProcessTemplateArgs | undefined;
            if ((!args || args.bucket === undefined) && !opts.urn) {
                throw new Error("Missing required property 'bucket'");
            }
            resourceInputs["bucket"] = args ? args.bucket : undefined;
            resourceInputs["colorEnhance"] = args ? args.colorEnhance : undefined;
            resourceInputs["msSharpen"] = args ? args.msSharpen : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MediaVideoProcessTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MediaVideoProcessTemplate resources.
 */
export interface MediaVideoProcessTemplateState {
    /**
     * bucket name.
     */
    bucket?: pulumi.Input<string>;
    /**
     * color enhancement.
     */
    colorEnhance?: pulumi.Input<inputs.Ci.MediaVideoProcessTemplateColorEnhance>;
    /**
     * detail enhancement, ColorEnhance and MsSharpen cannot both be empty.
     */
    msSharpen?: pulumi.Input<inputs.Ci.MediaVideoProcessTemplateMsSharpen>;
    /**
     * The template name only supports `Chinese`, `English`, `numbers`, `_`, `-` and `*`.
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a MediaVideoProcessTemplate resource.
 */
export interface MediaVideoProcessTemplateArgs {
    /**
     * bucket name.
     */
    bucket: pulumi.Input<string>;
    /**
     * color enhancement.
     */
    colorEnhance?: pulumi.Input<inputs.Ci.MediaVideoProcessTemplateColorEnhance>;
    /**
     * detail enhancement, ColorEnhance and MsSharpen cannot both be empty.
     */
    msSharpen?: pulumi.Input<inputs.Ci.MediaVideoProcessTemplateMsSharpen>;
    /**
     * The template name only supports `Chinese`, `English`, `numbers`, `_`, `-` and `*`.
     */
    name?: pulumi.Input<string>;
}
