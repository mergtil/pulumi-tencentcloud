// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getDisks(args?: GetDisksArgs, opts?: pulumi.InvokeOptions): Promise<GetDisksResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Lighthouse/getDisks:getDisks", {
        "diskIds": args.diskIds,
        "filters": args.filters,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getDisks.
 */
export interface GetDisksArgs {
    diskIds?: string[];
    filters?: inputs.Lighthouse.GetDisksFilter[];
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getDisks.
 */
export interface GetDisksResult {
    readonly diskIds?: string[];
    readonly diskLists: outputs.Lighthouse.GetDisksDiskList[];
    readonly filters?: outputs.Lighthouse.GetDisksFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly resultOutputFile?: string;
}
export function getDisksOutput(args?: GetDisksOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDisksResult> {
    return pulumi.output(args).apply((a: any) => getDisks(a, opts))
}

/**
 * A collection of arguments for invoking getDisks.
 */
export interface GetDisksOutputArgs {
    diskIds?: pulumi.Input<pulumi.Input<string>[]>;
    filters?: pulumi.Input<pulumi.Input<inputs.Lighthouse.GetDisksFilterArgs>[]>;
    resultOutputFile?: pulumi.Input<string>;
}
