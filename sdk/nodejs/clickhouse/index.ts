// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { BackupArgs, BackupState } from "./backup";
export type Backup = import("./backup").Backup;
export const Backup: typeof import("./backup").Backup = null as any;
utilities.lazyLoad(exports, ["Backup"], () => require("./backup"));

export { BackupStrategyArgs, BackupStrategyState } from "./backupStrategy";
export type BackupStrategy = import("./backupStrategy").BackupStrategy;
export const BackupStrategy: typeof import("./backupStrategy").BackupStrategy = null as any;
utilities.lazyLoad(exports, ["BackupStrategy"], () => require("./backupStrategy"));

export { DeleteBackupDataArgs, DeleteBackupDataState } from "./deleteBackupData";
export type DeleteBackupData = import("./deleteBackupData").DeleteBackupData;
export const DeleteBackupData: typeof import("./deleteBackupData").DeleteBackupData = null as any;
utilities.lazyLoad(exports, ["DeleteBackupData"], () => require("./deleteBackupData"));

export { GetBackupJobDetailArgs, GetBackupJobDetailResult, GetBackupJobDetailOutputArgs } from "./getBackupJobDetail";
export const getBackupJobDetail: typeof import("./getBackupJobDetail").getBackupJobDetail = null as any;
export const getBackupJobDetailOutput: typeof import("./getBackupJobDetail").getBackupJobDetailOutput = null as any;
utilities.lazyLoad(exports, ["getBackupJobDetail","getBackupJobDetailOutput"], () => require("./getBackupJobDetail"));

export { GetBackupJobsArgs, GetBackupJobsResult, GetBackupJobsOutputArgs } from "./getBackupJobs";
export const getBackupJobs: typeof import("./getBackupJobs").getBackupJobs = null as any;
export const getBackupJobsOutput: typeof import("./getBackupJobs").getBackupJobsOutput = null as any;
utilities.lazyLoad(exports, ["getBackupJobs","getBackupJobsOutput"], () => require("./getBackupJobs"));

export { InstanceArgs, InstanceState } from "./instance";
export type Instance = import("./instance").Instance;
export const Instance: typeof import("./instance").Instance = null as any;
utilities.lazyLoad(exports, ["Instance"], () => require("./instance"));

export { RecoverBackupJobArgs, RecoverBackupJobState } from "./recoverBackupJob";
export type RecoverBackupJob = import("./recoverBackupJob").RecoverBackupJob;
export const RecoverBackupJob: typeof import("./recoverBackupJob").RecoverBackupJob = null as any;
utilities.lazyLoad(exports, ["RecoverBackupJob"], () => require("./recoverBackupJob"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "tencentcloud:Clickhouse/backup:Backup":
                return new Backup(name, <any>undefined, { urn })
            case "tencentcloud:Clickhouse/backupStrategy:BackupStrategy":
                return new BackupStrategy(name, <any>undefined, { urn })
            case "tencentcloud:Clickhouse/deleteBackupData:DeleteBackupData":
                return new DeleteBackupData(name, <any>undefined, { urn })
            case "tencentcloud:Clickhouse/instance:Instance":
                return new Instance(name, <any>undefined, { urn })
            case "tencentcloud:Clickhouse/recoverBackupJob:RecoverBackupJob":
                return new RecoverBackupJob(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("tencentcloud", "Clickhouse/backup", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Clickhouse/backupStrategy", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Clickhouse/deleteBackupData", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Clickhouse/instance", _module)
pulumi.runtime.registerResourceModule("tencentcloud", "Clickhouse/recoverBackupJob", _module)
