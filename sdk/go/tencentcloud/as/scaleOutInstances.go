// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package as

import (
	"context"
	"reflect"

	"errors"
	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ScaleOutInstances struct {
	pulumi.CustomResourceState

	// Scaling group ID.
	AutoScalingGroupId pulumi.StringOutput `pulumi:"autoScalingGroupId"`
	// Number of instances to be added.
	ScaleOutNumber pulumi.IntOutput `pulumi:"scaleOutNumber"`
}

// NewScaleOutInstances registers a new resource with the given unique name, arguments, and options.
func NewScaleOutInstances(ctx *pulumi.Context,
	name string, args *ScaleOutInstancesArgs, opts ...pulumi.ResourceOption) (*ScaleOutInstances, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AutoScalingGroupId == nil {
		return nil, errors.New("invalid value for required argument 'AutoScalingGroupId'")
	}
	if args.ScaleOutNumber == nil {
		return nil, errors.New("invalid value for required argument 'ScaleOutNumber'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ScaleOutInstances
	err := ctx.RegisterResource("tencentcloud:As/scaleOutInstances:ScaleOutInstances", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetScaleOutInstances gets an existing ScaleOutInstances resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetScaleOutInstances(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ScaleOutInstancesState, opts ...pulumi.ResourceOption) (*ScaleOutInstances, error) {
	var resource ScaleOutInstances
	err := ctx.ReadResource("tencentcloud:As/scaleOutInstances:ScaleOutInstances", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ScaleOutInstances resources.
type scaleOutInstancesState struct {
	// Scaling group ID.
	AutoScalingGroupId *string `pulumi:"autoScalingGroupId"`
	// Number of instances to be added.
	ScaleOutNumber *int `pulumi:"scaleOutNumber"`
}

type ScaleOutInstancesState struct {
	// Scaling group ID.
	AutoScalingGroupId pulumi.StringPtrInput
	// Number of instances to be added.
	ScaleOutNumber pulumi.IntPtrInput
}

func (ScaleOutInstancesState) ElementType() reflect.Type {
	return reflect.TypeOf((*scaleOutInstancesState)(nil)).Elem()
}

type scaleOutInstancesArgs struct {
	// Scaling group ID.
	AutoScalingGroupId string `pulumi:"autoScalingGroupId"`
	// Number of instances to be added.
	ScaleOutNumber int `pulumi:"scaleOutNumber"`
}

// The set of arguments for constructing a ScaleOutInstances resource.
type ScaleOutInstancesArgs struct {
	// Scaling group ID.
	AutoScalingGroupId pulumi.StringInput
	// Number of instances to be added.
	ScaleOutNumber pulumi.IntInput
}

func (ScaleOutInstancesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*scaleOutInstancesArgs)(nil)).Elem()
}

type ScaleOutInstancesInput interface {
	pulumi.Input

	ToScaleOutInstancesOutput() ScaleOutInstancesOutput
	ToScaleOutInstancesOutputWithContext(ctx context.Context) ScaleOutInstancesOutput
}

func (*ScaleOutInstances) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleOutInstances)(nil)).Elem()
}

func (i *ScaleOutInstances) ToScaleOutInstancesOutput() ScaleOutInstancesOutput {
	return i.ToScaleOutInstancesOutputWithContext(context.Background())
}

func (i *ScaleOutInstances) ToScaleOutInstancesOutputWithContext(ctx context.Context) ScaleOutInstancesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleOutInstancesOutput)
}

// ScaleOutInstancesArrayInput is an input type that accepts ScaleOutInstancesArray and ScaleOutInstancesArrayOutput values.
// You can construct a concrete instance of `ScaleOutInstancesArrayInput` via:
//
//	ScaleOutInstancesArray{ ScaleOutInstancesArgs{...} }
type ScaleOutInstancesArrayInput interface {
	pulumi.Input

	ToScaleOutInstancesArrayOutput() ScaleOutInstancesArrayOutput
	ToScaleOutInstancesArrayOutputWithContext(context.Context) ScaleOutInstancesArrayOutput
}

type ScaleOutInstancesArray []ScaleOutInstancesInput

func (ScaleOutInstancesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ScaleOutInstances)(nil)).Elem()
}

func (i ScaleOutInstancesArray) ToScaleOutInstancesArrayOutput() ScaleOutInstancesArrayOutput {
	return i.ToScaleOutInstancesArrayOutputWithContext(context.Background())
}

func (i ScaleOutInstancesArray) ToScaleOutInstancesArrayOutputWithContext(ctx context.Context) ScaleOutInstancesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleOutInstancesArrayOutput)
}

// ScaleOutInstancesMapInput is an input type that accepts ScaleOutInstancesMap and ScaleOutInstancesMapOutput values.
// You can construct a concrete instance of `ScaleOutInstancesMapInput` via:
//
//	ScaleOutInstancesMap{ "key": ScaleOutInstancesArgs{...} }
type ScaleOutInstancesMapInput interface {
	pulumi.Input

	ToScaleOutInstancesMapOutput() ScaleOutInstancesMapOutput
	ToScaleOutInstancesMapOutputWithContext(context.Context) ScaleOutInstancesMapOutput
}

type ScaleOutInstancesMap map[string]ScaleOutInstancesInput

func (ScaleOutInstancesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ScaleOutInstances)(nil)).Elem()
}

func (i ScaleOutInstancesMap) ToScaleOutInstancesMapOutput() ScaleOutInstancesMapOutput {
	return i.ToScaleOutInstancesMapOutputWithContext(context.Background())
}

func (i ScaleOutInstancesMap) ToScaleOutInstancesMapOutputWithContext(ctx context.Context) ScaleOutInstancesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScaleOutInstancesMapOutput)
}

type ScaleOutInstancesOutput struct{ *pulumi.OutputState }

func (ScaleOutInstancesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScaleOutInstances)(nil)).Elem()
}

func (o ScaleOutInstancesOutput) ToScaleOutInstancesOutput() ScaleOutInstancesOutput {
	return o
}

func (o ScaleOutInstancesOutput) ToScaleOutInstancesOutputWithContext(ctx context.Context) ScaleOutInstancesOutput {
	return o
}

// Scaling group ID.
func (o ScaleOutInstancesOutput) AutoScalingGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *ScaleOutInstances) pulumi.StringOutput { return v.AutoScalingGroupId }).(pulumi.StringOutput)
}

// Number of instances to be added.
func (o ScaleOutInstancesOutput) ScaleOutNumber() pulumi.IntOutput {
	return o.ApplyT(func(v *ScaleOutInstances) pulumi.IntOutput { return v.ScaleOutNumber }).(pulumi.IntOutput)
}

type ScaleOutInstancesArrayOutput struct{ *pulumi.OutputState }

func (ScaleOutInstancesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ScaleOutInstances)(nil)).Elem()
}

func (o ScaleOutInstancesArrayOutput) ToScaleOutInstancesArrayOutput() ScaleOutInstancesArrayOutput {
	return o
}

func (o ScaleOutInstancesArrayOutput) ToScaleOutInstancesArrayOutputWithContext(ctx context.Context) ScaleOutInstancesArrayOutput {
	return o
}

func (o ScaleOutInstancesArrayOutput) Index(i pulumi.IntInput) ScaleOutInstancesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ScaleOutInstances {
		return vs[0].([]*ScaleOutInstances)[vs[1].(int)]
	}).(ScaleOutInstancesOutput)
}

type ScaleOutInstancesMapOutput struct{ *pulumi.OutputState }

func (ScaleOutInstancesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ScaleOutInstances)(nil)).Elem()
}

func (o ScaleOutInstancesMapOutput) ToScaleOutInstancesMapOutput() ScaleOutInstancesMapOutput {
	return o
}

func (o ScaleOutInstancesMapOutput) ToScaleOutInstancesMapOutputWithContext(ctx context.Context) ScaleOutInstancesMapOutput {
	return o
}

func (o ScaleOutInstancesMapOutput) MapIndex(k pulumi.StringInput) ScaleOutInstancesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ScaleOutInstances {
		return vs[0].(map[string]*ScaleOutInstances)[vs[1].(string)]
	}).(ScaleOutInstancesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ScaleOutInstancesInput)(nil)).Elem(), &ScaleOutInstances{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScaleOutInstancesArrayInput)(nil)).Elem(), ScaleOutInstancesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScaleOutInstancesMapInput)(nil)).Elem(), ScaleOutInstancesMap{})
	pulumi.RegisterOutputType(ScaleOutInstancesOutput{})
	pulumi.RegisterOutputType(ScaleOutInstancesArrayOutput{})
	pulumi.RegisterOutputType(ScaleOutInstancesMapOutput{})
}
