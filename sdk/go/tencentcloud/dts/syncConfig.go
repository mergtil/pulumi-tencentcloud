// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dts

import (
	"context"
	"reflect"

	"errors"
	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type SyncConfig struct {
	pulumi.CustomResourceState

	// The time period of automatic retry, can be set from 5 to 720 minutes, 0 means no retry.
	AutoRetryTimeRangeMinutes pulumi.IntPtrOutput `pulumi:"autoRetryTimeRangeMinutes"`
	// Target end access type, cdb (cloud database), cvm (cloud host self-built), vpc (private network), extranet (external
	// network), vpncloud (vpn access), dcg (dedicated line access), ccn (cloud networking ), intranet (self-developed cloud),
	// noProxy, note that the specific optional value depends on the current link.
	DstAccessType pulumi.StringOutput `pulumi:"dstAccessType"`
	// Target information, single-node database use.
	DstInfo SyncConfigDstInfoOutput `pulumi:"dstInfo"`
	// Expected start time, when the value of RunMode is Timed, this value is required, such as: 2006-01-02 15:04:05.
	ExpectRunTime pulumi.StringOutput `pulumi:"expectRunTime"`
	// Synchronization instance id (i.e. identifies a synchronization job).
	JobId pulumi.StringOutput `pulumi:"jobId"`
	// The enumeration values are liteMode and fullMode, corresponding to lite mode or normal mode respectively.
	JobMode pulumi.StringPtrOutput `pulumi:"jobMode"`
	// Sync job name.
	JobName pulumi.StringPtrOutput `pulumi:"jobName"`
	// Synchronize database table object information.
	Objects SyncConfigObjectsOutput `pulumi:"objects"`
	// Sync Task Options.
	Options SyncConfigOptionsOutput `pulumi:"options"`
	// Operation mode, such as: Immediate (indicates immediate operation, the default value is this value), Timed (indicates
	// scheduled operation).
	RunMode pulumi.StringPtrOutput `pulumi:"runMode"`
	// Source access type, cdb (cloud database), cvm (cloud host self-built), vpc (private network), extranet (external
	// network), vpncloud (vpn access), dcg (dedicated line access), ccn (cloud networking ), intranet (self-developed cloud),
	// noProxy, note that the specific optional value depends on the current link.
	SrcAccessType pulumi.StringOutput `pulumi:"srcAccessType"`
	// Source information, single-node database use.
	SrcInfo SyncConfigSrcInfoOutput `pulumi:"srcInfo"`
}

// NewSyncConfig registers a new resource with the given unique name, arguments, and options.
func NewSyncConfig(ctx *pulumi.Context,
	name string, args *SyncConfigArgs, opts ...pulumi.ResourceOption) (*SyncConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DstAccessType == nil {
		return nil, errors.New("invalid value for required argument 'DstAccessType'")
	}
	if args.JobId == nil {
		return nil, errors.New("invalid value for required argument 'JobId'")
	}
	if args.Objects == nil {
		return nil, errors.New("invalid value for required argument 'Objects'")
	}
	if args.SrcAccessType == nil {
		return nil, errors.New("invalid value for required argument 'SrcAccessType'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource SyncConfig
	err := ctx.RegisterResource("tencentcloud:Dts/syncConfig:SyncConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSyncConfig gets an existing SyncConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSyncConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SyncConfigState, opts ...pulumi.ResourceOption) (*SyncConfig, error) {
	var resource SyncConfig
	err := ctx.ReadResource("tencentcloud:Dts/syncConfig:SyncConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering SyncConfig resources.
type syncConfigState struct {
	// The time period of automatic retry, can be set from 5 to 720 minutes, 0 means no retry.
	AutoRetryTimeRangeMinutes *int `pulumi:"autoRetryTimeRangeMinutes"`
	// Target end access type, cdb (cloud database), cvm (cloud host self-built), vpc (private network), extranet (external
	// network), vpncloud (vpn access), dcg (dedicated line access), ccn (cloud networking ), intranet (self-developed cloud),
	// noProxy, note that the specific optional value depends on the current link.
	DstAccessType *string `pulumi:"dstAccessType"`
	// Target information, single-node database use.
	DstInfo *SyncConfigDstInfo `pulumi:"dstInfo"`
	// Expected start time, when the value of RunMode is Timed, this value is required, such as: 2006-01-02 15:04:05.
	ExpectRunTime *string `pulumi:"expectRunTime"`
	// Synchronization instance id (i.e. identifies a synchronization job).
	JobId *string `pulumi:"jobId"`
	// The enumeration values are liteMode and fullMode, corresponding to lite mode or normal mode respectively.
	JobMode *string `pulumi:"jobMode"`
	// Sync job name.
	JobName *string `pulumi:"jobName"`
	// Synchronize database table object information.
	Objects *SyncConfigObjects `pulumi:"objects"`
	// Sync Task Options.
	Options *SyncConfigOptions `pulumi:"options"`
	// Operation mode, such as: Immediate (indicates immediate operation, the default value is this value), Timed (indicates
	// scheduled operation).
	RunMode *string `pulumi:"runMode"`
	// Source access type, cdb (cloud database), cvm (cloud host self-built), vpc (private network), extranet (external
	// network), vpncloud (vpn access), dcg (dedicated line access), ccn (cloud networking ), intranet (self-developed cloud),
	// noProxy, note that the specific optional value depends on the current link.
	SrcAccessType *string `pulumi:"srcAccessType"`
	// Source information, single-node database use.
	SrcInfo *SyncConfigSrcInfo `pulumi:"srcInfo"`
}

type SyncConfigState struct {
	// The time period of automatic retry, can be set from 5 to 720 minutes, 0 means no retry.
	AutoRetryTimeRangeMinutes pulumi.IntPtrInput
	// Target end access type, cdb (cloud database), cvm (cloud host self-built), vpc (private network), extranet (external
	// network), vpncloud (vpn access), dcg (dedicated line access), ccn (cloud networking ), intranet (self-developed cloud),
	// noProxy, note that the specific optional value depends on the current link.
	DstAccessType pulumi.StringPtrInput
	// Target information, single-node database use.
	DstInfo SyncConfigDstInfoPtrInput
	// Expected start time, when the value of RunMode is Timed, this value is required, such as: 2006-01-02 15:04:05.
	ExpectRunTime pulumi.StringPtrInput
	// Synchronization instance id (i.e. identifies a synchronization job).
	JobId pulumi.StringPtrInput
	// The enumeration values are liteMode and fullMode, corresponding to lite mode or normal mode respectively.
	JobMode pulumi.StringPtrInput
	// Sync job name.
	JobName pulumi.StringPtrInput
	// Synchronize database table object information.
	Objects SyncConfigObjectsPtrInput
	// Sync Task Options.
	Options SyncConfigOptionsPtrInput
	// Operation mode, such as: Immediate (indicates immediate operation, the default value is this value), Timed (indicates
	// scheduled operation).
	RunMode pulumi.StringPtrInput
	// Source access type, cdb (cloud database), cvm (cloud host self-built), vpc (private network), extranet (external
	// network), vpncloud (vpn access), dcg (dedicated line access), ccn (cloud networking ), intranet (self-developed cloud),
	// noProxy, note that the specific optional value depends on the current link.
	SrcAccessType pulumi.StringPtrInput
	// Source information, single-node database use.
	SrcInfo SyncConfigSrcInfoPtrInput
}

func (SyncConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*syncConfigState)(nil)).Elem()
}

type syncConfigArgs struct {
	// The time period of automatic retry, can be set from 5 to 720 minutes, 0 means no retry.
	AutoRetryTimeRangeMinutes *int `pulumi:"autoRetryTimeRangeMinutes"`
	// Target end access type, cdb (cloud database), cvm (cloud host self-built), vpc (private network), extranet (external
	// network), vpncloud (vpn access), dcg (dedicated line access), ccn (cloud networking ), intranet (self-developed cloud),
	// noProxy, note that the specific optional value depends on the current link.
	DstAccessType string `pulumi:"dstAccessType"`
	// Target information, single-node database use.
	DstInfo *SyncConfigDstInfo `pulumi:"dstInfo"`
	// Expected start time, when the value of RunMode is Timed, this value is required, such as: 2006-01-02 15:04:05.
	ExpectRunTime *string `pulumi:"expectRunTime"`
	// Synchronization instance id (i.e. identifies a synchronization job).
	JobId string `pulumi:"jobId"`
	// The enumeration values are liteMode and fullMode, corresponding to lite mode or normal mode respectively.
	JobMode *string `pulumi:"jobMode"`
	// Sync job name.
	JobName *string `pulumi:"jobName"`
	// Synchronize database table object information.
	Objects SyncConfigObjects `pulumi:"objects"`
	// Sync Task Options.
	Options *SyncConfigOptions `pulumi:"options"`
	// Operation mode, such as: Immediate (indicates immediate operation, the default value is this value), Timed (indicates
	// scheduled operation).
	RunMode *string `pulumi:"runMode"`
	// Source access type, cdb (cloud database), cvm (cloud host self-built), vpc (private network), extranet (external
	// network), vpncloud (vpn access), dcg (dedicated line access), ccn (cloud networking ), intranet (self-developed cloud),
	// noProxy, note that the specific optional value depends on the current link.
	SrcAccessType string `pulumi:"srcAccessType"`
	// Source information, single-node database use.
	SrcInfo *SyncConfigSrcInfo `pulumi:"srcInfo"`
}

// The set of arguments for constructing a SyncConfig resource.
type SyncConfigArgs struct {
	// The time period of automatic retry, can be set from 5 to 720 minutes, 0 means no retry.
	AutoRetryTimeRangeMinutes pulumi.IntPtrInput
	// Target end access type, cdb (cloud database), cvm (cloud host self-built), vpc (private network), extranet (external
	// network), vpncloud (vpn access), dcg (dedicated line access), ccn (cloud networking ), intranet (self-developed cloud),
	// noProxy, note that the specific optional value depends on the current link.
	DstAccessType pulumi.StringInput
	// Target information, single-node database use.
	DstInfo SyncConfigDstInfoPtrInput
	// Expected start time, when the value of RunMode is Timed, this value is required, such as: 2006-01-02 15:04:05.
	ExpectRunTime pulumi.StringPtrInput
	// Synchronization instance id (i.e. identifies a synchronization job).
	JobId pulumi.StringInput
	// The enumeration values are liteMode and fullMode, corresponding to lite mode or normal mode respectively.
	JobMode pulumi.StringPtrInput
	// Sync job name.
	JobName pulumi.StringPtrInput
	// Synchronize database table object information.
	Objects SyncConfigObjectsInput
	// Sync Task Options.
	Options SyncConfigOptionsPtrInput
	// Operation mode, such as: Immediate (indicates immediate operation, the default value is this value), Timed (indicates
	// scheduled operation).
	RunMode pulumi.StringPtrInput
	// Source access type, cdb (cloud database), cvm (cloud host self-built), vpc (private network), extranet (external
	// network), vpncloud (vpn access), dcg (dedicated line access), ccn (cloud networking ), intranet (self-developed cloud),
	// noProxy, note that the specific optional value depends on the current link.
	SrcAccessType pulumi.StringInput
	// Source information, single-node database use.
	SrcInfo SyncConfigSrcInfoPtrInput
}

func (SyncConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*syncConfigArgs)(nil)).Elem()
}

type SyncConfigInput interface {
	pulumi.Input

	ToSyncConfigOutput() SyncConfigOutput
	ToSyncConfigOutputWithContext(ctx context.Context) SyncConfigOutput
}

func (*SyncConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**SyncConfig)(nil)).Elem()
}

func (i *SyncConfig) ToSyncConfigOutput() SyncConfigOutput {
	return i.ToSyncConfigOutputWithContext(context.Background())
}

func (i *SyncConfig) ToSyncConfigOutputWithContext(ctx context.Context) SyncConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyncConfigOutput)
}

// SyncConfigArrayInput is an input type that accepts SyncConfigArray and SyncConfigArrayOutput values.
// You can construct a concrete instance of `SyncConfigArrayInput` via:
//
//	SyncConfigArray{ SyncConfigArgs{...} }
type SyncConfigArrayInput interface {
	pulumi.Input

	ToSyncConfigArrayOutput() SyncConfigArrayOutput
	ToSyncConfigArrayOutputWithContext(context.Context) SyncConfigArrayOutput
}

type SyncConfigArray []SyncConfigInput

func (SyncConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SyncConfig)(nil)).Elem()
}

func (i SyncConfigArray) ToSyncConfigArrayOutput() SyncConfigArrayOutput {
	return i.ToSyncConfigArrayOutputWithContext(context.Background())
}

func (i SyncConfigArray) ToSyncConfigArrayOutputWithContext(ctx context.Context) SyncConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyncConfigArrayOutput)
}

// SyncConfigMapInput is an input type that accepts SyncConfigMap and SyncConfigMapOutput values.
// You can construct a concrete instance of `SyncConfigMapInput` via:
//
//	SyncConfigMap{ "key": SyncConfigArgs{...} }
type SyncConfigMapInput interface {
	pulumi.Input

	ToSyncConfigMapOutput() SyncConfigMapOutput
	ToSyncConfigMapOutputWithContext(context.Context) SyncConfigMapOutput
}

type SyncConfigMap map[string]SyncConfigInput

func (SyncConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SyncConfig)(nil)).Elem()
}

func (i SyncConfigMap) ToSyncConfigMapOutput() SyncConfigMapOutput {
	return i.ToSyncConfigMapOutputWithContext(context.Background())
}

func (i SyncConfigMap) ToSyncConfigMapOutputWithContext(ctx context.Context) SyncConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SyncConfigMapOutput)
}

type SyncConfigOutput struct{ *pulumi.OutputState }

func (SyncConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SyncConfig)(nil)).Elem()
}

func (o SyncConfigOutput) ToSyncConfigOutput() SyncConfigOutput {
	return o
}

func (o SyncConfigOutput) ToSyncConfigOutputWithContext(ctx context.Context) SyncConfigOutput {
	return o
}

// The time period of automatic retry, can be set from 5 to 720 minutes, 0 means no retry.
func (o SyncConfigOutput) AutoRetryTimeRangeMinutes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SyncConfig) pulumi.IntPtrOutput { return v.AutoRetryTimeRangeMinutes }).(pulumi.IntPtrOutput)
}

// Target end access type, cdb (cloud database), cvm (cloud host self-built), vpc (private network), extranet (external
// network), vpncloud (vpn access), dcg (dedicated line access), ccn (cloud networking ), intranet (self-developed cloud),
// noProxy, note that the specific optional value depends on the current link.
func (o SyncConfigOutput) DstAccessType() pulumi.StringOutput {
	return o.ApplyT(func(v *SyncConfig) pulumi.StringOutput { return v.DstAccessType }).(pulumi.StringOutput)
}

// Target information, single-node database use.
func (o SyncConfigOutput) DstInfo() SyncConfigDstInfoOutput {
	return o.ApplyT(func(v *SyncConfig) SyncConfigDstInfoOutput { return v.DstInfo }).(SyncConfigDstInfoOutput)
}

// Expected start time, when the value of RunMode is Timed, this value is required, such as: 2006-01-02 15:04:05.
func (o SyncConfigOutput) ExpectRunTime() pulumi.StringOutput {
	return o.ApplyT(func(v *SyncConfig) pulumi.StringOutput { return v.ExpectRunTime }).(pulumi.StringOutput)
}

// Synchronization instance id (i.e. identifies a synchronization job).
func (o SyncConfigOutput) JobId() pulumi.StringOutput {
	return o.ApplyT(func(v *SyncConfig) pulumi.StringOutput { return v.JobId }).(pulumi.StringOutput)
}

// The enumeration values are liteMode and fullMode, corresponding to lite mode or normal mode respectively.
func (o SyncConfigOutput) JobMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyncConfig) pulumi.StringPtrOutput { return v.JobMode }).(pulumi.StringPtrOutput)
}

// Sync job name.
func (o SyncConfigOutput) JobName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyncConfig) pulumi.StringPtrOutput { return v.JobName }).(pulumi.StringPtrOutput)
}

// Synchronize database table object information.
func (o SyncConfigOutput) Objects() SyncConfigObjectsOutput {
	return o.ApplyT(func(v *SyncConfig) SyncConfigObjectsOutput { return v.Objects }).(SyncConfigObjectsOutput)
}

// Sync Task Options.
func (o SyncConfigOutput) Options() SyncConfigOptionsOutput {
	return o.ApplyT(func(v *SyncConfig) SyncConfigOptionsOutput { return v.Options }).(SyncConfigOptionsOutput)
}

// Operation mode, such as: Immediate (indicates immediate operation, the default value is this value), Timed (indicates
// scheduled operation).
func (o SyncConfigOutput) RunMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SyncConfig) pulumi.StringPtrOutput { return v.RunMode }).(pulumi.StringPtrOutput)
}

// Source access type, cdb (cloud database), cvm (cloud host self-built), vpc (private network), extranet (external
// network), vpncloud (vpn access), dcg (dedicated line access), ccn (cloud networking ), intranet (self-developed cloud),
// noProxy, note that the specific optional value depends on the current link.
func (o SyncConfigOutput) SrcAccessType() pulumi.StringOutput {
	return o.ApplyT(func(v *SyncConfig) pulumi.StringOutput { return v.SrcAccessType }).(pulumi.StringOutput)
}

// Source information, single-node database use.
func (o SyncConfigOutput) SrcInfo() SyncConfigSrcInfoOutput {
	return o.ApplyT(func(v *SyncConfig) SyncConfigSrcInfoOutput { return v.SrcInfo }).(SyncConfigSrcInfoOutput)
}

type SyncConfigArrayOutput struct{ *pulumi.OutputState }

func (SyncConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*SyncConfig)(nil)).Elem()
}

func (o SyncConfigArrayOutput) ToSyncConfigArrayOutput() SyncConfigArrayOutput {
	return o
}

func (o SyncConfigArrayOutput) ToSyncConfigArrayOutputWithContext(ctx context.Context) SyncConfigArrayOutput {
	return o
}

func (o SyncConfigArrayOutput) Index(i pulumi.IntInput) SyncConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *SyncConfig {
		return vs[0].([]*SyncConfig)[vs[1].(int)]
	}).(SyncConfigOutput)
}

type SyncConfigMapOutput struct{ *pulumi.OutputState }

func (SyncConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*SyncConfig)(nil)).Elem()
}

func (o SyncConfigMapOutput) ToSyncConfigMapOutput() SyncConfigMapOutput {
	return o
}

func (o SyncConfigMapOutput) ToSyncConfigMapOutputWithContext(ctx context.Context) SyncConfigMapOutput {
	return o
}

func (o SyncConfigMapOutput) MapIndex(k pulumi.StringInput) SyncConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *SyncConfig {
		return vs[0].(map[string]*SyncConfig)[vs[1].(string)]
	}).(SyncConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SyncConfigInput)(nil)).Elem(), &SyncConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyncConfigArrayInput)(nil)).Elem(), SyncConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SyncConfigMapInput)(nil)).Elem(), SyncConfigMap{})
	pulumi.RegisterOutputType(SyncConfigOutput{})
	pulumi.RegisterOutputType(SyncConfigArrayOutput{})
	pulumi.RegisterOutputType(SyncConfigMapOutput{})
}
