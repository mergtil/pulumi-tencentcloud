// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tsf

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupMicroserviceApiVersion(ctx *pulumi.Context, args *LookupMicroserviceApiVersionArgs, opts ...pulumi.InvokeOption) (*LookupMicroserviceApiVersionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupMicroserviceApiVersionResult
	err := ctx.Invoke("tencentcloud:Tsf/getMicroserviceApiVersion:getMicroserviceApiVersion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMicroserviceApiVersion.
type LookupMicroserviceApiVersionArgs struct {
	Method           *string `pulumi:"method"`
	MicroserviceId   string  `pulumi:"microserviceId"`
	Path             *string `pulumi:"path"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getMicroserviceApiVersion.
type LookupMicroserviceApiVersionResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id               string                            `pulumi:"id"`
	Method           *string                           `pulumi:"method"`
	MicroserviceId   string                            `pulumi:"microserviceId"`
	Path             *string                           `pulumi:"path"`
	ResultOutputFile *string                           `pulumi:"resultOutputFile"`
	Results          []GetMicroserviceApiVersionResult `pulumi:"results"`
}

func LookupMicroserviceApiVersionOutput(ctx *pulumi.Context, args LookupMicroserviceApiVersionOutputArgs, opts ...pulumi.InvokeOption) LookupMicroserviceApiVersionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupMicroserviceApiVersionResult, error) {
			args := v.(LookupMicroserviceApiVersionArgs)
			r, err := LookupMicroserviceApiVersion(ctx, &args, opts...)
			var s LookupMicroserviceApiVersionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupMicroserviceApiVersionResultOutput)
}

// A collection of arguments for invoking getMicroserviceApiVersion.
type LookupMicroserviceApiVersionOutputArgs struct {
	Method           pulumi.StringPtrInput `pulumi:"method"`
	MicroserviceId   pulumi.StringInput    `pulumi:"microserviceId"`
	Path             pulumi.StringPtrInput `pulumi:"path"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (LookupMicroserviceApiVersionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMicroserviceApiVersionArgs)(nil)).Elem()
}

// A collection of values returned by getMicroserviceApiVersion.
type LookupMicroserviceApiVersionResultOutput struct{ *pulumi.OutputState }

func (LookupMicroserviceApiVersionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupMicroserviceApiVersionResult)(nil)).Elem()
}

func (o LookupMicroserviceApiVersionResultOutput) ToLookupMicroserviceApiVersionResultOutput() LookupMicroserviceApiVersionResultOutput {
	return o
}

func (o LookupMicroserviceApiVersionResultOutput) ToLookupMicroserviceApiVersionResultOutputWithContext(ctx context.Context) LookupMicroserviceApiVersionResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupMicroserviceApiVersionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMicroserviceApiVersionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupMicroserviceApiVersionResultOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMicroserviceApiVersionResult) *string { return v.Method }).(pulumi.StringPtrOutput)
}

func (o LookupMicroserviceApiVersionResultOutput) MicroserviceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupMicroserviceApiVersionResult) string { return v.MicroserviceId }).(pulumi.StringOutput)
}

func (o LookupMicroserviceApiVersionResultOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMicroserviceApiVersionResult) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o LookupMicroserviceApiVersionResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupMicroserviceApiVersionResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o LookupMicroserviceApiVersionResultOutput) Results() GetMicroserviceApiVersionResultArrayOutput {
	return o.ApplyT(func(v LookupMicroserviceApiVersionResult) []GetMicroserviceApiVersionResult { return v.Results }).(GetMicroserviceApiVersionResultArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupMicroserviceApiVersionResultOutput{})
}
