// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package deprecatedmonitor

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type BindingObjectDimension struct {
	DimensionsJson string  `pulumi:"dimensionsJson"`
	UniqueId       *string `pulumi:"uniqueId"`
}

// BindingObjectDimensionInput is an input type that accepts BindingObjectDimensionArgs and BindingObjectDimensionOutput values.
// You can construct a concrete instance of `BindingObjectDimensionInput` via:
//
//	BindingObjectDimensionArgs{...}
type BindingObjectDimensionInput interface {
	pulumi.Input

	ToBindingObjectDimensionOutput() BindingObjectDimensionOutput
	ToBindingObjectDimensionOutputWithContext(context.Context) BindingObjectDimensionOutput
}

type BindingObjectDimensionArgs struct {
	DimensionsJson pulumi.StringInput    `pulumi:"dimensionsJson"`
	UniqueId       pulumi.StringPtrInput `pulumi:"uniqueId"`
}

func (BindingObjectDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingObjectDimension)(nil)).Elem()
}

func (i BindingObjectDimensionArgs) ToBindingObjectDimensionOutput() BindingObjectDimensionOutput {
	return i.ToBindingObjectDimensionOutputWithContext(context.Background())
}

func (i BindingObjectDimensionArgs) ToBindingObjectDimensionOutputWithContext(ctx context.Context) BindingObjectDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingObjectDimensionOutput)
}

// BindingObjectDimensionArrayInput is an input type that accepts BindingObjectDimensionArray and BindingObjectDimensionArrayOutput values.
// You can construct a concrete instance of `BindingObjectDimensionArrayInput` via:
//
//	BindingObjectDimensionArray{ BindingObjectDimensionArgs{...} }
type BindingObjectDimensionArrayInput interface {
	pulumi.Input

	ToBindingObjectDimensionArrayOutput() BindingObjectDimensionArrayOutput
	ToBindingObjectDimensionArrayOutputWithContext(context.Context) BindingObjectDimensionArrayOutput
}

type BindingObjectDimensionArray []BindingObjectDimensionInput

func (BindingObjectDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BindingObjectDimension)(nil)).Elem()
}

func (i BindingObjectDimensionArray) ToBindingObjectDimensionArrayOutput() BindingObjectDimensionArrayOutput {
	return i.ToBindingObjectDimensionArrayOutputWithContext(context.Background())
}

func (i BindingObjectDimensionArray) ToBindingObjectDimensionArrayOutputWithContext(ctx context.Context) BindingObjectDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BindingObjectDimensionArrayOutput)
}

type BindingObjectDimensionOutput struct{ *pulumi.OutputState }

func (BindingObjectDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BindingObjectDimension)(nil)).Elem()
}

func (o BindingObjectDimensionOutput) ToBindingObjectDimensionOutput() BindingObjectDimensionOutput {
	return o
}

func (o BindingObjectDimensionOutput) ToBindingObjectDimensionOutputWithContext(ctx context.Context) BindingObjectDimensionOutput {
	return o
}

func (o BindingObjectDimensionOutput) DimensionsJson() pulumi.StringOutput {
	return o.ApplyT(func(v BindingObjectDimension) string { return v.DimensionsJson }).(pulumi.StringOutput)
}

func (o BindingObjectDimensionOutput) UniqueId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BindingObjectDimension) *string { return v.UniqueId }).(pulumi.StringPtrOutput)
}

type BindingObjectDimensionArrayOutput struct{ *pulumi.OutputState }

func (BindingObjectDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BindingObjectDimension)(nil)).Elem()
}

func (o BindingObjectDimensionArrayOutput) ToBindingObjectDimensionArrayOutput() BindingObjectDimensionArrayOutput {
	return o
}

func (o BindingObjectDimensionArrayOutput) ToBindingObjectDimensionArrayOutputWithContext(ctx context.Context) BindingObjectDimensionArrayOutput {
	return o
}

func (o BindingObjectDimensionArrayOutput) Index(i pulumi.IntInput) BindingObjectDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BindingObjectDimension {
		return vs[0].([]BindingObjectDimension)[vs[1].(int)]
	}).(BindingObjectDimensionOutput)
}

type PolicyGroupBindingObject struct {
	DimensionsJson *string `pulumi:"dimensionsJson"`
	IsShielded     *int    `pulumi:"isShielded"`
	Region         *string `pulumi:"region"`
	UniqueId       *string `pulumi:"uniqueId"`
}

// PolicyGroupBindingObjectInput is an input type that accepts PolicyGroupBindingObjectArgs and PolicyGroupBindingObjectOutput values.
// You can construct a concrete instance of `PolicyGroupBindingObjectInput` via:
//
//	PolicyGroupBindingObjectArgs{...}
type PolicyGroupBindingObjectInput interface {
	pulumi.Input

	ToPolicyGroupBindingObjectOutput() PolicyGroupBindingObjectOutput
	ToPolicyGroupBindingObjectOutputWithContext(context.Context) PolicyGroupBindingObjectOutput
}

type PolicyGroupBindingObjectArgs struct {
	DimensionsJson pulumi.StringPtrInput `pulumi:"dimensionsJson"`
	IsShielded     pulumi.IntPtrInput    `pulumi:"isShielded"`
	Region         pulumi.StringPtrInput `pulumi:"region"`
	UniqueId       pulumi.StringPtrInput `pulumi:"uniqueId"`
}

func (PolicyGroupBindingObjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupBindingObject)(nil)).Elem()
}

func (i PolicyGroupBindingObjectArgs) ToPolicyGroupBindingObjectOutput() PolicyGroupBindingObjectOutput {
	return i.ToPolicyGroupBindingObjectOutputWithContext(context.Background())
}

func (i PolicyGroupBindingObjectArgs) ToPolicyGroupBindingObjectOutputWithContext(ctx context.Context) PolicyGroupBindingObjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupBindingObjectOutput)
}

// PolicyGroupBindingObjectArrayInput is an input type that accepts PolicyGroupBindingObjectArray and PolicyGroupBindingObjectArrayOutput values.
// You can construct a concrete instance of `PolicyGroupBindingObjectArrayInput` via:
//
//	PolicyGroupBindingObjectArray{ PolicyGroupBindingObjectArgs{...} }
type PolicyGroupBindingObjectArrayInput interface {
	pulumi.Input

	ToPolicyGroupBindingObjectArrayOutput() PolicyGroupBindingObjectArrayOutput
	ToPolicyGroupBindingObjectArrayOutputWithContext(context.Context) PolicyGroupBindingObjectArrayOutput
}

type PolicyGroupBindingObjectArray []PolicyGroupBindingObjectInput

func (PolicyGroupBindingObjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupBindingObject)(nil)).Elem()
}

func (i PolicyGroupBindingObjectArray) ToPolicyGroupBindingObjectArrayOutput() PolicyGroupBindingObjectArrayOutput {
	return i.ToPolicyGroupBindingObjectArrayOutputWithContext(context.Background())
}

func (i PolicyGroupBindingObjectArray) ToPolicyGroupBindingObjectArrayOutputWithContext(ctx context.Context) PolicyGroupBindingObjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupBindingObjectArrayOutput)
}

type PolicyGroupBindingObjectOutput struct{ *pulumi.OutputState }

func (PolicyGroupBindingObjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupBindingObject)(nil)).Elem()
}

func (o PolicyGroupBindingObjectOutput) ToPolicyGroupBindingObjectOutput() PolicyGroupBindingObjectOutput {
	return o
}

func (o PolicyGroupBindingObjectOutput) ToPolicyGroupBindingObjectOutputWithContext(ctx context.Context) PolicyGroupBindingObjectOutput {
	return o
}

func (o PolicyGroupBindingObjectOutput) DimensionsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGroupBindingObject) *string { return v.DimensionsJson }).(pulumi.StringPtrOutput)
}

func (o PolicyGroupBindingObjectOutput) IsShielded() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyGroupBindingObject) *int { return v.IsShielded }).(pulumi.IntPtrOutput)
}

func (o PolicyGroupBindingObjectOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGroupBindingObject) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o PolicyGroupBindingObjectOutput) UniqueId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGroupBindingObject) *string { return v.UniqueId }).(pulumi.StringPtrOutput)
}

type PolicyGroupBindingObjectArrayOutput struct{ *pulumi.OutputState }

func (PolicyGroupBindingObjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupBindingObject)(nil)).Elem()
}

func (o PolicyGroupBindingObjectArrayOutput) ToPolicyGroupBindingObjectArrayOutput() PolicyGroupBindingObjectArrayOutput {
	return o
}

func (o PolicyGroupBindingObjectArrayOutput) ToPolicyGroupBindingObjectArrayOutputWithContext(ctx context.Context) PolicyGroupBindingObjectArrayOutput {
	return o
}

func (o PolicyGroupBindingObjectArrayOutput) Index(i pulumi.IntInput) PolicyGroupBindingObjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyGroupBindingObject {
		return vs[0].([]PolicyGroupBindingObject)[vs[1].(int)]
	}).(PolicyGroupBindingObjectOutput)
}

type PolicyGroupCondition struct {
	AlarmNotifyPeriod int      `pulumi:"alarmNotifyPeriod"`
	AlarmNotifyType   int      `pulumi:"alarmNotifyType"`
	CalcPeriod        *int     `pulumi:"calcPeriod"`
	CalcType          *int     `pulumi:"calcType"`
	CalcValue         *float64 `pulumi:"calcValue"`
	ContinuePeriod    *int     `pulumi:"continuePeriod"`
	MetricId          int      `pulumi:"metricId"`
}

// PolicyGroupConditionInput is an input type that accepts PolicyGroupConditionArgs and PolicyGroupConditionOutput values.
// You can construct a concrete instance of `PolicyGroupConditionInput` via:
//
//	PolicyGroupConditionArgs{...}
type PolicyGroupConditionInput interface {
	pulumi.Input

	ToPolicyGroupConditionOutput() PolicyGroupConditionOutput
	ToPolicyGroupConditionOutputWithContext(context.Context) PolicyGroupConditionOutput
}

type PolicyGroupConditionArgs struct {
	AlarmNotifyPeriod pulumi.IntInput        `pulumi:"alarmNotifyPeriod"`
	AlarmNotifyType   pulumi.IntInput        `pulumi:"alarmNotifyType"`
	CalcPeriod        pulumi.IntPtrInput     `pulumi:"calcPeriod"`
	CalcType          pulumi.IntPtrInput     `pulumi:"calcType"`
	CalcValue         pulumi.Float64PtrInput `pulumi:"calcValue"`
	ContinuePeriod    pulumi.IntPtrInput     `pulumi:"continuePeriod"`
	MetricId          pulumi.IntInput        `pulumi:"metricId"`
}

func (PolicyGroupConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupCondition)(nil)).Elem()
}

func (i PolicyGroupConditionArgs) ToPolicyGroupConditionOutput() PolicyGroupConditionOutput {
	return i.ToPolicyGroupConditionOutputWithContext(context.Background())
}

func (i PolicyGroupConditionArgs) ToPolicyGroupConditionOutputWithContext(ctx context.Context) PolicyGroupConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupConditionOutput)
}

// PolicyGroupConditionArrayInput is an input type that accepts PolicyGroupConditionArray and PolicyGroupConditionArrayOutput values.
// You can construct a concrete instance of `PolicyGroupConditionArrayInput` via:
//
//	PolicyGroupConditionArray{ PolicyGroupConditionArgs{...} }
type PolicyGroupConditionArrayInput interface {
	pulumi.Input

	ToPolicyGroupConditionArrayOutput() PolicyGroupConditionArrayOutput
	ToPolicyGroupConditionArrayOutputWithContext(context.Context) PolicyGroupConditionArrayOutput
}

type PolicyGroupConditionArray []PolicyGroupConditionInput

func (PolicyGroupConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupCondition)(nil)).Elem()
}

func (i PolicyGroupConditionArray) ToPolicyGroupConditionArrayOutput() PolicyGroupConditionArrayOutput {
	return i.ToPolicyGroupConditionArrayOutputWithContext(context.Background())
}

func (i PolicyGroupConditionArray) ToPolicyGroupConditionArrayOutputWithContext(ctx context.Context) PolicyGroupConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupConditionArrayOutput)
}

type PolicyGroupConditionOutput struct{ *pulumi.OutputState }

func (PolicyGroupConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupCondition)(nil)).Elem()
}

func (o PolicyGroupConditionOutput) ToPolicyGroupConditionOutput() PolicyGroupConditionOutput {
	return o
}

func (o PolicyGroupConditionOutput) ToPolicyGroupConditionOutputWithContext(ctx context.Context) PolicyGroupConditionOutput {
	return o
}

func (o PolicyGroupConditionOutput) AlarmNotifyPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupCondition) int { return v.AlarmNotifyPeriod }).(pulumi.IntOutput)
}

func (o PolicyGroupConditionOutput) AlarmNotifyType() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupCondition) int { return v.AlarmNotifyType }).(pulumi.IntOutput)
}

func (o PolicyGroupConditionOutput) CalcPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyGroupCondition) *int { return v.CalcPeriod }).(pulumi.IntPtrOutput)
}

func (o PolicyGroupConditionOutput) CalcType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyGroupCondition) *int { return v.CalcType }).(pulumi.IntPtrOutput)
}

func (o PolicyGroupConditionOutput) CalcValue() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v PolicyGroupCondition) *float64 { return v.CalcValue }).(pulumi.Float64PtrOutput)
}

func (o PolicyGroupConditionOutput) ContinuePeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyGroupCondition) *int { return v.ContinuePeriod }).(pulumi.IntPtrOutput)
}

func (o PolicyGroupConditionOutput) MetricId() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupCondition) int { return v.MetricId }).(pulumi.IntOutput)
}

type PolicyGroupConditionArrayOutput struct{ *pulumi.OutputState }

func (PolicyGroupConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupCondition)(nil)).Elem()
}

func (o PolicyGroupConditionArrayOutput) ToPolicyGroupConditionArrayOutput() PolicyGroupConditionArrayOutput {
	return o
}

func (o PolicyGroupConditionArrayOutput) ToPolicyGroupConditionArrayOutputWithContext(ctx context.Context) PolicyGroupConditionArrayOutput {
	return o
}

func (o PolicyGroupConditionArrayOutput) Index(i pulumi.IntInput) PolicyGroupConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyGroupCondition {
		return vs[0].([]PolicyGroupCondition)[vs[1].(int)]
	}).(PolicyGroupConditionOutput)
}

type PolicyGroupEventCondition struct {
	AlarmNotifyPeriod int `pulumi:"alarmNotifyPeriod"`
	AlarmNotifyType   int `pulumi:"alarmNotifyType"`
	EventId           int `pulumi:"eventId"`
}

// PolicyGroupEventConditionInput is an input type that accepts PolicyGroupEventConditionArgs and PolicyGroupEventConditionOutput values.
// You can construct a concrete instance of `PolicyGroupEventConditionInput` via:
//
//	PolicyGroupEventConditionArgs{...}
type PolicyGroupEventConditionInput interface {
	pulumi.Input

	ToPolicyGroupEventConditionOutput() PolicyGroupEventConditionOutput
	ToPolicyGroupEventConditionOutputWithContext(context.Context) PolicyGroupEventConditionOutput
}

type PolicyGroupEventConditionArgs struct {
	AlarmNotifyPeriod pulumi.IntInput `pulumi:"alarmNotifyPeriod"`
	AlarmNotifyType   pulumi.IntInput `pulumi:"alarmNotifyType"`
	EventId           pulumi.IntInput `pulumi:"eventId"`
}

func (PolicyGroupEventConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupEventCondition)(nil)).Elem()
}

func (i PolicyGroupEventConditionArgs) ToPolicyGroupEventConditionOutput() PolicyGroupEventConditionOutput {
	return i.ToPolicyGroupEventConditionOutputWithContext(context.Background())
}

func (i PolicyGroupEventConditionArgs) ToPolicyGroupEventConditionOutputWithContext(ctx context.Context) PolicyGroupEventConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupEventConditionOutput)
}

// PolicyGroupEventConditionArrayInput is an input type that accepts PolicyGroupEventConditionArray and PolicyGroupEventConditionArrayOutput values.
// You can construct a concrete instance of `PolicyGroupEventConditionArrayInput` via:
//
//	PolicyGroupEventConditionArray{ PolicyGroupEventConditionArgs{...} }
type PolicyGroupEventConditionArrayInput interface {
	pulumi.Input

	ToPolicyGroupEventConditionArrayOutput() PolicyGroupEventConditionArrayOutput
	ToPolicyGroupEventConditionArrayOutputWithContext(context.Context) PolicyGroupEventConditionArrayOutput
}

type PolicyGroupEventConditionArray []PolicyGroupEventConditionInput

func (PolicyGroupEventConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupEventCondition)(nil)).Elem()
}

func (i PolicyGroupEventConditionArray) ToPolicyGroupEventConditionArrayOutput() PolicyGroupEventConditionArrayOutput {
	return i.ToPolicyGroupEventConditionArrayOutputWithContext(context.Background())
}

func (i PolicyGroupEventConditionArray) ToPolicyGroupEventConditionArrayOutputWithContext(ctx context.Context) PolicyGroupEventConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupEventConditionArrayOutput)
}

type PolicyGroupEventConditionOutput struct{ *pulumi.OutputState }

func (PolicyGroupEventConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupEventCondition)(nil)).Elem()
}

func (o PolicyGroupEventConditionOutput) ToPolicyGroupEventConditionOutput() PolicyGroupEventConditionOutput {
	return o
}

func (o PolicyGroupEventConditionOutput) ToPolicyGroupEventConditionOutputWithContext(ctx context.Context) PolicyGroupEventConditionOutput {
	return o
}

func (o PolicyGroupEventConditionOutput) AlarmNotifyPeriod() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupEventCondition) int { return v.AlarmNotifyPeriod }).(pulumi.IntOutput)
}

func (o PolicyGroupEventConditionOutput) AlarmNotifyType() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupEventCondition) int { return v.AlarmNotifyType }).(pulumi.IntOutput)
}

func (o PolicyGroupEventConditionOutput) EventId() pulumi.IntOutput {
	return o.ApplyT(func(v PolicyGroupEventCondition) int { return v.EventId }).(pulumi.IntOutput)
}

type PolicyGroupEventConditionArrayOutput struct{ *pulumi.OutputState }

func (PolicyGroupEventConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupEventCondition)(nil)).Elem()
}

func (o PolicyGroupEventConditionArrayOutput) ToPolicyGroupEventConditionArrayOutput() PolicyGroupEventConditionArrayOutput {
	return o
}

func (o PolicyGroupEventConditionArrayOutput) ToPolicyGroupEventConditionArrayOutputWithContext(ctx context.Context) PolicyGroupEventConditionArrayOutput {
	return o
}

func (o PolicyGroupEventConditionArrayOutput) Index(i pulumi.IntInput) PolicyGroupEventConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyGroupEventCondition {
		return vs[0].([]PolicyGroupEventCondition)[vs[1].(int)]
	}).(PolicyGroupEventConditionOutput)
}

type PolicyGroupReceiver struct {
	EndTime            *int     `pulumi:"endTime"`
	NeedSendNotice     *int     `pulumi:"needSendNotice"`
	NotifyWays         []string `pulumi:"notifyWays"`
	PersonInterval     *int     `pulumi:"personInterval"`
	ReceiveLanguage    *string  `pulumi:"receiveLanguage"`
	ReceiverGroupLists []int    `pulumi:"receiverGroupLists"`
	ReceiverType       *string  `pulumi:"receiverType"`
	ReceiverUserLists  []int    `pulumi:"receiverUserLists"`
	RecoverNotifies    []string `pulumi:"recoverNotifies"`
	RoundInterval      *int     `pulumi:"roundInterval"`
	RoundNumber        *int     `pulumi:"roundNumber"`
	SendFors           []string `pulumi:"sendFors"`
	StartTime          *int     `pulumi:"startTime"`
	UidLists           []int    `pulumi:"uidLists"`
}

// PolicyGroupReceiverInput is an input type that accepts PolicyGroupReceiverArgs and PolicyGroupReceiverOutput values.
// You can construct a concrete instance of `PolicyGroupReceiverInput` via:
//
//	PolicyGroupReceiverArgs{...}
type PolicyGroupReceiverInput interface {
	pulumi.Input

	ToPolicyGroupReceiverOutput() PolicyGroupReceiverOutput
	ToPolicyGroupReceiverOutputWithContext(context.Context) PolicyGroupReceiverOutput
}

type PolicyGroupReceiverArgs struct {
	EndTime            pulumi.IntPtrInput      `pulumi:"endTime"`
	NeedSendNotice     pulumi.IntPtrInput      `pulumi:"needSendNotice"`
	NotifyWays         pulumi.StringArrayInput `pulumi:"notifyWays"`
	PersonInterval     pulumi.IntPtrInput      `pulumi:"personInterval"`
	ReceiveLanguage    pulumi.StringPtrInput   `pulumi:"receiveLanguage"`
	ReceiverGroupLists pulumi.IntArrayInput    `pulumi:"receiverGroupLists"`
	ReceiverType       pulumi.StringPtrInput   `pulumi:"receiverType"`
	ReceiverUserLists  pulumi.IntArrayInput    `pulumi:"receiverUserLists"`
	RecoverNotifies    pulumi.StringArrayInput `pulumi:"recoverNotifies"`
	RoundInterval      pulumi.IntPtrInput      `pulumi:"roundInterval"`
	RoundNumber        pulumi.IntPtrInput      `pulumi:"roundNumber"`
	SendFors           pulumi.StringArrayInput `pulumi:"sendFors"`
	StartTime          pulumi.IntPtrInput      `pulumi:"startTime"`
	UidLists           pulumi.IntArrayInput    `pulumi:"uidLists"`
}

func (PolicyGroupReceiverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupReceiver)(nil)).Elem()
}

func (i PolicyGroupReceiverArgs) ToPolicyGroupReceiverOutput() PolicyGroupReceiverOutput {
	return i.ToPolicyGroupReceiverOutputWithContext(context.Background())
}

func (i PolicyGroupReceiverArgs) ToPolicyGroupReceiverOutputWithContext(ctx context.Context) PolicyGroupReceiverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupReceiverOutput)
}

// PolicyGroupReceiverArrayInput is an input type that accepts PolicyGroupReceiverArray and PolicyGroupReceiverArrayOutput values.
// You can construct a concrete instance of `PolicyGroupReceiverArrayInput` via:
//
//	PolicyGroupReceiverArray{ PolicyGroupReceiverArgs{...} }
type PolicyGroupReceiverArrayInput interface {
	pulumi.Input

	ToPolicyGroupReceiverArrayOutput() PolicyGroupReceiverArrayOutput
	ToPolicyGroupReceiverArrayOutputWithContext(context.Context) PolicyGroupReceiverArrayOutput
}

type PolicyGroupReceiverArray []PolicyGroupReceiverInput

func (PolicyGroupReceiverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupReceiver)(nil)).Elem()
}

func (i PolicyGroupReceiverArray) ToPolicyGroupReceiverArrayOutput() PolicyGroupReceiverArrayOutput {
	return i.ToPolicyGroupReceiverArrayOutputWithContext(context.Background())
}

func (i PolicyGroupReceiverArray) ToPolicyGroupReceiverArrayOutputWithContext(ctx context.Context) PolicyGroupReceiverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PolicyGroupReceiverArrayOutput)
}

type PolicyGroupReceiverOutput struct{ *pulumi.OutputState }

func (PolicyGroupReceiverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PolicyGroupReceiver)(nil)).Elem()
}

func (o PolicyGroupReceiverOutput) ToPolicyGroupReceiverOutput() PolicyGroupReceiverOutput {
	return o
}

func (o PolicyGroupReceiverOutput) ToPolicyGroupReceiverOutputWithContext(ctx context.Context) PolicyGroupReceiverOutput {
	return o
}

func (o PolicyGroupReceiverOutput) EndTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyGroupReceiver) *int { return v.EndTime }).(pulumi.IntPtrOutput)
}

func (o PolicyGroupReceiverOutput) NeedSendNotice() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyGroupReceiver) *int { return v.NeedSendNotice }).(pulumi.IntPtrOutput)
}

func (o PolicyGroupReceiverOutput) NotifyWays() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyGroupReceiver) []string { return v.NotifyWays }).(pulumi.StringArrayOutput)
}

func (o PolicyGroupReceiverOutput) PersonInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyGroupReceiver) *int { return v.PersonInterval }).(pulumi.IntPtrOutput)
}

func (o PolicyGroupReceiverOutput) ReceiveLanguage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGroupReceiver) *string { return v.ReceiveLanguage }).(pulumi.StringPtrOutput)
}

func (o PolicyGroupReceiverOutput) ReceiverGroupLists() pulumi.IntArrayOutput {
	return o.ApplyT(func(v PolicyGroupReceiver) []int { return v.ReceiverGroupLists }).(pulumi.IntArrayOutput)
}

func (o PolicyGroupReceiverOutput) ReceiverType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v PolicyGroupReceiver) *string { return v.ReceiverType }).(pulumi.StringPtrOutput)
}

func (o PolicyGroupReceiverOutput) ReceiverUserLists() pulumi.IntArrayOutput {
	return o.ApplyT(func(v PolicyGroupReceiver) []int { return v.ReceiverUserLists }).(pulumi.IntArrayOutput)
}

func (o PolicyGroupReceiverOutput) RecoverNotifies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyGroupReceiver) []string { return v.RecoverNotifies }).(pulumi.StringArrayOutput)
}

func (o PolicyGroupReceiverOutput) RoundInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyGroupReceiver) *int { return v.RoundInterval }).(pulumi.IntPtrOutput)
}

func (o PolicyGroupReceiverOutput) RoundNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyGroupReceiver) *int { return v.RoundNumber }).(pulumi.IntPtrOutput)
}

func (o PolicyGroupReceiverOutput) SendFors() pulumi.StringArrayOutput {
	return o.ApplyT(func(v PolicyGroupReceiver) []string { return v.SendFors }).(pulumi.StringArrayOutput)
}

func (o PolicyGroupReceiverOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v PolicyGroupReceiver) *int { return v.StartTime }).(pulumi.IntPtrOutput)
}

func (o PolicyGroupReceiverOutput) UidLists() pulumi.IntArrayOutput {
	return o.ApplyT(func(v PolicyGroupReceiver) []int { return v.UidLists }).(pulumi.IntArrayOutput)
}

type PolicyGroupReceiverArrayOutput struct{ *pulumi.OutputState }

func (PolicyGroupReceiverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PolicyGroupReceiver)(nil)).Elem()
}

func (o PolicyGroupReceiverArrayOutput) ToPolicyGroupReceiverArrayOutput() PolicyGroupReceiverArrayOutput {
	return o
}

func (o PolicyGroupReceiverArrayOutput) ToPolicyGroupReceiverArrayOutputWithContext(ctx context.Context) PolicyGroupReceiverArrayOutput {
	return o
}

func (o PolicyGroupReceiverArrayOutput) Index(i pulumi.IntInput) PolicyGroupReceiverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PolicyGroupReceiver {
		return vs[0].([]PolicyGroupReceiver)[vs[1].(int)]
	}).(PolicyGroupReceiverOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BindingObjectDimensionInput)(nil)).Elem(), BindingObjectDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*BindingObjectDimensionArrayInput)(nil)).Elem(), BindingObjectDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGroupBindingObjectInput)(nil)).Elem(), PolicyGroupBindingObjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGroupBindingObjectArrayInput)(nil)).Elem(), PolicyGroupBindingObjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGroupConditionInput)(nil)).Elem(), PolicyGroupConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGroupConditionArrayInput)(nil)).Elem(), PolicyGroupConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGroupEventConditionInput)(nil)).Elem(), PolicyGroupEventConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGroupEventConditionArrayInput)(nil)).Elem(), PolicyGroupEventConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGroupReceiverInput)(nil)).Elem(), PolicyGroupReceiverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*PolicyGroupReceiverArrayInput)(nil)).Elem(), PolicyGroupReceiverArray{})
	pulumi.RegisterOutputType(BindingObjectDimensionOutput{})
	pulumi.RegisterOutputType(BindingObjectDimensionArrayOutput{})
	pulumi.RegisterOutputType(PolicyGroupBindingObjectOutput{})
	pulumi.RegisterOutputType(PolicyGroupBindingObjectArrayOutput{})
	pulumi.RegisterOutputType(PolicyGroupConditionOutput{})
	pulumi.RegisterOutputType(PolicyGroupConditionArrayOutput{})
	pulumi.RegisterOutputType(PolicyGroupEventConditionOutput{})
	pulumi.RegisterOutputType(PolicyGroupEventConditionArrayOutput{})
	pulumi.RegisterOutputType(PolicyGroupReceiverOutput{})
	pulumi.RegisterOutputType(PolicyGroupReceiverArrayOutput{})
}
