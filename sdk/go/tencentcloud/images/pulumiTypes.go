// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package images

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GetInstanceImage struct {
	Architecture     string                     `pulumi:"architecture"`
	CreatedTime      string                     `pulumi:"createdTime"`
	ImageCreator     string                     `pulumi:"imageCreator"`
	ImageDescription string                     `pulumi:"imageDescription"`
	ImageId          string                     `pulumi:"imageId"`
	ImageName        string                     `pulumi:"imageName"`
	ImageSize        int                        `pulumi:"imageSize"`
	ImageSource      string                     `pulumi:"imageSource"`
	ImageState       string                     `pulumi:"imageState"`
	ImageType        string                     `pulumi:"imageType"`
	OsName           string                     `pulumi:"osName"`
	Platform         string                     `pulumi:"platform"`
	Snapshots        []GetInstanceImageSnapshot `pulumi:"snapshots"`
	SupportCloudInit bool                       `pulumi:"supportCloudInit"`
	SyncPercent      int                        `pulumi:"syncPercent"`
}

// GetInstanceImageInput is an input type that accepts GetInstanceImageArgs and GetInstanceImageOutput values.
// You can construct a concrete instance of `GetInstanceImageInput` via:
//
//	GetInstanceImageArgs{...}
type GetInstanceImageInput interface {
	pulumi.Input

	ToGetInstanceImageOutput() GetInstanceImageOutput
	ToGetInstanceImageOutputWithContext(context.Context) GetInstanceImageOutput
}

type GetInstanceImageArgs struct {
	Architecture     pulumi.StringInput                 `pulumi:"architecture"`
	CreatedTime      pulumi.StringInput                 `pulumi:"createdTime"`
	ImageCreator     pulumi.StringInput                 `pulumi:"imageCreator"`
	ImageDescription pulumi.StringInput                 `pulumi:"imageDescription"`
	ImageId          pulumi.StringInput                 `pulumi:"imageId"`
	ImageName        pulumi.StringInput                 `pulumi:"imageName"`
	ImageSize        pulumi.IntInput                    `pulumi:"imageSize"`
	ImageSource      pulumi.StringInput                 `pulumi:"imageSource"`
	ImageState       pulumi.StringInput                 `pulumi:"imageState"`
	ImageType        pulumi.StringInput                 `pulumi:"imageType"`
	OsName           pulumi.StringInput                 `pulumi:"osName"`
	Platform         pulumi.StringInput                 `pulumi:"platform"`
	Snapshots        GetInstanceImageSnapshotArrayInput `pulumi:"snapshots"`
	SupportCloudInit pulumi.BoolInput                   `pulumi:"supportCloudInit"`
	SyncPercent      pulumi.IntInput                    `pulumi:"syncPercent"`
}

func (GetInstanceImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceImage)(nil)).Elem()
}

func (i GetInstanceImageArgs) ToGetInstanceImageOutput() GetInstanceImageOutput {
	return i.ToGetInstanceImageOutputWithContext(context.Background())
}

func (i GetInstanceImageArgs) ToGetInstanceImageOutputWithContext(ctx context.Context) GetInstanceImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceImageOutput)
}

// GetInstanceImageArrayInput is an input type that accepts GetInstanceImageArray and GetInstanceImageArrayOutput values.
// You can construct a concrete instance of `GetInstanceImageArrayInput` via:
//
//	GetInstanceImageArray{ GetInstanceImageArgs{...} }
type GetInstanceImageArrayInput interface {
	pulumi.Input

	ToGetInstanceImageArrayOutput() GetInstanceImageArrayOutput
	ToGetInstanceImageArrayOutputWithContext(context.Context) GetInstanceImageArrayOutput
}

type GetInstanceImageArray []GetInstanceImageInput

func (GetInstanceImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceImage)(nil)).Elem()
}

func (i GetInstanceImageArray) ToGetInstanceImageArrayOutput() GetInstanceImageArrayOutput {
	return i.ToGetInstanceImageArrayOutputWithContext(context.Background())
}

func (i GetInstanceImageArray) ToGetInstanceImageArrayOutputWithContext(ctx context.Context) GetInstanceImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceImageArrayOutput)
}

type GetInstanceImageOutput struct{ *pulumi.OutputState }

func (GetInstanceImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceImage)(nil)).Elem()
}

func (o GetInstanceImageOutput) ToGetInstanceImageOutput() GetInstanceImageOutput {
	return o
}

func (o GetInstanceImageOutput) ToGetInstanceImageOutputWithContext(ctx context.Context) GetInstanceImageOutput {
	return o
}

func (o GetInstanceImageOutput) Architecture() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceImage) string { return v.Architecture }).(pulumi.StringOutput)
}

func (o GetInstanceImageOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceImage) string { return v.CreatedTime }).(pulumi.StringOutput)
}

func (o GetInstanceImageOutput) ImageCreator() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceImage) string { return v.ImageCreator }).(pulumi.StringOutput)
}

func (o GetInstanceImageOutput) ImageDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceImage) string { return v.ImageDescription }).(pulumi.StringOutput)
}

func (o GetInstanceImageOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceImage) string { return v.ImageId }).(pulumi.StringOutput)
}

func (o GetInstanceImageOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceImage) string { return v.ImageName }).(pulumi.StringOutput)
}

func (o GetInstanceImageOutput) ImageSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceImage) int { return v.ImageSize }).(pulumi.IntOutput)
}

func (o GetInstanceImageOutput) ImageSource() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceImage) string { return v.ImageSource }).(pulumi.StringOutput)
}

func (o GetInstanceImageOutput) ImageState() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceImage) string { return v.ImageState }).(pulumi.StringOutput)
}

func (o GetInstanceImageOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceImage) string { return v.ImageType }).(pulumi.StringOutput)
}

func (o GetInstanceImageOutput) OsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceImage) string { return v.OsName }).(pulumi.StringOutput)
}

func (o GetInstanceImageOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceImage) string { return v.Platform }).(pulumi.StringOutput)
}

func (o GetInstanceImageOutput) Snapshots() GetInstanceImageSnapshotArrayOutput {
	return o.ApplyT(func(v GetInstanceImage) []GetInstanceImageSnapshot { return v.Snapshots }).(GetInstanceImageSnapshotArrayOutput)
}

func (o GetInstanceImageOutput) SupportCloudInit() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceImage) bool { return v.SupportCloudInit }).(pulumi.BoolOutput)
}

func (o GetInstanceImageOutput) SyncPercent() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceImage) int { return v.SyncPercent }).(pulumi.IntOutput)
}

type GetInstanceImageArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceImage)(nil)).Elem()
}

func (o GetInstanceImageArrayOutput) ToGetInstanceImageArrayOutput() GetInstanceImageArrayOutput {
	return o
}

func (o GetInstanceImageArrayOutput) ToGetInstanceImageArrayOutputWithContext(ctx context.Context) GetInstanceImageArrayOutput {
	return o
}

func (o GetInstanceImageArrayOutput) Index(i pulumi.IntInput) GetInstanceImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceImage {
		return vs[0].([]GetInstanceImage)[vs[1].(int)]
	}).(GetInstanceImageOutput)
}

type GetInstanceImageSnapshot struct {
	DiskSize     int    `pulumi:"diskSize"`
	DiskUsage    string `pulumi:"diskUsage"`
	SnapshotId   string `pulumi:"snapshotId"`
	SnapshotName string `pulumi:"snapshotName"`
}

// GetInstanceImageSnapshotInput is an input type that accepts GetInstanceImageSnapshotArgs and GetInstanceImageSnapshotOutput values.
// You can construct a concrete instance of `GetInstanceImageSnapshotInput` via:
//
//	GetInstanceImageSnapshotArgs{...}
type GetInstanceImageSnapshotInput interface {
	pulumi.Input

	ToGetInstanceImageSnapshotOutput() GetInstanceImageSnapshotOutput
	ToGetInstanceImageSnapshotOutputWithContext(context.Context) GetInstanceImageSnapshotOutput
}

type GetInstanceImageSnapshotArgs struct {
	DiskSize     pulumi.IntInput    `pulumi:"diskSize"`
	DiskUsage    pulumi.StringInput `pulumi:"diskUsage"`
	SnapshotId   pulumi.StringInput `pulumi:"snapshotId"`
	SnapshotName pulumi.StringInput `pulumi:"snapshotName"`
}

func (GetInstanceImageSnapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceImageSnapshot)(nil)).Elem()
}

func (i GetInstanceImageSnapshotArgs) ToGetInstanceImageSnapshotOutput() GetInstanceImageSnapshotOutput {
	return i.ToGetInstanceImageSnapshotOutputWithContext(context.Background())
}

func (i GetInstanceImageSnapshotArgs) ToGetInstanceImageSnapshotOutputWithContext(ctx context.Context) GetInstanceImageSnapshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceImageSnapshotOutput)
}

// GetInstanceImageSnapshotArrayInput is an input type that accepts GetInstanceImageSnapshotArray and GetInstanceImageSnapshotArrayOutput values.
// You can construct a concrete instance of `GetInstanceImageSnapshotArrayInput` via:
//
//	GetInstanceImageSnapshotArray{ GetInstanceImageSnapshotArgs{...} }
type GetInstanceImageSnapshotArrayInput interface {
	pulumi.Input

	ToGetInstanceImageSnapshotArrayOutput() GetInstanceImageSnapshotArrayOutput
	ToGetInstanceImageSnapshotArrayOutputWithContext(context.Context) GetInstanceImageSnapshotArrayOutput
}

type GetInstanceImageSnapshotArray []GetInstanceImageSnapshotInput

func (GetInstanceImageSnapshotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceImageSnapshot)(nil)).Elem()
}

func (i GetInstanceImageSnapshotArray) ToGetInstanceImageSnapshotArrayOutput() GetInstanceImageSnapshotArrayOutput {
	return i.ToGetInstanceImageSnapshotArrayOutputWithContext(context.Background())
}

func (i GetInstanceImageSnapshotArray) ToGetInstanceImageSnapshotArrayOutputWithContext(ctx context.Context) GetInstanceImageSnapshotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceImageSnapshotArrayOutput)
}

type GetInstanceImageSnapshotOutput struct{ *pulumi.OutputState }

func (GetInstanceImageSnapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceImageSnapshot)(nil)).Elem()
}

func (o GetInstanceImageSnapshotOutput) ToGetInstanceImageSnapshotOutput() GetInstanceImageSnapshotOutput {
	return o
}

func (o GetInstanceImageSnapshotOutput) ToGetInstanceImageSnapshotOutputWithContext(ctx context.Context) GetInstanceImageSnapshotOutput {
	return o
}

func (o GetInstanceImageSnapshotOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceImageSnapshot) int { return v.DiskSize }).(pulumi.IntOutput)
}

func (o GetInstanceImageSnapshotOutput) DiskUsage() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceImageSnapshot) string { return v.DiskUsage }).(pulumi.StringOutput)
}

func (o GetInstanceImageSnapshotOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceImageSnapshot) string { return v.SnapshotId }).(pulumi.StringOutput)
}

func (o GetInstanceImageSnapshotOutput) SnapshotName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceImageSnapshot) string { return v.SnapshotName }).(pulumi.StringOutput)
}

type GetInstanceImageSnapshotArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceImageSnapshotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceImageSnapshot)(nil)).Elem()
}

func (o GetInstanceImageSnapshotArrayOutput) ToGetInstanceImageSnapshotArrayOutput() GetInstanceImageSnapshotArrayOutput {
	return o
}

func (o GetInstanceImageSnapshotArrayOutput) ToGetInstanceImageSnapshotArrayOutputWithContext(ctx context.Context) GetInstanceImageSnapshotArrayOutput {
	return o
}

func (o GetInstanceImageSnapshotArrayOutput) Index(i pulumi.IntInput) GetInstanceImageSnapshotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceImageSnapshot {
		return vs[0].([]GetInstanceImageSnapshot)[vs[1].(int)]
	}).(GetInstanceImageSnapshotOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceImageInput)(nil)).Elem(), GetInstanceImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceImageArrayInput)(nil)).Elem(), GetInstanceImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceImageSnapshotInput)(nil)).Elem(), GetInstanceImageSnapshotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceImageSnapshotArrayInput)(nil)).Elem(), GetInstanceImageSnapshotArray{})
	pulumi.RegisterOutputType(GetInstanceImageOutput{})
	pulumi.RegisterOutputType(GetInstanceImageArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceImageSnapshotOutput{})
	pulumi.RegisterOutputType(GetInstanceImageSnapshotArrayOutput{})
}
