// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package images

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GetImagesImage struct {
	Architecture     string                   `pulumi:"architecture"`
	CreatedTime      string                   `pulumi:"createdTime"`
	ImageCreator     string                   `pulumi:"imageCreator"`
	ImageDescription string                   `pulumi:"imageDescription"`
	ImageId          string                   `pulumi:"imageId"`
	ImageName        string                   `pulumi:"imageName"`
	ImageSize        int                      `pulumi:"imageSize"`
	ImageSource      string                   `pulumi:"imageSource"`
	ImageState       string                   `pulumi:"imageState"`
	ImageType        string                   `pulumi:"imageType"`
	OsName           string                   `pulumi:"osName"`
	Platform         string                   `pulumi:"platform"`
	Snapshots        []GetImagesImageSnapshot `pulumi:"snapshots"`
	SupportCloudInit bool                     `pulumi:"supportCloudInit"`
	SyncPercent      int                      `pulumi:"syncPercent"`
}

// GetImagesImageInput is an input type that accepts GetImagesImageArgs and GetImagesImageOutput values.
// You can construct a concrete instance of `GetImagesImageInput` via:
//
//	GetImagesImageArgs{...}
type GetImagesImageInput interface {
	pulumi.Input

	ToGetImagesImageOutput() GetImagesImageOutput
	ToGetImagesImageOutputWithContext(context.Context) GetImagesImageOutput
}

type GetImagesImageArgs struct {
	Architecture     pulumi.StringInput               `pulumi:"architecture"`
	CreatedTime      pulumi.StringInput               `pulumi:"createdTime"`
	ImageCreator     pulumi.StringInput               `pulumi:"imageCreator"`
	ImageDescription pulumi.StringInput               `pulumi:"imageDescription"`
	ImageId          pulumi.StringInput               `pulumi:"imageId"`
	ImageName        pulumi.StringInput               `pulumi:"imageName"`
	ImageSize        pulumi.IntInput                  `pulumi:"imageSize"`
	ImageSource      pulumi.StringInput               `pulumi:"imageSource"`
	ImageState       pulumi.StringInput               `pulumi:"imageState"`
	ImageType        pulumi.StringInput               `pulumi:"imageType"`
	OsName           pulumi.StringInput               `pulumi:"osName"`
	Platform         pulumi.StringInput               `pulumi:"platform"`
	Snapshots        GetImagesImageSnapshotArrayInput `pulumi:"snapshots"`
	SupportCloudInit pulumi.BoolInput                 `pulumi:"supportCloudInit"`
	SyncPercent      pulumi.IntInput                  `pulumi:"syncPercent"`
}

func (GetImagesImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImage)(nil)).Elem()
}

func (i GetImagesImageArgs) ToGetImagesImageOutput() GetImagesImageOutput {
	return i.ToGetImagesImageOutputWithContext(context.Background())
}

func (i GetImagesImageArgs) ToGetImagesImageOutputWithContext(ctx context.Context) GetImagesImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageOutput)
}

// GetImagesImageArrayInput is an input type that accepts GetImagesImageArray and GetImagesImageArrayOutput values.
// You can construct a concrete instance of `GetImagesImageArrayInput` via:
//
//	GetImagesImageArray{ GetImagesImageArgs{...} }
type GetImagesImageArrayInput interface {
	pulumi.Input

	ToGetImagesImageArrayOutput() GetImagesImageArrayOutput
	ToGetImagesImageArrayOutputWithContext(context.Context) GetImagesImageArrayOutput
}

type GetImagesImageArray []GetImagesImageInput

func (GetImagesImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImage)(nil)).Elem()
}

func (i GetImagesImageArray) ToGetImagesImageArrayOutput() GetImagesImageArrayOutput {
	return i.ToGetImagesImageArrayOutputWithContext(context.Background())
}

func (i GetImagesImageArray) ToGetImagesImageArrayOutputWithContext(ctx context.Context) GetImagesImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageArrayOutput)
}

type GetImagesImageOutput struct{ *pulumi.OutputState }

func (GetImagesImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImage)(nil)).Elem()
}

func (o GetImagesImageOutput) ToGetImagesImageOutput() GetImagesImageOutput {
	return o
}

func (o GetImagesImageOutput) ToGetImagesImageOutputWithContext(ctx context.Context) GetImagesImageOutput {
	return o
}

func (o GetImagesImageOutput) Architecture() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Architecture }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) CreatedTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.CreatedTime }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) ImageCreator() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.ImageCreator }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) ImageDescription() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.ImageDescription }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.ImageId }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) ImageName() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.ImageName }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) ImageSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetImagesImage) int { return v.ImageSize }).(pulumi.IntOutput)
}

func (o GetImagesImageOutput) ImageSource() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.ImageSource }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) ImageState() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.ImageState }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) ImageType() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.ImageType }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) OsName() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.OsName }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) Platform() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Platform }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) Snapshots() GetImagesImageSnapshotArrayOutput {
	return o.ApplyT(func(v GetImagesImage) []GetImagesImageSnapshot { return v.Snapshots }).(GetImagesImageSnapshotArrayOutput)
}

func (o GetImagesImageOutput) SupportCloudInit() pulumi.BoolOutput {
	return o.ApplyT(func(v GetImagesImage) bool { return v.SupportCloudInit }).(pulumi.BoolOutput)
}

func (o GetImagesImageOutput) SyncPercent() pulumi.IntOutput {
	return o.ApplyT(func(v GetImagesImage) int { return v.SyncPercent }).(pulumi.IntOutput)
}

type GetImagesImageArrayOutput struct{ *pulumi.OutputState }

func (GetImagesImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImage)(nil)).Elem()
}

func (o GetImagesImageArrayOutput) ToGetImagesImageArrayOutput() GetImagesImageArrayOutput {
	return o
}

func (o GetImagesImageArrayOutput) ToGetImagesImageArrayOutputWithContext(ctx context.Context) GetImagesImageArrayOutput {
	return o
}

func (o GetImagesImageArrayOutput) Index(i pulumi.IntInput) GetImagesImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesImage {
		return vs[0].([]GetImagesImage)[vs[1].(int)]
	}).(GetImagesImageOutput)
}

type GetImagesImageSnapshot struct {
	DiskSize     int    `pulumi:"diskSize"`
	DiskUsage    string `pulumi:"diskUsage"`
	SnapshotId   string `pulumi:"snapshotId"`
	SnapshotName string `pulumi:"snapshotName"`
}

// GetImagesImageSnapshotInput is an input type that accepts GetImagesImageSnapshotArgs and GetImagesImageSnapshotOutput values.
// You can construct a concrete instance of `GetImagesImageSnapshotInput` via:
//
//	GetImagesImageSnapshotArgs{...}
type GetImagesImageSnapshotInput interface {
	pulumi.Input

	ToGetImagesImageSnapshotOutput() GetImagesImageSnapshotOutput
	ToGetImagesImageSnapshotOutputWithContext(context.Context) GetImagesImageSnapshotOutput
}

type GetImagesImageSnapshotArgs struct {
	DiskSize     pulumi.IntInput    `pulumi:"diskSize"`
	DiskUsage    pulumi.StringInput `pulumi:"diskUsage"`
	SnapshotId   pulumi.StringInput `pulumi:"snapshotId"`
	SnapshotName pulumi.StringInput `pulumi:"snapshotName"`
}

func (GetImagesImageSnapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImageSnapshot)(nil)).Elem()
}

func (i GetImagesImageSnapshotArgs) ToGetImagesImageSnapshotOutput() GetImagesImageSnapshotOutput {
	return i.ToGetImagesImageSnapshotOutputWithContext(context.Background())
}

func (i GetImagesImageSnapshotArgs) ToGetImagesImageSnapshotOutputWithContext(ctx context.Context) GetImagesImageSnapshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageSnapshotOutput)
}

// GetImagesImageSnapshotArrayInput is an input type that accepts GetImagesImageSnapshotArray and GetImagesImageSnapshotArrayOutput values.
// You can construct a concrete instance of `GetImagesImageSnapshotArrayInput` via:
//
//	GetImagesImageSnapshotArray{ GetImagesImageSnapshotArgs{...} }
type GetImagesImageSnapshotArrayInput interface {
	pulumi.Input

	ToGetImagesImageSnapshotArrayOutput() GetImagesImageSnapshotArrayOutput
	ToGetImagesImageSnapshotArrayOutputWithContext(context.Context) GetImagesImageSnapshotArrayOutput
}

type GetImagesImageSnapshotArray []GetImagesImageSnapshotInput

func (GetImagesImageSnapshotArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImageSnapshot)(nil)).Elem()
}

func (i GetImagesImageSnapshotArray) ToGetImagesImageSnapshotArrayOutput() GetImagesImageSnapshotArrayOutput {
	return i.ToGetImagesImageSnapshotArrayOutputWithContext(context.Background())
}

func (i GetImagesImageSnapshotArray) ToGetImagesImageSnapshotArrayOutputWithContext(ctx context.Context) GetImagesImageSnapshotArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageSnapshotArrayOutput)
}

type GetImagesImageSnapshotOutput struct{ *pulumi.OutputState }

func (GetImagesImageSnapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImageSnapshot)(nil)).Elem()
}

func (o GetImagesImageSnapshotOutput) ToGetImagesImageSnapshotOutput() GetImagesImageSnapshotOutput {
	return o
}

func (o GetImagesImageSnapshotOutput) ToGetImagesImageSnapshotOutputWithContext(ctx context.Context) GetImagesImageSnapshotOutput {
	return o
}

func (o GetImagesImageSnapshotOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetImagesImageSnapshot) int { return v.DiskSize }).(pulumi.IntOutput)
}

func (o GetImagesImageSnapshotOutput) DiskUsage() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImageSnapshot) string { return v.DiskUsage }).(pulumi.StringOutput)
}

func (o GetImagesImageSnapshotOutput) SnapshotId() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImageSnapshot) string { return v.SnapshotId }).(pulumi.StringOutput)
}

func (o GetImagesImageSnapshotOutput) SnapshotName() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImageSnapshot) string { return v.SnapshotName }).(pulumi.StringOutput)
}

type GetImagesImageSnapshotArrayOutput struct{ *pulumi.OutputState }

func (GetImagesImageSnapshotArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImageSnapshot)(nil)).Elem()
}

func (o GetImagesImageSnapshotArrayOutput) ToGetImagesImageSnapshotArrayOutput() GetImagesImageSnapshotArrayOutput {
	return o
}

func (o GetImagesImageSnapshotArrayOutput) ToGetImagesImageSnapshotArrayOutputWithContext(ctx context.Context) GetImagesImageSnapshotArrayOutput {
	return o
}

func (o GetImagesImageSnapshotArrayOutput) Index(i pulumi.IntInput) GetImagesImageSnapshotOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesImageSnapshot {
		return vs[0].([]GetImagesImageSnapshot)[vs[1].(int)]
	}).(GetImagesImageSnapshotOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageInput)(nil)).Elem(), GetImagesImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageArrayInput)(nil)).Elem(), GetImagesImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageSnapshotInput)(nil)).Elem(), GetImagesImageSnapshotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageSnapshotArrayInput)(nil)).Elem(), GetImagesImageSnapshotArray{})
	pulumi.RegisterOutputType(GetImagesImageOutput{})
	pulumi.RegisterOutputType(GetImagesImageArrayOutput{})
	pulumi.RegisterOutputType(GetImagesImageSnapshotOutput{})
	pulumi.RegisterOutputType(GetImagesImageSnapshotArrayOutput{})
}
