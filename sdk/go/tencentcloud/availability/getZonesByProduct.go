// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package availability

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetZonesByProduct(ctx *pulumi.Context, args *GetZonesByProductArgs, opts ...pulumi.InvokeOption) (*GetZonesByProductResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetZonesByProductResult
	err := ctx.Invoke("tencentcloud:Availability/getZonesByProduct:getZonesByProduct", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getZonesByProduct.
type GetZonesByProductArgs struct {
	IncludeUnavailable *bool   `pulumi:"includeUnavailable"`
	Name               *string `pulumi:"name"`
	Product            string  `pulumi:"product"`
	ResultOutputFile   *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getZonesByProduct.
type GetZonesByProductResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id                 string                  `pulumi:"id"`
	IncludeUnavailable *bool                   `pulumi:"includeUnavailable"`
	Name               *string                 `pulumi:"name"`
	Product            string                  `pulumi:"product"`
	ResultOutputFile   *string                 `pulumi:"resultOutputFile"`
	Zones              []GetZonesByProductZone `pulumi:"zones"`
}

func GetZonesByProductOutput(ctx *pulumi.Context, args GetZonesByProductOutputArgs, opts ...pulumi.InvokeOption) GetZonesByProductResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetZonesByProductResult, error) {
			args := v.(GetZonesByProductArgs)
			r, err := GetZonesByProduct(ctx, &args, opts...)
			var s GetZonesByProductResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetZonesByProductResultOutput)
}

// A collection of arguments for invoking getZonesByProduct.
type GetZonesByProductOutputArgs struct {
	IncludeUnavailable pulumi.BoolPtrInput   `pulumi:"includeUnavailable"`
	Name               pulumi.StringPtrInput `pulumi:"name"`
	Product            pulumi.StringInput    `pulumi:"product"`
	ResultOutputFile   pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetZonesByProductOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesByProductArgs)(nil)).Elem()
}

// A collection of values returned by getZonesByProduct.
type GetZonesByProductResultOutput struct{ *pulumi.OutputState }

func (GetZonesByProductResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZonesByProductResult)(nil)).Elem()
}

func (o GetZonesByProductResultOutput) ToGetZonesByProductResultOutput() GetZonesByProductResultOutput {
	return o
}

func (o GetZonesByProductResultOutput) ToGetZonesByProductResultOutputWithContext(ctx context.Context) GetZonesByProductResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetZonesByProductResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesByProductResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetZonesByProductResultOutput) IncludeUnavailable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetZonesByProductResult) *bool { return v.IncludeUnavailable }).(pulumi.BoolPtrOutput)
}

func (o GetZonesByProductResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZonesByProductResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetZonesByProductResultOutput) Product() pulumi.StringOutput {
	return o.ApplyT(func(v GetZonesByProductResult) string { return v.Product }).(pulumi.StringOutput)
}

func (o GetZonesByProductResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetZonesByProductResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetZonesByProductResultOutput) Zones() GetZonesByProductZoneArrayOutput {
	return o.ApplyT(func(v GetZonesByProductResult) []GetZonesByProductZone { return v.Zones }).(GetZonesByProductZoneArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetZonesByProductResultOutput{})
}
