// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dcdb

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetDatabaseTables(ctx *pulumi.Context, args *GetDatabaseTablesArgs, opts ...pulumi.InvokeOption) (*GetDatabaseTablesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDatabaseTablesResult
	err := ctx.Invoke("tencentcloud:Dcdb/getDatabaseTables:getDatabaseTables", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDatabaseTables.
type GetDatabaseTablesArgs struct {
	DbName           string  `pulumi:"dbName"`
	InstanceId       string  `pulumi:"instanceId"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	Table            string  `pulumi:"table"`
}

// A collection of values returned by getDatabaseTables.
type GetDatabaseTablesResult struct {
	Cols   []GetDatabaseTablesCol `pulumi:"cols"`
	DbName string                 `pulumi:"dbName"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	InstanceId       string  `pulumi:"instanceId"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	Table            string  `pulumi:"table"`
}

func GetDatabaseTablesOutput(ctx *pulumi.Context, args GetDatabaseTablesOutputArgs, opts ...pulumi.InvokeOption) GetDatabaseTablesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDatabaseTablesResult, error) {
			args := v.(GetDatabaseTablesArgs)
			r, err := GetDatabaseTables(ctx, &args, opts...)
			var s GetDatabaseTablesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDatabaseTablesResultOutput)
}

// A collection of arguments for invoking getDatabaseTables.
type GetDatabaseTablesOutputArgs struct {
	DbName           pulumi.StringInput    `pulumi:"dbName"`
	InstanceId       pulumi.StringInput    `pulumi:"instanceId"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	Table            pulumi.StringInput    `pulumi:"table"`
}

func (GetDatabaseTablesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseTablesArgs)(nil)).Elem()
}

// A collection of values returned by getDatabaseTables.
type GetDatabaseTablesResultOutput struct{ *pulumi.OutputState }

func (GetDatabaseTablesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseTablesResult)(nil)).Elem()
}

func (o GetDatabaseTablesResultOutput) ToGetDatabaseTablesResultOutput() GetDatabaseTablesResultOutput {
	return o
}

func (o GetDatabaseTablesResultOutput) ToGetDatabaseTablesResultOutputWithContext(ctx context.Context) GetDatabaseTablesResultOutput {
	return o
}

func (o GetDatabaseTablesResultOutput) Cols() GetDatabaseTablesColArrayOutput {
	return o.ApplyT(func(v GetDatabaseTablesResult) []GetDatabaseTablesCol { return v.Cols }).(GetDatabaseTablesColArrayOutput)
}

func (o GetDatabaseTablesResultOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseTablesResult) string { return v.DbName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDatabaseTablesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseTablesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDatabaseTablesResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseTablesResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetDatabaseTablesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatabaseTablesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetDatabaseTablesResultOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseTablesResult) string { return v.Table }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDatabaseTablesResultOutput{})
}
