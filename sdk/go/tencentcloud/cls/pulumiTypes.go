// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cls

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AlarmAlarmTarget struct {
	EndTimeOffset   int    `pulumi:"endTimeOffset"`
	LogsetId        string `pulumi:"logsetId"`
	Number          int    `pulumi:"number"`
	Query           string `pulumi:"query"`
	StartTimeOffset int    `pulumi:"startTimeOffset"`
	TopicId         string `pulumi:"topicId"`
}

// AlarmAlarmTargetInput is an input type that accepts AlarmAlarmTargetArgs and AlarmAlarmTargetOutput values.
// You can construct a concrete instance of `AlarmAlarmTargetInput` via:
//
//	AlarmAlarmTargetArgs{...}
type AlarmAlarmTargetInput interface {
	pulumi.Input

	ToAlarmAlarmTargetOutput() AlarmAlarmTargetOutput
	ToAlarmAlarmTargetOutputWithContext(context.Context) AlarmAlarmTargetOutput
}

type AlarmAlarmTargetArgs struct {
	EndTimeOffset   pulumi.IntInput    `pulumi:"endTimeOffset"`
	LogsetId        pulumi.StringInput `pulumi:"logsetId"`
	Number          pulumi.IntInput    `pulumi:"number"`
	Query           pulumi.StringInput `pulumi:"query"`
	StartTimeOffset pulumi.IntInput    `pulumi:"startTimeOffset"`
	TopicId         pulumi.StringInput `pulumi:"topicId"`
}

func (AlarmAlarmTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmAlarmTarget)(nil)).Elem()
}

func (i AlarmAlarmTargetArgs) ToAlarmAlarmTargetOutput() AlarmAlarmTargetOutput {
	return i.ToAlarmAlarmTargetOutputWithContext(context.Background())
}

func (i AlarmAlarmTargetArgs) ToAlarmAlarmTargetOutputWithContext(ctx context.Context) AlarmAlarmTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmAlarmTargetOutput)
}

// AlarmAlarmTargetArrayInput is an input type that accepts AlarmAlarmTargetArray and AlarmAlarmTargetArrayOutput values.
// You can construct a concrete instance of `AlarmAlarmTargetArrayInput` via:
//
//	AlarmAlarmTargetArray{ AlarmAlarmTargetArgs{...} }
type AlarmAlarmTargetArrayInput interface {
	pulumi.Input

	ToAlarmAlarmTargetArrayOutput() AlarmAlarmTargetArrayOutput
	ToAlarmAlarmTargetArrayOutputWithContext(context.Context) AlarmAlarmTargetArrayOutput
}

type AlarmAlarmTargetArray []AlarmAlarmTargetInput

func (AlarmAlarmTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmAlarmTarget)(nil)).Elem()
}

func (i AlarmAlarmTargetArray) ToAlarmAlarmTargetArrayOutput() AlarmAlarmTargetArrayOutput {
	return i.ToAlarmAlarmTargetArrayOutputWithContext(context.Background())
}

func (i AlarmAlarmTargetArray) ToAlarmAlarmTargetArrayOutputWithContext(ctx context.Context) AlarmAlarmTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmAlarmTargetArrayOutput)
}

type AlarmAlarmTargetOutput struct{ *pulumi.OutputState }

func (AlarmAlarmTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmAlarmTarget)(nil)).Elem()
}

func (o AlarmAlarmTargetOutput) ToAlarmAlarmTargetOutput() AlarmAlarmTargetOutput {
	return o
}

func (o AlarmAlarmTargetOutput) ToAlarmAlarmTargetOutputWithContext(ctx context.Context) AlarmAlarmTargetOutput {
	return o
}

func (o AlarmAlarmTargetOutput) EndTimeOffset() pulumi.IntOutput {
	return o.ApplyT(func(v AlarmAlarmTarget) int { return v.EndTimeOffset }).(pulumi.IntOutput)
}

func (o AlarmAlarmTargetOutput) LogsetId() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmAlarmTarget) string { return v.LogsetId }).(pulumi.StringOutput)
}

func (o AlarmAlarmTargetOutput) Number() pulumi.IntOutput {
	return o.ApplyT(func(v AlarmAlarmTarget) int { return v.Number }).(pulumi.IntOutput)
}

func (o AlarmAlarmTargetOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmAlarmTarget) string { return v.Query }).(pulumi.StringOutput)
}

func (o AlarmAlarmTargetOutput) StartTimeOffset() pulumi.IntOutput {
	return o.ApplyT(func(v AlarmAlarmTarget) int { return v.StartTimeOffset }).(pulumi.IntOutput)
}

func (o AlarmAlarmTargetOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmAlarmTarget) string { return v.TopicId }).(pulumi.StringOutput)
}

type AlarmAlarmTargetArrayOutput struct{ *pulumi.OutputState }

func (AlarmAlarmTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmAlarmTarget)(nil)).Elem()
}

func (o AlarmAlarmTargetArrayOutput) ToAlarmAlarmTargetArrayOutput() AlarmAlarmTargetArrayOutput {
	return o
}

func (o AlarmAlarmTargetArrayOutput) ToAlarmAlarmTargetArrayOutputWithContext(ctx context.Context) AlarmAlarmTargetArrayOutput {
	return o
}

func (o AlarmAlarmTargetArrayOutput) Index(i pulumi.IntInput) AlarmAlarmTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlarmAlarmTarget {
		return vs[0].([]AlarmAlarmTarget)[vs[1].(int)]
	}).(AlarmAlarmTargetOutput)
}

type AlarmAnalysis struct {
	ConfigInfos []AlarmAnalysisConfigInfo `pulumi:"configInfos"`
	Content     string                    `pulumi:"content"`
	Name        string                    `pulumi:"name"`
	Type        string                    `pulumi:"type"`
}

// AlarmAnalysisInput is an input type that accepts AlarmAnalysisArgs and AlarmAnalysisOutput values.
// You can construct a concrete instance of `AlarmAnalysisInput` via:
//
//	AlarmAnalysisArgs{...}
type AlarmAnalysisInput interface {
	pulumi.Input

	ToAlarmAnalysisOutput() AlarmAnalysisOutput
	ToAlarmAnalysisOutputWithContext(context.Context) AlarmAnalysisOutput
}

type AlarmAnalysisArgs struct {
	ConfigInfos AlarmAnalysisConfigInfoArrayInput `pulumi:"configInfos"`
	Content     pulumi.StringInput                `pulumi:"content"`
	Name        pulumi.StringInput                `pulumi:"name"`
	Type        pulumi.StringInput                `pulumi:"type"`
}

func (AlarmAnalysisArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmAnalysis)(nil)).Elem()
}

func (i AlarmAnalysisArgs) ToAlarmAnalysisOutput() AlarmAnalysisOutput {
	return i.ToAlarmAnalysisOutputWithContext(context.Background())
}

func (i AlarmAnalysisArgs) ToAlarmAnalysisOutputWithContext(ctx context.Context) AlarmAnalysisOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmAnalysisOutput)
}

// AlarmAnalysisArrayInput is an input type that accepts AlarmAnalysisArray and AlarmAnalysisArrayOutput values.
// You can construct a concrete instance of `AlarmAnalysisArrayInput` via:
//
//	AlarmAnalysisArray{ AlarmAnalysisArgs{...} }
type AlarmAnalysisArrayInput interface {
	pulumi.Input

	ToAlarmAnalysisArrayOutput() AlarmAnalysisArrayOutput
	ToAlarmAnalysisArrayOutputWithContext(context.Context) AlarmAnalysisArrayOutput
}

type AlarmAnalysisArray []AlarmAnalysisInput

func (AlarmAnalysisArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmAnalysis)(nil)).Elem()
}

func (i AlarmAnalysisArray) ToAlarmAnalysisArrayOutput() AlarmAnalysisArrayOutput {
	return i.ToAlarmAnalysisArrayOutputWithContext(context.Background())
}

func (i AlarmAnalysisArray) ToAlarmAnalysisArrayOutputWithContext(ctx context.Context) AlarmAnalysisArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmAnalysisArrayOutput)
}

type AlarmAnalysisOutput struct{ *pulumi.OutputState }

func (AlarmAnalysisOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmAnalysis)(nil)).Elem()
}

func (o AlarmAnalysisOutput) ToAlarmAnalysisOutput() AlarmAnalysisOutput {
	return o
}

func (o AlarmAnalysisOutput) ToAlarmAnalysisOutputWithContext(ctx context.Context) AlarmAnalysisOutput {
	return o
}

func (o AlarmAnalysisOutput) ConfigInfos() AlarmAnalysisConfigInfoArrayOutput {
	return o.ApplyT(func(v AlarmAnalysis) []AlarmAnalysisConfigInfo { return v.ConfigInfos }).(AlarmAnalysisConfigInfoArrayOutput)
}

func (o AlarmAnalysisOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmAnalysis) string { return v.Content }).(pulumi.StringOutput)
}

func (o AlarmAnalysisOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmAnalysis) string { return v.Name }).(pulumi.StringOutput)
}

func (o AlarmAnalysisOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmAnalysis) string { return v.Type }).(pulumi.StringOutput)
}

type AlarmAnalysisArrayOutput struct{ *pulumi.OutputState }

func (AlarmAnalysisArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmAnalysis)(nil)).Elem()
}

func (o AlarmAnalysisArrayOutput) ToAlarmAnalysisArrayOutput() AlarmAnalysisArrayOutput {
	return o
}

func (o AlarmAnalysisArrayOutput) ToAlarmAnalysisArrayOutputWithContext(ctx context.Context) AlarmAnalysisArrayOutput {
	return o
}

func (o AlarmAnalysisArrayOutput) Index(i pulumi.IntInput) AlarmAnalysisOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlarmAnalysis {
		return vs[0].([]AlarmAnalysis)[vs[1].(int)]
	}).(AlarmAnalysisOutput)
}

type AlarmAnalysisConfigInfo struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// AlarmAnalysisConfigInfoInput is an input type that accepts AlarmAnalysisConfigInfoArgs and AlarmAnalysisConfigInfoOutput values.
// You can construct a concrete instance of `AlarmAnalysisConfigInfoInput` via:
//
//	AlarmAnalysisConfigInfoArgs{...}
type AlarmAnalysisConfigInfoInput interface {
	pulumi.Input

	ToAlarmAnalysisConfigInfoOutput() AlarmAnalysisConfigInfoOutput
	ToAlarmAnalysisConfigInfoOutputWithContext(context.Context) AlarmAnalysisConfigInfoOutput
}

type AlarmAnalysisConfigInfoArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (AlarmAnalysisConfigInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmAnalysisConfigInfo)(nil)).Elem()
}

func (i AlarmAnalysisConfigInfoArgs) ToAlarmAnalysisConfigInfoOutput() AlarmAnalysisConfigInfoOutput {
	return i.ToAlarmAnalysisConfigInfoOutputWithContext(context.Background())
}

func (i AlarmAnalysisConfigInfoArgs) ToAlarmAnalysisConfigInfoOutputWithContext(ctx context.Context) AlarmAnalysisConfigInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmAnalysisConfigInfoOutput)
}

// AlarmAnalysisConfigInfoArrayInput is an input type that accepts AlarmAnalysisConfigInfoArray and AlarmAnalysisConfigInfoArrayOutput values.
// You can construct a concrete instance of `AlarmAnalysisConfigInfoArrayInput` via:
//
//	AlarmAnalysisConfigInfoArray{ AlarmAnalysisConfigInfoArgs{...} }
type AlarmAnalysisConfigInfoArrayInput interface {
	pulumi.Input

	ToAlarmAnalysisConfigInfoArrayOutput() AlarmAnalysisConfigInfoArrayOutput
	ToAlarmAnalysisConfigInfoArrayOutputWithContext(context.Context) AlarmAnalysisConfigInfoArrayOutput
}

type AlarmAnalysisConfigInfoArray []AlarmAnalysisConfigInfoInput

func (AlarmAnalysisConfigInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmAnalysisConfigInfo)(nil)).Elem()
}

func (i AlarmAnalysisConfigInfoArray) ToAlarmAnalysisConfigInfoArrayOutput() AlarmAnalysisConfigInfoArrayOutput {
	return i.ToAlarmAnalysisConfigInfoArrayOutputWithContext(context.Background())
}

func (i AlarmAnalysisConfigInfoArray) ToAlarmAnalysisConfigInfoArrayOutputWithContext(ctx context.Context) AlarmAnalysisConfigInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmAnalysisConfigInfoArrayOutput)
}

type AlarmAnalysisConfigInfoOutput struct{ *pulumi.OutputState }

func (AlarmAnalysisConfigInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmAnalysisConfigInfo)(nil)).Elem()
}

func (o AlarmAnalysisConfigInfoOutput) ToAlarmAnalysisConfigInfoOutput() AlarmAnalysisConfigInfoOutput {
	return o
}

func (o AlarmAnalysisConfigInfoOutput) ToAlarmAnalysisConfigInfoOutputWithContext(ctx context.Context) AlarmAnalysisConfigInfoOutput {
	return o
}

func (o AlarmAnalysisConfigInfoOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmAnalysisConfigInfo) string { return v.Key }).(pulumi.StringOutput)
}

func (o AlarmAnalysisConfigInfoOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmAnalysisConfigInfo) string { return v.Value }).(pulumi.StringOutput)
}

type AlarmAnalysisConfigInfoArrayOutput struct{ *pulumi.OutputState }

func (AlarmAnalysisConfigInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmAnalysisConfigInfo)(nil)).Elem()
}

func (o AlarmAnalysisConfigInfoArrayOutput) ToAlarmAnalysisConfigInfoArrayOutput() AlarmAnalysisConfigInfoArrayOutput {
	return o
}

func (o AlarmAnalysisConfigInfoArrayOutput) ToAlarmAnalysisConfigInfoArrayOutputWithContext(ctx context.Context) AlarmAnalysisConfigInfoArrayOutput {
	return o
}

func (o AlarmAnalysisConfigInfoArrayOutput) Index(i pulumi.IntInput) AlarmAnalysisConfigInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlarmAnalysisConfigInfo {
		return vs[0].([]AlarmAnalysisConfigInfo)[vs[1].(int)]
	}).(AlarmAnalysisConfigInfoOutput)
}

type AlarmCallBack struct {
	Body    string   `pulumi:"body"`
	Headers []string `pulumi:"headers"`
}

// AlarmCallBackInput is an input type that accepts AlarmCallBackArgs and AlarmCallBackOutput values.
// You can construct a concrete instance of `AlarmCallBackInput` via:
//
//	AlarmCallBackArgs{...}
type AlarmCallBackInput interface {
	pulumi.Input

	ToAlarmCallBackOutput() AlarmCallBackOutput
	ToAlarmCallBackOutputWithContext(context.Context) AlarmCallBackOutput
}

type AlarmCallBackArgs struct {
	Body    pulumi.StringInput      `pulumi:"body"`
	Headers pulumi.StringArrayInput `pulumi:"headers"`
}

func (AlarmCallBackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmCallBack)(nil)).Elem()
}

func (i AlarmCallBackArgs) ToAlarmCallBackOutput() AlarmCallBackOutput {
	return i.ToAlarmCallBackOutputWithContext(context.Background())
}

func (i AlarmCallBackArgs) ToAlarmCallBackOutputWithContext(ctx context.Context) AlarmCallBackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmCallBackOutput)
}

func (i AlarmCallBackArgs) ToAlarmCallBackPtrOutput() AlarmCallBackPtrOutput {
	return i.ToAlarmCallBackPtrOutputWithContext(context.Background())
}

func (i AlarmCallBackArgs) ToAlarmCallBackPtrOutputWithContext(ctx context.Context) AlarmCallBackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmCallBackOutput).ToAlarmCallBackPtrOutputWithContext(ctx)
}

// AlarmCallBackPtrInput is an input type that accepts AlarmCallBackArgs, AlarmCallBackPtr and AlarmCallBackPtrOutput values.
// You can construct a concrete instance of `AlarmCallBackPtrInput` via:
//
//	        AlarmCallBackArgs{...}
//
//	or:
//
//	        nil
type AlarmCallBackPtrInput interface {
	pulumi.Input

	ToAlarmCallBackPtrOutput() AlarmCallBackPtrOutput
	ToAlarmCallBackPtrOutputWithContext(context.Context) AlarmCallBackPtrOutput
}

type alarmCallBackPtrType AlarmCallBackArgs

func AlarmCallBackPtr(v *AlarmCallBackArgs) AlarmCallBackPtrInput {
	return (*alarmCallBackPtrType)(v)
}

func (*alarmCallBackPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmCallBack)(nil)).Elem()
}

func (i *alarmCallBackPtrType) ToAlarmCallBackPtrOutput() AlarmCallBackPtrOutput {
	return i.ToAlarmCallBackPtrOutputWithContext(context.Background())
}

func (i *alarmCallBackPtrType) ToAlarmCallBackPtrOutputWithContext(ctx context.Context) AlarmCallBackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmCallBackPtrOutput)
}

type AlarmCallBackOutput struct{ *pulumi.OutputState }

func (AlarmCallBackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmCallBack)(nil)).Elem()
}

func (o AlarmCallBackOutput) ToAlarmCallBackOutput() AlarmCallBackOutput {
	return o
}

func (o AlarmCallBackOutput) ToAlarmCallBackOutputWithContext(ctx context.Context) AlarmCallBackOutput {
	return o
}

func (o AlarmCallBackOutput) ToAlarmCallBackPtrOutput() AlarmCallBackPtrOutput {
	return o.ToAlarmCallBackPtrOutputWithContext(context.Background())
}

func (o AlarmCallBackOutput) ToAlarmCallBackPtrOutputWithContext(ctx context.Context) AlarmCallBackPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlarmCallBack) *AlarmCallBack {
		return &v
	}).(AlarmCallBackPtrOutput)
}

func (o AlarmCallBackOutput) Body() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmCallBack) string { return v.Body }).(pulumi.StringOutput)
}

func (o AlarmCallBackOutput) Headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlarmCallBack) []string { return v.Headers }).(pulumi.StringArrayOutput)
}

type AlarmCallBackPtrOutput struct{ *pulumi.OutputState }

func (AlarmCallBackPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmCallBack)(nil)).Elem()
}

func (o AlarmCallBackPtrOutput) ToAlarmCallBackPtrOutput() AlarmCallBackPtrOutput {
	return o
}

func (o AlarmCallBackPtrOutput) ToAlarmCallBackPtrOutputWithContext(ctx context.Context) AlarmCallBackPtrOutput {
	return o
}

func (o AlarmCallBackPtrOutput) Elem() AlarmCallBackOutput {
	return o.ApplyT(func(v *AlarmCallBack) AlarmCallBack {
		if v != nil {
			return *v
		}
		var ret AlarmCallBack
		return ret
	}).(AlarmCallBackOutput)
}

func (o AlarmCallBackPtrOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmCallBack) *string {
		if v == nil {
			return nil
		}
		return &v.Body
	}).(pulumi.StringPtrOutput)
}

func (o AlarmCallBackPtrOutput) Headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AlarmCallBack) []string {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(pulumi.StringArrayOutput)
}

type AlarmMonitorTime struct {
	Time int    `pulumi:"time"`
	Type string `pulumi:"type"`
}

// AlarmMonitorTimeInput is an input type that accepts AlarmMonitorTimeArgs and AlarmMonitorTimeOutput values.
// You can construct a concrete instance of `AlarmMonitorTimeInput` via:
//
//	AlarmMonitorTimeArgs{...}
type AlarmMonitorTimeInput interface {
	pulumi.Input

	ToAlarmMonitorTimeOutput() AlarmMonitorTimeOutput
	ToAlarmMonitorTimeOutputWithContext(context.Context) AlarmMonitorTimeOutput
}

type AlarmMonitorTimeArgs struct {
	Time pulumi.IntInput    `pulumi:"time"`
	Type pulumi.StringInput `pulumi:"type"`
}

func (AlarmMonitorTimeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmMonitorTime)(nil)).Elem()
}

func (i AlarmMonitorTimeArgs) ToAlarmMonitorTimeOutput() AlarmMonitorTimeOutput {
	return i.ToAlarmMonitorTimeOutputWithContext(context.Background())
}

func (i AlarmMonitorTimeArgs) ToAlarmMonitorTimeOutputWithContext(ctx context.Context) AlarmMonitorTimeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmMonitorTimeOutput)
}

func (i AlarmMonitorTimeArgs) ToAlarmMonitorTimePtrOutput() AlarmMonitorTimePtrOutput {
	return i.ToAlarmMonitorTimePtrOutputWithContext(context.Background())
}

func (i AlarmMonitorTimeArgs) ToAlarmMonitorTimePtrOutputWithContext(ctx context.Context) AlarmMonitorTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmMonitorTimeOutput).ToAlarmMonitorTimePtrOutputWithContext(ctx)
}

// AlarmMonitorTimePtrInput is an input type that accepts AlarmMonitorTimeArgs, AlarmMonitorTimePtr and AlarmMonitorTimePtrOutput values.
// You can construct a concrete instance of `AlarmMonitorTimePtrInput` via:
//
//	        AlarmMonitorTimeArgs{...}
//
//	or:
//
//	        nil
type AlarmMonitorTimePtrInput interface {
	pulumi.Input

	ToAlarmMonitorTimePtrOutput() AlarmMonitorTimePtrOutput
	ToAlarmMonitorTimePtrOutputWithContext(context.Context) AlarmMonitorTimePtrOutput
}

type alarmMonitorTimePtrType AlarmMonitorTimeArgs

func AlarmMonitorTimePtr(v *AlarmMonitorTimeArgs) AlarmMonitorTimePtrInput {
	return (*alarmMonitorTimePtrType)(v)
}

func (*alarmMonitorTimePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmMonitorTime)(nil)).Elem()
}

func (i *alarmMonitorTimePtrType) ToAlarmMonitorTimePtrOutput() AlarmMonitorTimePtrOutput {
	return i.ToAlarmMonitorTimePtrOutputWithContext(context.Background())
}

func (i *alarmMonitorTimePtrType) ToAlarmMonitorTimePtrOutputWithContext(ctx context.Context) AlarmMonitorTimePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmMonitorTimePtrOutput)
}

type AlarmMonitorTimeOutput struct{ *pulumi.OutputState }

func (AlarmMonitorTimeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmMonitorTime)(nil)).Elem()
}

func (o AlarmMonitorTimeOutput) ToAlarmMonitorTimeOutput() AlarmMonitorTimeOutput {
	return o
}

func (o AlarmMonitorTimeOutput) ToAlarmMonitorTimeOutputWithContext(ctx context.Context) AlarmMonitorTimeOutput {
	return o
}

func (o AlarmMonitorTimeOutput) ToAlarmMonitorTimePtrOutput() AlarmMonitorTimePtrOutput {
	return o.ToAlarmMonitorTimePtrOutputWithContext(context.Background())
}

func (o AlarmMonitorTimeOutput) ToAlarmMonitorTimePtrOutputWithContext(ctx context.Context) AlarmMonitorTimePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlarmMonitorTime) *AlarmMonitorTime {
		return &v
	}).(AlarmMonitorTimePtrOutput)
}

func (o AlarmMonitorTimeOutput) Time() pulumi.IntOutput {
	return o.ApplyT(func(v AlarmMonitorTime) int { return v.Time }).(pulumi.IntOutput)
}

func (o AlarmMonitorTimeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmMonitorTime) string { return v.Type }).(pulumi.StringOutput)
}

type AlarmMonitorTimePtrOutput struct{ *pulumi.OutputState }

func (AlarmMonitorTimePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlarmMonitorTime)(nil)).Elem()
}

func (o AlarmMonitorTimePtrOutput) ToAlarmMonitorTimePtrOutput() AlarmMonitorTimePtrOutput {
	return o
}

func (o AlarmMonitorTimePtrOutput) ToAlarmMonitorTimePtrOutputWithContext(ctx context.Context) AlarmMonitorTimePtrOutput {
	return o
}

func (o AlarmMonitorTimePtrOutput) Elem() AlarmMonitorTimeOutput {
	return o.ApplyT(func(v *AlarmMonitorTime) AlarmMonitorTime {
		if v != nil {
			return *v
		}
		var ret AlarmMonitorTime
		return ret
	}).(AlarmMonitorTimeOutput)
}

func (o AlarmMonitorTimePtrOutput) Time() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AlarmMonitorTime) *int {
		if v == nil {
			return nil
		}
		return &v.Time
	}).(pulumi.IntPtrOutput)
}

func (o AlarmMonitorTimePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlarmMonitorTime) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type AlarmNoticeNoticeReceiver struct {
	EndTime          *string  `pulumi:"endTime"`
	Index            *int     `pulumi:"index"`
	ReceiverChannels []string `pulumi:"receiverChannels"`
	ReceiverIds      []int    `pulumi:"receiverIds"`
	ReceiverType     string   `pulumi:"receiverType"`
	StartTime        *string  `pulumi:"startTime"`
}

// AlarmNoticeNoticeReceiverInput is an input type that accepts AlarmNoticeNoticeReceiverArgs and AlarmNoticeNoticeReceiverOutput values.
// You can construct a concrete instance of `AlarmNoticeNoticeReceiverInput` via:
//
//	AlarmNoticeNoticeReceiverArgs{...}
type AlarmNoticeNoticeReceiverInput interface {
	pulumi.Input

	ToAlarmNoticeNoticeReceiverOutput() AlarmNoticeNoticeReceiverOutput
	ToAlarmNoticeNoticeReceiverOutputWithContext(context.Context) AlarmNoticeNoticeReceiverOutput
}

type AlarmNoticeNoticeReceiverArgs struct {
	EndTime          pulumi.StringPtrInput   `pulumi:"endTime"`
	Index            pulumi.IntPtrInput      `pulumi:"index"`
	ReceiverChannels pulumi.StringArrayInput `pulumi:"receiverChannels"`
	ReceiverIds      pulumi.IntArrayInput    `pulumi:"receiverIds"`
	ReceiverType     pulumi.StringInput      `pulumi:"receiverType"`
	StartTime        pulumi.StringPtrInput   `pulumi:"startTime"`
}

func (AlarmNoticeNoticeReceiverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmNoticeNoticeReceiver)(nil)).Elem()
}

func (i AlarmNoticeNoticeReceiverArgs) ToAlarmNoticeNoticeReceiverOutput() AlarmNoticeNoticeReceiverOutput {
	return i.ToAlarmNoticeNoticeReceiverOutputWithContext(context.Background())
}

func (i AlarmNoticeNoticeReceiverArgs) ToAlarmNoticeNoticeReceiverOutputWithContext(ctx context.Context) AlarmNoticeNoticeReceiverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmNoticeNoticeReceiverOutput)
}

// AlarmNoticeNoticeReceiverArrayInput is an input type that accepts AlarmNoticeNoticeReceiverArray and AlarmNoticeNoticeReceiverArrayOutput values.
// You can construct a concrete instance of `AlarmNoticeNoticeReceiverArrayInput` via:
//
//	AlarmNoticeNoticeReceiverArray{ AlarmNoticeNoticeReceiverArgs{...} }
type AlarmNoticeNoticeReceiverArrayInput interface {
	pulumi.Input

	ToAlarmNoticeNoticeReceiverArrayOutput() AlarmNoticeNoticeReceiverArrayOutput
	ToAlarmNoticeNoticeReceiverArrayOutputWithContext(context.Context) AlarmNoticeNoticeReceiverArrayOutput
}

type AlarmNoticeNoticeReceiverArray []AlarmNoticeNoticeReceiverInput

func (AlarmNoticeNoticeReceiverArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmNoticeNoticeReceiver)(nil)).Elem()
}

func (i AlarmNoticeNoticeReceiverArray) ToAlarmNoticeNoticeReceiverArrayOutput() AlarmNoticeNoticeReceiverArrayOutput {
	return i.ToAlarmNoticeNoticeReceiverArrayOutputWithContext(context.Background())
}

func (i AlarmNoticeNoticeReceiverArray) ToAlarmNoticeNoticeReceiverArrayOutputWithContext(ctx context.Context) AlarmNoticeNoticeReceiverArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmNoticeNoticeReceiverArrayOutput)
}

type AlarmNoticeNoticeReceiverOutput struct{ *pulumi.OutputState }

func (AlarmNoticeNoticeReceiverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmNoticeNoticeReceiver)(nil)).Elem()
}

func (o AlarmNoticeNoticeReceiverOutput) ToAlarmNoticeNoticeReceiverOutput() AlarmNoticeNoticeReceiverOutput {
	return o
}

func (o AlarmNoticeNoticeReceiverOutput) ToAlarmNoticeNoticeReceiverOutputWithContext(ctx context.Context) AlarmNoticeNoticeReceiverOutput {
	return o
}

func (o AlarmNoticeNoticeReceiverOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmNoticeNoticeReceiver) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

func (o AlarmNoticeNoticeReceiverOutput) Index() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmNoticeNoticeReceiver) *int { return v.Index }).(pulumi.IntPtrOutput)
}

func (o AlarmNoticeNoticeReceiverOutput) ReceiverChannels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlarmNoticeNoticeReceiver) []string { return v.ReceiverChannels }).(pulumi.StringArrayOutput)
}

func (o AlarmNoticeNoticeReceiverOutput) ReceiverIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v AlarmNoticeNoticeReceiver) []int { return v.ReceiverIds }).(pulumi.IntArrayOutput)
}

func (o AlarmNoticeNoticeReceiverOutput) ReceiverType() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmNoticeNoticeReceiver) string { return v.ReceiverType }).(pulumi.StringOutput)
}

func (o AlarmNoticeNoticeReceiverOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmNoticeNoticeReceiver) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type AlarmNoticeNoticeReceiverArrayOutput struct{ *pulumi.OutputState }

func (AlarmNoticeNoticeReceiverArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmNoticeNoticeReceiver)(nil)).Elem()
}

func (o AlarmNoticeNoticeReceiverArrayOutput) ToAlarmNoticeNoticeReceiverArrayOutput() AlarmNoticeNoticeReceiverArrayOutput {
	return o
}

func (o AlarmNoticeNoticeReceiverArrayOutput) ToAlarmNoticeNoticeReceiverArrayOutputWithContext(ctx context.Context) AlarmNoticeNoticeReceiverArrayOutput {
	return o
}

func (o AlarmNoticeNoticeReceiverArrayOutput) Index(i pulumi.IntInput) AlarmNoticeNoticeReceiverOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlarmNoticeNoticeReceiver {
		return vs[0].([]AlarmNoticeNoticeReceiver)[vs[1].(int)]
	}).(AlarmNoticeNoticeReceiverOutput)
}

type AlarmNoticeWebCallback struct {
	Body         *string  `pulumi:"body"`
	CallbackType string   `pulumi:"callbackType"`
	Headers      []string `pulumi:"headers"`
	Index        *int     `pulumi:"index"`
	Method       *string  `pulumi:"method"`
	Url          string   `pulumi:"url"`
}

// AlarmNoticeWebCallbackInput is an input type that accepts AlarmNoticeWebCallbackArgs and AlarmNoticeWebCallbackOutput values.
// You can construct a concrete instance of `AlarmNoticeWebCallbackInput` via:
//
//	AlarmNoticeWebCallbackArgs{...}
type AlarmNoticeWebCallbackInput interface {
	pulumi.Input

	ToAlarmNoticeWebCallbackOutput() AlarmNoticeWebCallbackOutput
	ToAlarmNoticeWebCallbackOutputWithContext(context.Context) AlarmNoticeWebCallbackOutput
}

type AlarmNoticeWebCallbackArgs struct {
	Body         pulumi.StringPtrInput   `pulumi:"body"`
	CallbackType pulumi.StringInput      `pulumi:"callbackType"`
	Headers      pulumi.StringArrayInput `pulumi:"headers"`
	Index        pulumi.IntPtrInput      `pulumi:"index"`
	Method       pulumi.StringPtrInput   `pulumi:"method"`
	Url          pulumi.StringInput      `pulumi:"url"`
}

func (AlarmNoticeWebCallbackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmNoticeWebCallback)(nil)).Elem()
}

func (i AlarmNoticeWebCallbackArgs) ToAlarmNoticeWebCallbackOutput() AlarmNoticeWebCallbackOutput {
	return i.ToAlarmNoticeWebCallbackOutputWithContext(context.Background())
}

func (i AlarmNoticeWebCallbackArgs) ToAlarmNoticeWebCallbackOutputWithContext(ctx context.Context) AlarmNoticeWebCallbackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmNoticeWebCallbackOutput)
}

// AlarmNoticeWebCallbackArrayInput is an input type that accepts AlarmNoticeWebCallbackArray and AlarmNoticeWebCallbackArrayOutput values.
// You can construct a concrete instance of `AlarmNoticeWebCallbackArrayInput` via:
//
//	AlarmNoticeWebCallbackArray{ AlarmNoticeWebCallbackArgs{...} }
type AlarmNoticeWebCallbackArrayInput interface {
	pulumi.Input

	ToAlarmNoticeWebCallbackArrayOutput() AlarmNoticeWebCallbackArrayOutput
	ToAlarmNoticeWebCallbackArrayOutputWithContext(context.Context) AlarmNoticeWebCallbackArrayOutput
}

type AlarmNoticeWebCallbackArray []AlarmNoticeWebCallbackInput

func (AlarmNoticeWebCallbackArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmNoticeWebCallback)(nil)).Elem()
}

func (i AlarmNoticeWebCallbackArray) ToAlarmNoticeWebCallbackArrayOutput() AlarmNoticeWebCallbackArrayOutput {
	return i.ToAlarmNoticeWebCallbackArrayOutputWithContext(context.Background())
}

func (i AlarmNoticeWebCallbackArray) ToAlarmNoticeWebCallbackArrayOutputWithContext(ctx context.Context) AlarmNoticeWebCallbackArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlarmNoticeWebCallbackArrayOutput)
}

type AlarmNoticeWebCallbackOutput struct{ *pulumi.OutputState }

func (AlarmNoticeWebCallbackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlarmNoticeWebCallback)(nil)).Elem()
}

func (o AlarmNoticeWebCallbackOutput) ToAlarmNoticeWebCallbackOutput() AlarmNoticeWebCallbackOutput {
	return o
}

func (o AlarmNoticeWebCallbackOutput) ToAlarmNoticeWebCallbackOutputWithContext(ctx context.Context) AlarmNoticeWebCallbackOutput {
	return o
}

func (o AlarmNoticeWebCallbackOutput) Body() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmNoticeWebCallback) *string { return v.Body }).(pulumi.StringPtrOutput)
}

func (o AlarmNoticeWebCallbackOutput) CallbackType() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmNoticeWebCallback) string { return v.CallbackType }).(pulumi.StringOutput)
}

func (o AlarmNoticeWebCallbackOutput) Headers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AlarmNoticeWebCallback) []string { return v.Headers }).(pulumi.StringArrayOutput)
}

func (o AlarmNoticeWebCallbackOutput) Index() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AlarmNoticeWebCallback) *int { return v.Index }).(pulumi.IntPtrOutput)
}

func (o AlarmNoticeWebCallbackOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlarmNoticeWebCallback) *string { return v.Method }).(pulumi.StringPtrOutput)
}

func (o AlarmNoticeWebCallbackOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v AlarmNoticeWebCallback) string { return v.Url }).(pulumi.StringOutput)
}

type AlarmNoticeWebCallbackArrayOutput struct{ *pulumi.OutputState }

func (AlarmNoticeWebCallbackArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlarmNoticeWebCallback)(nil)).Elem()
}

func (o AlarmNoticeWebCallbackArrayOutput) ToAlarmNoticeWebCallbackArrayOutput() AlarmNoticeWebCallbackArrayOutput {
	return o
}

func (o AlarmNoticeWebCallbackArrayOutput) ToAlarmNoticeWebCallbackArrayOutputWithContext(ctx context.Context) AlarmNoticeWebCallbackArrayOutput {
	return o
}

func (o AlarmNoticeWebCallbackArrayOutput) Index(i pulumi.IntInput) AlarmNoticeWebCallbackOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlarmNoticeWebCallback {
		return vs[0].([]AlarmNoticeWebCallback)[vs[1].(int)]
	}).(AlarmNoticeWebCallbackOutput)
}

type CkafkaConsumerCkafka struct {
	InstanceId   string `pulumi:"instanceId"`
	InstanceName string `pulumi:"instanceName"`
	TopicId      string `pulumi:"topicId"`
	TopicName    string `pulumi:"topicName"`
	Vip          string `pulumi:"vip"`
	Vport        string `pulumi:"vport"`
}

// CkafkaConsumerCkafkaInput is an input type that accepts CkafkaConsumerCkafkaArgs and CkafkaConsumerCkafkaOutput values.
// You can construct a concrete instance of `CkafkaConsumerCkafkaInput` via:
//
//	CkafkaConsumerCkafkaArgs{...}
type CkafkaConsumerCkafkaInput interface {
	pulumi.Input

	ToCkafkaConsumerCkafkaOutput() CkafkaConsumerCkafkaOutput
	ToCkafkaConsumerCkafkaOutputWithContext(context.Context) CkafkaConsumerCkafkaOutput
}

type CkafkaConsumerCkafkaArgs struct {
	InstanceId   pulumi.StringInput `pulumi:"instanceId"`
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	TopicId      pulumi.StringInput `pulumi:"topicId"`
	TopicName    pulumi.StringInput `pulumi:"topicName"`
	Vip          pulumi.StringInput `pulumi:"vip"`
	Vport        pulumi.StringInput `pulumi:"vport"`
}

func (CkafkaConsumerCkafkaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CkafkaConsumerCkafka)(nil)).Elem()
}

func (i CkafkaConsumerCkafkaArgs) ToCkafkaConsumerCkafkaOutput() CkafkaConsumerCkafkaOutput {
	return i.ToCkafkaConsumerCkafkaOutputWithContext(context.Background())
}

func (i CkafkaConsumerCkafkaArgs) ToCkafkaConsumerCkafkaOutputWithContext(ctx context.Context) CkafkaConsumerCkafkaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CkafkaConsumerCkafkaOutput)
}

func (i CkafkaConsumerCkafkaArgs) ToCkafkaConsumerCkafkaPtrOutput() CkafkaConsumerCkafkaPtrOutput {
	return i.ToCkafkaConsumerCkafkaPtrOutputWithContext(context.Background())
}

func (i CkafkaConsumerCkafkaArgs) ToCkafkaConsumerCkafkaPtrOutputWithContext(ctx context.Context) CkafkaConsumerCkafkaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CkafkaConsumerCkafkaOutput).ToCkafkaConsumerCkafkaPtrOutputWithContext(ctx)
}

// CkafkaConsumerCkafkaPtrInput is an input type that accepts CkafkaConsumerCkafkaArgs, CkafkaConsumerCkafkaPtr and CkafkaConsumerCkafkaPtrOutput values.
// You can construct a concrete instance of `CkafkaConsumerCkafkaPtrInput` via:
//
//	        CkafkaConsumerCkafkaArgs{...}
//
//	or:
//
//	        nil
type CkafkaConsumerCkafkaPtrInput interface {
	pulumi.Input

	ToCkafkaConsumerCkafkaPtrOutput() CkafkaConsumerCkafkaPtrOutput
	ToCkafkaConsumerCkafkaPtrOutputWithContext(context.Context) CkafkaConsumerCkafkaPtrOutput
}

type ckafkaConsumerCkafkaPtrType CkafkaConsumerCkafkaArgs

func CkafkaConsumerCkafkaPtr(v *CkafkaConsumerCkafkaArgs) CkafkaConsumerCkafkaPtrInput {
	return (*ckafkaConsumerCkafkaPtrType)(v)
}

func (*ckafkaConsumerCkafkaPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CkafkaConsumerCkafka)(nil)).Elem()
}

func (i *ckafkaConsumerCkafkaPtrType) ToCkafkaConsumerCkafkaPtrOutput() CkafkaConsumerCkafkaPtrOutput {
	return i.ToCkafkaConsumerCkafkaPtrOutputWithContext(context.Background())
}

func (i *ckafkaConsumerCkafkaPtrType) ToCkafkaConsumerCkafkaPtrOutputWithContext(ctx context.Context) CkafkaConsumerCkafkaPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CkafkaConsumerCkafkaPtrOutput)
}

type CkafkaConsumerCkafkaOutput struct{ *pulumi.OutputState }

func (CkafkaConsumerCkafkaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CkafkaConsumerCkafka)(nil)).Elem()
}

func (o CkafkaConsumerCkafkaOutput) ToCkafkaConsumerCkafkaOutput() CkafkaConsumerCkafkaOutput {
	return o
}

func (o CkafkaConsumerCkafkaOutput) ToCkafkaConsumerCkafkaOutputWithContext(ctx context.Context) CkafkaConsumerCkafkaOutput {
	return o
}

func (o CkafkaConsumerCkafkaOutput) ToCkafkaConsumerCkafkaPtrOutput() CkafkaConsumerCkafkaPtrOutput {
	return o.ToCkafkaConsumerCkafkaPtrOutputWithContext(context.Background())
}

func (o CkafkaConsumerCkafkaOutput) ToCkafkaConsumerCkafkaPtrOutputWithContext(ctx context.Context) CkafkaConsumerCkafkaPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CkafkaConsumerCkafka) *CkafkaConsumerCkafka {
		return &v
	}).(CkafkaConsumerCkafkaPtrOutput)
}

func (o CkafkaConsumerCkafkaOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v CkafkaConsumerCkafka) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o CkafkaConsumerCkafkaOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v CkafkaConsumerCkafka) string { return v.InstanceName }).(pulumi.StringOutput)
}

func (o CkafkaConsumerCkafkaOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v CkafkaConsumerCkafka) string { return v.TopicId }).(pulumi.StringOutput)
}

func (o CkafkaConsumerCkafkaOutput) TopicName() pulumi.StringOutput {
	return o.ApplyT(func(v CkafkaConsumerCkafka) string { return v.TopicName }).(pulumi.StringOutput)
}

func (o CkafkaConsumerCkafkaOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func(v CkafkaConsumerCkafka) string { return v.Vip }).(pulumi.StringOutput)
}

func (o CkafkaConsumerCkafkaOutput) Vport() pulumi.StringOutput {
	return o.ApplyT(func(v CkafkaConsumerCkafka) string { return v.Vport }).(pulumi.StringOutput)
}

type CkafkaConsumerCkafkaPtrOutput struct{ *pulumi.OutputState }

func (CkafkaConsumerCkafkaPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CkafkaConsumerCkafka)(nil)).Elem()
}

func (o CkafkaConsumerCkafkaPtrOutput) ToCkafkaConsumerCkafkaPtrOutput() CkafkaConsumerCkafkaPtrOutput {
	return o
}

func (o CkafkaConsumerCkafkaPtrOutput) ToCkafkaConsumerCkafkaPtrOutputWithContext(ctx context.Context) CkafkaConsumerCkafkaPtrOutput {
	return o
}

func (o CkafkaConsumerCkafkaPtrOutput) Elem() CkafkaConsumerCkafkaOutput {
	return o.ApplyT(func(v *CkafkaConsumerCkafka) CkafkaConsumerCkafka {
		if v != nil {
			return *v
		}
		var ret CkafkaConsumerCkafka
		return ret
	}).(CkafkaConsumerCkafkaOutput)
}

func (o CkafkaConsumerCkafkaPtrOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CkafkaConsumerCkafka) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceId
	}).(pulumi.StringPtrOutput)
}

func (o CkafkaConsumerCkafkaPtrOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CkafkaConsumerCkafka) *string {
		if v == nil {
			return nil
		}
		return &v.InstanceName
	}).(pulumi.StringPtrOutput)
}

func (o CkafkaConsumerCkafkaPtrOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CkafkaConsumerCkafka) *string {
		if v == nil {
			return nil
		}
		return &v.TopicId
	}).(pulumi.StringPtrOutput)
}

func (o CkafkaConsumerCkafkaPtrOutput) TopicName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CkafkaConsumerCkafka) *string {
		if v == nil {
			return nil
		}
		return &v.TopicName
	}).(pulumi.StringPtrOutput)
}

func (o CkafkaConsumerCkafkaPtrOutput) Vip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CkafkaConsumerCkafka) *string {
		if v == nil {
			return nil
		}
		return &v.Vip
	}).(pulumi.StringPtrOutput)
}

func (o CkafkaConsumerCkafkaPtrOutput) Vport() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CkafkaConsumerCkafka) *string {
		if v == nil {
			return nil
		}
		return &v.Vport
	}).(pulumi.StringPtrOutput)
}

type CkafkaConsumerContent struct {
	EnableTag         bool     `pulumi:"enableTag"`
	MetaFields        []string `pulumi:"metaFields"`
	TagJsonNotTiled   *bool    `pulumi:"tagJsonNotTiled"`
	TimestampAccuracy *int     `pulumi:"timestampAccuracy"`
}

// CkafkaConsumerContentInput is an input type that accepts CkafkaConsumerContentArgs and CkafkaConsumerContentOutput values.
// You can construct a concrete instance of `CkafkaConsumerContentInput` via:
//
//	CkafkaConsumerContentArgs{...}
type CkafkaConsumerContentInput interface {
	pulumi.Input

	ToCkafkaConsumerContentOutput() CkafkaConsumerContentOutput
	ToCkafkaConsumerContentOutputWithContext(context.Context) CkafkaConsumerContentOutput
}

type CkafkaConsumerContentArgs struct {
	EnableTag         pulumi.BoolInput        `pulumi:"enableTag"`
	MetaFields        pulumi.StringArrayInput `pulumi:"metaFields"`
	TagJsonNotTiled   pulumi.BoolPtrInput     `pulumi:"tagJsonNotTiled"`
	TimestampAccuracy pulumi.IntPtrInput      `pulumi:"timestampAccuracy"`
}

func (CkafkaConsumerContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CkafkaConsumerContent)(nil)).Elem()
}

func (i CkafkaConsumerContentArgs) ToCkafkaConsumerContentOutput() CkafkaConsumerContentOutput {
	return i.ToCkafkaConsumerContentOutputWithContext(context.Background())
}

func (i CkafkaConsumerContentArgs) ToCkafkaConsumerContentOutputWithContext(ctx context.Context) CkafkaConsumerContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CkafkaConsumerContentOutput)
}

func (i CkafkaConsumerContentArgs) ToCkafkaConsumerContentPtrOutput() CkafkaConsumerContentPtrOutput {
	return i.ToCkafkaConsumerContentPtrOutputWithContext(context.Background())
}

func (i CkafkaConsumerContentArgs) ToCkafkaConsumerContentPtrOutputWithContext(ctx context.Context) CkafkaConsumerContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CkafkaConsumerContentOutput).ToCkafkaConsumerContentPtrOutputWithContext(ctx)
}

// CkafkaConsumerContentPtrInput is an input type that accepts CkafkaConsumerContentArgs, CkafkaConsumerContentPtr and CkafkaConsumerContentPtrOutput values.
// You can construct a concrete instance of `CkafkaConsumerContentPtrInput` via:
//
//	        CkafkaConsumerContentArgs{...}
//
//	or:
//
//	        nil
type CkafkaConsumerContentPtrInput interface {
	pulumi.Input

	ToCkafkaConsumerContentPtrOutput() CkafkaConsumerContentPtrOutput
	ToCkafkaConsumerContentPtrOutputWithContext(context.Context) CkafkaConsumerContentPtrOutput
}

type ckafkaConsumerContentPtrType CkafkaConsumerContentArgs

func CkafkaConsumerContentPtr(v *CkafkaConsumerContentArgs) CkafkaConsumerContentPtrInput {
	return (*ckafkaConsumerContentPtrType)(v)
}

func (*ckafkaConsumerContentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CkafkaConsumerContent)(nil)).Elem()
}

func (i *ckafkaConsumerContentPtrType) ToCkafkaConsumerContentPtrOutput() CkafkaConsumerContentPtrOutput {
	return i.ToCkafkaConsumerContentPtrOutputWithContext(context.Background())
}

func (i *ckafkaConsumerContentPtrType) ToCkafkaConsumerContentPtrOutputWithContext(ctx context.Context) CkafkaConsumerContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CkafkaConsumerContentPtrOutput)
}

type CkafkaConsumerContentOutput struct{ *pulumi.OutputState }

func (CkafkaConsumerContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CkafkaConsumerContent)(nil)).Elem()
}

func (o CkafkaConsumerContentOutput) ToCkafkaConsumerContentOutput() CkafkaConsumerContentOutput {
	return o
}

func (o CkafkaConsumerContentOutput) ToCkafkaConsumerContentOutputWithContext(ctx context.Context) CkafkaConsumerContentOutput {
	return o
}

func (o CkafkaConsumerContentOutput) ToCkafkaConsumerContentPtrOutput() CkafkaConsumerContentPtrOutput {
	return o.ToCkafkaConsumerContentPtrOutputWithContext(context.Background())
}

func (o CkafkaConsumerContentOutput) ToCkafkaConsumerContentPtrOutputWithContext(ctx context.Context) CkafkaConsumerContentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CkafkaConsumerContent) *CkafkaConsumerContent {
		return &v
	}).(CkafkaConsumerContentPtrOutput)
}

func (o CkafkaConsumerContentOutput) EnableTag() pulumi.BoolOutput {
	return o.ApplyT(func(v CkafkaConsumerContent) bool { return v.EnableTag }).(pulumi.BoolOutput)
}

func (o CkafkaConsumerContentOutput) MetaFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CkafkaConsumerContent) []string { return v.MetaFields }).(pulumi.StringArrayOutput)
}

func (o CkafkaConsumerContentOutput) TagJsonNotTiled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CkafkaConsumerContent) *bool { return v.TagJsonNotTiled }).(pulumi.BoolPtrOutput)
}

func (o CkafkaConsumerContentOutput) TimestampAccuracy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CkafkaConsumerContent) *int { return v.TimestampAccuracy }).(pulumi.IntPtrOutput)
}

type CkafkaConsumerContentPtrOutput struct{ *pulumi.OutputState }

func (CkafkaConsumerContentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CkafkaConsumerContent)(nil)).Elem()
}

func (o CkafkaConsumerContentPtrOutput) ToCkafkaConsumerContentPtrOutput() CkafkaConsumerContentPtrOutput {
	return o
}

func (o CkafkaConsumerContentPtrOutput) ToCkafkaConsumerContentPtrOutputWithContext(ctx context.Context) CkafkaConsumerContentPtrOutput {
	return o
}

func (o CkafkaConsumerContentPtrOutput) Elem() CkafkaConsumerContentOutput {
	return o.ApplyT(func(v *CkafkaConsumerContent) CkafkaConsumerContent {
		if v != nil {
			return *v
		}
		var ret CkafkaConsumerContent
		return ret
	}).(CkafkaConsumerContentOutput)
}

func (o CkafkaConsumerContentPtrOutput) EnableTag() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CkafkaConsumerContent) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableTag
	}).(pulumi.BoolPtrOutput)
}

func (o CkafkaConsumerContentPtrOutput) MetaFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CkafkaConsumerContent) []string {
		if v == nil {
			return nil
		}
		return v.MetaFields
	}).(pulumi.StringArrayOutput)
}

func (o CkafkaConsumerContentPtrOutput) TagJsonNotTiled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CkafkaConsumerContent) *bool {
		if v == nil {
			return nil
		}
		return v.TagJsonNotTiled
	}).(pulumi.BoolPtrOutput)
}

func (o CkafkaConsumerContentPtrOutput) TimestampAccuracy() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CkafkaConsumerContent) *int {
		if v == nil {
			return nil
		}
		return v.TimestampAccuracy
	}).(pulumi.IntPtrOutput)
}

type ConfigExcludePath struct {
	Type  *string `pulumi:"type"`
	Value *string `pulumi:"value"`
}

// ConfigExcludePathInput is an input type that accepts ConfigExcludePathArgs and ConfigExcludePathOutput values.
// You can construct a concrete instance of `ConfigExcludePathInput` via:
//
//	ConfigExcludePathArgs{...}
type ConfigExcludePathInput interface {
	pulumi.Input

	ToConfigExcludePathOutput() ConfigExcludePathOutput
	ToConfigExcludePathOutputWithContext(context.Context) ConfigExcludePathOutput
}

type ConfigExcludePathArgs struct {
	Type  pulumi.StringPtrInput `pulumi:"type"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ConfigExcludePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigExcludePath)(nil)).Elem()
}

func (i ConfigExcludePathArgs) ToConfigExcludePathOutput() ConfigExcludePathOutput {
	return i.ToConfigExcludePathOutputWithContext(context.Background())
}

func (i ConfigExcludePathArgs) ToConfigExcludePathOutputWithContext(ctx context.Context) ConfigExcludePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigExcludePathOutput)
}

// ConfigExcludePathArrayInput is an input type that accepts ConfigExcludePathArray and ConfigExcludePathArrayOutput values.
// You can construct a concrete instance of `ConfigExcludePathArrayInput` via:
//
//	ConfigExcludePathArray{ ConfigExcludePathArgs{...} }
type ConfigExcludePathArrayInput interface {
	pulumi.Input

	ToConfigExcludePathArrayOutput() ConfigExcludePathArrayOutput
	ToConfigExcludePathArrayOutputWithContext(context.Context) ConfigExcludePathArrayOutput
}

type ConfigExcludePathArray []ConfigExcludePathInput

func (ConfigExcludePathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigExcludePath)(nil)).Elem()
}

func (i ConfigExcludePathArray) ToConfigExcludePathArrayOutput() ConfigExcludePathArrayOutput {
	return i.ToConfigExcludePathArrayOutputWithContext(context.Background())
}

func (i ConfigExcludePathArray) ToConfigExcludePathArrayOutputWithContext(ctx context.Context) ConfigExcludePathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigExcludePathArrayOutput)
}

type ConfigExcludePathOutput struct{ *pulumi.OutputState }

func (ConfigExcludePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigExcludePath)(nil)).Elem()
}

func (o ConfigExcludePathOutput) ToConfigExcludePathOutput() ConfigExcludePathOutput {
	return o
}

func (o ConfigExcludePathOutput) ToConfigExcludePathOutputWithContext(ctx context.Context) ConfigExcludePathOutput {
	return o
}

func (o ConfigExcludePathOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExcludePath) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ConfigExcludePathOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExcludePath) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ConfigExcludePathArrayOutput struct{ *pulumi.OutputState }

func (ConfigExcludePathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigExcludePath)(nil)).Elem()
}

func (o ConfigExcludePathArrayOutput) ToConfigExcludePathArrayOutput() ConfigExcludePathArrayOutput {
	return o
}

func (o ConfigExcludePathArrayOutput) ToConfigExcludePathArrayOutputWithContext(ctx context.Context) ConfigExcludePathArrayOutput {
	return o
}

func (o ConfigExcludePathArrayOutput) Index(i pulumi.IntInput) ConfigExcludePathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigExcludePath {
		return vs[0].([]ConfigExcludePath)[vs[1].(int)]
	}).(ConfigExcludePathOutput)
}

type ConfigExtraContainerFile struct {
	Container        string                            `pulumi:"container"`
	ExcludeLabels    []string                          `pulumi:"excludeLabels"`
	ExcludeNamespace *string                           `pulumi:"excludeNamespace"`
	FilePattern      string                            `pulumi:"filePattern"`
	IncludeLabels    []string                          `pulumi:"includeLabels"`
	LogPath          string                            `pulumi:"logPath"`
	Namespace        string                            `pulumi:"namespace"`
	Workload         *ConfigExtraContainerFileWorkload `pulumi:"workload"`
}

// ConfigExtraContainerFileInput is an input type that accepts ConfigExtraContainerFileArgs and ConfigExtraContainerFileOutput values.
// You can construct a concrete instance of `ConfigExtraContainerFileInput` via:
//
//	ConfigExtraContainerFileArgs{...}
type ConfigExtraContainerFileInput interface {
	pulumi.Input

	ToConfigExtraContainerFileOutput() ConfigExtraContainerFileOutput
	ToConfigExtraContainerFileOutputWithContext(context.Context) ConfigExtraContainerFileOutput
}

type ConfigExtraContainerFileArgs struct {
	Container        pulumi.StringInput                       `pulumi:"container"`
	ExcludeLabels    pulumi.StringArrayInput                  `pulumi:"excludeLabels"`
	ExcludeNamespace pulumi.StringPtrInput                    `pulumi:"excludeNamespace"`
	FilePattern      pulumi.StringInput                       `pulumi:"filePattern"`
	IncludeLabels    pulumi.StringArrayInput                  `pulumi:"includeLabels"`
	LogPath          pulumi.StringInput                       `pulumi:"logPath"`
	Namespace        pulumi.StringInput                       `pulumi:"namespace"`
	Workload         ConfigExtraContainerFileWorkloadPtrInput `pulumi:"workload"`
}

func (ConfigExtraContainerFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigExtraContainerFile)(nil)).Elem()
}

func (i ConfigExtraContainerFileArgs) ToConfigExtraContainerFileOutput() ConfigExtraContainerFileOutput {
	return i.ToConfigExtraContainerFileOutputWithContext(context.Background())
}

func (i ConfigExtraContainerFileArgs) ToConfigExtraContainerFileOutputWithContext(ctx context.Context) ConfigExtraContainerFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigExtraContainerFileOutput)
}

func (i ConfigExtraContainerFileArgs) ToConfigExtraContainerFilePtrOutput() ConfigExtraContainerFilePtrOutput {
	return i.ToConfigExtraContainerFilePtrOutputWithContext(context.Background())
}

func (i ConfigExtraContainerFileArgs) ToConfigExtraContainerFilePtrOutputWithContext(ctx context.Context) ConfigExtraContainerFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigExtraContainerFileOutput).ToConfigExtraContainerFilePtrOutputWithContext(ctx)
}

// ConfigExtraContainerFilePtrInput is an input type that accepts ConfigExtraContainerFileArgs, ConfigExtraContainerFilePtr and ConfigExtraContainerFilePtrOutput values.
// You can construct a concrete instance of `ConfigExtraContainerFilePtrInput` via:
//
//	        ConfigExtraContainerFileArgs{...}
//
//	or:
//
//	        nil
type ConfigExtraContainerFilePtrInput interface {
	pulumi.Input

	ToConfigExtraContainerFilePtrOutput() ConfigExtraContainerFilePtrOutput
	ToConfigExtraContainerFilePtrOutputWithContext(context.Context) ConfigExtraContainerFilePtrOutput
}

type configExtraContainerFilePtrType ConfigExtraContainerFileArgs

func ConfigExtraContainerFilePtr(v *ConfigExtraContainerFileArgs) ConfigExtraContainerFilePtrInput {
	return (*configExtraContainerFilePtrType)(v)
}

func (*configExtraContainerFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigExtraContainerFile)(nil)).Elem()
}

func (i *configExtraContainerFilePtrType) ToConfigExtraContainerFilePtrOutput() ConfigExtraContainerFilePtrOutput {
	return i.ToConfigExtraContainerFilePtrOutputWithContext(context.Background())
}

func (i *configExtraContainerFilePtrType) ToConfigExtraContainerFilePtrOutputWithContext(ctx context.Context) ConfigExtraContainerFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigExtraContainerFilePtrOutput)
}

type ConfigExtraContainerFileOutput struct{ *pulumi.OutputState }

func (ConfigExtraContainerFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigExtraContainerFile)(nil)).Elem()
}

func (o ConfigExtraContainerFileOutput) ToConfigExtraContainerFileOutput() ConfigExtraContainerFileOutput {
	return o
}

func (o ConfigExtraContainerFileOutput) ToConfigExtraContainerFileOutputWithContext(ctx context.Context) ConfigExtraContainerFileOutput {
	return o
}

func (o ConfigExtraContainerFileOutput) ToConfigExtraContainerFilePtrOutput() ConfigExtraContainerFilePtrOutput {
	return o.ToConfigExtraContainerFilePtrOutputWithContext(context.Background())
}

func (o ConfigExtraContainerFileOutput) ToConfigExtraContainerFilePtrOutputWithContext(ctx context.Context) ConfigExtraContainerFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigExtraContainerFile) *ConfigExtraContainerFile {
		return &v
	}).(ConfigExtraContainerFilePtrOutput)
}

func (o ConfigExtraContainerFileOutput) Container() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigExtraContainerFile) string { return v.Container }).(pulumi.StringOutput)
}

func (o ConfigExtraContainerFileOutput) ExcludeLabels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigExtraContainerFile) []string { return v.ExcludeLabels }).(pulumi.StringArrayOutput)
}

func (o ConfigExtraContainerFileOutput) ExcludeNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtraContainerFile) *string { return v.ExcludeNamespace }).(pulumi.StringPtrOutput)
}

func (o ConfigExtraContainerFileOutput) FilePattern() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigExtraContainerFile) string { return v.FilePattern }).(pulumi.StringOutput)
}

func (o ConfigExtraContainerFileOutput) IncludeLabels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigExtraContainerFile) []string { return v.IncludeLabels }).(pulumi.StringArrayOutput)
}

func (o ConfigExtraContainerFileOutput) LogPath() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigExtraContainerFile) string { return v.LogPath }).(pulumi.StringOutput)
}

func (o ConfigExtraContainerFileOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigExtraContainerFile) string { return v.Namespace }).(pulumi.StringOutput)
}

func (o ConfigExtraContainerFileOutput) Workload() ConfigExtraContainerFileWorkloadPtrOutput {
	return o.ApplyT(func(v ConfigExtraContainerFile) *ConfigExtraContainerFileWorkload { return v.Workload }).(ConfigExtraContainerFileWorkloadPtrOutput)
}

type ConfigExtraContainerFilePtrOutput struct{ *pulumi.OutputState }

func (ConfigExtraContainerFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigExtraContainerFile)(nil)).Elem()
}

func (o ConfigExtraContainerFilePtrOutput) ToConfigExtraContainerFilePtrOutput() ConfigExtraContainerFilePtrOutput {
	return o
}

func (o ConfigExtraContainerFilePtrOutput) ToConfigExtraContainerFilePtrOutputWithContext(ctx context.Context) ConfigExtraContainerFilePtrOutput {
	return o
}

func (o ConfigExtraContainerFilePtrOutput) Elem() ConfigExtraContainerFileOutput {
	return o.ApplyT(func(v *ConfigExtraContainerFile) ConfigExtraContainerFile {
		if v != nil {
			return *v
		}
		var ret ConfigExtraContainerFile
		return ret
	}).(ConfigExtraContainerFileOutput)
}

func (o ConfigExtraContainerFilePtrOutput) Container() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigExtraContainerFile) *string {
		if v == nil {
			return nil
		}
		return &v.Container
	}).(pulumi.StringPtrOutput)
}

func (o ConfigExtraContainerFilePtrOutput) ExcludeLabels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigExtraContainerFile) []string {
		if v == nil {
			return nil
		}
		return v.ExcludeLabels
	}).(pulumi.StringArrayOutput)
}

func (o ConfigExtraContainerFilePtrOutput) ExcludeNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigExtraContainerFile) *string {
		if v == nil {
			return nil
		}
		return v.ExcludeNamespace
	}).(pulumi.StringPtrOutput)
}

func (o ConfigExtraContainerFilePtrOutput) FilePattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigExtraContainerFile) *string {
		if v == nil {
			return nil
		}
		return &v.FilePattern
	}).(pulumi.StringPtrOutput)
}

func (o ConfigExtraContainerFilePtrOutput) IncludeLabels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigExtraContainerFile) []string {
		if v == nil {
			return nil
		}
		return v.IncludeLabels
	}).(pulumi.StringArrayOutput)
}

func (o ConfigExtraContainerFilePtrOutput) LogPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigExtraContainerFile) *string {
		if v == nil {
			return nil
		}
		return &v.LogPath
	}).(pulumi.StringPtrOutput)
}

func (o ConfigExtraContainerFilePtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigExtraContainerFile) *string {
		if v == nil {
			return nil
		}
		return &v.Namespace
	}).(pulumi.StringPtrOutput)
}

func (o ConfigExtraContainerFilePtrOutput) Workload() ConfigExtraContainerFileWorkloadPtrOutput {
	return o.ApplyT(func(v *ConfigExtraContainerFile) *ConfigExtraContainerFileWorkload {
		if v == nil {
			return nil
		}
		return v.Workload
	}).(ConfigExtraContainerFileWorkloadPtrOutput)
}

type ConfigExtraContainerFileWorkload struct {
	Container *string `pulumi:"container"`
	Kind      string  `pulumi:"kind"`
	Name      string  `pulumi:"name"`
	Namespace *string `pulumi:"namespace"`
}

// ConfigExtraContainerFileWorkloadInput is an input type that accepts ConfigExtraContainerFileWorkloadArgs and ConfigExtraContainerFileWorkloadOutput values.
// You can construct a concrete instance of `ConfigExtraContainerFileWorkloadInput` via:
//
//	ConfigExtraContainerFileWorkloadArgs{...}
type ConfigExtraContainerFileWorkloadInput interface {
	pulumi.Input

	ToConfigExtraContainerFileWorkloadOutput() ConfigExtraContainerFileWorkloadOutput
	ToConfigExtraContainerFileWorkloadOutputWithContext(context.Context) ConfigExtraContainerFileWorkloadOutput
}

type ConfigExtraContainerFileWorkloadArgs struct {
	Container pulumi.StringPtrInput `pulumi:"container"`
	Kind      pulumi.StringInput    `pulumi:"kind"`
	Name      pulumi.StringInput    `pulumi:"name"`
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ConfigExtraContainerFileWorkloadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigExtraContainerFileWorkload)(nil)).Elem()
}

func (i ConfigExtraContainerFileWorkloadArgs) ToConfigExtraContainerFileWorkloadOutput() ConfigExtraContainerFileWorkloadOutput {
	return i.ToConfigExtraContainerFileWorkloadOutputWithContext(context.Background())
}

func (i ConfigExtraContainerFileWorkloadArgs) ToConfigExtraContainerFileWorkloadOutputWithContext(ctx context.Context) ConfigExtraContainerFileWorkloadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigExtraContainerFileWorkloadOutput)
}

func (i ConfigExtraContainerFileWorkloadArgs) ToConfigExtraContainerFileWorkloadPtrOutput() ConfigExtraContainerFileWorkloadPtrOutput {
	return i.ToConfigExtraContainerFileWorkloadPtrOutputWithContext(context.Background())
}

func (i ConfigExtraContainerFileWorkloadArgs) ToConfigExtraContainerFileWorkloadPtrOutputWithContext(ctx context.Context) ConfigExtraContainerFileWorkloadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigExtraContainerFileWorkloadOutput).ToConfigExtraContainerFileWorkloadPtrOutputWithContext(ctx)
}

// ConfigExtraContainerFileWorkloadPtrInput is an input type that accepts ConfigExtraContainerFileWorkloadArgs, ConfigExtraContainerFileWorkloadPtr and ConfigExtraContainerFileWorkloadPtrOutput values.
// You can construct a concrete instance of `ConfigExtraContainerFileWorkloadPtrInput` via:
//
//	        ConfigExtraContainerFileWorkloadArgs{...}
//
//	or:
//
//	        nil
type ConfigExtraContainerFileWorkloadPtrInput interface {
	pulumi.Input

	ToConfigExtraContainerFileWorkloadPtrOutput() ConfigExtraContainerFileWorkloadPtrOutput
	ToConfigExtraContainerFileWorkloadPtrOutputWithContext(context.Context) ConfigExtraContainerFileWorkloadPtrOutput
}

type configExtraContainerFileWorkloadPtrType ConfigExtraContainerFileWorkloadArgs

func ConfigExtraContainerFileWorkloadPtr(v *ConfigExtraContainerFileWorkloadArgs) ConfigExtraContainerFileWorkloadPtrInput {
	return (*configExtraContainerFileWorkloadPtrType)(v)
}

func (*configExtraContainerFileWorkloadPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigExtraContainerFileWorkload)(nil)).Elem()
}

func (i *configExtraContainerFileWorkloadPtrType) ToConfigExtraContainerFileWorkloadPtrOutput() ConfigExtraContainerFileWorkloadPtrOutput {
	return i.ToConfigExtraContainerFileWorkloadPtrOutputWithContext(context.Background())
}

func (i *configExtraContainerFileWorkloadPtrType) ToConfigExtraContainerFileWorkloadPtrOutputWithContext(ctx context.Context) ConfigExtraContainerFileWorkloadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigExtraContainerFileWorkloadPtrOutput)
}

type ConfigExtraContainerFileWorkloadOutput struct{ *pulumi.OutputState }

func (ConfigExtraContainerFileWorkloadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigExtraContainerFileWorkload)(nil)).Elem()
}

func (o ConfigExtraContainerFileWorkloadOutput) ToConfigExtraContainerFileWorkloadOutput() ConfigExtraContainerFileWorkloadOutput {
	return o
}

func (o ConfigExtraContainerFileWorkloadOutput) ToConfigExtraContainerFileWorkloadOutputWithContext(ctx context.Context) ConfigExtraContainerFileWorkloadOutput {
	return o
}

func (o ConfigExtraContainerFileWorkloadOutput) ToConfigExtraContainerFileWorkloadPtrOutput() ConfigExtraContainerFileWorkloadPtrOutput {
	return o.ToConfigExtraContainerFileWorkloadPtrOutputWithContext(context.Background())
}

func (o ConfigExtraContainerFileWorkloadOutput) ToConfigExtraContainerFileWorkloadPtrOutputWithContext(ctx context.Context) ConfigExtraContainerFileWorkloadPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigExtraContainerFileWorkload) *ConfigExtraContainerFileWorkload {
		return &v
	}).(ConfigExtraContainerFileWorkloadPtrOutput)
}

func (o ConfigExtraContainerFileWorkloadOutput) Container() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtraContainerFileWorkload) *string { return v.Container }).(pulumi.StringPtrOutput)
}

func (o ConfigExtraContainerFileWorkloadOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigExtraContainerFileWorkload) string { return v.Kind }).(pulumi.StringOutput)
}

func (o ConfigExtraContainerFileWorkloadOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigExtraContainerFileWorkload) string { return v.Name }).(pulumi.StringOutput)
}

func (o ConfigExtraContainerFileWorkloadOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtraContainerFileWorkload) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ConfigExtraContainerFileWorkloadPtrOutput struct{ *pulumi.OutputState }

func (ConfigExtraContainerFileWorkloadPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigExtraContainerFileWorkload)(nil)).Elem()
}

func (o ConfigExtraContainerFileWorkloadPtrOutput) ToConfigExtraContainerFileWorkloadPtrOutput() ConfigExtraContainerFileWorkloadPtrOutput {
	return o
}

func (o ConfigExtraContainerFileWorkloadPtrOutput) ToConfigExtraContainerFileWorkloadPtrOutputWithContext(ctx context.Context) ConfigExtraContainerFileWorkloadPtrOutput {
	return o
}

func (o ConfigExtraContainerFileWorkloadPtrOutput) Elem() ConfigExtraContainerFileWorkloadOutput {
	return o.ApplyT(func(v *ConfigExtraContainerFileWorkload) ConfigExtraContainerFileWorkload {
		if v != nil {
			return *v
		}
		var ret ConfigExtraContainerFileWorkload
		return ret
	}).(ConfigExtraContainerFileWorkloadOutput)
}

func (o ConfigExtraContainerFileWorkloadPtrOutput) Container() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigExtraContainerFileWorkload) *string {
		if v == nil {
			return nil
		}
		return v.Container
	}).(pulumi.StringPtrOutput)
}

func (o ConfigExtraContainerFileWorkloadPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigExtraContainerFileWorkload) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

func (o ConfigExtraContainerFileWorkloadPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigExtraContainerFileWorkload) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o ConfigExtraContainerFileWorkloadPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigExtraContainerFileWorkload) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

type ConfigExtraContainerStdout struct {
	AllContainers    bool                                 `pulumi:"allContainers"`
	ExcludeLabels    []string                             `pulumi:"excludeLabels"`
	ExcludeNamespace *string                              `pulumi:"excludeNamespace"`
	IncludeLabels    []string                             `pulumi:"includeLabels"`
	Namespace        *string                              `pulumi:"namespace"`
	Workloads        []ConfigExtraContainerStdoutWorkload `pulumi:"workloads"`
}

// ConfigExtraContainerStdoutInput is an input type that accepts ConfigExtraContainerStdoutArgs and ConfigExtraContainerStdoutOutput values.
// You can construct a concrete instance of `ConfigExtraContainerStdoutInput` via:
//
//	ConfigExtraContainerStdoutArgs{...}
type ConfigExtraContainerStdoutInput interface {
	pulumi.Input

	ToConfigExtraContainerStdoutOutput() ConfigExtraContainerStdoutOutput
	ToConfigExtraContainerStdoutOutputWithContext(context.Context) ConfigExtraContainerStdoutOutput
}

type ConfigExtraContainerStdoutArgs struct {
	AllContainers    pulumi.BoolInput                             `pulumi:"allContainers"`
	ExcludeLabels    pulumi.StringArrayInput                      `pulumi:"excludeLabels"`
	ExcludeNamespace pulumi.StringPtrInput                        `pulumi:"excludeNamespace"`
	IncludeLabels    pulumi.StringArrayInput                      `pulumi:"includeLabels"`
	Namespace        pulumi.StringPtrInput                        `pulumi:"namespace"`
	Workloads        ConfigExtraContainerStdoutWorkloadArrayInput `pulumi:"workloads"`
}

func (ConfigExtraContainerStdoutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigExtraContainerStdout)(nil)).Elem()
}

func (i ConfigExtraContainerStdoutArgs) ToConfigExtraContainerStdoutOutput() ConfigExtraContainerStdoutOutput {
	return i.ToConfigExtraContainerStdoutOutputWithContext(context.Background())
}

func (i ConfigExtraContainerStdoutArgs) ToConfigExtraContainerStdoutOutputWithContext(ctx context.Context) ConfigExtraContainerStdoutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigExtraContainerStdoutOutput)
}

func (i ConfigExtraContainerStdoutArgs) ToConfigExtraContainerStdoutPtrOutput() ConfigExtraContainerStdoutPtrOutput {
	return i.ToConfigExtraContainerStdoutPtrOutputWithContext(context.Background())
}

func (i ConfigExtraContainerStdoutArgs) ToConfigExtraContainerStdoutPtrOutputWithContext(ctx context.Context) ConfigExtraContainerStdoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigExtraContainerStdoutOutput).ToConfigExtraContainerStdoutPtrOutputWithContext(ctx)
}

// ConfigExtraContainerStdoutPtrInput is an input type that accepts ConfigExtraContainerStdoutArgs, ConfigExtraContainerStdoutPtr and ConfigExtraContainerStdoutPtrOutput values.
// You can construct a concrete instance of `ConfigExtraContainerStdoutPtrInput` via:
//
//	        ConfigExtraContainerStdoutArgs{...}
//
//	or:
//
//	        nil
type ConfigExtraContainerStdoutPtrInput interface {
	pulumi.Input

	ToConfigExtraContainerStdoutPtrOutput() ConfigExtraContainerStdoutPtrOutput
	ToConfigExtraContainerStdoutPtrOutputWithContext(context.Context) ConfigExtraContainerStdoutPtrOutput
}

type configExtraContainerStdoutPtrType ConfigExtraContainerStdoutArgs

func ConfigExtraContainerStdoutPtr(v *ConfigExtraContainerStdoutArgs) ConfigExtraContainerStdoutPtrInput {
	return (*configExtraContainerStdoutPtrType)(v)
}

func (*configExtraContainerStdoutPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigExtraContainerStdout)(nil)).Elem()
}

func (i *configExtraContainerStdoutPtrType) ToConfigExtraContainerStdoutPtrOutput() ConfigExtraContainerStdoutPtrOutput {
	return i.ToConfigExtraContainerStdoutPtrOutputWithContext(context.Background())
}

func (i *configExtraContainerStdoutPtrType) ToConfigExtraContainerStdoutPtrOutputWithContext(ctx context.Context) ConfigExtraContainerStdoutPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigExtraContainerStdoutPtrOutput)
}

type ConfigExtraContainerStdoutOutput struct{ *pulumi.OutputState }

func (ConfigExtraContainerStdoutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigExtraContainerStdout)(nil)).Elem()
}

func (o ConfigExtraContainerStdoutOutput) ToConfigExtraContainerStdoutOutput() ConfigExtraContainerStdoutOutput {
	return o
}

func (o ConfigExtraContainerStdoutOutput) ToConfigExtraContainerStdoutOutputWithContext(ctx context.Context) ConfigExtraContainerStdoutOutput {
	return o
}

func (o ConfigExtraContainerStdoutOutput) ToConfigExtraContainerStdoutPtrOutput() ConfigExtraContainerStdoutPtrOutput {
	return o.ToConfigExtraContainerStdoutPtrOutputWithContext(context.Background())
}

func (o ConfigExtraContainerStdoutOutput) ToConfigExtraContainerStdoutPtrOutputWithContext(ctx context.Context) ConfigExtraContainerStdoutPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigExtraContainerStdout) *ConfigExtraContainerStdout {
		return &v
	}).(ConfigExtraContainerStdoutPtrOutput)
}

func (o ConfigExtraContainerStdoutOutput) AllContainers() pulumi.BoolOutput {
	return o.ApplyT(func(v ConfigExtraContainerStdout) bool { return v.AllContainers }).(pulumi.BoolOutput)
}

func (o ConfigExtraContainerStdoutOutput) ExcludeLabels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigExtraContainerStdout) []string { return v.ExcludeLabels }).(pulumi.StringArrayOutput)
}

func (o ConfigExtraContainerStdoutOutput) ExcludeNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtraContainerStdout) *string { return v.ExcludeNamespace }).(pulumi.StringPtrOutput)
}

func (o ConfigExtraContainerStdoutOutput) IncludeLabels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigExtraContainerStdout) []string { return v.IncludeLabels }).(pulumi.StringArrayOutput)
}

func (o ConfigExtraContainerStdoutOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtraContainerStdout) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o ConfigExtraContainerStdoutOutput) Workloads() ConfigExtraContainerStdoutWorkloadArrayOutput {
	return o.ApplyT(func(v ConfigExtraContainerStdout) []ConfigExtraContainerStdoutWorkload { return v.Workloads }).(ConfigExtraContainerStdoutWorkloadArrayOutput)
}

type ConfigExtraContainerStdoutPtrOutput struct{ *pulumi.OutputState }

func (ConfigExtraContainerStdoutPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigExtraContainerStdout)(nil)).Elem()
}

func (o ConfigExtraContainerStdoutPtrOutput) ToConfigExtraContainerStdoutPtrOutput() ConfigExtraContainerStdoutPtrOutput {
	return o
}

func (o ConfigExtraContainerStdoutPtrOutput) ToConfigExtraContainerStdoutPtrOutputWithContext(ctx context.Context) ConfigExtraContainerStdoutPtrOutput {
	return o
}

func (o ConfigExtraContainerStdoutPtrOutput) Elem() ConfigExtraContainerStdoutOutput {
	return o.ApplyT(func(v *ConfigExtraContainerStdout) ConfigExtraContainerStdout {
		if v != nil {
			return *v
		}
		var ret ConfigExtraContainerStdout
		return ret
	}).(ConfigExtraContainerStdoutOutput)
}

func (o ConfigExtraContainerStdoutPtrOutput) AllContainers() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigExtraContainerStdout) *bool {
		if v == nil {
			return nil
		}
		return &v.AllContainers
	}).(pulumi.BoolPtrOutput)
}

func (o ConfigExtraContainerStdoutPtrOutput) ExcludeLabels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigExtraContainerStdout) []string {
		if v == nil {
			return nil
		}
		return v.ExcludeLabels
	}).(pulumi.StringArrayOutput)
}

func (o ConfigExtraContainerStdoutPtrOutput) ExcludeNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigExtraContainerStdout) *string {
		if v == nil {
			return nil
		}
		return v.ExcludeNamespace
	}).(pulumi.StringPtrOutput)
}

func (o ConfigExtraContainerStdoutPtrOutput) IncludeLabels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigExtraContainerStdout) []string {
		if v == nil {
			return nil
		}
		return v.IncludeLabels
	}).(pulumi.StringArrayOutput)
}

func (o ConfigExtraContainerStdoutPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigExtraContainerStdout) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

func (o ConfigExtraContainerStdoutPtrOutput) Workloads() ConfigExtraContainerStdoutWorkloadArrayOutput {
	return o.ApplyT(func(v *ConfigExtraContainerStdout) []ConfigExtraContainerStdoutWorkload {
		if v == nil {
			return nil
		}
		return v.Workloads
	}).(ConfigExtraContainerStdoutWorkloadArrayOutput)
}

type ConfigExtraContainerStdoutWorkload struct {
	Container *string `pulumi:"container"`
	Kind      string  `pulumi:"kind"`
	Name      string  `pulumi:"name"`
	Namespace *string `pulumi:"namespace"`
}

// ConfigExtraContainerStdoutWorkloadInput is an input type that accepts ConfigExtraContainerStdoutWorkloadArgs and ConfigExtraContainerStdoutWorkloadOutput values.
// You can construct a concrete instance of `ConfigExtraContainerStdoutWorkloadInput` via:
//
//	ConfigExtraContainerStdoutWorkloadArgs{...}
type ConfigExtraContainerStdoutWorkloadInput interface {
	pulumi.Input

	ToConfigExtraContainerStdoutWorkloadOutput() ConfigExtraContainerStdoutWorkloadOutput
	ToConfigExtraContainerStdoutWorkloadOutputWithContext(context.Context) ConfigExtraContainerStdoutWorkloadOutput
}

type ConfigExtraContainerStdoutWorkloadArgs struct {
	Container pulumi.StringPtrInput `pulumi:"container"`
	Kind      pulumi.StringInput    `pulumi:"kind"`
	Name      pulumi.StringInput    `pulumi:"name"`
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
}

func (ConfigExtraContainerStdoutWorkloadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigExtraContainerStdoutWorkload)(nil)).Elem()
}

func (i ConfigExtraContainerStdoutWorkloadArgs) ToConfigExtraContainerStdoutWorkloadOutput() ConfigExtraContainerStdoutWorkloadOutput {
	return i.ToConfigExtraContainerStdoutWorkloadOutputWithContext(context.Background())
}

func (i ConfigExtraContainerStdoutWorkloadArgs) ToConfigExtraContainerStdoutWorkloadOutputWithContext(ctx context.Context) ConfigExtraContainerStdoutWorkloadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigExtraContainerStdoutWorkloadOutput)
}

// ConfigExtraContainerStdoutWorkloadArrayInput is an input type that accepts ConfigExtraContainerStdoutWorkloadArray and ConfigExtraContainerStdoutWorkloadArrayOutput values.
// You can construct a concrete instance of `ConfigExtraContainerStdoutWorkloadArrayInput` via:
//
//	ConfigExtraContainerStdoutWorkloadArray{ ConfigExtraContainerStdoutWorkloadArgs{...} }
type ConfigExtraContainerStdoutWorkloadArrayInput interface {
	pulumi.Input

	ToConfigExtraContainerStdoutWorkloadArrayOutput() ConfigExtraContainerStdoutWorkloadArrayOutput
	ToConfigExtraContainerStdoutWorkloadArrayOutputWithContext(context.Context) ConfigExtraContainerStdoutWorkloadArrayOutput
}

type ConfigExtraContainerStdoutWorkloadArray []ConfigExtraContainerStdoutWorkloadInput

func (ConfigExtraContainerStdoutWorkloadArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigExtraContainerStdoutWorkload)(nil)).Elem()
}

func (i ConfigExtraContainerStdoutWorkloadArray) ToConfigExtraContainerStdoutWorkloadArrayOutput() ConfigExtraContainerStdoutWorkloadArrayOutput {
	return i.ToConfigExtraContainerStdoutWorkloadArrayOutputWithContext(context.Background())
}

func (i ConfigExtraContainerStdoutWorkloadArray) ToConfigExtraContainerStdoutWorkloadArrayOutputWithContext(ctx context.Context) ConfigExtraContainerStdoutWorkloadArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigExtraContainerStdoutWorkloadArrayOutput)
}

type ConfigExtraContainerStdoutWorkloadOutput struct{ *pulumi.OutputState }

func (ConfigExtraContainerStdoutWorkloadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigExtraContainerStdoutWorkload)(nil)).Elem()
}

func (o ConfigExtraContainerStdoutWorkloadOutput) ToConfigExtraContainerStdoutWorkloadOutput() ConfigExtraContainerStdoutWorkloadOutput {
	return o
}

func (o ConfigExtraContainerStdoutWorkloadOutput) ToConfigExtraContainerStdoutWorkloadOutputWithContext(ctx context.Context) ConfigExtraContainerStdoutWorkloadOutput {
	return o
}

func (o ConfigExtraContainerStdoutWorkloadOutput) Container() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtraContainerStdoutWorkload) *string { return v.Container }).(pulumi.StringPtrOutput)
}

func (o ConfigExtraContainerStdoutWorkloadOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigExtraContainerStdoutWorkload) string { return v.Kind }).(pulumi.StringOutput)
}

func (o ConfigExtraContainerStdoutWorkloadOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigExtraContainerStdoutWorkload) string { return v.Name }).(pulumi.StringOutput)
}

func (o ConfigExtraContainerStdoutWorkloadOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtraContainerStdoutWorkload) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

type ConfigExtraContainerStdoutWorkloadArrayOutput struct{ *pulumi.OutputState }

func (ConfigExtraContainerStdoutWorkloadArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigExtraContainerStdoutWorkload)(nil)).Elem()
}

func (o ConfigExtraContainerStdoutWorkloadArrayOutput) ToConfigExtraContainerStdoutWorkloadArrayOutput() ConfigExtraContainerStdoutWorkloadArrayOutput {
	return o
}

func (o ConfigExtraContainerStdoutWorkloadArrayOutput) ToConfigExtraContainerStdoutWorkloadArrayOutputWithContext(ctx context.Context) ConfigExtraContainerStdoutWorkloadArrayOutput {
	return o
}

func (o ConfigExtraContainerStdoutWorkloadArrayOutput) Index(i pulumi.IntInput) ConfigExtraContainerStdoutWorkloadOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigExtraContainerStdoutWorkload {
		return vs[0].([]ConfigExtraContainerStdoutWorkload)[vs[1].(int)]
	}).(ConfigExtraContainerStdoutWorkloadOutput)
}

type ConfigExtraExcludePath struct {
	Type  *string `pulumi:"type"`
	Value *string `pulumi:"value"`
}

// ConfigExtraExcludePathInput is an input type that accepts ConfigExtraExcludePathArgs and ConfigExtraExcludePathOutput values.
// You can construct a concrete instance of `ConfigExtraExcludePathInput` via:
//
//	ConfigExtraExcludePathArgs{...}
type ConfigExtraExcludePathInput interface {
	pulumi.Input

	ToConfigExtraExcludePathOutput() ConfigExtraExcludePathOutput
	ToConfigExtraExcludePathOutputWithContext(context.Context) ConfigExtraExcludePathOutput
}

type ConfigExtraExcludePathArgs struct {
	Type  pulumi.StringPtrInput `pulumi:"type"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ConfigExtraExcludePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigExtraExcludePath)(nil)).Elem()
}

func (i ConfigExtraExcludePathArgs) ToConfigExtraExcludePathOutput() ConfigExtraExcludePathOutput {
	return i.ToConfigExtraExcludePathOutputWithContext(context.Background())
}

func (i ConfigExtraExcludePathArgs) ToConfigExtraExcludePathOutputWithContext(ctx context.Context) ConfigExtraExcludePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigExtraExcludePathOutput)
}

// ConfigExtraExcludePathArrayInput is an input type that accepts ConfigExtraExcludePathArray and ConfigExtraExcludePathArrayOutput values.
// You can construct a concrete instance of `ConfigExtraExcludePathArrayInput` via:
//
//	ConfigExtraExcludePathArray{ ConfigExtraExcludePathArgs{...} }
type ConfigExtraExcludePathArrayInput interface {
	pulumi.Input

	ToConfigExtraExcludePathArrayOutput() ConfigExtraExcludePathArrayOutput
	ToConfigExtraExcludePathArrayOutputWithContext(context.Context) ConfigExtraExcludePathArrayOutput
}

type ConfigExtraExcludePathArray []ConfigExtraExcludePathInput

func (ConfigExtraExcludePathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigExtraExcludePath)(nil)).Elem()
}

func (i ConfigExtraExcludePathArray) ToConfigExtraExcludePathArrayOutput() ConfigExtraExcludePathArrayOutput {
	return i.ToConfigExtraExcludePathArrayOutputWithContext(context.Background())
}

func (i ConfigExtraExcludePathArray) ToConfigExtraExcludePathArrayOutputWithContext(ctx context.Context) ConfigExtraExcludePathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigExtraExcludePathArrayOutput)
}

type ConfigExtraExcludePathOutput struct{ *pulumi.OutputState }

func (ConfigExtraExcludePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigExtraExcludePath)(nil)).Elem()
}

func (o ConfigExtraExcludePathOutput) ToConfigExtraExcludePathOutput() ConfigExtraExcludePathOutput {
	return o
}

func (o ConfigExtraExcludePathOutput) ToConfigExtraExcludePathOutputWithContext(ctx context.Context) ConfigExtraExcludePathOutput {
	return o
}

func (o ConfigExtraExcludePathOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtraExcludePath) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ConfigExtraExcludePathOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtraExcludePath) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ConfigExtraExcludePathArrayOutput struct{ *pulumi.OutputState }

func (ConfigExtraExcludePathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigExtraExcludePath)(nil)).Elem()
}

func (o ConfigExtraExcludePathArrayOutput) ToConfigExtraExcludePathArrayOutput() ConfigExtraExcludePathArrayOutput {
	return o
}

func (o ConfigExtraExcludePathArrayOutput) ToConfigExtraExcludePathArrayOutputWithContext(ctx context.Context) ConfigExtraExcludePathArrayOutput {
	return o
}

func (o ConfigExtraExcludePathArrayOutput) Index(i pulumi.IntInput) ConfigExtraExcludePathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigExtraExcludePath {
		return vs[0].([]ConfigExtraExcludePath)[vs[1].(int)]
	}).(ConfigExtraExcludePathOutput)
}

type ConfigExtraExtractRule struct {
	Backtracking        *int                                   `pulumi:"backtracking"`
	BeginRegex          *string                                `pulumi:"beginRegex"`
	Delimiter           *string                                `pulumi:"delimiter"`
	FilterKeyRegexes    []ConfigExtraExtractRuleFilterKeyRegex `pulumi:"filterKeyRegexes"`
	Keys                []string                               `pulumi:"keys"`
	LogRegex            *string                                `pulumi:"logRegex"`
	TimeFormat          *string                                `pulumi:"timeFormat"`
	TimeKey             *string                                `pulumi:"timeKey"`
	UnMatchLogKey       *string                                `pulumi:"unMatchLogKey"`
	UnMatchUpLoadSwitch *bool                                  `pulumi:"unMatchUpLoadSwitch"`
}

// ConfigExtraExtractRuleInput is an input type that accepts ConfigExtraExtractRuleArgs and ConfigExtraExtractRuleOutput values.
// You can construct a concrete instance of `ConfigExtraExtractRuleInput` via:
//
//	ConfigExtraExtractRuleArgs{...}
type ConfigExtraExtractRuleInput interface {
	pulumi.Input

	ToConfigExtraExtractRuleOutput() ConfigExtraExtractRuleOutput
	ToConfigExtraExtractRuleOutputWithContext(context.Context) ConfigExtraExtractRuleOutput
}

type ConfigExtraExtractRuleArgs struct {
	Backtracking        pulumi.IntPtrInput                             `pulumi:"backtracking"`
	BeginRegex          pulumi.StringPtrInput                          `pulumi:"beginRegex"`
	Delimiter           pulumi.StringPtrInput                          `pulumi:"delimiter"`
	FilterKeyRegexes    ConfigExtraExtractRuleFilterKeyRegexArrayInput `pulumi:"filterKeyRegexes"`
	Keys                pulumi.StringArrayInput                        `pulumi:"keys"`
	LogRegex            pulumi.StringPtrInput                          `pulumi:"logRegex"`
	TimeFormat          pulumi.StringPtrInput                          `pulumi:"timeFormat"`
	TimeKey             pulumi.StringPtrInput                          `pulumi:"timeKey"`
	UnMatchLogKey       pulumi.StringPtrInput                          `pulumi:"unMatchLogKey"`
	UnMatchUpLoadSwitch pulumi.BoolPtrInput                            `pulumi:"unMatchUpLoadSwitch"`
}

func (ConfigExtraExtractRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigExtraExtractRule)(nil)).Elem()
}

func (i ConfigExtraExtractRuleArgs) ToConfigExtraExtractRuleOutput() ConfigExtraExtractRuleOutput {
	return i.ToConfigExtraExtractRuleOutputWithContext(context.Background())
}

func (i ConfigExtraExtractRuleArgs) ToConfigExtraExtractRuleOutputWithContext(ctx context.Context) ConfigExtraExtractRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigExtraExtractRuleOutput)
}

func (i ConfigExtraExtractRuleArgs) ToConfigExtraExtractRulePtrOutput() ConfigExtraExtractRulePtrOutput {
	return i.ToConfigExtraExtractRulePtrOutputWithContext(context.Background())
}

func (i ConfigExtraExtractRuleArgs) ToConfigExtraExtractRulePtrOutputWithContext(ctx context.Context) ConfigExtraExtractRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigExtraExtractRuleOutput).ToConfigExtraExtractRulePtrOutputWithContext(ctx)
}

// ConfigExtraExtractRulePtrInput is an input type that accepts ConfigExtraExtractRuleArgs, ConfigExtraExtractRulePtr and ConfigExtraExtractRulePtrOutput values.
// You can construct a concrete instance of `ConfigExtraExtractRulePtrInput` via:
//
//	        ConfigExtraExtractRuleArgs{...}
//
//	or:
//
//	        nil
type ConfigExtraExtractRulePtrInput interface {
	pulumi.Input

	ToConfigExtraExtractRulePtrOutput() ConfigExtraExtractRulePtrOutput
	ToConfigExtraExtractRulePtrOutputWithContext(context.Context) ConfigExtraExtractRulePtrOutput
}

type configExtraExtractRulePtrType ConfigExtraExtractRuleArgs

func ConfigExtraExtractRulePtr(v *ConfigExtraExtractRuleArgs) ConfigExtraExtractRulePtrInput {
	return (*configExtraExtractRulePtrType)(v)
}

func (*configExtraExtractRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigExtraExtractRule)(nil)).Elem()
}

func (i *configExtraExtractRulePtrType) ToConfigExtraExtractRulePtrOutput() ConfigExtraExtractRulePtrOutput {
	return i.ToConfigExtraExtractRulePtrOutputWithContext(context.Background())
}

func (i *configExtraExtractRulePtrType) ToConfigExtraExtractRulePtrOutputWithContext(ctx context.Context) ConfigExtraExtractRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigExtraExtractRulePtrOutput)
}

type ConfigExtraExtractRuleOutput struct{ *pulumi.OutputState }

func (ConfigExtraExtractRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigExtraExtractRule)(nil)).Elem()
}

func (o ConfigExtraExtractRuleOutput) ToConfigExtraExtractRuleOutput() ConfigExtraExtractRuleOutput {
	return o
}

func (o ConfigExtraExtractRuleOutput) ToConfigExtraExtractRuleOutputWithContext(ctx context.Context) ConfigExtraExtractRuleOutput {
	return o
}

func (o ConfigExtraExtractRuleOutput) ToConfigExtraExtractRulePtrOutput() ConfigExtraExtractRulePtrOutput {
	return o.ToConfigExtraExtractRulePtrOutputWithContext(context.Background())
}

func (o ConfigExtraExtractRuleOutput) ToConfigExtraExtractRulePtrOutputWithContext(ctx context.Context) ConfigExtraExtractRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigExtraExtractRule) *ConfigExtraExtractRule {
		return &v
	}).(ConfigExtraExtractRulePtrOutput)
}

func (o ConfigExtraExtractRuleOutput) Backtracking() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigExtraExtractRule) *int { return v.Backtracking }).(pulumi.IntPtrOutput)
}

func (o ConfigExtraExtractRuleOutput) BeginRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtraExtractRule) *string { return v.BeginRegex }).(pulumi.StringPtrOutput)
}

func (o ConfigExtraExtractRuleOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtraExtractRule) *string { return v.Delimiter }).(pulumi.StringPtrOutput)
}

func (o ConfigExtraExtractRuleOutput) FilterKeyRegexes() ConfigExtraExtractRuleFilterKeyRegexArrayOutput {
	return o.ApplyT(func(v ConfigExtraExtractRule) []ConfigExtraExtractRuleFilterKeyRegex { return v.FilterKeyRegexes }).(ConfigExtraExtractRuleFilterKeyRegexArrayOutput)
}

func (o ConfigExtraExtractRuleOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigExtraExtractRule) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

func (o ConfigExtraExtractRuleOutput) LogRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtraExtractRule) *string { return v.LogRegex }).(pulumi.StringPtrOutput)
}

func (o ConfigExtraExtractRuleOutput) TimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtraExtractRule) *string { return v.TimeFormat }).(pulumi.StringPtrOutput)
}

func (o ConfigExtraExtractRuleOutput) TimeKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtraExtractRule) *string { return v.TimeKey }).(pulumi.StringPtrOutput)
}

func (o ConfigExtraExtractRuleOutput) UnMatchLogKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtraExtractRule) *string { return v.UnMatchLogKey }).(pulumi.StringPtrOutput)
}

func (o ConfigExtraExtractRuleOutput) UnMatchUpLoadSwitch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigExtraExtractRule) *bool { return v.UnMatchUpLoadSwitch }).(pulumi.BoolPtrOutput)
}

type ConfigExtraExtractRulePtrOutput struct{ *pulumi.OutputState }

func (ConfigExtraExtractRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigExtraExtractRule)(nil)).Elem()
}

func (o ConfigExtraExtractRulePtrOutput) ToConfigExtraExtractRulePtrOutput() ConfigExtraExtractRulePtrOutput {
	return o
}

func (o ConfigExtraExtractRulePtrOutput) ToConfigExtraExtractRulePtrOutputWithContext(ctx context.Context) ConfigExtraExtractRulePtrOutput {
	return o
}

func (o ConfigExtraExtractRulePtrOutput) Elem() ConfigExtraExtractRuleOutput {
	return o.ApplyT(func(v *ConfigExtraExtractRule) ConfigExtraExtractRule {
		if v != nil {
			return *v
		}
		var ret ConfigExtraExtractRule
		return ret
	}).(ConfigExtraExtractRuleOutput)
}

func (o ConfigExtraExtractRulePtrOutput) Backtracking() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigExtraExtractRule) *int {
		if v == nil {
			return nil
		}
		return v.Backtracking
	}).(pulumi.IntPtrOutput)
}

func (o ConfigExtraExtractRulePtrOutput) BeginRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigExtraExtractRule) *string {
		if v == nil {
			return nil
		}
		return v.BeginRegex
	}).(pulumi.StringPtrOutput)
}

func (o ConfigExtraExtractRulePtrOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigExtraExtractRule) *string {
		if v == nil {
			return nil
		}
		return v.Delimiter
	}).(pulumi.StringPtrOutput)
}

func (o ConfigExtraExtractRulePtrOutput) FilterKeyRegexes() ConfigExtraExtractRuleFilterKeyRegexArrayOutput {
	return o.ApplyT(func(v *ConfigExtraExtractRule) []ConfigExtraExtractRuleFilterKeyRegex {
		if v == nil {
			return nil
		}
		return v.FilterKeyRegexes
	}).(ConfigExtraExtractRuleFilterKeyRegexArrayOutput)
}

func (o ConfigExtraExtractRulePtrOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigExtraExtractRule) []string {
		if v == nil {
			return nil
		}
		return v.Keys
	}).(pulumi.StringArrayOutput)
}

func (o ConfigExtraExtractRulePtrOutput) LogRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigExtraExtractRule) *string {
		if v == nil {
			return nil
		}
		return v.LogRegex
	}).(pulumi.StringPtrOutput)
}

func (o ConfigExtraExtractRulePtrOutput) TimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigExtraExtractRule) *string {
		if v == nil {
			return nil
		}
		return v.TimeFormat
	}).(pulumi.StringPtrOutput)
}

func (o ConfigExtraExtractRulePtrOutput) TimeKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigExtraExtractRule) *string {
		if v == nil {
			return nil
		}
		return v.TimeKey
	}).(pulumi.StringPtrOutput)
}

func (o ConfigExtraExtractRulePtrOutput) UnMatchLogKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigExtraExtractRule) *string {
		if v == nil {
			return nil
		}
		return v.UnMatchLogKey
	}).(pulumi.StringPtrOutput)
}

func (o ConfigExtraExtractRulePtrOutput) UnMatchUpLoadSwitch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigExtraExtractRule) *bool {
		if v == nil {
			return nil
		}
		return v.UnMatchUpLoadSwitch
	}).(pulumi.BoolPtrOutput)
}

type ConfigExtraExtractRuleFilterKeyRegex struct {
	Key   *string `pulumi:"key"`
	Regex *string `pulumi:"regex"`
}

// ConfigExtraExtractRuleFilterKeyRegexInput is an input type that accepts ConfigExtraExtractRuleFilterKeyRegexArgs and ConfigExtraExtractRuleFilterKeyRegexOutput values.
// You can construct a concrete instance of `ConfigExtraExtractRuleFilterKeyRegexInput` via:
//
//	ConfigExtraExtractRuleFilterKeyRegexArgs{...}
type ConfigExtraExtractRuleFilterKeyRegexInput interface {
	pulumi.Input

	ToConfigExtraExtractRuleFilterKeyRegexOutput() ConfigExtraExtractRuleFilterKeyRegexOutput
	ToConfigExtraExtractRuleFilterKeyRegexOutputWithContext(context.Context) ConfigExtraExtractRuleFilterKeyRegexOutput
}

type ConfigExtraExtractRuleFilterKeyRegexArgs struct {
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Regex pulumi.StringPtrInput `pulumi:"regex"`
}

func (ConfigExtraExtractRuleFilterKeyRegexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigExtraExtractRuleFilterKeyRegex)(nil)).Elem()
}

func (i ConfigExtraExtractRuleFilterKeyRegexArgs) ToConfigExtraExtractRuleFilterKeyRegexOutput() ConfigExtraExtractRuleFilterKeyRegexOutput {
	return i.ToConfigExtraExtractRuleFilterKeyRegexOutputWithContext(context.Background())
}

func (i ConfigExtraExtractRuleFilterKeyRegexArgs) ToConfigExtraExtractRuleFilterKeyRegexOutputWithContext(ctx context.Context) ConfigExtraExtractRuleFilterKeyRegexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigExtraExtractRuleFilterKeyRegexOutput)
}

// ConfigExtraExtractRuleFilterKeyRegexArrayInput is an input type that accepts ConfigExtraExtractRuleFilterKeyRegexArray and ConfigExtraExtractRuleFilterKeyRegexArrayOutput values.
// You can construct a concrete instance of `ConfigExtraExtractRuleFilterKeyRegexArrayInput` via:
//
//	ConfigExtraExtractRuleFilterKeyRegexArray{ ConfigExtraExtractRuleFilterKeyRegexArgs{...} }
type ConfigExtraExtractRuleFilterKeyRegexArrayInput interface {
	pulumi.Input

	ToConfigExtraExtractRuleFilterKeyRegexArrayOutput() ConfigExtraExtractRuleFilterKeyRegexArrayOutput
	ToConfigExtraExtractRuleFilterKeyRegexArrayOutputWithContext(context.Context) ConfigExtraExtractRuleFilterKeyRegexArrayOutput
}

type ConfigExtraExtractRuleFilterKeyRegexArray []ConfigExtraExtractRuleFilterKeyRegexInput

func (ConfigExtraExtractRuleFilterKeyRegexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigExtraExtractRuleFilterKeyRegex)(nil)).Elem()
}

func (i ConfigExtraExtractRuleFilterKeyRegexArray) ToConfigExtraExtractRuleFilterKeyRegexArrayOutput() ConfigExtraExtractRuleFilterKeyRegexArrayOutput {
	return i.ToConfigExtraExtractRuleFilterKeyRegexArrayOutputWithContext(context.Background())
}

func (i ConfigExtraExtractRuleFilterKeyRegexArray) ToConfigExtraExtractRuleFilterKeyRegexArrayOutputWithContext(ctx context.Context) ConfigExtraExtractRuleFilterKeyRegexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigExtraExtractRuleFilterKeyRegexArrayOutput)
}

type ConfigExtraExtractRuleFilterKeyRegexOutput struct{ *pulumi.OutputState }

func (ConfigExtraExtractRuleFilterKeyRegexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigExtraExtractRuleFilterKeyRegex)(nil)).Elem()
}

func (o ConfigExtraExtractRuleFilterKeyRegexOutput) ToConfigExtraExtractRuleFilterKeyRegexOutput() ConfigExtraExtractRuleFilterKeyRegexOutput {
	return o
}

func (o ConfigExtraExtractRuleFilterKeyRegexOutput) ToConfigExtraExtractRuleFilterKeyRegexOutputWithContext(ctx context.Context) ConfigExtraExtractRuleFilterKeyRegexOutput {
	return o
}

func (o ConfigExtraExtractRuleFilterKeyRegexOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtraExtractRuleFilterKeyRegex) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o ConfigExtraExtractRuleFilterKeyRegexOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtraExtractRuleFilterKeyRegex) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

type ConfigExtraExtractRuleFilterKeyRegexArrayOutput struct{ *pulumi.OutputState }

func (ConfigExtraExtractRuleFilterKeyRegexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigExtraExtractRuleFilterKeyRegex)(nil)).Elem()
}

func (o ConfigExtraExtractRuleFilterKeyRegexArrayOutput) ToConfigExtraExtractRuleFilterKeyRegexArrayOutput() ConfigExtraExtractRuleFilterKeyRegexArrayOutput {
	return o
}

func (o ConfigExtraExtractRuleFilterKeyRegexArrayOutput) ToConfigExtraExtractRuleFilterKeyRegexArrayOutputWithContext(ctx context.Context) ConfigExtraExtractRuleFilterKeyRegexArrayOutput {
	return o
}

func (o ConfigExtraExtractRuleFilterKeyRegexArrayOutput) Index(i pulumi.IntInput) ConfigExtraExtractRuleFilterKeyRegexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigExtraExtractRuleFilterKeyRegex {
		return vs[0].([]ConfigExtraExtractRuleFilterKeyRegex)[vs[1].(int)]
	}).(ConfigExtraExtractRuleFilterKeyRegexOutput)
}

type ConfigExtraHostFile struct {
	CustomLabels []string `pulumi:"customLabels"`
	FilePattern  string   `pulumi:"filePattern"`
	LogPath      string   `pulumi:"logPath"`
}

// ConfigExtraHostFileInput is an input type that accepts ConfigExtraHostFileArgs and ConfigExtraHostFileOutput values.
// You can construct a concrete instance of `ConfigExtraHostFileInput` via:
//
//	ConfigExtraHostFileArgs{...}
type ConfigExtraHostFileInput interface {
	pulumi.Input

	ToConfigExtraHostFileOutput() ConfigExtraHostFileOutput
	ToConfigExtraHostFileOutputWithContext(context.Context) ConfigExtraHostFileOutput
}

type ConfigExtraHostFileArgs struct {
	CustomLabels pulumi.StringArrayInput `pulumi:"customLabels"`
	FilePattern  pulumi.StringInput      `pulumi:"filePattern"`
	LogPath      pulumi.StringInput      `pulumi:"logPath"`
}

func (ConfigExtraHostFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigExtraHostFile)(nil)).Elem()
}

func (i ConfigExtraHostFileArgs) ToConfigExtraHostFileOutput() ConfigExtraHostFileOutput {
	return i.ToConfigExtraHostFileOutputWithContext(context.Background())
}

func (i ConfigExtraHostFileArgs) ToConfigExtraHostFileOutputWithContext(ctx context.Context) ConfigExtraHostFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigExtraHostFileOutput)
}

func (i ConfigExtraHostFileArgs) ToConfigExtraHostFilePtrOutput() ConfigExtraHostFilePtrOutput {
	return i.ToConfigExtraHostFilePtrOutputWithContext(context.Background())
}

func (i ConfigExtraHostFileArgs) ToConfigExtraHostFilePtrOutputWithContext(ctx context.Context) ConfigExtraHostFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigExtraHostFileOutput).ToConfigExtraHostFilePtrOutputWithContext(ctx)
}

// ConfigExtraHostFilePtrInput is an input type that accepts ConfigExtraHostFileArgs, ConfigExtraHostFilePtr and ConfigExtraHostFilePtrOutput values.
// You can construct a concrete instance of `ConfigExtraHostFilePtrInput` via:
//
//	        ConfigExtraHostFileArgs{...}
//
//	or:
//
//	        nil
type ConfigExtraHostFilePtrInput interface {
	pulumi.Input

	ToConfigExtraHostFilePtrOutput() ConfigExtraHostFilePtrOutput
	ToConfigExtraHostFilePtrOutputWithContext(context.Context) ConfigExtraHostFilePtrOutput
}

type configExtraHostFilePtrType ConfigExtraHostFileArgs

func ConfigExtraHostFilePtr(v *ConfigExtraHostFileArgs) ConfigExtraHostFilePtrInput {
	return (*configExtraHostFilePtrType)(v)
}

func (*configExtraHostFilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigExtraHostFile)(nil)).Elem()
}

func (i *configExtraHostFilePtrType) ToConfigExtraHostFilePtrOutput() ConfigExtraHostFilePtrOutput {
	return i.ToConfigExtraHostFilePtrOutputWithContext(context.Background())
}

func (i *configExtraHostFilePtrType) ToConfigExtraHostFilePtrOutputWithContext(ctx context.Context) ConfigExtraHostFilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigExtraHostFilePtrOutput)
}

type ConfigExtraHostFileOutput struct{ *pulumi.OutputState }

func (ConfigExtraHostFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigExtraHostFile)(nil)).Elem()
}

func (o ConfigExtraHostFileOutput) ToConfigExtraHostFileOutput() ConfigExtraHostFileOutput {
	return o
}

func (o ConfigExtraHostFileOutput) ToConfigExtraHostFileOutputWithContext(ctx context.Context) ConfigExtraHostFileOutput {
	return o
}

func (o ConfigExtraHostFileOutput) ToConfigExtraHostFilePtrOutput() ConfigExtraHostFilePtrOutput {
	return o.ToConfigExtraHostFilePtrOutputWithContext(context.Background())
}

func (o ConfigExtraHostFileOutput) ToConfigExtraHostFilePtrOutputWithContext(ctx context.Context) ConfigExtraHostFilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigExtraHostFile) *ConfigExtraHostFile {
		return &v
	}).(ConfigExtraHostFilePtrOutput)
}

func (o ConfigExtraHostFileOutput) CustomLabels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigExtraHostFile) []string { return v.CustomLabels }).(pulumi.StringArrayOutput)
}

func (o ConfigExtraHostFileOutput) FilePattern() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigExtraHostFile) string { return v.FilePattern }).(pulumi.StringOutput)
}

func (o ConfigExtraHostFileOutput) LogPath() pulumi.StringOutput {
	return o.ApplyT(func(v ConfigExtraHostFile) string { return v.LogPath }).(pulumi.StringOutput)
}

type ConfigExtraHostFilePtrOutput struct{ *pulumi.OutputState }

func (ConfigExtraHostFilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigExtraHostFile)(nil)).Elem()
}

func (o ConfigExtraHostFilePtrOutput) ToConfigExtraHostFilePtrOutput() ConfigExtraHostFilePtrOutput {
	return o
}

func (o ConfigExtraHostFilePtrOutput) ToConfigExtraHostFilePtrOutputWithContext(ctx context.Context) ConfigExtraHostFilePtrOutput {
	return o
}

func (o ConfigExtraHostFilePtrOutput) Elem() ConfigExtraHostFileOutput {
	return o.ApplyT(func(v *ConfigExtraHostFile) ConfigExtraHostFile {
		if v != nil {
			return *v
		}
		var ret ConfigExtraHostFile
		return ret
	}).(ConfigExtraHostFileOutput)
}

func (o ConfigExtraHostFilePtrOutput) CustomLabels() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigExtraHostFile) []string {
		if v == nil {
			return nil
		}
		return v.CustomLabels
	}).(pulumi.StringArrayOutput)
}

func (o ConfigExtraHostFilePtrOutput) FilePattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigExtraHostFile) *string {
		if v == nil {
			return nil
		}
		return &v.FilePattern
	}).(pulumi.StringPtrOutput)
}

func (o ConfigExtraHostFilePtrOutput) LogPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigExtraHostFile) *string {
		if v == nil {
			return nil
		}
		return &v.LogPath
	}).(pulumi.StringPtrOutput)
}

type ConfigExtractRule struct {
	Address             *string                           `pulumi:"address"`
	Backtracking        *int                              `pulumi:"backtracking"`
	BeginRegex          *string                           `pulumi:"beginRegex"`
	Delimiter           *string                           `pulumi:"delimiter"`
	FilterKeyRegexes    []ConfigExtractRuleFilterKeyRegex `pulumi:"filterKeyRegexes"`
	IsGbk               *int                              `pulumi:"isGbk"`
	JsonStandard        *int                              `pulumi:"jsonStandard"`
	Keys                []string                          `pulumi:"keys"`
	LogRegex            *string                           `pulumi:"logRegex"`
	MetaTags            []ConfigExtractRuleMetaTag        `pulumi:"metaTags"`
	MetadataType        *int                              `pulumi:"metadataType"`
	ParseProtocol       *string                           `pulumi:"parseProtocol"`
	PathRegex           *string                           `pulumi:"pathRegex"`
	Protocol            *string                           `pulumi:"protocol"`
	TimeFormat          *string                           `pulumi:"timeFormat"`
	TimeKey             *string                           `pulumi:"timeKey"`
	UnMatchLogKey       *string                           `pulumi:"unMatchLogKey"`
	UnMatchUpLoadSwitch *bool                             `pulumi:"unMatchUpLoadSwitch"`
}

// ConfigExtractRuleInput is an input type that accepts ConfigExtractRuleArgs and ConfigExtractRuleOutput values.
// You can construct a concrete instance of `ConfigExtractRuleInput` via:
//
//	ConfigExtractRuleArgs{...}
type ConfigExtractRuleInput interface {
	pulumi.Input

	ToConfigExtractRuleOutput() ConfigExtractRuleOutput
	ToConfigExtractRuleOutputWithContext(context.Context) ConfigExtractRuleOutput
}

type ConfigExtractRuleArgs struct {
	Address             pulumi.StringPtrInput                     `pulumi:"address"`
	Backtracking        pulumi.IntPtrInput                        `pulumi:"backtracking"`
	BeginRegex          pulumi.StringPtrInput                     `pulumi:"beginRegex"`
	Delimiter           pulumi.StringPtrInput                     `pulumi:"delimiter"`
	FilterKeyRegexes    ConfigExtractRuleFilterKeyRegexArrayInput `pulumi:"filterKeyRegexes"`
	IsGbk               pulumi.IntPtrInput                        `pulumi:"isGbk"`
	JsonStandard        pulumi.IntPtrInput                        `pulumi:"jsonStandard"`
	Keys                pulumi.StringArrayInput                   `pulumi:"keys"`
	LogRegex            pulumi.StringPtrInput                     `pulumi:"logRegex"`
	MetaTags            ConfigExtractRuleMetaTagArrayInput        `pulumi:"metaTags"`
	MetadataType        pulumi.IntPtrInput                        `pulumi:"metadataType"`
	ParseProtocol       pulumi.StringPtrInput                     `pulumi:"parseProtocol"`
	PathRegex           pulumi.StringPtrInput                     `pulumi:"pathRegex"`
	Protocol            pulumi.StringPtrInput                     `pulumi:"protocol"`
	TimeFormat          pulumi.StringPtrInput                     `pulumi:"timeFormat"`
	TimeKey             pulumi.StringPtrInput                     `pulumi:"timeKey"`
	UnMatchLogKey       pulumi.StringPtrInput                     `pulumi:"unMatchLogKey"`
	UnMatchUpLoadSwitch pulumi.BoolPtrInput                       `pulumi:"unMatchUpLoadSwitch"`
}

func (ConfigExtractRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigExtractRule)(nil)).Elem()
}

func (i ConfigExtractRuleArgs) ToConfigExtractRuleOutput() ConfigExtractRuleOutput {
	return i.ToConfigExtractRuleOutputWithContext(context.Background())
}

func (i ConfigExtractRuleArgs) ToConfigExtractRuleOutputWithContext(ctx context.Context) ConfigExtractRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigExtractRuleOutput)
}

func (i ConfigExtractRuleArgs) ToConfigExtractRulePtrOutput() ConfigExtractRulePtrOutput {
	return i.ToConfigExtractRulePtrOutputWithContext(context.Background())
}

func (i ConfigExtractRuleArgs) ToConfigExtractRulePtrOutputWithContext(ctx context.Context) ConfigExtractRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigExtractRuleOutput).ToConfigExtractRulePtrOutputWithContext(ctx)
}

// ConfigExtractRulePtrInput is an input type that accepts ConfigExtractRuleArgs, ConfigExtractRulePtr and ConfigExtractRulePtrOutput values.
// You can construct a concrete instance of `ConfigExtractRulePtrInput` via:
//
//	        ConfigExtractRuleArgs{...}
//
//	or:
//
//	        nil
type ConfigExtractRulePtrInput interface {
	pulumi.Input

	ToConfigExtractRulePtrOutput() ConfigExtractRulePtrOutput
	ToConfigExtractRulePtrOutputWithContext(context.Context) ConfigExtractRulePtrOutput
}

type configExtractRulePtrType ConfigExtractRuleArgs

func ConfigExtractRulePtr(v *ConfigExtractRuleArgs) ConfigExtractRulePtrInput {
	return (*configExtractRulePtrType)(v)
}

func (*configExtractRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigExtractRule)(nil)).Elem()
}

func (i *configExtractRulePtrType) ToConfigExtractRulePtrOutput() ConfigExtractRulePtrOutput {
	return i.ToConfigExtractRulePtrOutputWithContext(context.Background())
}

func (i *configExtractRulePtrType) ToConfigExtractRulePtrOutputWithContext(ctx context.Context) ConfigExtractRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigExtractRulePtrOutput)
}

type ConfigExtractRuleOutput struct{ *pulumi.OutputState }

func (ConfigExtractRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigExtractRule)(nil)).Elem()
}

func (o ConfigExtractRuleOutput) ToConfigExtractRuleOutput() ConfigExtractRuleOutput {
	return o
}

func (o ConfigExtractRuleOutput) ToConfigExtractRuleOutputWithContext(ctx context.Context) ConfigExtractRuleOutput {
	return o
}

func (o ConfigExtractRuleOutput) ToConfigExtractRulePtrOutput() ConfigExtractRulePtrOutput {
	return o.ToConfigExtractRulePtrOutputWithContext(context.Background())
}

func (o ConfigExtractRuleOutput) ToConfigExtractRulePtrOutputWithContext(ctx context.Context) ConfigExtractRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ConfigExtractRule) *ConfigExtractRule {
		return &v
	}).(ConfigExtractRulePtrOutput)
}

func (o ConfigExtractRuleOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtractRule) *string { return v.Address }).(pulumi.StringPtrOutput)
}

func (o ConfigExtractRuleOutput) Backtracking() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigExtractRule) *int { return v.Backtracking }).(pulumi.IntPtrOutput)
}

func (o ConfigExtractRuleOutput) BeginRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtractRule) *string { return v.BeginRegex }).(pulumi.StringPtrOutput)
}

func (o ConfigExtractRuleOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtractRule) *string { return v.Delimiter }).(pulumi.StringPtrOutput)
}

func (o ConfigExtractRuleOutput) FilterKeyRegexes() ConfigExtractRuleFilterKeyRegexArrayOutput {
	return o.ApplyT(func(v ConfigExtractRule) []ConfigExtractRuleFilterKeyRegex { return v.FilterKeyRegexes }).(ConfigExtractRuleFilterKeyRegexArrayOutput)
}

func (o ConfigExtractRuleOutput) IsGbk() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigExtractRule) *int { return v.IsGbk }).(pulumi.IntPtrOutput)
}

func (o ConfigExtractRuleOutput) JsonStandard() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigExtractRule) *int { return v.JsonStandard }).(pulumi.IntPtrOutput)
}

func (o ConfigExtractRuleOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ConfigExtractRule) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

func (o ConfigExtractRuleOutput) LogRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtractRule) *string { return v.LogRegex }).(pulumi.StringPtrOutput)
}

func (o ConfigExtractRuleOutput) MetaTags() ConfigExtractRuleMetaTagArrayOutput {
	return o.ApplyT(func(v ConfigExtractRule) []ConfigExtractRuleMetaTag { return v.MetaTags }).(ConfigExtractRuleMetaTagArrayOutput)
}

func (o ConfigExtractRuleOutput) MetadataType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConfigExtractRule) *int { return v.MetadataType }).(pulumi.IntPtrOutput)
}

func (o ConfigExtractRuleOutput) ParseProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtractRule) *string { return v.ParseProtocol }).(pulumi.StringPtrOutput)
}

func (o ConfigExtractRuleOutput) PathRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtractRule) *string { return v.PathRegex }).(pulumi.StringPtrOutput)
}

func (o ConfigExtractRuleOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtractRule) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o ConfigExtractRuleOutput) TimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtractRule) *string { return v.TimeFormat }).(pulumi.StringPtrOutput)
}

func (o ConfigExtractRuleOutput) TimeKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtractRule) *string { return v.TimeKey }).(pulumi.StringPtrOutput)
}

func (o ConfigExtractRuleOutput) UnMatchLogKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtractRule) *string { return v.UnMatchLogKey }).(pulumi.StringPtrOutput)
}

func (o ConfigExtractRuleOutput) UnMatchUpLoadSwitch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ConfigExtractRule) *bool { return v.UnMatchUpLoadSwitch }).(pulumi.BoolPtrOutput)
}

type ConfigExtractRulePtrOutput struct{ *pulumi.OutputState }

func (ConfigExtractRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigExtractRule)(nil)).Elem()
}

func (o ConfigExtractRulePtrOutput) ToConfigExtractRulePtrOutput() ConfigExtractRulePtrOutput {
	return o
}

func (o ConfigExtractRulePtrOutput) ToConfigExtractRulePtrOutputWithContext(ctx context.Context) ConfigExtractRulePtrOutput {
	return o
}

func (o ConfigExtractRulePtrOutput) Elem() ConfigExtractRuleOutput {
	return o.ApplyT(func(v *ConfigExtractRule) ConfigExtractRule {
		if v != nil {
			return *v
		}
		var ret ConfigExtractRule
		return ret
	}).(ConfigExtractRuleOutput)
}

func (o ConfigExtractRulePtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigExtractRule) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

func (o ConfigExtractRulePtrOutput) Backtracking() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigExtractRule) *int {
		if v == nil {
			return nil
		}
		return v.Backtracking
	}).(pulumi.IntPtrOutput)
}

func (o ConfigExtractRulePtrOutput) BeginRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigExtractRule) *string {
		if v == nil {
			return nil
		}
		return v.BeginRegex
	}).(pulumi.StringPtrOutput)
}

func (o ConfigExtractRulePtrOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigExtractRule) *string {
		if v == nil {
			return nil
		}
		return v.Delimiter
	}).(pulumi.StringPtrOutput)
}

func (o ConfigExtractRulePtrOutput) FilterKeyRegexes() ConfigExtractRuleFilterKeyRegexArrayOutput {
	return o.ApplyT(func(v *ConfigExtractRule) []ConfigExtractRuleFilterKeyRegex {
		if v == nil {
			return nil
		}
		return v.FilterKeyRegexes
	}).(ConfigExtractRuleFilterKeyRegexArrayOutput)
}

func (o ConfigExtractRulePtrOutput) IsGbk() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigExtractRule) *int {
		if v == nil {
			return nil
		}
		return v.IsGbk
	}).(pulumi.IntPtrOutput)
}

func (o ConfigExtractRulePtrOutput) JsonStandard() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigExtractRule) *int {
		if v == nil {
			return nil
		}
		return v.JsonStandard
	}).(pulumi.IntPtrOutput)
}

func (o ConfigExtractRulePtrOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ConfigExtractRule) []string {
		if v == nil {
			return nil
		}
		return v.Keys
	}).(pulumi.StringArrayOutput)
}

func (o ConfigExtractRulePtrOutput) LogRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigExtractRule) *string {
		if v == nil {
			return nil
		}
		return v.LogRegex
	}).(pulumi.StringPtrOutput)
}

func (o ConfigExtractRulePtrOutput) MetaTags() ConfigExtractRuleMetaTagArrayOutput {
	return o.ApplyT(func(v *ConfigExtractRule) []ConfigExtractRuleMetaTag {
		if v == nil {
			return nil
		}
		return v.MetaTags
	}).(ConfigExtractRuleMetaTagArrayOutput)
}

func (o ConfigExtractRulePtrOutput) MetadataType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ConfigExtractRule) *int {
		if v == nil {
			return nil
		}
		return v.MetadataType
	}).(pulumi.IntPtrOutput)
}

func (o ConfigExtractRulePtrOutput) ParseProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigExtractRule) *string {
		if v == nil {
			return nil
		}
		return v.ParseProtocol
	}).(pulumi.StringPtrOutput)
}

func (o ConfigExtractRulePtrOutput) PathRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigExtractRule) *string {
		if v == nil {
			return nil
		}
		return v.PathRegex
	}).(pulumi.StringPtrOutput)
}

func (o ConfigExtractRulePtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigExtractRule) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

func (o ConfigExtractRulePtrOutput) TimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigExtractRule) *string {
		if v == nil {
			return nil
		}
		return v.TimeFormat
	}).(pulumi.StringPtrOutput)
}

func (o ConfigExtractRulePtrOutput) TimeKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigExtractRule) *string {
		if v == nil {
			return nil
		}
		return v.TimeKey
	}).(pulumi.StringPtrOutput)
}

func (o ConfigExtractRulePtrOutput) UnMatchLogKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ConfigExtractRule) *string {
		if v == nil {
			return nil
		}
		return v.UnMatchLogKey
	}).(pulumi.StringPtrOutput)
}

func (o ConfigExtractRulePtrOutput) UnMatchUpLoadSwitch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ConfigExtractRule) *bool {
		if v == nil {
			return nil
		}
		return v.UnMatchUpLoadSwitch
	}).(pulumi.BoolPtrOutput)
}

type ConfigExtractRuleFilterKeyRegex struct {
	Key   *string `pulumi:"key"`
	Regex *string `pulumi:"regex"`
}

// ConfigExtractRuleFilterKeyRegexInput is an input type that accepts ConfigExtractRuleFilterKeyRegexArgs and ConfigExtractRuleFilterKeyRegexOutput values.
// You can construct a concrete instance of `ConfigExtractRuleFilterKeyRegexInput` via:
//
//	ConfigExtractRuleFilterKeyRegexArgs{...}
type ConfigExtractRuleFilterKeyRegexInput interface {
	pulumi.Input

	ToConfigExtractRuleFilterKeyRegexOutput() ConfigExtractRuleFilterKeyRegexOutput
	ToConfigExtractRuleFilterKeyRegexOutputWithContext(context.Context) ConfigExtractRuleFilterKeyRegexOutput
}

type ConfigExtractRuleFilterKeyRegexArgs struct {
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Regex pulumi.StringPtrInput `pulumi:"regex"`
}

func (ConfigExtractRuleFilterKeyRegexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigExtractRuleFilterKeyRegex)(nil)).Elem()
}

func (i ConfigExtractRuleFilterKeyRegexArgs) ToConfigExtractRuleFilterKeyRegexOutput() ConfigExtractRuleFilterKeyRegexOutput {
	return i.ToConfigExtractRuleFilterKeyRegexOutputWithContext(context.Background())
}

func (i ConfigExtractRuleFilterKeyRegexArgs) ToConfigExtractRuleFilterKeyRegexOutputWithContext(ctx context.Context) ConfigExtractRuleFilterKeyRegexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigExtractRuleFilterKeyRegexOutput)
}

// ConfigExtractRuleFilterKeyRegexArrayInput is an input type that accepts ConfigExtractRuleFilterKeyRegexArray and ConfigExtractRuleFilterKeyRegexArrayOutput values.
// You can construct a concrete instance of `ConfigExtractRuleFilterKeyRegexArrayInput` via:
//
//	ConfigExtractRuleFilterKeyRegexArray{ ConfigExtractRuleFilterKeyRegexArgs{...} }
type ConfigExtractRuleFilterKeyRegexArrayInput interface {
	pulumi.Input

	ToConfigExtractRuleFilterKeyRegexArrayOutput() ConfigExtractRuleFilterKeyRegexArrayOutput
	ToConfigExtractRuleFilterKeyRegexArrayOutputWithContext(context.Context) ConfigExtractRuleFilterKeyRegexArrayOutput
}

type ConfigExtractRuleFilterKeyRegexArray []ConfigExtractRuleFilterKeyRegexInput

func (ConfigExtractRuleFilterKeyRegexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigExtractRuleFilterKeyRegex)(nil)).Elem()
}

func (i ConfigExtractRuleFilterKeyRegexArray) ToConfigExtractRuleFilterKeyRegexArrayOutput() ConfigExtractRuleFilterKeyRegexArrayOutput {
	return i.ToConfigExtractRuleFilterKeyRegexArrayOutputWithContext(context.Background())
}

func (i ConfigExtractRuleFilterKeyRegexArray) ToConfigExtractRuleFilterKeyRegexArrayOutputWithContext(ctx context.Context) ConfigExtractRuleFilterKeyRegexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigExtractRuleFilterKeyRegexArrayOutput)
}

type ConfigExtractRuleFilterKeyRegexOutput struct{ *pulumi.OutputState }

func (ConfigExtractRuleFilterKeyRegexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigExtractRuleFilterKeyRegex)(nil)).Elem()
}

func (o ConfigExtractRuleFilterKeyRegexOutput) ToConfigExtractRuleFilterKeyRegexOutput() ConfigExtractRuleFilterKeyRegexOutput {
	return o
}

func (o ConfigExtractRuleFilterKeyRegexOutput) ToConfigExtractRuleFilterKeyRegexOutputWithContext(ctx context.Context) ConfigExtractRuleFilterKeyRegexOutput {
	return o
}

func (o ConfigExtractRuleFilterKeyRegexOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtractRuleFilterKeyRegex) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o ConfigExtractRuleFilterKeyRegexOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtractRuleFilterKeyRegex) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

type ConfigExtractRuleFilterKeyRegexArrayOutput struct{ *pulumi.OutputState }

func (ConfigExtractRuleFilterKeyRegexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigExtractRuleFilterKeyRegex)(nil)).Elem()
}

func (o ConfigExtractRuleFilterKeyRegexArrayOutput) ToConfigExtractRuleFilterKeyRegexArrayOutput() ConfigExtractRuleFilterKeyRegexArrayOutput {
	return o
}

func (o ConfigExtractRuleFilterKeyRegexArrayOutput) ToConfigExtractRuleFilterKeyRegexArrayOutputWithContext(ctx context.Context) ConfigExtractRuleFilterKeyRegexArrayOutput {
	return o
}

func (o ConfigExtractRuleFilterKeyRegexArrayOutput) Index(i pulumi.IntInput) ConfigExtractRuleFilterKeyRegexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigExtractRuleFilterKeyRegex {
		return vs[0].([]ConfigExtractRuleFilterKeyRegex)[vs[1].(int)]
	}).(ConfigExtractRuleFilterKeyRegexOutput)
}

type ConfigExtractRuleMetaTag struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// ConfigExtractRuleMetaTagInput is an input type that accepts ConfigExtractRuleMetaTagArgs and ConfigExtractRuleMetaTagOutput values.
// You can construct a concrete instance of `ConfigExtractRuleMetaTagInput` via:
//
//	ConfigExtractRuleMetaTagArgs{...}
type ConfigExtractRuleMetaTagInput interface {
	pulumi.Input

	ToConfigExtractRuleMetaTagOutput() ConfigExtractRuleMetaTagOutput
	ToConfigExtractRuleMetaTagOutputWithContext(context.Context) ConfigExtractRuleMetaTagOutput
}

type ConfigExtractRuleMetaTagArgs struct {
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ConfigExtractRuleMetaTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigExtractRuleMetaTag)(nil)).Elem()
}

func (i ConfigExtractRuleMetaTagArgs) ToConfigExtractRuleMetaTagOutput() ConfigExtractRuleMetaTagOutput {
	return i.ToConfigExtractRuleMetaTagOutputWithContext(context.Background())
}

func (i ConfigExtractRuleMetaTagArgs) ToConfigExtractRuleMetaTagOutputWithContext(ctx context.Context) ConfigExtractRuleMetaTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigExtractRuleMetaTagOutput)
}

// ConfigExtractRuleMetaTagArrayInput is an input type that accepts ConfigExtractRuleMetaTagArray and ConfigExtractRuleMetaTagArrayOutput values.
// You can construct a concrete instance of `ConfigExtractRuleMetaTagArrayInput` via:
//
//	ConfigExtractRuleMetaTagArray{ ConfigExtractRuleMetaTagArgs{...} }
type ConfigExtractRuleMetaTagArrayInput interface {
	pulumi.Input

	ToConfigExtractRuleMetaTagArrayOutput() ConfigExtractRuleMetaTagArrayOutput
	ToConfigExtractRuleMetaTagArrayOutputWithContext(context.Context) ConfigExtractRuleMetaTagArrayOutput
}

type ConfigExtractRuleMetaTagArray []ConfigExtractRuleMetaTagInput

func (ConfigExtractRuleMetaTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigExtractRuleMetaTag)(nil)).Elem()
}

func (i ConfigExtractRuleMetaTagArray) ToConfigExtractRuleMetaTagArrayOutput() ConfigExtractRuleMetaTagArrayOutput {
	return i.ToConfigExtractRuleMetaTagArrayOutputWithContext(context.Background())
}

func (i ConfigExtractRuleMetaTagArray) ToConfigExtractRuleMetaTagArrayOutputWithContext(ctx context.Context) ConfigExtractRuleMetaTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigExtractRuleMetaTagArrayOutput)
}

type ConfigExtractRuleMetaTagOutput struct{ *pulumi.OutputState }

func (ConfigExtractRuleMetaTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConfigExtractRuleMetaTag)(nil)).Elem()
}

func (o ConfigExtractRuleMetaTagOutput) ToConfigExtractRuleMetaTagOutput() ConfigExtractRuleMetaTagOutput {
	return o
}

func (o ConfigExtractRuleMetaTagOutput) ToConfigExtractRuleMetaTagOutputWithContext(ctx context.Context) ConfigExtractRuleMetaTagOutput {
	return o
}

func (o ConfigExtractRuleMetaTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtractRuleMetaTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o ConfigExtractRuleMetaTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConfigExtractRuleMetaTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ConfigExtractRuleMetaTagArrayOutput struct{ *pulumi.OutputState }

func (ConfigExtractRuleMetaTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConfigExtractRuleMetaTag)(nil)).Elem()
}

func (o ConfigExtractRuleMetaTagArrayOutput) ToConfigExtractRuleMetaTagArrayOutput() ConfigExtractRuleMetaTagArrayOutput {
	return o
}

func (o ConfigExtractRuleMetaTagArrayOutput) ToConfigExtractRuleMetaTagArrayOutputWithContext(ctx context.Context) ConfigExtractRuleMetaTagArrayOutput {
	return o
}

func (o ConfigExtractRuleMetaTagArrayOutput) Index(i pulumi.IntInput) ConfigExtractRuleMetaTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConfigExtractRuleMetaTag {
		return vs[0].([]ConfigExtractRuleMetaTag)[vs[1].(int)]
	}).(ConfigExtractRuleMetaTagOutput)
}

type CosRechargeExtractRuleInfo struct {
	Address             *string                                    `pulumi:"address"`
	Backtracking        *int                                       `pulumi:"backtracking"`
	BeginRegex          *string                                    `pulumi:"beginRegex"`
	Delimiter           *string                                    `pulumi:"delimiter"`
	FilterKeyRegexes    []CosRechargeExtractRuleInfoFilterKeyRegex `pulumi:"filterKeyRegexes"`
	IsGbk               *int                                       `pulumi:"isGbk"`
	JsonStandard        *int                                       `pulumi:"jsonStandard"`
	Keys                []string                                   `pulumi:"keys"`
	LogRegex            *string                                    `pulumi:"logRegex"`
	MetaTags            []CosRechargeExtractRuleInfoMetaTag        `pulumi:"metaTags"`
	MetadataType        *int                                       `pulumi:"metadataType"`
	ParseProtocol       *string                                    `pulumi:"parseProtocol"`
	PathRegex           *string                                    `pulumi:"pathRegex"`
	Protocol            *string                                    `pulumi:"protocol"`
	TimeFormat          *string                                    `pulumi:"timeFormat"`
	TimeKey             *string                                    `pulumi:"timeKey"`
	UnMatchLogKey       *string                                    `pulumi:"unMatchLogKey"`
	UnMatchUpLoadSwitch *bool                                      `pulumi:"unMatchUpLoadSwitch"`
}

// CosRechargeExtractRuleInfoInput is an input type that accepts CosRechargeExtractRuleInfoArgs and CosRechargeExtractRuleInfoOutput values.
// You can construct a concrete instance of `CosRechargeExtractRuleInfoInput` via:
//
//	CosRechargeExtractRuleInfoArgs{...}
type CosRechargeExtractRuleInfoInput interface {
	pulumi.Input

	ToCosRechargeExtractRuleInfoOutput() CosRechargeExtractRuleInfoOutput
	ToCosRechargeExtractRuleInfoOutputWithContext(context.Context) CosRechargeExtractRuleInfoOutput
}

type CosRechargeExtractRuleInfoArgs struct {
	Address             pulumi.StringPtrInput                              `pulumi:"address"`
	Backtracking        pulumi.IntPtrInput                                 `pulumi:"backtracking"`
	BeginRegex          pulumi.StringPtrInput                              `pulumi:"beginRegex"`
	Delimiter           pulumi.StringPtrInput                              `pulumi:"delimiter"`
	FilterKeyRegexes    CosRechargeExtractRuleInfoFilterKeyRegexArrayInput `pulumi:"filterKeyRegexes"`
	IsGbk               pulumi.IntPtrInput                                 `pulumi:"isGbk"`
	JsonStandard        pulumi.IntPtrInput                                 `pulumi:"jsonStandard"`
	Keys                pulumi.StringArrayInput                            `pulumi:"keys"`
	LogRegex            pulumi.StringPtrInput                              `pulumi:"logRegex"`
	MetaTags            CosRechargeExtractRuleInfoMetaTagArrayInput        `pulumi:"metaTags"`
	MetadataType        pulumi.IntPtrInput                                 `pulumi:"metadataType"`
	ParseProtocol       pulumi.StringPtrInput                              `pulumi:"parseProtocol"`
	PathRegex           pulumi.StringPtrInput                              `pulumi:"pathRegex"`
	Protocol            pulumi.StringPtrInput                              `pulumi:"protocol"`
	TimeFormat          pulumi.StringPtrInput                              `pulumi:"timeFormat"`
	TimeKey             pulumi.StringPtrInput                              `pulumi:"timeKey"`
	UnMatchLogKey       pulumi.StringPtrInput                              `pulumi:"unMatchLogKey"`
	UnMatchUpLoadSwitch pulumi.BoolPtrInput                                `pulumi:"unMatchUpLoadSwitch"`
}

func (CosRechargeExtractRuleInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CosRechargeExtractRuleInfo)(nil)).Elem()
}

func (i CosRechargeExtractRuleInfoArgs) ToCosRechargeExtractRuleInfoOutput() CosRechargeExtractRuleInfoOutput {
	return i.ToCosRechargeExtractRuleInfoOutputWithContext(context.Background())
}

func (i CosRechargeExtractRuleInfoArgs) ToCosRechargeExtractRuleInfoOutputWithContext(ctx context.Context) CosRechargeExtractRuleInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosRechargeExtractRuleInfoOutput)
}

func (i CosRechargeExtractRuleInfoArgs) ToCosRechargeExtractRuleInfoPtrOutput() CosRechargeExtractRuleInfoPtrOutput {
	return i.ToCosRechargeExtractRuleInfoPtrOutputWithContext(context.Background())
}

func (i CosRechargeExtractRuleInfoArgs) ToCosRechargeExtractRuleInfoPtrOutputWithContext(ctx context.Context) CosRechargeExtractRuleInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosRechargeExtractRuleInfoOutput).ToCosRechargeExtractRuleInfoPtrOutputWithContext(ctx)
}

// CosRechargeExtractRuleInfoPtrInput is an input type that accepts CosRechargeExtractRuleInfoArgs, CosRechargeExtractRuleInfoPtr and CosRechargeExtractRuleInfoPtrOutput values.
// You can construct a concrete instance of `CosRechargeExtractRuleInfoPtrInput` via:
//
//	        CosRechargeExtractRuleInfoArgs{...}
//
//	or:
//
//	        nil
type CosRechargeExtractRuleInfoPtrInput interface {
	pulumi.Input

	ToCosRechargeExtractRuleInfoPtrOutput() CosRechargeExtractRuleInfoPtrOutput
	ToCosRechargeExtractRuleInfoPtrOutputWithContext(context.Context) CosRechargeExtractRuleInfoPtrOutput
}

type cosRechargeExtractRuleInfoPtrType CosRechargeExtractRuleInfoArgs

func CosRechargeExtractRuleInfoPtr(v *CosRechargeExtractRuleInfoArgs) CosRechargeExtractRuleInfoPtrInput {
	return (*cosRechargeExtractRuleInfoPtrType)(v)
}

func (*cosRechargeExtractRuleInfoPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CosRechargeExtractRuleInfo)(nil)).Elem()
}

func (i *cosRechargeExtractRuleInfoPtrType) ToCosRechargeExtractRuleInfoPtrOutput() CosRechargeExtractRuleInfoPtrOutput {
	return i.ToCosRechargeExtractRuleInfoPtrOutputWithContext(context.Background())
}

func (i *cosRechargeExtractRuleInfoPtrType) ToCosRechargeExtractRuleInfoPtrOutputWithContext(ctx context.Context) CosRechargeExtractRuleInfoPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosRechargeExtractRuleInfoPtrOutput)
}

type CosRechargeExtractRuleInfoOutput struct{ *pulumi.OutputState }

func (CosRechargeExtractRuleInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CosRechargeExtractRuleInfo)(nil)).Elem()
}

func (o CosRechargeExtractRuleInfoOutput) ToCosRechargeExtractRuleInfoOutput() CosRechargeExtractRuleInfoOutput {
	return o
}

func (o CosRechargeExtractRuleInfoOutput) ToCosRechargeExtractRuleInfoOutputWithContext(ctx context.Context) CosRechargeExtractRuleInfoOutput {
	return o
}

func (o CosRechargeExtractRuleInfoOutput) ToCosRechargeExtractRuleInfoPtrOutput() CosRechargeExtractRuleInfoPtrOutput {
	return o.ToCosRechargeExtractRuleInfoPtrOutputWithContext(context.Background())
}

func (o CosRechargeExtractRuleInfoOutput) ToCosRechargeExtractRuleInfoPtrOutputWithContext(ctx context.Context) CosRechargeExtractRuleInfoPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CosRechargeExtractRuleInfo) *CosRechargeExtractRuleInfo {
		return &v
	}).(CosRechargeExtractRuleInfoPtrOutput)
}

func (o CosRechargeExtractRuleInfoOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CosRechargeExtractRuleInfo) *string { return v.Address }).(pulumi.StringPtrOutput)
}

func (o CosRechargeExtractRuleInfoOutput) Backtracking() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CosRechargeExtractRuleInfo) *int { return v.Backtracking }).(pulumi.IntPtrOutput)
}

func (o CosRechargeExtractRuleInfoOutput) BeginRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CosRechargeExtractRuleInfo) *string { return v.BeginRegex }).(pulumi.StringPtrOutput)
}

func (o CosRechargeExtractRuleInfoOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CosRechargeExtractRuleInfo) *string { return v.Delimiter }).(pulumi.StringPtrOutput)
}

func (o CosRechargeExtractRuleInfoOutput) FilterKeyRegexes() CosRechargeExtractRuleInfoFilterKeyRegexArrayOutput {
	return o.ApplyT(func(v CosRechargeExtractRuleInfo) []CosRechargeExtractRuleInfoFilterKeyRegex {
		return v.FilterKeyRegexes
	}).(CosRechargeExtractRuleInfoFilterKeyRegexArrayOutput)
}

func (o CosRechargeExtractRuleInfoOutput) IsGbk() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CosRechargeExtractRuleInfo) *int { return v.IsGbk }).(pulumi.IntPtrOutput)
}

func (o CosRechargeExtractRuleInfoOutput) JsonStandard() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CosRechargeExtractRuleInfo) *int { return v.JsonStandard }).(pulumi.IntPtrOutput)
}

func (o CosRechargeExtractRuleInfoOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CosRechargeExtractRuleInfo) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

func (o CosRechargeExtractRuleInfoOutput) LogRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CosRechargeExtractRuleInfo) *string { return v.LogRegex }).(pulumi.StringPtrOutput)
}

func (o CosRechargeExtractRuleInfoOutput) MetaTags() CosRechargeExtractRuleInfoMetaTagArrayOutput {
	return o.ApplyT(func(v CosRechargeExtractRuleInfo) []CosRechargeExtractRuleInfoMetaTag { return v.MetaTags }).(CosRechargeExtractRuleInfoMetaTagArrayOutput)
}

func (o CosRechargeExtractRuleInfoOutput) MetadataType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CosRechargeExtractRuleInfo) *int { return v.MetadataType }).(pulumi.IntPtrOutput)
}

func (o CosRechargeExtractRuleInfoOutput) ParseProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CosRechargeExtractRuleInfo) *string { return v.ParseProtocol }).(pulumi.StringPtrOutput)
}

func (o CosRechargeExtractRuleInfoOutput) PathRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CosRechargeExtractRuleInfo) *string { return v.PathRegex }).(pulumi.StringPtrOutput)
}

func (o CosRechargeExtractRuleInfoOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CosRechargeExtractRuleInfo) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o CosRechargeExtractRuleInfoOutput) TimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CosRechargeExtractRuleInfo) *string { return v.TimeFormat }).(pulumi.StringPtrOutput)
}

func (o CosRechargeExtractRuleInfoOutput) TimeKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CosRechargeExtractRuleInfo) *string { return v.TimeKey }).(pulumi.StringPtrOutput)
}

func (o CosRechargeExtractRuleInfoOutput) UnMatchLogKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CosRechargeExtractRuleInfo) *string { return v.UnMatchLogKey }).(pulumi.StringPtrOutput)
}

func (o CosRechargeExtractRuleInfoOutput) UnMatchUpLoadSwitch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CosRechargeExtractRuleInfo) *bool { return v.UnMatchUpLoadSwitch }).(pulumi.BoolPtrOutput)
}

type CosRechargeExtractRuleInfoPtrOutput struct{ *pulumi.OutputState }

func (CosRechargeExtractRuleInfoPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CosRechargeExtractRuleInfo)(nil)).Elem()
}

func (o CosRechargeExtractRuleInfoPtrOutput) ToCosRechargeExtractRuleInfoPtrOutput() CosRechargeExtractRuleInfoPtrOutput {
	return o
}

func (o CosRechargeExtractRuleInfoPtrOutput) ToCosRechargeExtractRuleInfoPtrOutputWithContext(ctx context.Context) CosRechargeExtractRuleInfoPtrOutput {
	return o
}

func (o CosRechargeExtractRuleInfoPtrOutput) Elem() CosRechargeExtractRuleInfoOutput {
	return o.ApplyT(func(v *CosRechargeExtractRuleInfo) CosRechargeExtractRuleInfo {
		if v != nil {
			return *v
		}
		var ret CosRechargeExtractRuleInfo
		return ret
	}).(CosRechargeExtractRuleInfoOutput)
}

func (o CosRechargeExtractRuleInfoPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CosRechargeExtractRuleInfo) *string {
		if v == nil {
			return nil
		}
		return v.Address
	}).(pulumi.StringPtrOutput)
}

func (o CosRechargeExtractRuleInfoPtrOutput) Backtracking() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CosRechargeExtractRuleInfo) *int {
		if v == nil {
			return nil
		}
		return v.Backtracking
	}).(pulumi.IntPtrOutput)
}

func (o CosRechargeExtractRuleInfoPtrOutput) BeginRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CosRechargeExtractRuleInfo) *string {
		if v == nil {
			return nil
		}
		return v.BeginRegex
	}).(pulumi.StringPtrOutput)
}

func (o CosRechargeExtractRuleInfoPtrOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CosRechargeExtractRuleInfo) *string {
		if v == nil {
			return nil
		}
		return v.Delimiter
	}).(pulumi.StringPtrOutput)
}

func (o CosRechargeExtractRuleInfoPtrOutput) FilterKeyRegexes() CosRechargeExtractRuleInfoFilterKeyRegexArrayOutput {
	return o.ApplyT(func(v *CosRechargeExtractRuleInfo) []CosRechargeExtractRuleInfoFilterKeyRegex {
		if v == nil {
			return nil
		}
		return v.FilterKeyRegexes
	}).(CosRechargeExtractRuleInfoFilterKeyRegexArrayOutput)
}

func (o CosRechargeExtractRuleInfoPtrOutput) IsGbk() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CosRechargeExtractRuleInfo) *int {
		if v == nil {
			return nil
		}
		return v.IsGbk
	}).(pulumi.IntPtrOutput)
}

func (o CosRechargeExtractRuleInfoPtrOutput) JsonStandard() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CosRechargeExtractRuleInfo) *int {
		if v == nil {
			return nil
		}
		return v.JsonStandard
	}).(pulumi.IntPtrOutput)
}

func (o CosRechargeExtractRuleInfoPtrOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CosRechargeExtractRuleInfo) []string {
		if v == nil {
			return nil
		}
		return v.Keys
	}).(pulumi.StringArrayOutput)
}

func (o CosRechargeExtractRuleInfoPtrOutput) LogRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CosRechargeExtractRuleInfo) *string {
		if v == nil {
			return nil
		}
		return v.LogRegex
	}).(pulumi.StringPtrOutput)
}

func (o CosRechargeExtractRuleInfoPtrOutput) MetaTags() CosRechargeExtractRuleInfoMetaTagArrayOutput {
	return o.ApplyT(func(v *CosRechargeExtractRuleInfo) []CosRechargeExtractRuleInfoMetaTag {
		if v == nil {
			return nil
		}
		return v.MetaTags
	}).(CosRechargeExtractRuleInfoMetaTagArrayOutput)
}

func (o CosRechargeExtractRuleInfoPtrOutput) MetadataType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *CosRechargeExtractRuleInfo) *int {
		if v == nil {
			return nil
		}
		return v.MetadataType
	}).(pulumi.IntPtrOutput)
}

func (o CosRechargeExtractRuleInfoPtrOutput) ParseProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CosRechargeExtractRuleInfo) *string {
		if v == nil {
			return nil
		}
		return v.ParseProtocol
	}).(pulumi.StringPtrOutput)
}

func (o CosRechargeExtractRuleInfoPtrOutput) PathRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CosRechargeExtractRuleInfo) *string {
		if v == nil {
			return nil
		}
		return v.PathRegex
	}).(pulumi.StringPtrOutput)
}

func (o CosRechargeExtractRuleInfoPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CosRechargeExtractRuleInfo) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

func (o CosRechargeExtractRuleInfoPtrOutput) TimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CosRechargeExtractRuleInfo) *string {
		if v == nil {
			return nil
		}
		return v.TimeFormat
	}).(pulumi.StringPtrOutput)
}

func (o CosRechargeExtractRuleInfoPtrOutput) TimeKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CosRechargeExtractRuleInfo) *string {
		if v == nil {
			return nil
		}
		return v.TimeKey
	}).(pulumi.StringPtrOutput)
}

func (o CosRechargeExtractRuleInfoPtrOutput) UnMatchLogKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CosRechargeExtractRuleInfo) *string {
		if v == nil {
			return nil
		}
		return v.UnMatchLogKey
	}).(pulumi.StringPtrOutput)
}

func (o CosRechargeExtractRuleInfoPtrOutput) UnMatchUpLoadSwitch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CosRechargeExtractRuleInfo) *bool {
		if v == nil {
			return nil
		}
		return v.UnMatchUpLoadSwitch
	}).(pulumi.BoolPtrOutput)
}

type CosRechargeExtractRuleInfoFilterKeyRegex struct {
	Key   string `pulumi:"key"`
	Regex string `pulumi:"regex"`
}

// CosRechargeExtractRuleInfoFilterKeyRegexInput is an input type that accepts CosRechargeExtractRuleInfoFilterKeyRegexArgs and CosRechargeExtractRuleInfoFilterKeyRegexOutput values.
// You can construct a concrete instance of `CosRechargeExtractRuleInfoFilterKeyRegexInput` via:
//
//	CosRechargeExtractRuleInfoFilterKeyRegexArgs{...}
type CosRechargeExtractRuleInfoFilterKeyRegexInput interface {
	pulumi.Input

	ToCosRechargeExtractRuleInfoFilterKeyRegexOutput() CosRechargeExtractRuleInfoFilterKeyRegexOutput
	ToCosRechargeExtractRuleInfoFilterKeyRegexOutputWithContext(context.Context) CosRechargeExtractRuleInfoFilterKeyRegexOutput
}

type CosRechargeExtractRuleInfoFilterKeyRegexArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Regex pulumi.StringInput `pulumi:"regex"`
}

func (CosRechargeExtractRuleInfoFilterKeyRegexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CosRechargeExtractRuleInfoFilterKeyRegex)(nil)).Elem()
}

func (i CosRechargeExtractRuleInfoFilterKeyRegexArgs) ToCosRechargeExtractRuleInfoFilterKeyRegexOutput() CosRechargeExtractRuleInfoFilterKeyRegexOutput {
	return i.ToCosRechargeExtractRuleInfoFilterKeyRegexOutputWithContext(context.Background())
}

func (i CosRechargeExtractRuleInfoFilterKeyRegexArgs) ToCosRechargeExtractRuleInfoFilterKeyRegexOutputWithContext(ctx context.Context) CosRechargeExtractRuleInfoFilterKeyRegexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosRechargeExtractRuleInfoFilterKeyRegexOutput)
}

// CosRechargeExtractRuleInfoFilterKeyRegexArrayInput is an input type that accepts CosRechargeExtractRuleInfoFilterKeyRegexArray and CosRechargeExtractRuleInfoFilterKeyRegexArrayOutput values.
// You can construct a concrete instance of `CosRechargeExtractRuleInfoFilterKeyRegexArrayInput` via:
//
//	CosRechargeExtractRuleInfoFilterKeyRegexArray{ CosRechargeExtractRuleInfoFilterKeyRegexArgs{...} }
type CosRechargeExtractRuleInfoFilterKeyRegexArrayInput interface {
	pulumi.Input

	ToCosRechargeExtractRuleInfoFilterKeyRegexArrayOutput() CosRechargeExtractRuleInfoFilterKeyRegexArrayOutput
	ToCosRechargeExtractRuleInfoFilterKeyRegexArrayOutputWithContext(context.Context) CosRechargeExtractRuleInfoFilterKeyRegexArrayOutput
}

type CosRechargeExtractRuleInfoFilterKeyRegexArray []CosRechargeExtractRuleInfoFilterKeyRegexInput

func (CosRechargeExtractRuleInfoFilterKeyRegexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CosRechargeExtractRuleInfoFilterKeyRegex)(nil)).Elem()
}

func (i CosRechargeExtractRuleInfoFilterKeyRegexArray) ToCosRechargeExtractRuleInfoFilterKeyRegexArrayOutput() CosRechargeExtractRuleInfoFilterKeyRegexArrayOutput {
	return i.ToCosRechargeExtractRuleInfoFilterKeyRegexArrayOutputWithContext(context.Background())
}

func (i CosRechargeExtractRuleInfoFilterKeyRegexArray) ToCosRechargeExtractRuleInfoFilterKeyRegexArrayOutputWithContext(ctx context.Context) CosRechargeExtractRuleInfoFilterKeyRegexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosRechargeExtractRuleInfoFilterKeyRegexArrayOutput)
}

type CosRechargeExtractRuleInfoFilterKeyRegexOutput struct{ *pulumi.OutputState }

func (CosRechargeExtractRuleInfoFilterKeyRegexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CosRechargeExtractRuleInfoFilterKeyRegex)(nil)).Elem()
}

func (o CosRechargeExtractRuleInfoFilterKeyRegexOutput) ToCosRechargeExtractRuleInfoFilterKeyRegexOutput() CosRechargeExtractRuleInfoFilterKeyRegexOutput {
	return o
}

func (o CosRechargeExtractRuleInfoFilterKeyRegexOutput) ToCosRechargeExtractRuleInfoFilterKeyRegexOutputWithContext(ctx context.Context) CosRechargeExtractRuleInfoFilterKeyRegexOutput {
	return o
}

func (o CosRechargeExtractRuleInfoFilterKeyRegexOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v CosRechargeExtractRuleInfoFilterKeyRegex) string { return v.Key }).(pulumi.StringOutput)
}

func (o CosRechargeExtractRuleInfoFilterKeyRegexOutput) Regex() pulumi.StringOutput {
	return o.ApplyT(func(v CosRechargeExtractRuleInfoFilterKeyRegex) string { return v.Regex }).(pulumi.StringOutput)
}

type CosRechargeExtractRuleInfoFilterKeyRegexArrayOutput struct{ *pulumi.OutputState }

func (CosRechargeExtractRuleInfoFilterKeyRegexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CosRechargeExtractRuleInfoFilterKeyRegex)(nil)).Elem()
}

func (o CosRechargeExtractRuleInfoFilterKeyRegexArrayOutput) ToCosRechargeExtractRuleInfoFilterKeyRegexArrayOutput() CosRechargeExtractRuleInfoFilterKeyRegexArrayOutput {
	return o
}

func (o CosRechargeExtractRuleInfoFilterKeyRegexArrayOutput) ToCosRechargeExtractRuleInfoFilterKeyRegexArrayOutputWithContext(ctx context.Context) CosRechargeExtractRuleInfoFilterKeyRegexArrayOutput {
	return o
}

func (o CosRechargeExtractRuleInfoFilterKeyRegexArrayOutput) Index(i pulumi.IntInput) CosRechargeExtractRuleInfoFilterKeyRegexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CosRechargeExtractRuleInfoFilterKeyRegex {
		return vs[0].([]CosRechargeExtractRuleInfoFilterKeyRegex)[vs[1].(int)]
	}).(CosRechargeExtractRuleInfoFilterKeyRegexOutput)
}

type CosRechargeExtractRuleInfoMetaTag struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// CosRechargeExtractRuleInfoMetaTagInput is an input type that accepts CosRechargeExtractRuleInfoMetaTagArgs and CosRechargeExtractRuleInfoMetaTagOutput values.
// You can construct a concrete instance of `CosRechargeExtractRuleInfoMetaTagInput` via:
//
//	CosRechargeExtractRuleInfoMetaTagArgs{...}
type CosRechargeExtractRuleInfoMetaTagInput interface {
	pulumi.Input

	ToCosRechargeExtractRuleInfoMetaTagOutput() CosRechargeExtractRuleInfoMetaTagOutput
	ToCosRechargeExtractRuleInfoMetaTagOutputWithContext(context.Context) CosRechargeExtractRuleInfoMetaTagOutput
}

type CosRechargeExtractRuleInfoMetaTagArgs struct {
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (CosRechargeExtractRuleInfoMetaTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CosRechargeExtractRuleInfoMetaTag)(nil)).Elem()
}

func (i CosRechargeExtractRuleInfoMetaTagArgs) ToCosRechargeExtractRuleInfoMetaTagOutput() CosRechargeExtractRuleInfoMetaTagOutput {
	return i.ToCosRechargeExtractRuleInfoMetaTagOutputWithContext(context.Background())
}

func (i CosRechargeExtractRuleInfoMetaTagArgs) ToCosRechargeExtractRuleInfoMetaTagOutputWithContext(ctx context.Context) CosRechargeExtractRuleInfoMetaTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosRechargeExtractRuleInfoMetaTagOutput)
}

// CosRechargeExtractRuleInfoMetaTagArrayInput is an input type that accepts CosRechargeExtractRuleInfoMetaTagArray and CosRechargeExtractRuleInfoMetaTagArrayOutput values.
// You can construct a concrete instance of `CosRechargeExtractRuleInfoMetaTagArrayInput` via:
//
//	CosRechargeExtractRuleInfoMetaTagArray{ CosRechargeExtractRuleInfoMetaTagArgs{...} }
type CosRechargeExtractRuleInfoMetaTagArrayInput interface {
	pulumi.Input

	ToCosRechargeExtractRuleInfoMetaTagArrayOutput() CosRechargeExtractRuleInfoMetaTagArrayOutput
	ToCosRechargeExtractRuleInfoMetaTagArrayOutputWithContext(context.Context) CosRechargeExtractRuleInfoMetaTagArrayOutput
}

type CosRechargeExtractRuleInfoMetaTagArray []CosRechargeExtractRuleInfoMetaTagInput

func (CosRechargeExtractRuleInfoMetaTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CosRechargeExtractRuleInfoMetaTag)(nil)).Elem()
}

func (i CosRechargeExtractRuleInfoMetaTagArray) ToCosRechargeExtractRuleInfoMetaTagArrayOutput() CosRechargeExtractRuleInfoMetaTagArrayOutput {
	return i.ToCosRechargeExtractRuleInfoMetaTagArrayOutputWithContext(context.Background())
}

func (i CosRechargeExtractRuleInfoMetaTagArray) ToCosRechargeExtractRuleInfoMetaTagArrayOutputWithContext(ctx context.Context) CosRechargeExtractRuleInfoMetaTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosRechargeExtractRuleInfoMetaTagArrayOutput)
}

type CosRechargeExtractRuleInfoMetaTagOutput struct{ *pulumi.OutputState }

func (CosRechargeExtractRuleInfoMetaTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CosRechargeExtractRuleInfoMetaTag)(nil)).Elem()
}

func (o CosRechargeExtractRuleInfoMetaTagOutput) ToCosRechargeExtractRuleInfoMetaTagOutput() CosRechargeExtractRuleInfoMetaTagOutput {
	return o
}

func (o CosRechargeExtractRuleInfoMetaTagOutput) ToCosRechargeExtractRuleInfoMetaTagOutputWithContext(ctx context.Context) CosRechargeExtractRuleInfoMetaTagOutput {
	return o
}

func (o CosRechargeExtractRuleInfoMetaTagOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CosRechargeExtractRuleInfoMetaTag) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o CosRechargeExtractRuleInfoMetaTagOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CosRechargeExtractRuleInfoMetaTag) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type CosRechargeExtractRuleInfoMetaTagArrayOutput struct{ *pulumi.OutputState }

func (CosRechargeExtractRuleInfoMetaTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CosRechargeExtractRuleInfoMetaTag)(nil)).Elem()
}

func (o CosRechargeExtractRuleInfoMetaTagArrayOutput) ToCosRechargeExtractRuleInfoMetaTagArrayOutput() CosRechargeExtractRuleInfoMetaTagArrayOutput {
	return o
}

func (o CosRechargeExtractRuleInfoMetaTagArrayOutput) ToCosRechargeExtractRuleInfoMetaTagArrayOutputWithContext(ctx context.Context) CosRechargeExtractRuleInfoMetaTagArrayOutput {
	return o
}

func (o CosRechargeExtractRuleInfoMetaTagArrayOutput) Index(i pulumi.IntInput) CosRechargeExtractRuleInfoMetaTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CosRechargeExtractRuleInfoMetaTag {
		return vs[0].([]CosRechargeExtractRuleInfoMetaTag)[vs[1].(int)]
	}).(CosRechargeExtractRuleInfoMetaTagOutput)
}

type CosShipperCompress struct {
	Format string `pulumi:"format"`
}

// CosShipperCompressInput is an input type that accepts CosShipperCompressArgs and CosShipperCompressOutput values.
// You can construct a concrete instance of `CosShipperCompressInput` via:
//
//	CosShipperCompressArgs{...}
type CosShipperCompressInput interface {
	pulumi.Input

	ToCosShipperCompressOutput() CosShipperCompressOutput
	ToCosShipperCompressOutputWithContext(context.Context) CosShipperCompressOutput
}

type CosShipperCompressArgs struct {
	Format pulumi.StringInput `pulumi:"format"`
}

func (CosShipperCompressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CosShipperCompress)(nil)).Elem()
}

func (i CosShipperCompressArgs) ToCosShipperCompressOutput() CosShipperCompressOutput {
	return i.ToCosShipperCompressOutputWithContext(context.Background())
}

func (i CosShipperCompressArgs) ToCosShipperCompressOutputWithContext(ctx context.Context) CosShipperCompressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosShipperCompressOutput)
}

func (i CosShipperCompressArgs) ToCosShipperCompressPtrOutput() CosShipperCompressPtrOutput {
	return i.ToCosShipperCompressPtrOutputWithContext(context.Background())
}

func (i CosShipperCompressArgs) ToCosShipperCompressPtrOutputWithContext(ctx context.Context) CosShipperCompressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosShipperCompressOutput).ToCosShipperCompressPtrOutputWithContext(ctx)
}

// CosShipperCompressPtrInput is an input type that accepts CosShipperCompressArgs, CosShipperCompressPtr and CosShipperCompressPtrOutput values.
// You can construct a concrete instance of `CosShipperCompressPtrInput` via:
//
//	        CosShipperCompressArgs{...}
//
//	or:
//
//	        nil
type CosShipperCompressPtrInput interface {
	pulumi.Input

	ToCosShipperCompressPtrOutput() CosShipperCompressPtrOutput
	ToCosShipperCompressPtrOutputWithContext(context.Context) CosShipperCompressPtrOutput
}

type cosShipperCompressPtrType CosShipperCompressArgs

func CosShipperCompressPtr(v *CosShipperCompressArgs) CosShipperCompressPtrInput {
	return (*cosShipperCompressPtrType)(v)
}

func (*cosShipperCompressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CosShipperCompress)(nil)).Elem()
}

func (i *cosShipperCompressPtrType) ToCosShipperCompressPtrOutput() CosShipperCompressPtrOutput {
	return i.ToCosShipperCompressPtrOutputWithContext(context.Background())
}

func (i *cosShipperCompressPtrType) ToCosShipperCompressPtrOutputWithContext(ctx context.Context) CosShipperCompressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosShipperCompressPtrOutput)
}

type CosShipperCompressOutput struct{ *pulumi.OutputState }

func (CosShipperCompressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CosShipperCompress)(nil)).Elem()
}

func (o CosShipperCompressOutput) ToCosShipperCompressOutput() CosShipperCompressOutput {
	return o
}

func (o CosShipperCompressOutput) ToCosShipperCompressOutputWithContext(ctx context.Context) CosShipperCompressOutput {
	return o
}

func (o CosShipperCompressOutput) ToCosShipperCompressPtrOutput() CosShipperCompressPtrOutput {
	return o.ToCosShipperCompressPtrOutputWithContext(context.Background())
}

func (o CosShipperCompressOutput) ToCosShipperCompressPtrOutputWithContext(ctx context.Context) CosShipperCompressPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CosShipperCompress) *CosShipperCompress {
		return &v
	}).(CosShipperCompressPtrOutput)
}

func (o CosShipperCompressOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v CosShipperCompress) string { return v.Format }).(pulumi.StringOutput)
}

type CosShipperCompressPtrOutput struct{ *pulumi.OutputState }

func (CosShipperCompressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CosShipperCompress)(nil)).Elem()
}

func (o CosShipperCompressPtrOutput) ToCosShipperCompressPtrOutput() CosShipperCompressPtrOutput {
	return o
}

func (o CosShipperCompressPtrOutput) ToCosShipperCompressPtrOutputWithContext(ctx context.Context) CosShipperCompressPtrOutput {
	return o
}

func (o CosShipperCompressPtrOutput) Elem() CosShipperCompressOutput {
	return o.ApplyT(func(v *CosShipperCompress) CosShipperCompress {
		if v != nil {
			return *v
		}
		var ret CosShipperCompress
		return ret
	}).(CosShipperCompressOutput)
}

func (o CosShipperCompressPtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CosShipperCompress) *string {
		if v == nil {
			return nil
		}
		return &v.Format
	}).(pulumi.StringPtrOutput)
}

type CosShipperContent struct {
	Csv    *CosShipperContentCsv  `pulumi:"csv"`
	Format string                 `pulumi:"format"`
	Json   *CosShipperContentJson `pulumi:"json"`
}

// CosShipperContentInput is an input type that accepts CosShipperContentArgs and CosShipperContentOutput values.
// You can construct a concrete instance of `CosShipperContentInput` via:
//
//	CosShipperContentArgs{...}
type CosShipperContentInput interface {
	pulumi.Input

	ToCosShipperContentOutput() CosShipperContentOutput
	ToCosShipperContentOutputWithContext(context.Context) CosShipperContentOutput
}

type CosShipperContentArgs struct {
	Csv    CosShipperContentCsvPtrInput  `pulumi:"csv"`
	Format pulumi.StringInput            `pulumi:"format"`
	Json   CosShipperContentJsonPtrInput `pulumi:"json"`
}

func (CosShipperContentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CosShipperContent)(nil)).Elem()
}

func (i CosShipperContentArgs) ToCosShipperContentOutput() CosShipperContentOutput {
	return i.ToCosShipperContentOutputWithContext(context.Background())
}

func (i CosShipperContentArgs) ToCosShipperContentOutputWithContext(ctx context.Context) CosShipperContentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosShipperContentOutput)
}

func (i CosShipperContentArgs) ToCosShipperContentPtrOutput() CosShipperContentPtrOutput {
	return i.ToCosShipperContentPtrOutputWithContext(context.Background())
}

func (i CosShipperContentArgs) ToCosShipperContentPtrOutputWithContext(ctx context.Context) CosShipperContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosShipperContentOutput).ToCosShipperContentPtrOutputWithContext(ctx)
}

// CosShipperContentPtrInput is an input type that accepts CosShipperContentArgs, CosShipperContentPtr and CosShipperContentPtrOutput values.
// You can construct a concrete instance of `CosShipperContentPtrInput` via:
//
//	        CosShipperContentArgs{...}
//
//	or:
//
//	        nil
type CosShipperContentPtrInput interface {
	pulumi.Input

	ToCosShipperContentPtrOutput() CosShipperContentPtrOutput
	ToCosShipperContentPtrOutputWithContext(context.Context) CosShipperContentPtrOutput
}

type cosShipperContentPtrType CosShipperContentArgs

func CosShipperContentPtr(v *CosShipperContentArgs) CosShipperContentPtrInput {
	return (*cosShipperContentPtrType)(v)
}

func (*cosShipperContentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CosShipperContent)(nil)).Elem()
}

func (i *cosShipperContentPtrType) ToCosShipperContentPtrOutput() CosShipperContentPtrOutput {
	return i.ToCosShipperContentPtrOutputWithContext(context.Background())
}

func (i *cosShipperContentPtrType) ToCosShipperContentPtrOutputWithContext(ctx context.Context) CosShipperContentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosShipperContentPtrOutput)
}

type CosShipperContentOutput struct{ *pulumi.OutputState }

func (CosShipperContentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CosShipperContent)(nil)).Elem()
}

func (o CosShipperContentOutput) ToCosShipperContentOutput() CosShipperContentOutput {
	return o
}

func (o CosShipperContentOutput) ToCosShipperContentOutputWithContext(ctx context.Context) CosShipperContentOutput {
	return o
}

func (o CosShipperContentOutput) ToCosShipperContentPtrOutput() CosShipperContentPtrOutput {
	return o.ToCosShipperContentPtrOutputWithContext(context.Background())
}

func (o CosShipperContentOutput) ToCosShipperContentPtrOutputWithContext(ctx context.Context) CosShipperContentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CosShipperContent) *CosShipperContent {
		return &v
	}).(CosShipperContentPtrOutput)
}

func (o CosShipperContentOutput) Csv() CosShipperContentCsvPtrOutput {
	return o.ApplyT(func(v CosShipperContent) *CosShipperContentCsv { return v.Csv }).(CosShipperContentCsvPtrOutput)
}

func (o CosShipperContentOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v CosShipperContent) string { return v.Format }).(pulumi.StringOutput)
}

func (o CosShipperContentOutput) Json() CosShipperContentJsonPtrOutput {
	return o.ApplyT(func(v CosShipperContent) *CosShipperContentJson { return v.Json }).(CosShipperContentJsonPtrOutput)
}

type CosShipperContentPtrOutput struct{ *pulumi.OutputState }

func (CosShipperContentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CosShipperContent)(nil)).Elem()
}

func (o CosShipperContentPtrOutput) ToCosShipperContentPtrOutput() CosShipperContentPtrOutput {
	return o
}

func (o CosShipperContentPtrOutput) ToCosShipperContentPtrOutputWithContext(ctx context.Context) CosShipperContentPtrOutput {
	return o
}

func (o CosShipperContentPtrOutput) Elem() CosShipperContentOutput {
	return o.ApplyT(func(v *CosShipperContent) CosShipperContent {
		if v != nil {
			return *v
		}
		var ret CosShipperContent
		return ret
	}).(CosShipperContentOutput)
}

func (o CosShipperContentPtrOutput) Csv() CosShipperContentCsvPtrOutput {
	return o.ApplyT(func(v *CosShipperContent) *CosShipperContentCsv {
		if v == nil {
			return nil
		}
		return v.Csv
	}).(CosShipperContentCsvPtrOutput)
}

func (o CosShipperContentPtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CosShipperContent) *string {
		if v == nil {
			return nil
		}
		return &v.Format
	}).(pulumi.StringPtrOutput)
}

func (o CosShipperContentPtrOutput) Json() CosShipperContentJsonPtrOutput {
	return o.ApplyT(func(v *CosShipperContent) *CosShipperContentJson {
		if v == nil {
			return nil
		}
		return v.Json
	}).(CosShipperContentJsonPtrOutput)
}

type CosShipperContentCsv struct {
	Delimiter        string   `pulumi:"delimiter"`
	EscapeChar       string   `pulumi:"escapeChar"`
	Keys             []string `pulumi:"keys"`
	NonExistingField string   `pulumi:"nonExistingField"`
	PrintKey         bool     `pulumi:"printKey"`
}

// CosShipperContentCsvInput is an input type that accepts CosShipperContentCsvArgs and CosShipperContentCsvOutput values.
// You can construct a concrete instance of `CosShipperContentCsvInput` via:
//
//	CosShipperContentCsvArgs{...}
type CosShipperContentCsvInput interface {
	pulumi.Input

	ToCosShipperContentCsvOutput() CosShipperContentCsvOutput
	ToCosShipperContentCsvOutputWithContext(context.Context) CosShipperContentCsvOutput
}

type CosShipperContentCsvArgs struct {
	Delimiter        pulumi.StringInput      `pulumi:"delimiter"`
	EscapeChar       pulumi.StringInput      `pulumi:"escapeChar"`
	Keys             pulumi.StringArrayInput `pulumi:"keys"`
	NonExistingField pulumi.StringInput      `pulumi:"nonExistingField"`
	PrintKey         pulumi.BoolInput        `pulumi:"printKey"`
}

func (CosShipperContentCsvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CosShipperContentCsv)(nil)).Elem()
}

func (i CosShipperContentCsvArgs) ToCosShipperContentCsvOutput() CosShipperContentCsvOutput {
	return i.ToCosShipperContentCsvOutputWithContext(context.Background())
}

func (i CosShipperContentCsvArgs) ToCosShipperContentCsvOutputWithContext(ctx context.Context) CosShipperContentCsvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosShipperContentCsvOutput)
}

func (i CosShipperContentCsvArgs) ToCosShipperContentCsvPtrOutput() CosShipperContentCsvPtrOutput {
	return i.ToCosShipperContentCsvPtrOutputWithContext(context.Background())
}

func (i CosShipperContentCsvArgs) ToCosShipperContentCsvPtrOutputWithContext(ctx context.Context) CosShipperContentCsvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosShipperContentCsvOutput).ToCosShipperContentCsvPtrOutputWithContext(ctx)
}

// CosShipperContentCsvPtrInput is an input type that accepts CosShipperContentCsvArgs, CosShipperContentCsvPtr and CosShipperContentCsvPtrOutput values.
// You can construct a concrete instance of `CosShipperContentCsvPtrInput` via:
//
//	        CosShipperContentCsvArgs{...}
//
//	or:
//
//	        nil
type CosShipperContentCsvPtrInput interface {
	pulumi.Input

	ToCosShipperContentCsvPtrOutput() CosShipperContentCsvPtrOutput
	ToCosShipperContentCsvPtrOutputWithContext(context.Context) CosShipperContentCsvPtrOutput
}

type cosShipperContentCsvPtrType CosShipperContentCsvArgs

func CosShipperContentCsvPtr(v *CosShipperContentCsvArgs) CosShipperContentCsvPtrInput {
	return (*cosShipperContentCsvPtrType)(v)
}

func (*cosShipperContentCsvPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CosShipperContentCsv)(nil)).Elem()
}

func (i *cosShipperContentCsvPtrType) ToCosShipperContentCsvPtrOutput() CosShipperContentCsvPtrOutput {
	return i.ToCosShipperContentCsvPtrOutputWithContext(context.Background())
}

func (i *cosShipperContentCsvPtrType) ToCosShipperContentCsvPtrOutputWithContext(ctx context.Context) CosShipperContentCsvPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosShipperContentCsvPtrOutput)
}

type CosShipperContentCsvOutput struct{ *pulumi.OutputState }

func (CosShipperContentCsvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CosShipperContentCsv)(nil)).Elem()
}

func (o CosShipperContentCsvOutput) ToCosShipperContentCsvOutput() CosShipperContentCsvOutput {
	return o
}

func (o CosShipperContentCsvOutput) ToCosShipperContentCsvOutputWithContext(ctx context.Context) CosShipperContentCsvOutput {
	return o
}

func (o CosShipperContentCsvOutput) ToCosShipperContentCsvPtrOutput() CosShipperContentCsvPtrOutput {
	return o.ToCosShipperContentCsvPtrOutputWithContext(context.Background())
}

func (o CosShipperContentCsvOutput) ToCosShipperContentCsvPtrOutputWithContext(ctx context.Context) CosShipperContentCsvPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CosShipperContentCsv) *CosShipperContentCsv {
		return &v
	}).(CosShipperContentCsvPtrOutput)
}

func (o CosShipperContentCsvOutput) Delimiter() pulumi.StringOutput {
	return o.ApplyT(func(v CosShipperContentCsv) string { return v.Delimiter }).(pulumi.StringOutput)
}

func (o CosShipperContentCsvOutput) EscapeChar() pulumi.StringOutput {
	return o.ApplyT(func(v CosShipperContentCsv) string { return v.EscapeChar }).(pulumi.StringOutput)
}

func (o CosShipperContentCsvOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CosShipperContentCsv) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

func (o CosShipperContentCsvOutput) NonExistingField() pulumi.StringOutput {
	return o.ApplyT(func(v CosShipperContentCsv) string { return v.NonExistingField }).(pulumi.StringOutput)
}

func (o CosShipperContentCsvOutput) PrintKey() pulumi.BoolOutput {
	return o.ApplyT(func(v CosShipperContentCsv) bool { return v.PrintKey }).(pulumi.BoolOutput)
}

type CosShipperContentCsvPtrOutput struct{ *pulumi.OutputState }

func (CosShipperContentCsvPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CosShipperContentCsv)(nil)).Elem()
}

func (o CosShipperContentCsvPtrOutput) ToCosShipperContentCsvPtrOutput() CosShipperContentCsvPtrOutput {
	return o
}

func (o CosShipperContentCsvPtrOutput) ToCosShipperContentCsvPtrOutputWithContext(ctx context.Context) CosShipperContentCsvPtrOutput {
	return o
}

func (o CosShipperContentCsvPtrOutput) Elem() CosShipperContentCsvOutput {
	return o.ApplyT(func(v *CosShipperContentCsv) CosShipperContentCsv {
		if v != nil {
			return *v
		}
		var ret CosShipperContentCsv
		return ret
	}).(CosShipperContentCsvOutput)
}

func (o CosShipperContentCsvPtrOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CosShipperContentCsv) *string {
		if v == nil {
			return nil
		}
		return &v.Delimiter
	}).(pulumi.StringPtrOutput)
}

func (o CosShipperContentCsvPtrOutput) EscapeChar() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CosShipperContentCsv) *string {
		if v == nil {
			return nil
		}
		return &v.EscapeChar
	}).(pulumi.StringPtrOutput)
}

func (o CosShipperContentCsvPtrOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CosShipperContentCsv) []string {
		if v == nil {
			return nil
		}
		return v.Keys
	}).(pulumi.StringArrayOutput)
}

func (o CosShipperContentCsvPtrOutput) NonExistingField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CosShipperContentCsv) *string {
		if v == nil {
			return nil
		}
		return &v.NonExistingField
	}).(pulumi.StringPtrOutput)
}

func (o CosShipperContentCsvPtrOutput) PrintKey() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CosShipperContentCsv) *bool {
		if v == nil {
			return nil
		}
		return &v.PrintKey
	}).(pulumi.BoolPtrOutput)
}

type CosShipperContentJson struct {
	EnableTag  bool     `pulumi:"enableTag"`
	MetaFields []string `pulumi:"metaFields"`
}

// CosShipperContentJsonInput is an input type that accepts CosShipperContentJsonArgs and CosShipperContentJsonOutput values.
// You can construct a concrete instance of `CosShipperContentJsonInput` via:
//
//	CosShipperContentJsonArgs{...}
type CosShipperContentJsonInput interface {
	pulumi.Input

	ToCosShipperContentJsonOutput() CosShipperContentJsonOutput
	ToCosShipperContentJsonOutputWithContext(context.Context) CosShipperContentJsonOutput
}

type CosShipperContentJsonArgs struct {
	EnableTag  pulumi.BoolInput        `pulumi:"enableTag"`
	MetaFields pulumi.StringArrayInput `pulumi:"metaFields"`
}

func (CosShipperContentJsonArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CosShipperContentJson)(nil)).Elem()
}

func (i CosShipperContentJsonArgs) ToCosShipperContentJsonOutput() CosShipperContentJsonOutput {
	return i.ToCosShipperContentJsonOutputWithContext(context.Background())
}

func (i CosShipperContentJsonArgs) ToCosShipperContentJsonOutputWithContext(ctx context.Context) CosShipperContentJsonOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosShipperContentJsonOutput)
}

func (i CosShipperContentJsonArgs) ToCosShipperContentJsonPtrOutput() CosShipperContentJsonPtrOutput {
	return i.ToCosShipperContentJsonPtrOutputWithContext(context.Background())
}

func (i CosShipperContentJsonArgs) ToCosShipperContentJsonPtrOutputWithContext(ctx context.Context) CosShipperContentJsonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosShipperContentJsonOutput).ToCosShipperContentJsonPtrOutputWithContext(ctx)
}

// CosShipperContentJsonPtrInput is an input type that accepts CosShipperContentJsonArgs, CosShipperContentJsonPtr and CosShipperContentJsonPtrOutput values.
// You can construct a concrete instance of `CosShipperContentJsonPtrInput` via:
//
//	        CosShipperContentJsonArgs{...}
//
//	or:
//
//	        nil
type CosShipperContentJsonPtrInput interface {
	pulumi.Input

	ToCosShipperContentJsonPtrOutput() CosShipperContentJsonPtrOutput
	ToCosShipperContentJsonPtrOutputWithContext(context.Context) CosShipperContentJsonPtrOutput
}

type cosShipperContentJsonPtrType CosShipperContentJsonArgs

func CosShipperContentJsonPtr(v *CosShipperContentJsonArgs) CosShipperContentJsonPtrInput {
	return (*cosShipperContentJsonPtrType)(v)
}

func (*cosShipperContentJsonPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CosShipperContentJson)(nil)).Elem()
}

func (i *cosShipperContentJsonPtrType) ToCosShipperContentJsonPtrOutput() CosShipperContentJsonPtrOutput {
	return i.ToCosShipperContentJsonPtrOutputWithContext(context.Background())
}

func (i *cosShipperContentJsonPtrType) ToCosShipperContentJsonPtrOutputWithContext(ctx context.Context) CosShipperContentJsonPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosShipperContentJsonPtrOutput)
}

type CosShipperContentJsonOutput struct{ *pulumi.OutputState }

func (CosShipperContentJsonOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CosShipperContentJson)(nil)).Elem()
}

func (o CosShipperContentJsonOutput) ToCosShipperContentJsonOutput() CosShipperContentJsonOutput {
	return o
}

func (o CosShipperContentJsonOutput) ToCosShipperContentJsonOutputWithContext(ctx context.Context) CosShipperContentJsonOutput {
	return o
}

func (o CosShipperContentJsonOutput) ToCosShipperContentJsonPtrOutput() CosShipperContentJsonPtrOutput {
	return o.ToCosShipperContentJsonPtrOutputWithContext(context.Background())
}

func (o CosShipperContentJsonOutput) ToCosShipperContentJsonPtrOutputWithContext(ctx context.Context) CosShipperContentJsonPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CosShipperContentJson) *CosShipperContentJson {
		return &v
	}).(CosShipperContentJsonPtrOutput)
}

func (o CosShipperContentJsonOutput) EnableTag() pulumi.BoolOutput {
	return o.ApplyT(func(v CosShipperContentJson) bool { return v.EnableTag }).(pulumi.BoolOutput)
}

func (o CosShipperContentJsonOutput) MetaFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CosShipperContentJson) []string { return v.MetaFields }).(pulumi.StringArrayOutput)
}

type CosShipperContentJsonPtrOutput struct{ *pulumi.OutputState }

func (CosShipperContentJsonPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CosShipperContentJson)(nil)).Elem()
}

func (o CosShipperContentJsonPtrOutput) ToCosShipperContentJsonPtrOutput() CosShipperContentJsonPtrOutput {
	return o
}

func (o CosShipperContentJsonPtrOutput) ToCosShipperContentJsonPtrOutputWithContext(ctx context.Context) CosShipperContentJsonPtrOutput {
	return o
}

func (o CosShipperContentJsonPtrOutput) Elem() CosShipperContentJsonOutput {
	return o.ApplyT(func(v *CosShipperContentJson) CosShipperContentJson {
		if v != nil {
			return *v
		}
		var ret CosShipperContentJson
		return ret
	}).(CosShipperContentJsonOutput)
}

func (o CosShipperContentJsonPtrOutput) EnableTag() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CosShipperContentJson) *bool {
		if v == nil {
			return nil
		}
		return &v.EnableTag
	}).(pulumi.BoolPtrOutput)
}

func (o CosShipperContentJsonPtrOutput) MetaFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CosShipperContentJson) []string {
		if v == nil {
			return nil
		}
		return v.MetaFields
	}).(pulumi.StringArrayOutput)
}

type CosShipperFilterRule struct {
	Key   string `pulumi:"key"`
	Regex string `pulumi:"regex"`
	Value string `pulumi:"value"`
}

// CosShipperFilterRuleInput is an input type that accepts CosShipperFilterRuleArgs and CosShipperFilterRuleOutput values.
// You can construct a concrete instance of `CosShipperFilterRuleInput` via:
//
//	CosShipperFilterRuleArgs{...}
type CosShipperFilterRuleInput interface {
	pulumi.Input

	ToCosShipperFilterRuleOutput() CosShipperFilterRuleOutput
	ToCosShipperFilterRuleOutputWithContext(context.Context) CosShipperFilterRuleOutput
}

type CosShipperFilterRuleArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Regex pulumi.StringInput `pulumi:"regex"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (CosShipperFilterRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CosShipperFilterRule)(nil)).Elem()
}

func (i CosShipperFilterRuleArgs) ToCosShipperFilterRuleOutput() CosShipperFilterRuleOutput {
	return i.ToCosShipperFilterRuleOutputWithContext(context.Background())
}

func (i CosShipperFilterRuleArgs) ToCosShipperFilterRuleOutputWithContext(ctx context.Context) CosShipperFilterRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosShipperFilterRuleOutput)
}

// CosShipperFilterRuleArrayInput is an input type that accepts CosShipperFilterRuleArray and CosShipperFilterRuleArrayOutput values.
// You can construct a concrete instance of `CosShipperFilterRuleArrayInput` via:
//
//	CosShipperFilterRuleArray{ CosShipperFilterRuleArgs{...} }
type CosShipperFilterRuleArrayInput interface {
	pulumi.Input

	ToCosShipperFilterRuleArrayOutput() CosShipperFilterRuleArrayOutput
	ToCosShipperFilterRuleArrayOutputWithContext(context.Context) CosShipperFilterRuleArrayOutput
}

type CosShipperFilterRuleArray []CosShipperFilterRuleInput

func (CosShipperFilterRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CosShipperFilterRule)(nil)).Elem()
}

func (i CosShipperFilterRuleArray) ToCosShipperFilterRuleArrayOutput() CosShipperFilterRuleArrayOutput {
	return i.ToCosShipperFilterRuleArrayOutputWithContext(context.Background())
}

func (i CosShipperFilterRuleArray) ToCosShipperFilterRuleArrayOutputWithContext(ctx context.Context) CosShipperFilterRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CosShipperFilterRuleArrayOutput)
}

type CosShipperFilterRuleOutput struct{ *pulumi.OutputState }

func (CosShipperFilterRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CosShipperFilterRule)(nil)).Elem()
}

func (o CosShipperFilterRuleOutput) ToCosShipperFilterRuleOutput() CosShipperFilterRuleOutput {
	return o
}

func (o CosShipperFilterRuleOutput) ToCosShipperFilterRuleOutputWithContext(ctx context.Context) CosShipperFilterRuleOutput {
	return o
}

func (o CosShipperFilterRuleOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v CosShipperFilterRule) string { return v.Key }).(pulumi.StringOutput)
}

func (o CosShipperFilterRuleOutput) Regex() pulumi.StringOutput {
	return o.ApplyT(func(v CosShipperFilterRule) string { return v.Regex }).(pulumi.StringOutput)
}

func (o CosShipperFilterRuleOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v CosShipperFilterRule) string { return v.Value }).(pulumi.StringOutput)
}

type CosShipperFilterRuleArrayOutput struct{ *pulumi.OutputState }

func (CosShipperFilterRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CosShipperFilterRule)(nil)).Elem()
}

func (o CosShipperFilterRuleArrayOutput) ToCosShipperFilterRuleArrayOutput() CosShipperFilterRuleArrayOutput {
	return o
}

func (o CosShipperFilterRuleArrayOutput) ToCosShipperFilterRuleArrayOutputWithContext(ctx context.Context) CosShipperFilterRuleArrayOutput {
	return o
}

func (o CosShipperFilterRuleArrayOutput) Index(i pulumi.IntInput) CosShipperFilterRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CosShipperFilterRule {
		return vs[0].([]CosShipperFilterRule)[vs[1].(int)]
	}).(CosShipperFilterRuleOutput)
}

type DataTransformDstResource struct {
	Alias   string `pulumi:"alias"`
	TopicId string `pulumi:"topicId"`
}

// DataTransformDstResourceInput is an input type that accepts DataTransformDstResourceArgs and DataTransformDstResourceOutput values.
// You can construct a concrete instance of `DataTransformDstResourceInput` via:
//
//	DataTransformDstResourceArgs{...}
type DataTransformDstResourceInput interface {
	pulumi.Input

	ToDataTransformDstResourceOutput() DataTransformDstResourceOutput
	ToDataTransformDstResourceOutputWithContext(context.Context) DataTransformDstResourceOutput
}

type DataTransformDstResourceArgs struct {
	Alias   pulumi.StringInput `pulumi:"alias"`
	TopicId pulumi.StringInput `pulumi:"topicId"`
}

func (DataTransformDstResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataTransformDstResource)(nil)).Elem()
}

func (i DataTransformDstResourceArgs) ToDataTransformDstResourceOutput() DataTransformDstResourceOutput {
	return i.ToDataTransformDstResourceOutputWithContext(context.Background())
}

func (i DataTransformDstResourceArgs) ToDataTransformDstResourceOutputWithContext(ctx context.Context) DataTransformDstResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataTransformDstResourceOutput)
}

// DataTransformDstResourceArrayInput is an input type that accepts DataTransformDstResourceArray and DataTransformDstResourceArrayOutput values.
// You can construct a concrete instance of `DataTransformDstResourceArrayInput` via:
//
//	DataTransformDstResourceArray{ DataTransformDstResourceArgs{...} }
type DataTransformDstResourceArrayInput interface {
	pulumi.Input

	ToDataTransformDstResourceArrayOutput() DataTransformDstResourceArrayOutput
	ToDataTransformDstResourceArrayOutputWithContext(context.Context) DataTransformDstResourceArrayOutput
}

type DataTransformDstResourceArray []DataTransformDstResourceInput

func (DataTransformDstResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataTransformDstResource)(nil)).Elem()
}

func (i DataTransformDstResourceArray) ToDataTransformDstResourceArrayOutput() DataTransformDstResourceArrayOutput {
	return i.ToDataTransformDstResourceArrayOutputWithContext(context.Background())
}

func (i DataTransformDstResourceArray) ToDataTransformDstResourceArrayOutputWithContext(ctx context.Context) DataTransformDstResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataTransformDstResourceArrayOutput)
}

type DataTransformDstResourceOutput struct{ *pulumi.OutputState }

func (DataTransformDstResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataTransformDstResource)(nil)).Elem()
}

func (o DataTransformDstResourceOutput) ToDataTransformDstResourceOutput() DataTransformDstResourceOutput {
	return o
}

func (o DataTransformDstResourceOutput) ToDataTransformDstResourceOutputWithContext(ctx context.Context) DataTransformDstResourceOutput {
	return o
}

func (o DataTransformDstResourceOutput) Alias() pulumi.StringOutput {
	return o.ApplyT(func(v DataTransformDstResource) string { return v.Alias }).(pulumi.StringOutput)
}

func (o DataTransformDstResourceOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v DataTransformDstResource) string { return v.TopicId }).(pulumi.StringOutput)
}

type DataTransformDstResourceArrayOutput struct{ *pulumi.OutputState }

func (DataTransformDstResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DataTransformDstResource)(nil)).Elem()
}

func (o DataTransformDstResourceArrayOutput) ToDataTransformDstResourceArrayOutput() DataTransformDstResourceArrayOutput {
	return o
}

func (o DataTransformDstResourceArrayOutput) ToDataTransformDstResourceArrayOutputWithContext(ctx context.Context) DataTransformDstResourceArrayOutput {
	return o
}

func (o DataTransformDstResourceArrayOutput) Index(i pulumi.IntInput) DataTransformDstResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DataTransformDstResource {
		return vs[0].([]DataTransformDstResource)[vs[1].(int)]
	}).(DataTransformDstResourceOutput)
}

type IndexRule struct {
	FullText *IndexRuleFullText `pulumi:"fullText"`
	KeyValue *IndexRuleKeyValue `pulumi:"keyValue"`
	Tag      *IndexRuleTag      `pulumi:"tag"`
}

// IndexRuleInput is an input type that accepts IndexRuleArgs and IndexRuleOutput values.
// You can construct a concrete instance of `IndexRuleInput` via:
//
//	IndexRuleArgs{...}
type IndexRuleInput interface {
	pulumi.Input

	ToIndexRuleOutput() IndexRuleOutput
	ToIndexRuleOutputWithContext(context.Context) IndexRuleOutput
}

type IndexRuleArgs struct {
	FullText IndexRuleFullTextPtrInput `pulumi:"fullText"`
	KeyValue IndexRuleKeyValuePtrInput `pulumi:"keyValue"`
	Tag      IndexRuleTagPtrInput      `pulumi:"tag"`
}

func (IndexRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexRule)(nil)).Elem()
}

func (i IndexRuleArgs) ToIndexRuleOutput() IndexRuleOutput {
	return i.ToIndexRuleOutputWithContext(context.Background())
}

func (i IndexRuleArgs) ToIndexRuleOutputWithContext(ctx context.Context) IndexRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexRuleOutput)
}

func (i IndexRuleArgs) ToIndexRulePtrOutput() IndexRulePtrOutput {
	return i.ToIndexRulePtrOutputWithContext(context.Background())
}

func (i IndexRuleArgs) ToIndexRulePtrOutputWithContext(ctx context.Context) IndexRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexRuleOutput).ToIndexRulePtrOutputWithContext(ctx)
}

// IndexRulePtrInput is an input type that accepts IndexRuleArgs, IndexRulePtr and IndexRulePtrOutput values.
// You can construct a concrete instance of `IndexRulePtrInput` via:
//
//	        IndexRuleArgs{...}
//
//	or:
//
//	        nil
type IndexRulePtrInput interface {
	pulumi.Input

	ToIndexRulePtrOutput() IndexRulePtrOutput
	ToIndexRulePtrOutputWithContext(context.Context) IndexRulePtrOutput
}

type indexRulePtrType IndexRuleArgs

func IndexRulePtr(v *IndexRuleArgs) IndexRulePtrInput {
	return (*indexRulePtrType)(v)
}

func (*indexRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexRule)(nil)).Elem()
}

func (i *indexRulePtrType) ToIndexRulePtrOutput() IndexRulePtrOutput {
	return i.ToIndexRulePtrOutputWithContext(context.Background())
}

func (i *indexRulePtrType) ToIndexRulePtrOutputWithContext(ctx context.Context) IndexRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexRulePtrOutput)
}

type IndexRuleOutput struct{ *pulumi.OutputState }

func (IndexRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexRule)(nil)).Elem()
}

func (o IndexRuleOutput) ToIndexRuleOutput() IndexRuleOutput {
	return o
}

func (o IndexRuleOutput) ToIndexRuleOutputWithContext(ctx context.Context) IndexRuleOutput {
	return o
}

func (o IndexRuleOutput) ToIndexRulePtrOutput() IndexRulePtrOutput {
	return o.ToIndexRulePtrOutputWithContext(context.Background())
}

func (o IndexRuleOutput) ToIndexRulePtrOutputWithContext(ctx context.Context) IndexRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IndexRule) *IndexRule {
		return &v
	}).(IndexRulePtrOutput)
}

func (o IndexRuleOutput) FullText() IndexRuleFullTextPtrOutput {
	return o.ApplyT(func(v IndexRule) *IndexRuleFullText { return v.FullText }).(IndexRuleFullTextPtrOutput)
}

func (o IndexRuleOutput) KeyValue() IndexRuleKeyValuePtrOutput {
	return o.ApplyT(func(v IndexRule) *IndexRuleKeyValue { return v.KeyValue }).(IndexRuleKeyValuePtrOutput)
}

func (o IndexRuleOutput) Tag() IndexRuleTagPtrOutput {
	return o.ApplyT(func(v IndexRule) *IndexRuleTag { return v.Tag }).(IndexRuleTagPtrOutput)
}

type IndexRulePtrOutput struct{ *pulumi.OutputState }

func (IndexRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexRule)(nil)).Elem()
}

func (o IndexRulePtrOutput) ToIndexRulePtrOutput() IndexRulePtrOutput {
	return o
}

func (o IndexRulePtrOutput) ToIndexRulePtrOutputWithContext(ctx context.Context) IndexRulePtrOutput {
	return o
}

func (o IndexRulePtrOutput) Elem() IndexRuleOutput {
	return o.ApplyT(func(v *IndexRule) IndexRule {
		if v != nil {
			return *v
		}
		var ret IndexRule
		return ret
	}).(IndexRuleOutput)
}

func (o IndexRulePtrOutput) FullText() IndexRuleFullTextPtrOutput {
	return o.ApplyT(func(v *IndexRule) *IndexRuleFullText {
		if v == nil {
			return nil
		}
		return v.FullText
	}).(IndexRuleFullTextPtrOutput)
}

func (o IndexRulePtrOutput) KeyValue() IndexRuleKeyValuePtrOutput {
	return o.ApplyT(func(v *IndexRule) *IndexRuleKeyValue {
		if v == nil {
			return nil
		}
		return v.KeyValue
	}).(IndexRuleKeyValuePtrOutput)
}

func (o IndexRulePtrOutput) Tag() IndexRuleTagPtrOutput {
	return o.ApplyT(func(v *IndexRule) *IndexRuleTag {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(IndexRuleTagPtrOutput)
}

type IndexRuleFullText struct {
	CaseSensitive bool   `pulumi:"caseSensitive"`
	ContainZH     bool   `pulumi:"containZH"`
	Tokenizer     string `pulumi:"tokenizer"`
}

// IndexRuleFullTextInput is an input type that accepts IndexRuleFullTextArgs and IndexRuleFullTextOutput values.
// You can construct a concrete instance of `IndexRuleFullTextInput` via:
//
//	IndexRuleFullTextArgs{...}
type IndexRuleFullTextInput interface {
	pulumi.Input

	ToIndexRuleFullTextOutput() IndexRuleFullTextOutput
	ToIndexRuleFullTextOutputWithContext(context.Context) IndexRuleFullTextOutput
}

type IndexRuleFullTextArgs struct {
	CaseSensitive pulumi.BoolInput   `pulumi:"caseSensitive"`
	ContainZH     pulumi.BoolInput   `pulumi:"containZH"`
	Tokenizer     pulumi.StringInput `pulumi:"tokenizer"`
}

func (IndexRuleFullTextArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexRuleFullText)(nil)).Elem()
}

func (i IndexRuleFullTextArgs) ToIndexRuleFullTextOutput() IndexRuleFullTextOutput {
	return i.ToIndexRuleFullTextOutputWithContext(context.Background())
}

func (i IndexRuleFullTextArgs) ToIndexRuleFullTextOutputWithContext(ctx context.Context) IndexRuleFullTextOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexRuleFullTextOutput)
}

func (i IndexRuleFullTextArgs) ToIndexRuleFullTextPtrOutput() IndexRuleFullTextPtrOutput {
	return i.ToIndexRuleFullTextPtrOutputWithContext(context.Background())
}

func (i IndexRuleFullTextArgs) ToIndexRuleFullTextPtrOutputWithContext(ctx context.Context) IndexRuleFullTextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexRuleFullTextOutput).ToIndexRuleFullTextPtrOutputWithContext(ctx)
}

// IndexRuleFullTextPtrInput is an input type that accepts IndexRuleFullTextArgs, IndexRuleFullTextPtr and IndexRuleFullTextPtrOutput values.
// You can construct a concrete instance of `IndexRuleFullTextPtrInput` via:
//
//	        IndexRuleFullTextArgs{...}
//
//	or:
//
//	        nil
type IndexRuleFullTextPtrInput interface {
	pulumi.Input

	ToIndexRuleFullTextPtrOutput() IndexRuleFullTextPtrOutput
	ToIndexRuleFullTextPtrOutputWithContext(context.Context) IndexRuleFullTextPtrOutput
}

type indexRuleFullTextPtrType IndexRuleFullTextArgs

func IndexRuleFullTextPtr(v *IndexRuleFullTextArgs) IndexRuleFullTextPtrInput {
	return (*indexRuleFullTextPtrType)(v)
}

func (*indexRuleFullTextPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexRuleFullText)(nil)).Elem()
}

func (i *indexRuleFullTextPtrType) ToIndexRuleFullTextPtrOutput() IndexRuleFullTextPtrOutput {
	return i.ToIndexRuleFullTextPtrOutputWithContext(context.Background())
}

func (i *indexRuleFullTextPtrType) ToIndexRuleFullTextPtrOutputWithContext(ctx context.Context) IndexRuleFullTextPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexRuleFullTextPtrOutput)
}

type IndexRuleFullTextOutput struct{ *pulumi.OutputState }

func (IndexRuleFullTextOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexRuleFullText)(nil)).Elem()
}

func (o IndexRuleFullTextOutput) ToIndexRuleFullTextOutput() IndexRuleFullTextOutput {
	return o
}

func (o IndexRuleFullTextOutput) ToIndexRuleFullTextOutputWithContext(ctx context.Context) IndexRuleFullTextOutput {
	return o
}

func (o IndexRuleFullTextOutput) ToIndexRuleFullTextPtrOutput() IndexRuleFullTextPtrOutput {
	return o.ToIndexRuleFullTextPtrOutputWithContext(context.Background())
}

func (o IndexRuleFullTextOutput) ToIndexRuleFullTextPtrOutputWithContext(ctx context.Context) IndexRuleFullTextPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IndexRuleFullText) *IndexRuleFullText {
		return &v
	}).(IndexRuleFullTextPtrOutput)
}

func (o IndexRuleFullTextOutput) CaseSensitive() pulumi.BoolOutput {
	return o.ApplyT(func(v IndexRuleFullText) bool { return v.CaseSensitive }).(pulumi.BoolOutput)
}

func (o IndexRuleFullTextOutput) ContainZH() pulumi.BoolOutput {
	return o.ApplyT(func(v IndexRuleFullText) bool { return v.ContainZH }).(pulumi.BoolOutput)
}

func (o IndexRuleFullTextOutput) Tokenizer() pulumi.StringOutput {
	return o.ApplyT(func(v IndexRuleFullText) string { return v.Tokenizer }).(pulumi.StringOutput)
}

type IndexRuleFullTextPtrOutput struct{ *pulumi.OutputState }

func (IndexRuleFullTextPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexRuleFullText)(nil)).Elem()
}

func (o IndexRuleFullTextPtrOutput) ToIndexRuleFullTextPtrOutput() IndexRuleFullTextPtrOutput {
	return o
}

func (o IndexRuleFullTextPtrOutput) ToIndexRuleFullTextPtrOutputWithContext(ctx context.Context) IndexRuleFullTextPtrOutput {
	return o
}

func (o IndexRuleFullTextPtrOutput) Elem() IndexRuleFullTextOutput {
	return o.ApplyT(func(v *IndexRuleFullText) IndexRuleFullText {
		if v != nil {
			return *v
		}
		var ret IndexRuleFullText
		return ret
	}).(IndexRuleFullTextOutput)
}

func (o IndexRuleFullTextPtrOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IndexRuleFullText) *bool {
		if v == nil {
			return nil
		}
		return &v.CaseSensitive
	}).(pulumi.BoolPtrOutput)
}

func (o IndexRuleFullTextPtrOutput) ContainZH() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IndexRuleFullText) *bool {
		if v == nil {
			return nil
		}
		return &v.ContainZH
	}).(pulumi.BoolPtrOutput)
}

func (o IndexRuleFullTextPtrOutput) Tokenizer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IndexRuleFullText) *string {
		if v == nil {
			return nil
		}
		return &v.Tokenizer
	}).(pulumi.StringPtrOutput)
}

type IndexRuleKeyValue struct {
	CaseSensitive bool                        `pulumi:"caseSensitive"`
	KeyValues     []IndexRuleKeyValueKeyValue `pulumi:"keyValues"`
}

// IndexRuleKeyValueInput is an input type that accepts IndexRuleKeyValueArgs and IndexRuleKeyValueOutput values.
// You can construct a concrete instance of `IndexRuleKeyValueInput` via:
//
//	IndexRuleKeyValueArgs{...}
type IndexRuleKeyValueInput interface {
	pulumi.Input

	ToIndexRuleKeyValueOutput() IndexRuleKeyValueOutput
	ToIndexRuleKeyValueOutputWithContext(context.Context) IndexRuleKeyValueOutput
}

type IndexRuleKeyValueArgs struct {
	CaseSensitive pulumi.BoolInput                    `pulumi:"caseSensitive"`
	KeyValues     IndexRuleKeyValueKeyValueArrayInput `pulumi:"keyValues"`
}

func (IndexRuleKeyValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexRuleKeyValue)(nil)).Elem()
}

func (i IndexRuleKeyValueArgs) ToIndexRuleKeyValueOutput() IndexRuleKeyValueOutput {
	return i.ToIndexRuleKeyValueOutputWithContext(context.Background())
}

func (i IndexRuleKeyValueArgs) ToIndexRuleKeyValueOutputWithContext(ctx context.Context) IndexRuleKeyValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexRuleKeyValueOutput)
}

func (i IndexRuleKeyValueArgs) ToIndexRuleKeyValuePtrOutput() IndexRuleKeyValuePtrOutput {
	return i.ToIndexRuleKeyValuePtrOutputWithContext(context.Background())
}

func (i IndexRuleKeyValueArgs) ToIndexRuleKeyValuePtrOutputWithContext(ctx context.Context) IndexRuleKeyValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexRuleKeyValueOutput).ToIndexRuleKeyValuePtrOutputWithContext(ctx)
}

// IndexRuleKeyValuePtrInput is an input type that accepts IndexRuleKeyValueArgs, IndexRuleKeyValuePtr and IndexRuleKeyValuePtrOutput values.
// You can construct a concrete instance of `IndexRuleKeyValuePtrInput` via:
//
//	        IndexRuleKeyValueArgs{...}
//
//	or:
//
//	        nil
type IndexRuleKeyValuePtrInput interface {
	pulumi.Input

	ToIndexRuleKeyValuePtrOutput() IndexRuleKeyValuePtrOutput
	ToIndexRuleKeyValuePtrOutputWithContext(context.Context) IndexRuleKeyValuePtrOutput
}

type indexRuleKeyValuePtrType IndexRuleKeyValueArgs

func IndexRuleKeyValuePtr(v *IndexRuleKeyValueArgs) IndexRuleKeyValuePtrInput {
	return (*indexRuleKeyValuePtrType)(v)
}

func (*indexRuleKeyValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexRuleKeyValue)(nil)).Elem()
}

func (i *indexRuleKeyValuePtrType) ToIndexRuleKeyValuePtrOutput() IndexRuleKeyValuePtrOutput {
	return i.ToIndexRuleKeyValuePtrOutputWithContext(context.Background())
}

func (i *indexRuleKeyValuePtrType) ToIndexRuleKeyValuePtrOutputWithContext(ctx context.Context) IndexRuleKeyValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexRuleKeyValuePtrOutput)
}

type IndexRuleKeyValueOutput struct{ *pulumi.OutputState }

func (IndexRuleKeyValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexRuleKeyValue)(nil)).Elem()
}

func (o IndexRuleKeyValueOutput) ToIndexRuleKeyValueOutput() IndexRuleKeyValueOutput {
	return o
}

func (o IndexRuleKeyValueOutput) ToIndexRuleKeyValueOutputWithContext(ctx context.Context) IndexRuleKeyValueOutput {
	return o
}

func (o IndexRuleKeyValueOutput) ToIndexRuleKeyValuePtrOutput() IndexRuleKeyValuePtrOutput {
	return o.ToIndexRuleKeyValuePtrOutputWithContext(context.Background())
}

func (o IndexRuleKeyValueOutput) ToIndexRuleKeyValuePtrOutputWithContext(ctx context.Context) IndexRuleKeyValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IndexRuleKeyValue) *IndexRuleKeyValue {
		return &v
	}).(IndexRuleKeyValuePtrOutput)
}

func (o IndexRuleKeyValueOutput) CaseSensitive() pulumi.BoolOutput {
	return o.ApplyT(func(v IndexRuleKeyValue) bool { return v.CaseSensitive }).(pulumi.BoolOutput)
}

func (o IndexRuleKeyValueOutput) KeyValues() IndexRuleKeyValueKeyValueArrayOutput {
	return o.ApplyT(func(v IndexRuleKeyValue) []IndexRuleKeyValueKeyValue { return v.KeyValues }).(IndexRuleKeyValueKeyValueArrayOutput)
}

type IndexRuleKeyValuePtrOutput struct{ *pulumi.OutputState }

func (IndexRuleKeyValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexRuleKeyValue)(nil)).Elem()
}

func (o IndexRuleKeyValuePtrOutput) ToIndexRuleKeyValuePtrOutput() IndexRuleKeyValuePtrOutput {
	return o
}

func (o IndexRuleKeyValuePtrOutput) ToIndexRuleKeyValuePtrOutputWithContext(ctx context.Context) IndexRuleKeyValuePtrOutput {
	return o
}

func (o IndexRuleKeyValuePtrOutput) Elem() IndexRuleKeyValueOutput {
	return o.ApplyT(func(v *IndexRuleKeyValue) IndexRuleKeyValue {
		if v != nil {
			return *v
		}
		var ret IndexRuleKeyValue
		return ret
	}).(IndexRuleKeyValueOutput)
}

func (o IndexRuleKeyValuePtrOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IndexRuleKeyValue) *bool {
		if v == nil {
			return nil
		}
		return &v.CaseSensitive
	}).(pulumi.BoolPtrOutput)
}

func (o IndexRuleKeyValuePtrOutput) KeyValues() IndexRuleKeyValueKeyValueArrayOutput {
	return o.ApplyT(func(v *IndexRuleKeyValue) []IndexRuleKeyValueKeyValue {
		if v == nil {
			return nil
		}
		return v.KeyValues
	}).(IndexRuleKeyValueKeyValueArrayOutput)
}

type IndexRuleKeyValueKeyValue struct {
	Key   string                          `pulumi:"key"`
	Value *IndexRuleKeyValueKeyValueValue `pulumi:"value"`
}

// IndexRuleKeyValueKeyValueInput is an input type that accepts IndexRuleKeyValueKeyValueArgs and IndexRuleKeyValueKeyValueOutput values.
// You can construct a concrete instance of `IndexRuleKeyValueKeyValueInput` via:
//
//	IndexRuleKeyValueKeyValueArgs{...}
type IndexRuleKeyValueKeyValueInput interface {
	pulumi.Input

	ToIndexRuleKeyValueKeyValueOutput() IndexRuleKeyValueKeyValueOutput
	ToIndexRuleKeyValueKeyValueOutputWithContext(context.Context) IndexRuleKeyValueKeyValueOutput
}

type IndexRuleKeyValueKeyValueArgs struct {
	Key   pulumi.StringInput                     `pulumi:"key"`
	Value IndexRuleKeyValueKeyValueValuePtrInput `pulumi:"value"`
}

func (IndexRuleKeyValueKeyValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexRuleKeyValueKeyValue)(nil)).Elem()
}

func (i IndexRuleKeyValueKeyValueArgs) ToIndexRuleKeyValueKeyValueOutput() IndexRuleKeyValueKeyValueOutput {
	return i.ToIndexRuleKeyValueKeyValueOutputWithContext(context.Background())
}

func (i IndexRuleKeyValueKeyValueArgs) ToIndexRuleKeyValueKeyValueOutputWithContext(ctx context.Context) IndexRuleKeyValueKeyValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexRuleKeyValueKeyValueOutput)
}

// IndexRuleKeyValueKeyValueArrayInput is an input type that accepts IndexRuleKeyValueKeyValueArray and IndexRuleKeyValueKeyValueArrayOutput values.
// You can construct a concrete instance of `IndexRuleKeyValueKeyValueArrayInput` via:
//
//	IndexRuleKeyValueKeyValueArray{ IndexRuleKeyValueKeyValueArgs{...} }
type IndexRuleKeyValueKeyValueArrayInput interface {
	pulumi.Input

	ToIndexRuleKeyValueKeyValueArrayOutput() IndexRuleKeyValueKeyValueArrayOutput
	ToIndexRuleKeyValueKeyValueArrayOutputWithContext(context.Context) IndexRuleKeyValueKeyValueArrayOutput
}

type IndexRuleKeyValueKeyValueArray []IndexRuleKeyValueKeyValueInput

func (IndexRuleKeyValueKeyValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IndexRuleKeyValueKeyValue)(nil)).Elem()
}

func (i IndexRuleKeyValueKeyValueArray) ToIndexRuleKeyValueKeyValueArrayOutput() IndexRuleKeyValueKeyValueArrayOutput {
	return i.ToIndexRuleKeyValueKeyValueArrayOutputWithContext(context.Background())
}

func (i IndexRuleKeyValueKeyValueArray) ToIndexRuleKeyValueKeyValueArrayOutputWithContext(ctx context.Context) IndexRuleKeyValueKeyValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexRuleKeyValueKeyValueArrayOutput)
}

type IndexRuleKeyValueKeyValueOutput struct{ *pulumi.OutputState }

func (IndexRuleKeyValueKeyValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexRuleKeyValueKeyValue)(nil)).Elem()
}

func (o IndexRuleKeyValueKeyValueOutput) ToIndexRuleKeyValueKeyValueOutput() IndexRuleKeyValueKeyValueOutput {
	return o
}

func (o IndexRuleKeyValueKeyValueOutput) ToIndexRuleKeyValueKeyValueOutputWithContext(ctx context.Context) IndexRuleKeyValueKeyValueOutput {
	return o
}

func (o IndexRuleKeyValueKeyValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v IndexRuleKeyValueKeyValue) string { return v.Key }).(pulumi.StringOutput)
}

func (o IndexRuleKeyValueKeyValueOutput) Value() IndexRuleKeyValueKeyValueValuePtrOutput {
	return o.ApplyT(func(v IndexRuleKeyValueKeyValue) *IndexRuleKeyValueKeyValueValue { return v.Value }).(IndexRuleKeyValueKeyValueValuePtrOutput)
}

type IndexRuleKeyValueKeyValueArrayOutput struct{ *pulumi.OutputState }

func (IndexRuleKeyValueKeyValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IndexRuleKeyValueKeyValue)(nil)).Elem()
}

func (o IndexRuleKeyValueKeyValueArrayOutput) ToIndexRuleKeyValueKeyValueArrayOutput() IndexRuleKeyValueKeyValueArrayOutput {
	return o
}

func (o IndexRuleKeyValueKeyValueArrayOutput) ToIndexRuleKeyValueKeyValueArrayOutputWithContext(ctx context.Context) IndexRuleKeyValueKeyValueArrayOutput {
	return o
}

func (o IndexRuleKeyValueKeyValueArrayOutput) Index(i pulumi.IntInput) IndexRuleKeyValueKeyValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IndexRuleKeyValueKeyValue {
		return vs[0].([]IndexRuleKeyValueKeyValue)[vs[1].(int)]
	}).(IndexRuleKeyValueKeyValueOutput)
}

type IndexRuleKeyValueKeyValueValue struct {
	ContainZH *bool   `pulumi:"containZH"`
	SqlFlag   *bool   `pulumi:"sqlFlag"`
	Tokenizer *string `pulumi:"tokenizer"`
	Type      string  `pulumi:"type"`
}

// IndexRuleKeyValueKeyValueValueInput is an input type that accepts IndexRuleKeyValueKeyValueValueArgs and IndexRuleKeyValueKeyValueValueOutput values.
// You can construct a concrete instance of `IndexRuleKeyValueKeyValueValueInput` via:
//
//	IndexRuleKeyValueKeyValueValueArgs{...}
type IndexRuleKeyValueKeyValueValueInput interface {
	pulumi.Input

	ToIndexRuleKeyValueKeyValueValueOutput() IndexRuleKeyValueKeyValueValueOutput
	ToIndexRuleKeyValueKeyValueValueOutputWithContext(context.Context) IndexRuleKeyValueKeyValueValueOutput
}

type IndexRuleKeyValueKeyValueValueArgs struct {
	ContainZH pulumi.BoolPtrInput   `pulumi:"containZH"`
	SqlFlag   pulumi.BoolPtrInput   `pulumi:"sqlFlag"`
	Tokenizer pulumi.StringPtrInput `pulumi:"tokenizer"`
	Type      pulumi.StringInput    `pulumi:"type"`
}

func (IndexRuleKeyValueKeyValueValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexRuleKeyValueKeyValueValue)(nil)).Elem()
}

func (i IndexRuleKeyValueKeyValueValueArgs) ToIndexRuleKeyValueKeyValueValueOutput() IndexRuleKeyValueKeyValueValueOutput {
	return i.ToIndexRuleKeyValueKeyValueValueOutputWithContext(context.Background())
}

func (i IndexRuleKeyValueKeyValueValueArgs) ToIndexRuleKeyValueKeyValueValueOutputWithContext(ctx context.Context) IndexRuleKeyValueKeyValueValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexRuleKeyValueKeyValueValueOutput)
}

func (i IndexRuleKeyValueKeyValueValueArgs) ToIndexRuleKeyValueKeyValueValuePtrOutput() IndexRuleKeyValueKeyValueValuePtrOutput {
	return i.ToIndexRuleKeyValueKeyValueValuePtrOutputWithContext(context.Background())
}

func (i IndexRuleKeyValueKeyValueValueArgs) ToIndexRuleKeyValueKeyValueValuePtrOutputWithContext(ctx context.Context) IndexRuleKeyValueKeyValueValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexRuleKeyValueKeyValueValueOutput).ToIndexRuleKeyValueKeyValueValuePtrOutputWithContext(ctx)
}

// IndexRuleKeyValueKeyValueValuePtrInput is an input type that accepts IndexRuleKeyValueKeyValueValueArgs, IndexRuleKeyValueKeyValueValuePtr and IndexRuleKeyValueKeyValueValuePtrOutput values.
// You can construct a concrete instance of `IndexRuleKeyValueKeyValueValuePtrInput` via:
//
//	        IndexRuleKeyValueKeyValueValueArgs{...}
//
//	or:
//
//	        nil
type IndexRuleKeyValueKeyValueValuePtrInput interface {
	pulumi.Input

	ToIndexRuleKeyValueKeyValueValuePtrOutput() IndexRuleKeyValueKeyValueValuePtrOutput
	ToIndexRuleKeyValueKeyValueValuePtrOutputWithContext(context.Context) IndexRuleKeyValueKeyValueValuePtrOutput
}

type indexRuleKeyValueKeyValueValuePtrType IndexRuleKeyValueKeyValueValueArgs

func IndexRuleKeyValueKeyValueValuePtr(v *IndexRuleKeyValueKeyValueValueArgs) IndexRuleKeyValueKeyValueValuePtrInput {
	return (*indexRuleKeyValueKeyValueValuePtrType)(v)
}

func (*indexRuleKeyValueKeyValueValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexRuleKeyValueKeyValueValue)(nil)).Elem()
}

func (i *indexRuleKeyValueKeyValueValuePtrType) ToIndexRuleKeyValueKeyValueValuePtrOutput() IndexRuleKeyValueKeyValueValuePtrOutput {
	return i.ToIndexRuleKeyValueKeyValueValuePtrOutputWithContext(context.Background())
}

func (i *indexRuleKeyValueKeyValueValuePtrType) ToIndexRuleKeyValueKeyValueValuePtrOutputWithContext(ctx context.Context) IndexRuleKeyValueKeyValueValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexRuleKeyValueKeyValueValuePtrOutput)
}

type IndexRuleKeyValueKeyValueValueOutput struct{ *pulumi.OutputState }

func (IndexRuleKeyValueKeyValueValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexRuleKeyValueKeyValueValue)(nil)).Elem()
}

func (o IndexRuleKeyValueKeyValueValueOutput) ToIndexRuleKeyValueKeyValueValueOutput() IndexRuleKeyValueKeyValueValueOutput {
	return o
}

func (o IndexRuleKeyValueKeyValueValueOutput) ToIndexRuleKeyValueKeyValueValueOutputWithContext(ctx context.Context) IndexRuleKeyValueKeyValueValueOutput {
	return o
}

func (o IndexRuleKeyValueKeyValueValueOutput) ToIndexRuleKeyValueKeyValueValuePtrOutput() IndexRuleKeyValueKeyValueValuePtrOutput {
	return o.ToIndexRuleKeyValueKeyValueValuePtrOutputWithContext(context.Background())
}

func (o IndexRuleKeyValueKeyValueValueOutput) ToIndexRuleKeyValueKeyValueValuePtrOutputWithContext(ctx context.Context) IndexRuleKeyValueKeyValueValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IndexRuleKeyValueKeyValueValue) *IndexRuleKeyValueKeyValueValue {
		return &v
	}).(IndexRuleKeyValueKeyValueValuePtrOutput)
}

func (o IndexRuleKeyValueKeyValueValueOutput) ContainZH() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IndexRuleKeyValueKeyValueValue) *bool { return v.ContainZH }).(pulumi.BoolPtrOutput)
}

func (o IndexRuleKeyValueKeyValueValueOutput) SqlFlag() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IndexRuleKeyValueKeyValueValue) *bool { return v.SqlFlag }).(pulumi.BoolPtrOutput)
}

func (o IndexRuleKeyValueKeyValueValueOutput) Tokenizer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IndexRuleKeyValueKeyValueValue) *string { return v.Tokenizer }).(pulumi.StringPtrOutput)
}

func (o IndexRuleKeyValueKeyValueValueOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IndexRuleKeyValueKeyValueValue) string { return v.Type }).(pulumi.StringOutput)
}

type IndexRuleKeyValueKeyValueValuePtrOutput struct{ *pulumi.OutputState }

func (IndexRuleKeyValueKeyValueValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexRuleKeyValueKeyValueValue)(nil)).Elem()
}

func (o IndexRuleKeyValueKeyValueValuePtrOutput) ToIndexRuleKeyValueKeyValueValuePtrOutput() IndexRuleKeyValueKeyValueValuePtrOutput {
	return o
}

func (o IndexRuleKeyValueKeyValueValuePtrOutput) ToIndexRuleKeyValueKeyValueValuePtrOutputWithContext(ctx context.Context) IndexRuleKeyValueKeyValueValuePtrOutput {
	return o
}

func (o IndexRuleKeyValueKeyValueValuePtrOutput) Elem() IndexRuleKeyValueKeyValueValueOutput {
	return o.ApplyT(func(v *IndexRuleKeyValueKeyValueValue) IndexRuleKeyValueKeyValueValue {
		if v != nil {
			return *v
		}
		var ret IndexRuleKeyValueKeyValueValue
		return ret
	}).(IndexRuleKeyValueKeyValueValueOutput)
}

func (o IndexRuleKeyValueKeyValueValuePtrOutput) ContainZH() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IndexRuleKeyValueKeyValueValue) *bool {
		if v == nil {
			return nil
		}
		return v.ContainZH
	}).(pulumi.BoolPtrOutput)
}

func (o IndexRuleKeyValueKeyValueValuePtrOutput) SqlFlag() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IndexRuleKeyValueKeyValueValue) *bool {
		if v == nil {
			return nil
		}
		return v.SqlFlag
	}).(pulumi.BoolPtrOutput)
}

func (o IndexRuleKeyValueKeyValueValuePtrOutput) Tokenizer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IndexRuleKeyValueKeyValueValue) *string {
		if v == nil {
			return nil
		}
		return v.Tokenizer
	}).(pulumi.StringPtrOutput)
}

func (o IndexRuleKeyValueKeyValueValuePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IndexRuleKeyValueKeyValueValue) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type IndexRuleTag struct {
	CaseSensitive bool                   `pulumi:"caseSensitive"`
	KeyValues     []IndexRuleTagKeyValue `pulumi:"keyValues"`
}

// IndexRuleTagInput is an input type that accepts IndexRuleTagArgs and IndexRuleTagOutput values.
// You can construct a concrete instance of `IndexRuleTagInput` via:
//
//	IndexRuleTagArgs{...}
type IndexRuleTagInput interface {
	pulumi.Input

	ToIndexRuleTagOutput() IndexRuleTagOutput
	ToIndexRuleTagOutputWithContext(context.Context) IndexRuleTagOutput
}

type IndexRuleTagArgs struct {
	CaseSensitive pulumi.BoolInput               `pulumi:"caseSensitive"`
	KeyValues     IndexRuleTagKeyValueArrayInput `pulumi:"keyValues"`
}

func (IndexRuleTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexRuleTag)(nil)).Elem()
}

func (i IndexRuleTagArgs) ToIndexRuleTagOutput() IndexRuleTagOutput {
	return i.ToIndexRuleTagOutputWithContext(context.Background())
}

func (i IndexRuleTagArgs) ToIndexRuleTagOutputWithContext(ctx context.Context) IndexRuleTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexRuleTagOutput)
}

func (i IndexRuleTagArgs) ToIndexRuleTagPtrOutput() IndexRuleTagPtrOutput {
	return i.ToIndexRuleTagPtrOutputWithContext(context.Background())
}

func (i IndexRuleTagArgs) ToIndexRuleTagPtrOutputWithContext(ctx context.Context) IndexRuleTagPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexRuleTagOutput).ToIndexRuleTagPtrOutputWithContext(ctx)
}

// IndexRuleTagPtrInput is an input type that accepts IndexRuleTagArgs, IndexRuleTagPtr and IndexRuleTagPtrOutput values.
// You can construct a concrete instance of `IndexRuleTagPtrInput` via:
//
//	        IndexRuleTagArgs{...}
//
//	or:
//
//	        nil
type IndexRuleTagPtrInput interface {
	pulumi.Input

	ToIndexRuleTagPtrOutput() IndexRuleTagPtrOutput
	ToIndexRuleTagPtrOutputWithContext(context.Context) IndexRuleTagPtrOutput
}

type indexRuleTagPtrType IndexRuleTagArgs

func IndexRuleTagPtr(v *IndexRuleTagArgs) IndexRuleTagPtrInput {
	return (*indexRuleTagPtrType)(v)
}

func (*indexRuleTagPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexRuleTag)(nil)).Elem()
}

func (i *indexRuleTagPtrType) ToIndexRuleTagPtrOutput() IndexRuleTagPtrOutput {
	return i.ToIndexRuleTagPtrOutputWithContext(context.Background())
}

func (i *indexRuleTagPtrType) ToIndexRuleTagPtrOutputWithContext(ctx context.Context) IndexRuleTagPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexRuleTagPtrOutput)
}

type IndexRuleTagOutput struct{ *pulumi.OutputState }

func (IndexRuleTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexRuleTag)(nil)).Elem()
}

func (o IndexRuleTagOutput) ToIndexRuleTagOutput() IndexRuleTagOutput {
	return o
}

func (o IndexRuleTagOutput) ToIndexRuleTagOutputWithContext(ctx context.Context) IndexRuleTagOutput {
	return o
}

func (o IndexRuleTagOutput) ToIndexRuleTagPtrOutput() IndexRuleTagPtrOutput {
	return o.ToIndexRuleTagPtrOutputWithContext(context.Background())
}

func (o IndexRuleTagOutput) ToIndexRuleTagPtrOutputWithContext(ctx context.Context) IndexRuleTagPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IndexRuleTag) *IndexRuleTag {
		return &v
	}).(IndexRuleTagPtrOutput)
}

func (o IndexRuleTagOutput) CaseSensitive() pulumi.BoolOutput {
	return o.ApplyT(func(v IndexRuleTag) bool { return v.CaseSensitive }).(pulumi.BoolOutput)
}

func (o IndexRuleTagOutput) KeyValues() IndexRuleTagKeyValueArrayOutput {
	return o.ApplyT(func(v IndexRuleTag) []IndexRuleTagKeyValue { return v.KeyValues }).(IndexRuleTagKeyValueArrayOutput)
}

type IndexRuleTagPtrOutput struct{ *pulumi.OutputState }

func (IndexRuleTagPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexRuleTag)(nil)).Elem()
}

func (o IndexRuleTagPtrOutput) ToIndexRuleTagPtrOutput() IndexRuleTagPtrOutput {
	return o
}

func (o IndexRuleTagPtrOutput) ToIndexRuleTagPtrOutputWithContext(ctx context.Context) IndexRuleTagPtrOutput {
	return o
}

func (o IndexRuleTagPtrOutput) Elem() IndexRuleTagOutput {
	return o.ApplyT(func(v *IndexRuleTag) IndexRuleTag {
		if v != nil {
			return *v
		}
		var ret IndexRuleTag
		return ret
	}).(IndexRuleTagOutput)
}

func (o IndexRuleTagPtrOutput) CaseSensitive() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IndexRuleTag) *bool {
		if v == nil {
			return nil
		}
		return &v.CaseSensitive
	}).(pulumi.BoolPtrOutput)
}

func (o IndexRuleTagPtrOutput) KeyValues() IndexRuleTagKeyValueArrayOutput {
	return o.ApplyT(func(v *IndexRuleTag) []IndexRuleTagKeyValue {
		if v == nil {
			return nil
		}
		return v.KeyValues
	}).(IndexRuleTagKeyValueArrayOutput)
}

type IndexRuleTagKeyValue struct {
	Key   string                     `pulumi:"key"`
	Value *IndexRuleTagKeyValueValue `pulumi:"value"`
}

// IndexRuleTagKeyValueInput is an input type that accepts IndexRuleTagKeyValueArgs and IndexRuleTagKeyValueOutput values.
// You can construct a concrete instance of `IndexRuleTagKeyValueInput` via:
//
//	IndexRuleTagKeyValueArgs{...}
type IndexRuleTagKeyValueInput interface {
	pulumi.Input

	ToIndexRuleTagKeyValueOutput() IndexRuleTagKeyValueOutput
	ToIndexRuleTagKeyValueOutputWithContext(context.Context) IndexRuleTagKeyValueOutput
}

type IndexRuleTagKeyValueArgs struct {
	Key   pulumi.StringInput                `pulumi:"key"`
	Value IndexRuleTagKeyValueValuePtrInput `pulumi:"value"`
}

func (IndexRuleTagKeyValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexRuleTagKeyValue)(nil)).Elem()
}

func (i IndexRuleTagKeyValueArgs) ToIndexRuleTagKeyValueOutput() IndexRuleTagKeyValueOutput {
	return i.ToIndexRuleTagKeyValueOutputWithContext(context.Background())
}

func (i IndexRuleTagKeyValueArgs) ToIndexRuleTagKeyValueOutputWithContext(ctx context.Context) IndexRuleTagKeyValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexRuleTagKeyValueOutput)
}

// IndexRuleTagKeyValueArrayInput is an input type that accepts IndexRuleTagKeyValueArray and IndexRuleTagKeyValueArrayOutput values.
// You can construct a concrete instance of `IndexRuleTagKeyValueArrayInput` via:
//
//	IndexRuleTagKeyValueArray{ IndexRuleTagKeyValueArgs{...} }
type IndexRuleTagKeyValueArrayInput interface {
	pulumi.Input

	ToIndexRuleTagKeyValueArrayOutput() IndexRuleTagKeyValueArrayOutput
	ToIndexRuleTagKeyValueArrayOutputWithContext(context.Context) IndexRuleTagKeyValueArrayOutput
}

type IndexRuleTagKeyValueArray []IndexRuleTagKeyValueInput

func (IndexRuleTagKeyValueArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IndexRuleTagKeyValue)(nil)).Elem()
}

func (i IndexRuleTagKeyValueArray) ToIndexRuleTagKeyValueArrayOutput() IndexRuleTagKeyValueArrayOutput {
	return i.ToIndexRuleTagKeyValueArrayOutputWithContext(context.Background())
}

func (i IndexRuleTagKeyValueArray) ToIndexRuleTagKeyValueArrayOutputWithContext(ctx context.Context) IndexRuleTagKeyValueArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexRuleTagKeyValueArrayOutput)
}

type IndexRuleTagKeyValueOutput struct{ *pulumi.OutputState }

func (IndexRuleTagKeyValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexRuleTagKeyValue)(nil)).Elem()
}

func (o IndexRuleTagKeyValueOutput) ToIndexRuleTagKeyValueOutput() IndexRuleTagKeyValueOutput {
	return o
}

func (o IndexRuleTagKeyValueOutput) ToIndexRuleTagKeyValueOutputWithContext(ctx context.Context) IndexRuleTagKeyValueOutput {
	return o
}

func (o IndexRuleTagKeyValueOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v IndexRuleTagKeyValue) string { return v.Key }).(pulumi.StringOutput)
}

func (o IndexRuleTagKeyValueOutput) Value() IndexRuleTagKeyValueValuePtrOutput {
	return o.ApplyT(func(v IndexRuleTagKeyValue) *IndexRuleTagKeyValueValue { return v.Value }).(IndexRuleTagKeyValueValuePtrOutput)
}

type IndexRuleTagKeyValueArrayOutput struct{ *pulumi.OutputState }

func (IndexRuleTagKeyValueArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IndexRuleTagKeyValue)(nil)).Elem()
}

func (o IndexRuleTagKeyValueArrayOutput) ToIndexRuleTagKeyValueArrayOutput() IndexRuleTagKeyValueArrayOutput {
	return o
}

func (o IndexRuleTagKeyValueArrayOutput) ToIndexRuleTagKeyValueArrayOutputWithContext(ctx context.Context) IndexRuleTagKeyValueArrayOutput {
	return o
}

func (o IndexRuleTagKeyValueArrayOutput) Index(i pulumi.IntInput) IndexRuleTagKeyValueOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IndexRuleTagKeyValue {
		return vs[0].([]IndexRuleTagKeyValue)[vs[1].(int)]
	}).(IndexRuleTagKeyValueOutput)
}

type IndexRuleTagKeyValueValue struct {
	ContainZH *bool   `pulumi:"containZH"`
	SqlFlag   *bool   `pulumi:"sqlFlag"`
	Tokenizer *string `pulumi:"tokenizer"`
	Type      string  `pulumi:"type"`
}

// IndexRuleTagKeyValueValueInput is an input type that accepts IndexRuleTagKeyValueValueArgs and IndexRuleTagKeyValueValueOutput values.
// You can construct a concrete instance of `IndexRuleTagKeyValueValueInput` via:
//
//	IndexRuleTagKeyValueValueArgs{...}
type IndexRuleTagKeyValueValueInput interface {
	pulumi.Input

	ToIndexRuleTagKeyValueValueOutput() IndexRuleTagKeyValueValueOutput
	ToIndexRuleTagKeyValueValueOutputWithContext(context.Context) IndexRuleTagKeyValueValueOutput
}

type IndexRuleTagKeyValueValueArgs struct {
	ContainZH pulumi.BoolPtrInput   `pulumi:"containZH"`
	SqlFlag   pulumi.BoolPtrInput   `pulumi:"sqlFlag"`
	Tokenizer pulumi.StringPtrInput `pulumi:"tokenizer"`
	Type      pulumi.StringInput    `pulumi:"type"`
}

func (IndexRuleTagKeyValueValueArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexRuleTagKeyValueValue)(nil)).Elem()
}

func (i IndexRuleTagKeyValueValueArgs) ToIndexRuleTagKeyValueValueOutput() IndexRuleTagKeyValueValueOutput {
	return i.ToIndexRuleTagKeyValueValueOutputWithContext(context.Background())
}

func (i IndexRuleTagKeyValueValueArgs) ToIndexRuleTagKeyValueValueOutputWithContext(ctx context.Context) IndexRuleTagKeyValueValueOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexRuleTagKeyValueValueOutput)
}

func (i IndexRuleTagKeyValueValueArgs) ToIndexRuleTagKeyValueValuePtrOutput() IndexRuleTagKeyValueValuePtrOutput {
	return i.ToIndexRuleTagKeyValueValuePtrOutputWithContext(context.Background())
}

func (i IndexRuleTagKeyValueValueArgs) ToIndexRuleTagKeyValueValuePtrOutputWithContext(ctx context.Context) IndexRuleTagKeyValueValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexRuleTagKeyValueValueOutput).ToIndexRuleTagKeyValueValuePtrOutputWithContext(ctx)
}

// IndexRuleTagKeyValueValuePtrInput is an input type that accepts IndexRuleTagKeyValueValueArgs, IndexRuleTagKeyValueValuePtr and IndexRuleTagKeyValueValuePtrOutput values.
// You can construct a concrete instance of `IndexRuleTagKeyValueValuePtrInput` via:
//
//	        IndexRuleTagKeyValueValueArgs{...}
//
//	or:
//
//	        nil
type IndexRuleTagKeyValueValuePtrInput interface {
	pulumi.Input

	ToIndexRuleTagKeyValueValuePtrOutput() IndexRuleTagKeyValueValuePtrOutput
	ToIndexRuleTagKeyValueValuePtrOutputWithContext(context.Context) IndexRuleTagKeyValueValuePtrOutput
}

type indexRuleTagKeyValueValuePtrType IndexRuleTagKeyValueValueArgs

func IndexRuleTagKeyValueValuePtr(v *IndexRuleTagKeyValueValueArgs) IndexRuleTagKeyValueValuePtrInput {
	return (*indexRuleTagKeyValueValuePtrType)(v)
}

func (*indexRuleTagKeyValueValuePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexRuleTagKeyValueValue)(nil)).Elem()
}

func (i *indexRuleTagKeyValueValuePtrType) ToIndexRuleTagKeyValueValuePtrOutput() IndexRuleTagKeyValueValuePtrOutput {
	return i.ToIndexRuleTagKeyValueValuePtrOutputWithContext(context.Background())
}

func (i *indexRuleTagKeyValueValuePtrType) ToIndexRuleTagKeyValueValuePtrOutputWithContext(ctx context.Context) IndexRuleTagKeyValueValuePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IndexRuleTagKeyValueValuePtrOutput)
}

type IndexRuleTagKeyValueValueOutput struct{ *pulumi.OutputState }

func (IndexRuleTagKeyValueValueOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IndexRuleTagKeyValueValue)(nil)).Elem()
}

func (o IndexRuleTagKeyValueValueOutput) ToIndexRuleTagKeyValueValueOutput() IndexRuleTagKeyValueValueOutput {
	return o
}

func (o IndexRuleTagKeyValueValueOutput) ToIndexRuleTagKeyValueValueOutputWithContext(ctx context.Context) IndexRuleTagKeyValueValueOutput {
	return o
}

func (o IndexRuleTagKeyValueValueOutput) ToIndexRuleTagKeyValueValuePtrOutput() IndexRuleTagKeyValueValuePtrOutput {
	return o.ToIndexRuleTagKeyValueValuePtrOutputWithContext(context.Background())
}

func (o IndexRuleTagKeyValueValueOutput) ToIndexRuleTagKeyValueValuePtrOutputWithContext(ctx context.Context) IndexRuleTagKeyValueValuePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v IndexRuleTagKeyValueValue) *IndexRuleTagKeyValueValue {
		return &v
	}).(IndexRuleTagKeyValueValuePtrOutput)
}

func (o IndexRuleTagKeyValueValueOutput) ContainZH() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IndexRuleTagKeyValueValue) *bool { return v.ContainZH }).(pulumi.BoolPtrOutput)
}

func (o IndexRuleTagKeyValueValueOutput) SqlFlag() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IndexRuleTagKeyValueValue) *bool { return v.SqlFlag }).(pulumi.BoolPtrOutput)
}

func (o IndexRuleTagKeyValueValueOutput) Tokenizer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IndexRuleTagKeyValueValue) *string { return v.Tokenizer }).(pulumi.StringPtrOutput)
}

func (o IndexRuleTagKeyValueValueOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v IndexRuleTagKeyValueValue) string { return v.Type }).(pulumi.StringOutput)
}

type IndexRuleTagKeyValueValuePtrOutput struct{ *pulumi.OutputState }

func (IndexRuleTagKeyValueValuePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IndexRuleTagKeyValueValue)(nil)).Elem()
}

func (o IndexRuleTagKeyValueValuePtrOutput) ToIndexRuleTagKeyValueValuePtrOutput() IndexRuleTagKeyValueValuePtrOutput {
	return o
}

func (o IndexRuleTagKeyValueValuePtrOutput) ToIndexRuleTagKeyValueValuePtrOutputWithContext(ctx context.Context) IndexRuleTagKeyValueValuePtrOutput {
	return o
}

func (o IndexRuleTagKeyValueValuePtrOutput) Elem() IndexRuleTagKeyValueValueOutput {
	return o.ApplyT(func(v *IndexRuleTagKeyValueValue) IndexRuleTagKeyValueValue {
		if v != nil {
			return *v
		}
		var ret IndexRuleTagKeyValueValue
		return ret
	}).(IndexRuleTagKeyValueValueOutput)
}

func (o IndexRuleTagKeyValueValuePtrOutput) ContainZH() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IndexRuleTagKeyValueValue) *bool {
		if v == nil {
			return nil
		}
		return v.ContainZH
	}).(pulumi.BoolPtrOutput)
}

func (o IndexRuleTagKeyValueValuePtrOutput) SqlFlag() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *IndexRuleTagKeyValueValue) *bool {
		if v == nil {
			return nil
		}
		return v.SqlFlag
	}).(pulumi.BoolPtrOutput)
}

func (o IndexRuleTagKeyValueValuePtrOutput) Tokenizer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IndexRuleTagKeyValueValue) *string {
		if v == nil {
			return nil
		}
		return v.Tokenizer
	}).(pulumi.StringPtrOutput)
}

func (o IndexRuleTagKeyValueValuePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *IndexRuleTagKeyValueValue) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

type KafkaRechargeLogRechargeRule struct {
	DefaultTimeSrc    *int     `pulumi:"defaultTimeSrc"`
	DefaultTimeSwitch bool     `pulumi:"defaultTimeSwitch"`
	EncodingFormat    int      `pulumi:"encodingFormat"`
	Keys              []string `pulumi:"keys"`
	LogRegex          *string  `pulumi:"logRegex"`
	Metadatas         []string `pulumi:"metadatas"`
	RechargeType      string   `pulumi:"rechargeType"`
	TimeFormat        *string  `pulumi:"timeFormat"`
	TimeKey           *string  `pulumi:"timeKey"`
	TimeRegex         *string  `pulumi:"timeRegex"`
	TimeZone          *string  `pulumi:"timeZone"`
	UnMatchLogKey     *string  `pulumi:"unMatchLogKey"`
	UnMatchLogSwitch  *bool    `pulumi:"unMatchLogSwitch"`
	UnMatchLogTimeSrc *int     `pulumi:"unMatchLogTimeSrc"`
}

// KafkaRechargeLogRechargeRuleInput is an input type that accepts KafkaRechargeLogRechargeRuleArgs and KafkaRechargeLogRechargeRuleOutput values.
// You can construct a concrete instance of `KafkaRechargeLogRechargeRuleInput` via:
//
//	KafkaRechargeLogRechargeRuleArgs{...}
type KafkaRechargeLogRechargeRuleInput interface {
	pulumi.Input

	ToKafkaRechargeLogRechargeRuleOutput() KafkaRechargeLogRechargeRuleOutput
	ToKafkaRechargeLogRechargeRuleOutputWithContext(context.Context) KafkaRechargeLogRechargeRuleOutput
}

type KafkaRechargeLogRechargeRuleArgs struct {
	DefaultTimeSrc    pulumi.IntPtrInput      `pulumi:"defaultTimeSrc"`
	DefaultTimeSwitch pulumi.BoolInput        `pulumi:"defaultTimeSwitch"`
	EncodingFormat    pulumi.IntInput         `pulumi:"encodingFormat"`
	Keys              pulumi.StringArrayInput `pulumi:"keys"`
	LogRegex          pulumi.StringPtrInput   `pulumi:"logRegex"`
	Metadatas         pulumi.StringArrayInput `pulumi:"metadatas"`
	RechargeType      pulumi.StringInput      `pulumi:"rechargeType"`
	TimeFormat        pulumi.StringPtrInput   `pulumi:"timeFormat"`
	TimeKey           pulumi.StringPtrInput   `pulumi:"timeKey"`
	TimeRegex         pulumi.StringPtrInput   `pulumi:"timeRegex"`
	TimeZone          pulumi.StringPtrInput   `pulumi:"timeZone"`
	UnMatchLogKey     pulumi.StringPtrInput   `pulumi:"unMatchLogKey"`
	UnMatchLogSwitch  pulumi.BoolPtrInput     `pulumi:"unMatchLogSwitch"`
	UnMatchLogTimeSrc pulumi.IntPtrInput      `pulumi:"unMatchLogTimeSrc"`
}

func (KafkaRechargeLogRechargeRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaRechargeLogRechargeRule)(nil)).Elem()
}

func (i KafkaRechargeLogRechargeRuleArgs) ToKafkaRechargeLogRechargeRuleOutput() KafkaRechargeLogRechargeRuleOutput {
	return i.ToKafkaRechargeLogRechargeRuleOutputWithContext(context.Background())
}

func (i KafkaRechargeLogRechargeRuleArgs) ToKafkaRechargeLogRechargeRuleOutputWithContext(ctx context.Context) KafkaRechargeLogRechargeRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaRechargeLogRechargeRuleOutput)
}

func (i KafkaRechargeLogRechargeRuleArgs) ToKafkaRechargeLogRechargeRulePtrOutput() KafkaRechargeLogRechargeRulePtrOutput {
	return i.ToKafkaRechargeLogRechargeRulePtrOutputWithContext(context.Background())
}

func (i KafkaRechargeLogRechargeRuleArgs) ToKafkaRechargeLogRechargeRulePtrOutputWithContext(ctx context.Context) KafkaRechargeLogRechargeRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaRechargeLogRechargeRuleOutput).ToKafkaRechargeLogRechargeRulePtrOutputWithContext(ctx)
}

// KafkaRechargeLogRechargeRulePtrInput is an input type that accepts KafkaRechargeLogRechargeRuleArgs, KafkaRechargeLogRechargeRulePtr and KafkaRechargeLogRechargeRulePtrOutput values.
// You can construct a concrete instance of `KafkaRechargeLogRechargeRulePtrInput` via:
//
//	        KafkaRechargeLogRechargeRuleArgs{...}
//
//	or:
//
//	        nil
type KafkaRechargeLogRechargeRulePtrInput interface {
	pulumi.Input

	ToKafkaRechargeLogRechargeRulePtrOutput() KafkaRechargeLogRechargeRulePtrOutput
	ToKafkaRechargeLogRechargeRulePtrOutputWithContext(context.Context) KafkaRechargeLogRechargeRulePtrOutput
}

type kafkaRechargeLogRechargeRulePtrType KafkaRechargeLogRechargeRuleArgs

func KafkaRechargeLogRechargeRulePtr(v *KafkaRechargeLogRechargeRuleArgs) KafkaRechargeLogRechargeRulePtrInput {
	return (*kafkaRechargeLogRechargeRulePtrType)(v)
}

func (*kafkaRechargeLogRechargeRulePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaRechargeLogRechargeRule)(nil)).Elem()
}

func (i *kafkaRechargeLogRechargeRulePtrType) ToKafkaRechargeLogRechargeRulePtrOutput() KafkaRechargeLogRechargeRulePtrOutput {
	return i.ToKafkaRechargeLogRechargeRulePtrOutputWithContext(context.Background())
}

func (i *kafkaRechargeLogRechargeRulePtrType) ToKafkaRechargeLogRechargeRulePtrOutputWithContext(ctx context.Context) KafkaRechargeLogRechargeRulePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaRechargeLogRechargeRulePtrOutput)
}

type KafkaRechargeLogRechargeRuleOutput struct{ *pulumi.OutputState }

func (KafkaRechargeLogRechargeRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaRechargeLogRechargeRule)(nil)).Elem()
}

func (o KafkaRechargeLogRechargeRuleOutput) ToKafkaRechargeLogRechargeRuleOutput() KafkaRechargeLogRechargeRuleOutput {
	return o
}

func (o KafkaRechargeLogRechargeRuleOutput) ToKafkaRechargeLogRechargeRuleOutputWithContext(ctx context.Context) KafkaRechargeLogRechargeRuleOutput {
	return o
}

func (o KafkaRechargeLogRechargeRuleOutput) ToKafkaRechargeLogRechargeRulePtrOutput() KafkaRechargeLogRechargeRulePtrOutput {
	return o.ToKafkaRechargeLogRechargeRulePtrOutputWithContext(context.Background())
}

func (o KafkaRechargeLogRechargeRuleOutput) ToKafkaRechargeLogRechargeRulePtrOutputWithContext(ctx context.Context) KafkaRechargeLogRechargeRulePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaRechargeLogRechargeRule) *KafkaRechargeLogRechargeRule {
		return &v
	}).(KafkaRechargeLogRechargeRulePtrOutput)
}

func (o KafkaRechargeLogRechargeRuleOutput) DefaultTimeSrc() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaRechargeLogRechargeRule) *int { return v.DefaultTimeSrc }).(pulumi.IntPtrOutput)
}

func (o KafkaRechargeLogRechargeRuleOutput) DefaultTimeSwitch() pulumi.BoolOutput {
	return o.ApplyT(func(v KafkaRechargeLogRechargeRule) bool { return v.DefaultTimeSwitch }).(pulumi.BoolOutput)
}

func (o KafkaRechargeLogRechargeRuleOutput) EncodingFormat() pulumi.IntOutput {
	return o.ApplyT(func(v KafkaRechargeLogRechargeRule) int { return v.EncodingFormat }).(pulumi.IntOutput)
}

func (o KafkaRechargeLogRechargeRuleOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaRechargeLogRechargeRule) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

func (o KafkaRechargeLogRechargeRuleOutput) LogRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaRechargeLogRechargeRule) *string { return v.LogRegex }).(pulumi.StringPtrOutput)
}

func (o KafkaRechargeLogRechargeRuleOutput) Metadatas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KafkaRechargeLogRechargeRule) []string { return v.Metadatas }).(pulumi.StringArrayOutput)
}

func (o KafkaRechargeLogRechargeRuleOutput) RechargeType() pulumi.StringOutput {
	return o.ApplyT(func(v KafkaRechargeLogRechargeRule) string { return v.RechargeType }).(pulumi.StringOutput)
}

func (o KafkaRechargeLogRechargeRuleOutput) TimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaRechargeLogRechargeRule) *string { return v.TimeFormat }).(pulumi.StringPtrOutput)
}

func (o KafkaRechargeLogRechargeRuleOutput) TimeKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaRechargeLogRechargeRule) *string { return v.TimeKey }).(pulumi.StringPtrOutput)
}

func (o KafkaRechargeLogRechargeRuleOutput) TimeRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaRechargeLogRechargeRule) *string { return v.TimeRegex }).(pulumi.StringPtrOutput)
}

func (o KafkaRechargeLogRechargeRuleOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaRechargeLogRechargeRule) *string { return v.TimeZone }).(pulumi.StringPtrOutput)
}

func (o KafkaRechargeLogRechargeRuleOutput) UnMatchLogKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaRechargeLogRechargeRule) *string { return v.UnMatchLogKey }).(pulumi.StringPtrOutput)
}

func (o KafkaRechargeLogRechargeRuleOutput) UnMatchLogSwitch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KafkaRechargeLogRechargeRule) *bool { return v.UnMatchLogSwitch }).(pulumi.BoolPtrOutput)
}

func (o KafkaRechargeLogRechargeRuleOutput) UnMatchLogTimeSrc() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KafkaRechargeLogRechargeRule) *int { return v.UnMatchLogTimeSrc }).(pulumi.IntPtrOutput)
}

type KafkaRechargeLogRechargeRulePtrOutput struct{ *pulumi.OutputState }

func (KafkaRechargeLogRechargeRulePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaRechargeLogRechargeRule)(nil)).Elem()
}

func (o KafkaRechargeLogRechargeRulePtrOutput) ToKafkaRechargeLogRechargeRulePtrOutput() KafkaRechargeLogRechargeRulePtrOutput {
	return o
}

func (o KafkaRechargeLogRechargeRulePtrOutput) ToKafkaRechargeLogRechargeRulePtrOutputWithContext(ctx context.Context) KafkaRechargeLogRechargeRulePtrOutput {
	return o
}

func (o KafkaRechargeLogRechargeRulePtrOutput) Elem() KafkaRechargeLogRechargeRuleOutput {
	return o.ApplyT(func(v *KafkaRechargeLogRechargeRule) KafkaRechargeLogRechargeRule {
		if v != nil {
			return *v
		}
		var ret KafkaRechargeLogRechargeRule
		return ret
	}).(KafkaRechargeLogRechargeRuleOutput)
}

func (o KafkaRechargeLogRechargeRulePtrOutput) DefaultTimeSrc() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaRechargeLogRechargeRule) *int {
		if v == nil {
			return nil
		}
		return v.DefaultTimeSrc
	}).(pulumi.IntPtrOutput)
}

func (o KafkaRechargeLogRechargeRulePtrOutput) DefaultTimeSwitch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaRechargeLogRechargeRule) *bool {
		if v == nil {
			return nil
		}
		return &v.DefaultTimeSwitch
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaRechargeLogRechargeRulePtrOutput) EncodingFormat() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaRechargeLogRechargeRule) *int {
		if v == nil {
			return nil
		}
		return &v.EncodingFormat
	}).(pulumi.IntPtrOutput)
}

func (o KafkaRechargeLogRechargeRulePtrOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaRechargeLogRechargeRule) []string {
		if v == nil {
			return nil
		}
		return v.Keys
	}).(pulumi.StringArrayOutput)
}

func (o KafkaRechargeLogRechargeRulePtrOutput) LogRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaRechargeLogRechargeRule) *string {
		if v == nil {
			return nil
		}
		return v.LogRegex
	}).(pulumi.StringPtrOutput)
}

func (o KafkaRechargeLogRechargeRulePtrOutput) Metadatas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KafkaRechargeLogRechargeRule) []string {
		if v == nil {
			return nil
		}
		return v.Metadatas
	}).(pulumi.StringArrayOutput)
}

func (o KafkaRechargeLogRechargeRulePtrOutput) RechargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaRechargeLogRechargeRule) *string {
		if v == nil {
			return nil
		}
		return &v.RechargeType
	}).(pulumi.StringPtrOutput)
}

func (o KafkaRechargeLogRechargeRulePtrOutput) TimeFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaRechargeLogRechargeRule) *string {
		if v == nil {
			return nil
		}
		return v.TimeFormat
	}).(pulumi.StringPtrOutput)
}

func (o KafkaRechargeLogRechargeRulePtrOutput) TimeKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaRechargeLogRechargeRule) *string {
		if v == nil {
			return nil
		}
		return v.TimeKey
	}).(pulumi.StringPtrOutput)
}

func (o KafkaRechargeLogRechargeRulePtrOutput) TimeRegex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaRechargeLogRechargeRule) *string {
		if v == nil {
			return nil
		}
		return v.TimeRegex
	}).(pulumi.StringPtrOutput)
}

func (o KafkaRechargeLogRechargeRulePtrOutput) TimeZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaRechargeLogRechargeRule) *string {
		if v == nil {
			return nil
		}
		return v.TimeZone
	}).(pulumi.StringPtrOutput)
}

func (o KafkaRechargeLogRechargeRulePtrOutput) UnMatchLogKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaRechargeLogRechargeRule) *string {
		if v == nil {
			return nil
		}
		return v.UnMatchLogKey
	}).(pulumi.StringPtrOutput)
}

func (o KafkaRechargeLogRechargeRulePtrOutput) UnMatchLogSwitch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KafkaRechargeLogRechargeRule) *bool {
		if v == nil {
			return nil
		}
		return v.UnMatchLogSwitch
	}).(pulumi.BoolPtrOutput)
}

func (o KafkaRechargeLogRechargeRulePtrOutput) UnMatchLogTimeSrc() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KafkaRechargeLogRechargeRule) *int {
		if v == nil {
			return nil
		}
		return v.UnMatchLogTimeSrc
	}).(pulumi.IntPtrOutput)
}

type KafkaRechargeProtocol struct {
	Mechanism *string `pulumi:"mechanism"`
	Password  *string `pulumi:"password"`
	Protocol  *string `pulumi:"protocol"`
	UserName  *string `pulumi:"userName"`
}

// KafkaRechargeProtocolInput is an input type that accepts KafkaRechargeProtocolArgs and KafkaRechargeProtocolOutput values.
// You can construct a concrete instance of `KafkaRechargeProtocolInput` via:
//
//	KafkaRechargeProtocolArgs{...}
type KafkaRechargeProtocolInput interface {
	pulumi.Input

	ToKafkaRechargeProtocolOutput() KafkaRechargeProtocolOutput
	ToKafkaRechargeProtocolOutputWithContext(context.Context) KafkaRechargeProtocolOutput
}

type KafkaRechargeProtocolArgs struct {
	Mechanism pulumi.StringPtrInput `pulumi:"mechanism"`
	Password  pulumi.StringPtrInput `pulumi:"password"`
	Protocol  pulumi.StringPtrInput `pulumi:"protocol"`
	UserName  pulumi.StringPtrInput `pulumi:"userName"`
}

func (KafkaRechargeProtocolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaRechargeProtocol)(nil)).Elem()
}

func (i KafkaRechargeProtocolArgs) ToKafkaRechargeProtocolOutput() KafkaRechargeProtocolOutput {
	return i.ToKafkaRechargeProtocolOutputWithContext(context.Background())
}

func (i KafkaRechargeProtocolArgs) ToKafkaRechargeProtocolOutputWithContext(ctx context.Context) KafkaRechargeProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaRechargeProtocolOutput)
}

func (i KafkaRechargeProtocolArgs) ToKafkaRechargeProtocolPtrOutput() KafkaRechargeProtocolPtrOutput {
	return i.ToKafkaRechargeProtocolPtrOutputWithContext(context.Background())
}

func (i KafkaRechargeProtocolArgs) ToKafkaRechargeProtocolPtrOutputWithContext(ctx context.Context) KafkaRechargeProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaRechargeProtocolOutput).ToKafkaRechargeProtocolPtrOutputWithContext(ctx)
}

// KafkaRechargeProtocolPtrInput is an input type that accepts KafkaRechargeProtocolArgs, KafkaRechargeProtocolPtr and KafkaRechargeProtocolPtrOutput values.
// You can construct a concrete instance of `KafkaRechargeProtocolPtrInput` via:
//
//	        KafkaRechargeProtocolArgs{...}
//
//	or:
//
//	        nil
type KafkaRechargeProtocolPtrInput interface {
	pulumi.Input

	ToKafkaRechargeProtocolPtrOutput() KafkaRechargeProtocolPtrOutput
	ToKafkaRechargeProtocolPtrOutputWithContext(context.Context) KafkaRechargeProtocolPtrOutput
}

type kafkaRechargeProtocolPtrType KafkaRechargeProtocolArgs

func KafkaRechargeProtocolPtr(v *KafkaRechargeProtocolArgs) KafkaRechargeProtocolPtrInput {
	return (*kafkaRechargeProtocolPtrType)(v)
}

func (*kafkaRechargeProtocolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaRechargeProtocol)(nil)).Elem()
}

func (i *kafkaRechargeProtocolPtrType) ToKafkaRechargeProtocolPtrOutput() KafkaRechargeProtocolPtrOutput {
	return i.ToKafkaRechargeProtocolPtrOutputWithContext(context.Background())
}

func (i *kafkaRechargeProtocolPtrType) ToKafkaRechargeProtocolPtrOutputWithContext(ctx context.Context) KafkaRechargeProtocolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KafkaRechargeProtocolPtrOutput)
}

type KafkaRechargeProtocolOutput struct{ *pulumi.OutputState }

func (KafkaRechargeProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KafkaRechargeProtocol)(nil)).Elem()
}

func (o KafkaRechargeProtocolOutput) ToKafkaRechargeProtocolOutput() KafkaRechargeProtocolOutput {
	return o
}

func (o KafkaRechargeProtocolOutput) ToKafkaRechargeProtocolOutputWithContext(ctx context.Context) KafkaRechargeProtocolOutput {
	return o
}

func (o KafkaRechargeProtocolOutput) ToKafkaRechargeProtocolPtrOutput() KafkaRechargeProtocolPtrOutput {
	return o.ToKafkaRechargeProtocolPtrOutputWithContext(context.Background())
}

func (o KafkaRechargeProtocolOutput) ToKafkaRechargeProtocolPtrOutputWithContext(ctx context.Context) KafkaRechargeProtocolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KafkaRechargeProtocol) *KafkaRechargeProtocol {
		return &v
	}).(KafkaRechargeProtocolPtrOutput)
}

func (o KafkaRechargeProtocolOutput) Mechanism() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaRechargeProtocol) *string { return v.Mechanism }).(pulumi.StringPtrOutput)
}

func (o KafkaRechargeProtocolOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaRechargeProtocol) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o KafkaRechargeProtocolOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaRechargeProtocol) *string { return v.Protocol }).(pulumi.StringPtrOutput)
}

func (o KafkaRechargeProtocolOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KafkaRechargeProtocol) *string { return v.UserName }).(pulumi.StringPtrOutput)
}

type KafkaRechargeProtocolPtrOutput struct{ *pulumi.OutputState }

func (KafkaRechargeProtocolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KafkaRechargeProtocol)(nil)).Elem()
}

func (o KafkaRechargeProtocolPtrOutput) ToKafkaRechargeProtocolPtrOutput() KafkaRechargeProtocolPtrOutput {
	return o
}

func (o KafkaRechargeProtocolPtrOutput) ToKafkaRechargeProtocolPtrOutputWithContext(ctx context.Context) KafkaRechargeProtocolPtrOutput {
	return o
}

func (o KafkaRechargeProtocolPtrOutput) Elem() KafkaRechargeProtocolOutput {
	return o.ApplyT(func(v *KafkaRechargeProtocol) KafkaRechargeProtocol {
		if v != nil {
			return *v
		}
		var ret KafkaRechargeProtocol
		return ret
	}).(KafkaRechargeProtocolOutput)
}

func (o KafkaRechargeProtocolPtrOutput) Mechanism() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaRechargeProtocol) *string {
		if v == nil {
			return nil
		}
		return v.Mechanism
	}).(pulumi.StringPtrOutput)
}

func (o KafkaRechargeProtocolPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaRechargeProtocol) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o KafkaRechargeProtocolPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaRechargeProtocol) *string {
		if v == nil {
			return nil
		}
		return v.Protocol
	}).(pulumi.StringPtrOutput)
}

func (o KafkaRechargeProtocolPtrOutput) UserName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KafkaRechargeProtocol) *string {
		if v == nil {
			return nil
		}
		return v.UserName
	}).(pulumi.StringPtrOutput)
}

type MachineGroupMachineGroupType struct {
	Type   string   `pulumi:"type"`
	Values []string `pulumi:"values"`
}

// MachineGroupMachineGroupTypeInput is an input type that accepts MachineGroupMachineGroupTypeArgs and MachineGroupMachineGroupTypeOutput values.
// You can construct a concrete instance of `MachineGroupMachineGroupTypeInput` via:
//
//	MachineGroupMachineGroupTypeArgs{...}
type MachineGroupMachineGroupTypeInput interface {
	pulumi.Input

	ToMachineGroupMachineGroupTypeOutput() MachineGroupMachineGroupTypeOutput
	ToMachineGroupMachineGroupTypeOutputWithContext(context.Context) MachineGroupMachineGroupTypeOutput
}

type MachineGroupMachineGroupTypeArgs struct {
	Type   pulumi.StringInput      `pulumi:"type"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (MachineGroupMachineGroupTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineGroupMachineGroupType)(nil)).Elem()
}

func (i MachineGroupMachineGroupTypeArgs) ToMachineGroupMachineGroupTypeOutput() MachineGroupMachineGroupTypeOutput {
	return i.ToMachineGroupMachineGroupTypeOutputWithContext(context.Background())
}

func (i MachineGroupMachineGroupTypeArgs) ToMachineGroupMachineGroupTypeOutputWithContext(ctx context.Context) MachineGroupMachineGroupTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineGroupMachineGroupTypeOutput)
}

func (i MachineGroupMachineGroupTypeArgs) ToMachineGroupMachineGroupTypePtrOutput() MachineGroupMachineGroupTypePtrOutput {
	return i.ToMachineGroupMachineGroupTypePtrOutputWithContext(context.Background())
}

func (i MachineGroupMachineGroupTypeArgs) ToMachineGroupMachineGroupTypePtrOutputWithContext(ctx context.Context) MachineGroupMachineGroupTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineGroupMachineGroupTypeOutput).ToMachineGroupMachineGroupTypePtrOutputWithContext(ctx)
}

// MachineGroupMachineGroupTypePtrInput is an input type that accepts MachineGroupMachineGroupTypeArgs, MachineGroupMachineGroupTypePtr and MachineGroupMachineGroupTypePtrOutput values.
// You can construct a concrete instance of `MachineGroupMachineGroupTypePtrInput` via:
//
//	        MachineGroupMachineGroupTypeArgs{...}
//
//	or:
//
//	        nil
type MachineGroupMachineGroupTypePtrInput interface {
	pulumi.Input

	ToMachineGroupMachineGroupTypePtrOutput() MachineGroupMachineGroupTypePtrOutput
	ToMachineGroupMachineGroupTypePtrOutputWithContext(context.Context) MachineGroupMachineGroupTypePtrOutput
}

type machineGroupMachineGroupTypePtrType MachineGroupMachineGroupTypeArgs

func MachineGroupMachineGroupTypePtr(v *MachineGroupMachineGroupTypeArgs) MachineGroupMachineGroupTypePtrInput {
	return (*machineGroupMachineGroupTypePtrType)(v)
}

func (*machineGroupMachineGroupTypePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineGroupMachineGroupType)(nil)).Elem()
}

func (i *machineGroupMachineGroupTypePtrType) ToMachineGroupMachineGroupTypePtrOutput() MachineGroupMachineGroupTypePtrOutput {
	return i.ToMachineGroupMachineGroupTypePtrOutputWithContext(context.Background())
}

func (i *machineGroupMachineGroupTypePtrType) ToMachineGroupMachineGroupTypePtrOutputWithContext(ctx context.Context) MachineGroupMachineGroupTypePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MachineGroupMachineGroupTypePtrOutput)
}

type MachineGroupMachineGroupTypeOutput struct{ *pulumi.OutputState }

func (MachineGroupMachineGroupTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MachineGroupMachineGroupType)(nil)).Elem()
}

func (o MachineGroupMachineGroupTypeOutput) ToMachineGroupMachineGroupTypeOutput() MachineGroupMachineGroupTypeOutput {
	return o
}

func (o MachineGroupMachineGroupTypeOutput) ToMachineGroupMachineGroupTypeOutputWithContext(ctx context.Context) MachineGroupMachineGroupTypeOutput {
	return o
}

func (o MachineGroupMachineGroupTypeOutput) ToMachineGroupMachineGroupTypePtrOutput() MachineGroupMachineGroupTypePtrOutput {
	return o.ToMachineGroupMachineGroupTypePtrOutputWithContext(context.Background())
}

func (o MachineGroupMachineGroupTypeOutput) ToMachineGroupMachineGroupTypePtrOutputWithContext(ctx context.Context) MachineGroupMachineGroupTypePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MachineGroupMachineGroupType) *MachineGroupMachineGroupType {
		return &v
	}).(MachineGroupMachineGroupTypePtrOutput)
}

func (o MachineGroupMachineGroupTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v MachineGroupMachineGroupType) string { return v.Type }).(pulumi.StringOutput)
}

func (o MachineGroupMachineGroupTypeOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MachineGroupMachineGroupType) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type MachineGroupMachineGroupTypePtrOutput struct{ *pulumi.OutputState }

func (MachineGroupMachineGroupTypePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MachineGroupMachineGroupType)(nil)).Elem()
}

func (o MachineGroupMachineGroupTypePtrOutput) ToMachineGroupMachineGroupTypePtrOutput() MachineGroupMachineGroupTypePtrOutput {
	return o
}

func (o MachineGroupMachineGroupTypePtrOutput) ToMachineGroupMachineGroupTypePtrOutputWithContext(ctx context.Context) MachineGroupMachineGroupTypePtrOutput {
	return o
}

func (o MachineGroupMachineGroupTypePtrOutput) Elem() MachineGroupMachineGroupTypeOutput {
	return o.ApplyT(func(v *MachineGroupMachineGroupType) MachineGroupMachineGroupType {
		if v != nil {
			return *v
		}
		var ret MachineGroupMachineGroupType
		return ret
	}).(MachineGroupMachineGroupTypeOutput)
}

func (o MachineGroupMachineGroupTypePtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MachineGroupMachineGroupType) *string {
		if v == nil {
			return nil
		}
		return &v.Type
	}).(pulumi.StringPtrOutput)
}

func (o MachineGroupMachineGroupTypePtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MachineGroupMachineGroupType) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ScheduledSqlDstResource struct {
	BizType    *int    `pulumi:"bizType"`
	MetricName *string `pulumi:"metricName"`
	Region     *string `pulumi:"region"`
	TopicId    string  `pulumi:"topicId"`
}

// ScheduledSqlDstResourceInput is an input type that accepts ScheduledSqlDstResourceArgs and ScheduledSqlDstResourceOutput values.
// You can construct a concrete instance of `ScheduledSqlDstResourceInput` via:
//
//	ScheduledSqlDstResourceArgs{...}
type ScheduledSqlDstResourceInput interface {
	pulumi.Input

	ToScheduledSqlDstResourceOutput() ScheduledSqlDstResourceOutput
	ToScheduledSqlDstResourceOutputWithContext(context.Context) ScheduledSqlDstResourceOutput
}

type ScheduledSqlDstResourceArgs struct {
	BizType    pulumi.IntPtrInput    `pulumi:"bizType"`
	MetricName pulumi.StringPtrInput `pulumi:"metricName"`
	Region     pulumi.StringPtrInput `pulumi:"region"`
	TopicId    pulumi.StringInput    `pulumi:"topicId"`
}

func (ScheduledSqlDstResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledSqlDstResource)(nil)).Elem()
}

func (i ScheduledSqlDstResourceArgs) ToScheduledSqlDstResourceOutput() ScheduledSqlDstResourceOutput {
	return i.ToScheduledSqlDstResourceOutputWithContext(context.Background())
}

func (i ScheduledSqlDstResourceArgs) ToScheduledSqlDstResourceOutputWithContext(ctx context.Context) ScheduledSqlDstResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledSqlDstResourceOutput)
}

func (i ScheduledSqlDstResourceArgs) ToScheduledSqlDstResourcePtrOutput() ScheduledSqlDstResourcePtrOutput {
	return i.ToScheduledSqlDstResourcePtrOutputWithContext(context.Background())
}

func (i ScheduledSqlDstResourceArgs) ToScheduledSqlDstResourcePtrOutputWithContext(ctx context.Context) ScheduledSqlDstResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledSqlDstResourceOutput).ToScheduledSqlDstResourcePtrOutputWithContext(ctx)
}

// ScheduledSqlDstResourcePtrInput is an input type that accepts ScheduledSqlDstResourceArgs, ScheduledSqlDstResourcePtr and ScheduledSqlDstResourcePtrOutput values.
// You can construct a concrete instance of `ScheduledSqlDstResourcePtrInput` via:
//
//	        ScheduledSqlDstResourceArgs{...}
//
//	or:
//
//	        nil
type ScheduledSqlDstResourcePtrInput interface {
	pulumi.Input

	ToScheduledSqlDstResourcePtrOutput() ScheduledSqlDstResourcePtrOutput
	ToScheduledSqlDstResourcePtrOutputWithContext(context.Context) ScheduledSqlDstResourcePtrOutput
}

type scheduledSqlDstResourcePtrType ScheduledSqlDstResourceArgs

func ScheduledSqlDstResourcePtr(v *ScheduledSqlDstResourceArgs) ScheduledSqlDstResourcePtrInput {
	return (*scheduledSqlDstResourcePtrType)(v)
}

func (*scheduledSqlDstResourcePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledSqlDstResource)(nil)).Elem()
}

func (i *scheduledSqlDstResourcePtrType) ToScheduledSqlDstResourcePtrOutput() ScheduledSqlDstResourcePtrOutput {
	return i.ToScheduledSqlDstResourcePtrOutputWithContext(context.Background())
}

func (i *scheduledSqlDstResourcePtrType) ToScheduledSqlDstResourcePtrOutputWithContext(ctx context.Context) ScheduledSqlDstResourcePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScheduledSqlDstResourcePtrOutput)
}

type ScheduledSqlDstResourceOutput struct{ *pulumi.OutputState }

func (ScheduledSqlDstResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScheduledSqlDstResource)(nil)).Elem()
}

func (o ScheduledSqlDstResourceOutput) ToScheduledSqlDstResourceOutput() ScheduledSqlDstResourceOutput {
	return o
}

func (o ScheduledSqlDstResourceOutput) ToScheduledSqlDstResourceOutputWithContext(ctx context.Context) ScheduledSqlDstResourceOutput {
	return o
}

func (o ScheduledSqlDstResourceOutput) ToScheduledSqlDstResourcePtrOutput() ScheduledSqlDstResourcePtrOutput {
	return o.ToScheduledSqlDstResourcePtrOutputWithContext(context.Background())
}

func (o ScheduledSqlDstResourceOutput) ToScheduledSqlDstResourcePtrOutputWithContext(ctx context.Context) ScheduledSqlDstResourcePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScheduledSqlDstResource) *ScheduledSqlDstResource {
		return &v
	}).(ScheduledSqlDstResourcePtrOutput)
}

func (o ScheduledSqlDstResourceOutput) BizType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScheduledSqlDstResource) *int { return v.BizType }).(pulumi.IntPtrOutput)
}

func (o ScheduledSqlDstResourceOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledSqlDstResource) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

func (o ScheduledSqlDstResourceOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScheduledSqlDstResource) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o ScheduledSqlDstResourceOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v ScheduledSqlDstResource) string { return v.TopicId }).(pulumi.StringOutput)
}

type ScheduledSqlDstResourcePtrOutput struct{ *pulumi.OutputState }

func (ScheduledSqlDstResourcePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScheduledSqlDstResource)(nil)).Elem()
}

func (o ScheduledSqlDstResourcePtrOutput) ToScheduledSqlDstResourcePtrOutput() ScheduledSqlDstResourcePtrOutput {
	return o
}

func (o ScheduledSqlDstResourcePtrOutput) ToScheduledSqlDstResourcePtrOutputWithContext(ctx context.Context) ScheduledSqlDstResourcePtrOutput {
	return o
}

func (o ScheduledSqlDstResourcePtrOutput) Elem() ScheduledSqlDstResourceOutput {
	return o.ApplyT(func(v *ScheduledSqlDstResource) ScheduledSqlDstResource {
		if v != nil {
			return *v
		}
		var ret ScheduledSqlDstResource
		return ret
	}).(ScheduledSqlDstResourceOutput)
}

func (o ScheduledSqlDstResourcePtrOutput) BizType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScheduledSqlDstResource) *int {
		if v == nil {
			return nil
		}
		return v.BizType
	}).(pulumi.IntPtrOutput)
}

func (o ScheduledSqlDstResourcePtrOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledSqlDstResource) *string {
		if v == nil {
			return nil
		}
		return v.MetricName
	}).(pulumi.StringPtrOutput)
}

func (o ScheduledSqlDstResourcePtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledSqlDstResource) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

func (o ScheduledSqlDstResourcePtrOutput) TopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScheduledSqlDstResource) *string {
		if v == nil {
			return nil
		}
		return &v.TopicId
	}).(pulumi.StringPtrOutput)
}

type GetMachineGroupConfigsConfig struct {
	ConfigId       string                                    `pulumi:"configId"`
	CreateTime     string                                    `pulumi:"createTime"`
	ExcludePaths   []GetMachineGroupConfigsConfigExcludePath `pulumi:"excludePaths"`
	ExtractRules   []GetMachineGroupConfigsConfigExtractRule `pulumi:"extractRules"`
	LogFormat      string                                    `pulumi:"logFormat"`
	LogType        string                                    `pulumi:"logType"`
	Name           string                                    `pulumi:"name"`
	Output         string                                    `pulumi:"output"`
	Path           string                                    `pulumi:"path"`
	UpdateTime     string                                    `pulumi:"updateTime"`
	UserDefineRule string                                    `pulumi:"userDefineRule"`
}

// GetMachineGroupConfigsConfigInput is an input type that accepts GetMachineGroupConfigsConfigArgs and GetMachineGroupConfigsConfigOutput values.
// You can construct a concrete instance of `GetMachineGroupConfigsConfigInput` via:
//
//	GetMachineGroupConfigsConfigArgs{...}
type GetMachineGroupConfigsConfigInput interface {
	pulumi.Input

	ToGetMachineGroupConfigsConfigOutput() GetMachineGroupConfigsConfigOutput
	ToGetMachineGroupConfigsConfigOutputWithContext(context.Context) GetMachineGroupConfigsConfigOutput
}

type GetMachineGroupConfigsConfigArgs struct {
	ConfigId       pulumi.StringInput                                `pulumi:"configId"`
	CreateTime     pulumi.StringInput                                `pulumi:"createTime"`
	ExcludePaths   GetMachineGroupConfigsConfigExcludePathArrayInput `pulumi:"excludePaths"`
	ExtractRules   GetMachineGroupConfigsConfigExtractRuleArrayInput `pulumi:"extractRules"`
	LogFormat      pulumi.StringInput                                `pulumi:"logFormat"`
	LogType        pulumi.StringInput                                `pulumi:"logType"`
	Name           pulumi.StringInput                                `pulumi:"name"`
	Output         pulumi.StringInput                                `pulumi:"output"`
	Path           pulumi.StringInput                                `pulumi:"path"`
	UpdateTime     pulumi.StringInput                                `pulumi:"updateTime"`
	UserDefineRule pulumi.StringInput                                `pulumi:"userDefineRule"`
}

func (GetMachineGroupConfigsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMachineGroupConfigsConfig)(nil)).Elem()
}

func (i GetMachineGroupConfigsConfigArgs) ToGetMachineGroupConfigsConfigOutput() GetMachineGroupConfigsConfigOutput {
	return i.ToGetMachineGroupConfigsConfigOutputWithContext(context.Background())
}

func (i GetMachineGroupConfigsConfigArgs) ToGetMachineGroupConfigsConfigOutputWithContext(ctx context.Context) GetMachineGroupConfigsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMachineGroupConfigsConfigOutput)
}

// GetMachineGroupConfigsConfigArrayInput is an input type that accepts GetMachineGroupConfigsConfigArray and GetMachineGroupConfigsConfigArrayOutput values.
// You can construct a concrete instance of `GetMachineGroupConfigsConfigArrayInput` via:
//
//	GetMachineGroupConfigsConfigArray{ GetMachineGroupConfigsConfigArgs{...} }
type GetMachineGroupConfigsConfigArrayInput interface {
	pulumi.Input

	ToGetMachineGroupConfigsConfigArrayOutput() GetMachineGroupConfigsConfigArrayOutput
	ToGetMachineGroupConfigsConfigArrayOutputWithContext(context.Context) GetMachineGroupConfigsConfigArrayOutput
}

type GetMachineGroupConfigsConfigArray []GetMachineGroupConfigsConfigInput

func (GetMachineGroupConfigsConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMachineGroupConfigsConfig)(nil)).Elem()
}

func (i GetMachineGroupConfigsConfigArray) ToGetMachineGroupConfigsConfigArrayOutput() GetMachineGroupConfigsConfigArrayOutput {
	return i.ToGetMachineGroupConfigsConfigArrayOutputWithContext(context.Background())
}

func (i GetMachineGroupConfigsConfigArray) ToGetMachineGroupConfigsConfigArrayOutputWithContext(ctx context.Context) GetMachineGroupConfigsConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMachineGroupConfigsConfigArrayOutput)
}

type GetMachineGroupConfigsConfigOutput struct{ *pulumi.OutputState }

func (GetMachineGroupConfigsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMachineGroupConfigsConfig)(nil)).Elem()
}

func (o GetMachineGroupConfigsConfigOutput) ToGetMachineGroupConfigsConfigOutput() GetMachineGroupConfigsConfigOutput {
	return o
}

func (o GetMachineGroupConfigsConfigOutput) ToGetMachineGroupConfigsConfigOutputWithContext(ctx context.Context) GetMachineGroupConfigsConfigOutput {
	return o
}

func (o GetMachineGroupConfigsConfigOutput) ConfigId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfig) string { return v.ConfigId }).(pulumi.StringOutput)
}

func (o GetMachineGroupConfigsConfigOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfig) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o GetMachineGroupConfigsConfigOutput) ExcludePaths() GetMachineGroupConfigsConfigExcludePathArrayOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfig) []GetMachineGroupConfigsConfigExcludePath { return v.ExcludePaths }).(GetMachineGroupConfigsConfigExcludePathArrayOutput)
}

func (o GetMachineGroupConfigsConfigOutput) ExtractRules() GetMachineGroupConfigsConfigExtractRuleArrayOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfig) []GetMachineGroupConfigsConfigExtractRule { return v.ExtractRules }).(GetMachineGroupConfigsConfigExtractRuleArrayOutput)
}

func (o GetMachineGroupConfigsConfigOutput) LogFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfig) string { return v.LogFormat }).(pulumi.StringOutput)
}

func (o GetMachineGroupConfigsConfigOutput) LogType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfig) string { return v.LogType }).(pulumi.StringOutput)
}

func (o GetMachineGroupConfigsConfigOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfig) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetMachineGroupConfigsConfigOutput) Output() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfig) string { return v.Output }).(pulumi.StringOutput)
}

func (o GetMachineGroupConfigsConfigOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfig) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetMachineGroupConfigsConfigOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfig) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func (o GetMachineGroupConfigsConfigOutput) UserDefineRule() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfig) string { return v.UserDefineRule }).(pulumi.StringOutput)
}

type GetMachineGroupConfigsConfigArrayOutput struct{ *pulumi.OutputState }

func (GetMachineGroupConfigsConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMachineGroupConfigsConfig)(nil)).Elem()
}

func (o GetMachineGroupConfigsConfigArrayOutput) ToGetMachineGroupConfigsConfigArrayOutput() GetMachineGroupConfigsConfigArrayOutput {
	return o
}

func (o GetMachineGroupConfigsConfigArrayOutput) ToGetMachineGroupConfigsConfigArrayOutputWithContext(ctx context.Context) GetMachineGroupConfigsConfigArrayOutput {
	return o
}

func (o GetMachineGroupConfigsConfigArrayOutput) Index(i pulumi.IntInput) GetMachineGroupConfigsConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMachineGroupConfigsConfig {
		return vs[0].([]GetMachineGroupConfigsConfig)[vs[1].(int)]
	}).(GetMachineGroupConfigsConfigOutput)
}

type GetMachineGroupConfigsConfigExcludePath struct {
	Type  string `pulumi:"type"`
	Value string `pulumi:"value"`
}

// GetMachineGroupConfigsConfigExcludePathInput is an input type that accepts GetMachineGroupConfigsConfigExcludePathArgs and GetMachineGroupConfigsConfigExcludePathOutput values.
// You can construct a concrete instance of `GetMachineGroupConfigsConfigExcludePathInput` via:
//
//	GetMachineGroupConfigsConfigExcludePathArgs{...}
type GetMachineGroupConfigsConfigExcludePathInput interface {
	pulumi.Input

	ToGetMachineGroupConfigsConfigExcludePathOutput() GetMachineGroupConfigsConfigExcludePathOutput
	ToGetMachineGroupConfigsConfigExcludePathOutputWithContext(context.Context) GetMachineGroupConfigsConfigExcludePathOutput
}

type GetMachineGroupConfigsConfigExcludePathArgs struct {
	Type  pulumi.StringInput `pulumi:"type"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetMachineGroupConfigsConfigExcludePathArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMachineGroupConfigsConfigExcludePath)(nil)).Elem()
}

func (i GetMachineGroupConfigsConfigExcludePathArgs) ToGetMachineGroupConfigsConfigExcludePathOutput() GetMachineGroupConfigsConfigExcludePathOutput {
	return i.ToGetMachineGroupConfigsConfigExcludePathOutputWithContext(context.Background())
}

func (i GetMachineGroupConfigsConfigExcludePathArgs) ToGetMachineGroupConfigsConfigExcludePathOutputWithContext(ctx context.Context) GetMachineGroupConfigsConfigExcludePathOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMachineGroupConfigsConfigExcludePathOutput)
}

// GetMachineGroupConfigsConfigExcludePathArrayInput is an input type that accepts GetMachineGroupConfigsConfigExcludePathArray and GetMachineGroupConfigsConfigExcludePathArrayOutput values.
// You can construct a concrete instance of `GetMachineGroupConfigsConfigExcludePathArrayInput` via:
//
//	GetMachineGroupConfigsConfigExcludePathArray{ GetMachineGroupConfigsConfigExcludePathArgs{...} }
type GetMachineGroupConfigsConfigExcludePathArrayInput interface {
	pulumi.Input

	ToGetMachineGroupConfigsConfigExcludePathArrayOutput() GetMachineGroupConfigsConfigExcludePathArrayOutput
	ToGetMachineGroupConfigsConfigExcludePathArrayOutputWithContext(context.Context) GetMachineGroupConfigsConfigExcludePathArrayOutput
}

type GetMachineGroupConfigsConfigExcludePathArray []GetMachineGroupConfigsConfigExcludePathInput

func (GetMachineGroupConfigsConfigExcludePathArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMachineGroupConfigsConfigExcludePath)(nil)).Elem()
}

func (i GetMachineGroupConfigsConfigExcludePathArray) ToGetMachineGroupConfigsConfigExcludePathArrayOutput() GetMachineGroupConfigsConfigExcludePathArrayOutput {
	return i.ToGetMachineGroupConfigsConfigExcludePathArrayOutputWithContext(context.Background())
}

func (i GetMachineGroupConfigsConfigExcludePathArray) ToGetMachineGroupConfigsConfigExcludePathArrayOutputWithContext(ctx context.Context) GetMachineGroupConfigsConfigExcludePathArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMachineGroupConfigsConfigExcludePathArrayOutput)
}

type GetMachineGroupConfigsConfigExcludePathOutput struct{ *pulumi.OutputState }

func (GetMachineGroupConfigsConfigExcludePathOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMachineGroupConfigsConfigExcludePath)(nil)).Elem()
}

func (o GetMachineGroupConfigsConfigExcludePathOutput) ToGetMachineGroupConfigsConfigExcludePathOutput() GetMachineGroupConfigsConfigExcludePathOutput {
	return o
}

func (o GetMachineGroupConfigsConfigExcludePathOutput) ToGetMachineGroupConfigsConfigExcludePathOutputWithContext(ctx context.Context) GetMachineGroupConfigsConfigExcludePathOutput {
	return o
}

func (o GetMachineGroupConfigsConfigExcludePathOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfigExcludePath) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetMachineGroupConfigsConfigExcludePathOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfigExcludePath) string { return v.Value }).(pulumi.StringOutput)
}

type GetMachineGroupConfigsConfigExcludePathArrayOutput struct{ *pulumi.OutputState }

func (GetMachineGroupConfigsConfigExcludePathArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMachineGroupConfigsConfigExcludePath)(nil)).Elem()
}

func (o GetMachineGroupConfigsConfigExcludePathArrayOutput) ToGetMachineGroupConfigsConfigExcludePathArrayOutput() GetMachineGroupConfigsConfigExcludePathArrayOutput {
	return o
}

func (o GetMachineGroupConfigsConfigExcludePathArrayOutput) ToGetMachineGroupConfigsConfigExcludePathArrayOutputWithContext(ctx context.Context) GetMachineGroupConfigsConfigExcludePathArrayOutput {
	return o
}

func (o GetMachineGroupConfigsConfigExcludePathArrayOutput) Index(i pulumi.IntInput) GetMachineGroupConfigsConfigExcludePathOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMachineGroupConfigsConfigExcludePath {
		return vs[0].([]GetMachineGroupConfigsConfigExcludePath)[vs[1].(int)]
	}).(GetMachineGroupConfigsConfigExcludePathOutput)
}

type GetMachineGroupConfigsConfigExtractRule struct {
	Address             string                                                  `pulumi:"address"`
	Backtracking        int                                                     `pulumi:"backtracking"`
	BeginRegex          string                                                  `pulumi:"beginRegex"`
	Delimiter           string                                                  `pulumi:"delimiter"`
	FilterKeyRegexes    []GetMachineGroupConfigsConfigExtractRuleFilterKeyRegex `pulumi:"filterKeyRegexes"`
	IsGbk               int                                                     `pulumi:"isGbk"`
	JsonStandard        int                                                     `pulumi:"jsonStandard"`
	Keys                []string                                                `pulumi:"keys"`
	LogRegex            string                                                  `pulumi:"logRegex"`
	MetaTags            []GetMachineGroupConfigsConfigExtractRuleMetaTag        `pulumi:"metaTags"`
	MetadataType        int                                                     `pulumi:"metadataType"`
	ParseProtocol       string                                                  `pulumi:"parseProtocol"`
	PathRegex           string                                                  `pulumi:"pathRegex"`
	Protocol            string                                                  `pulumi:"protocol"`
	TimeFormat          string                                                  `pulumi:"timeFormat"`
	TimeKey             string                                                  `pulumi:"timeKey"`
	UnMatchLogKey       string                                                  `pulumi:"unMatchLogKey"`
	UnMatchUpLoadSwitch bool                                                    `pulumi:"unMatchUpLoadSwitch"`
}

// GetMachineGroupConfigsConfigExtractRuleInput is an input type that accepts GetMachineGroupConfigsConfigExtractRuleArgs and GetMachineGroupConfigsConfigExtractRuleOutput values.
// You can construct a concrete instance of `GetMachineGroupConfigsConfigExtractRuleInput` via:
//
//	GetMachineGroupConfigsConfigExtractRuleArgs{...}
type GetMachineGroupConfigsConfigExtractRuleInput interface {
	pulumi.Input

	ToGetMachineGroupConfigsConfigExtractRuleOutput() GetMachineGroupConfigsConfigExtractRuleOutput
	ToGetMachineGroupConfigsConfigExtractRuleOutputWithContext(context.Context) GetMachineGroupConfigsConfigExtractRuleOutput
}

type GetMachineGroupConfigsConfigExtractRuleArgs struct {
	Address             pulumi.StringInput                                              `pulumi:"address"`
	Backtracking        pulumi.IntInput                                                 `pulumi:"backtracking"`
	BeginRegex          pulumi.StringInput                                              `pulumi:"beginRegex"`
	Delimiter           pulumi.StringInput                                              `pulumi:"delimiter"`
	FilterKeyRegexes    GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArrayInput `pulumi:"filterKeyRegexes"`
	IsGbk               pulumi.IntInput                                                 `pulumi:"isGbk"`
	JsonStandard        pulumi.IntInput                                                 `pulumi:"jsonStandard"`
	Keys                pulumi.StringArrayInput                                         `pulumi:"keys"`
	LogRegex            pulumi.StringInput                                              `pulumi:"logRegex"`
	MetaTags            GetMachineGroupConfigsConfigExtractRuleMetaTagArrayInput        `pulumi:"metaTags"`
	MetadataType        pulumi.IntInput                                                 `pulumi:"metadataType"`
	ParseProtocol       pulumi.StringInput                                              `pulumi:"parseProtocol"`
	PathRegex           pulumi.StringInput                                              `pulumi:"pathRegex"`
	Protocol            pulumi.StringInput                                              `pulumi:"protocol"`
	TimeFormat          pulumi.StringInput                                              `pulumi:"timeFormat"`
	TimeKey             pulumi.StringInput                                              `pulumi:"timeKey"`
	UnMatchLogKey       pulumi.StringInput                                              `pulumi:"unMatchLogKey"`
	UnMatchUpLoadSwitch pulumi.BoolInput                                                `pulumi:"unMatchUpLoadSwitch"`
}

func (GetMachineGroupConfigsConfigExtractRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMachineGroupConfigsConfigExtractRule)(nil)).Elem()
}

func (i GetMachineGroupConfigsConfigExtractRuleArgs) ToGetMachineGroupConfigsConfigExtractRuleOutput() GetMachineGroupConfigsConfigExtractRuleOutput {
	return i.ToGetMachineGroupConfigsConfigExtractRuleOutputWithContext(context.Background())
}

func (i GetMachineGroupConfigsConfigExtractRuleArgs) ToGetMachineGroupConfigsConfigExtractRuleOutputWithContext(ctx context.Context) GetMachineGroupConfigsConfigExtractRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMachineGroupConfigsConfigExtractRuleOutput)
}

// GetMachineGroupConfigsConfigExtractRuleArrayInput is an input type that accepts GetMachineGroupConfigsConfigExtractRuleArray and GetMachineGroupConfigsConfigExtractRuleArrayOutput values.
// You can construct a concrete instance of `GetMachineGroupConfigsConfigExtractRuleArrayInput` via:
//
//	GetMachineGroupConfigsConfigExtractRuleArray{ GetMachineGroupConfigsConfigExtractRuleArgs{...} }
type GetMachineGroupConfigsConfigExtractRuleArrayInput interface {
	pulumi.Input

	ToGetMachineGroupConfigsConfigExtractRuleArrayOutput() GetMachineGroupConfigsConfigExtractRuleArrayOutput
	ToGetMachineGroupConfigsConfigExtractRuleArrayOutputWithContext(context.Context) GetMachineGroupConfigsConfigExtractRuleArrayOutput
}

type GetMachineGroupConfigsConfigExtractRuleArray []GetMachineGroupConfigsConfigExtractRuleInput

func (GetMachineGroupConfigsConfigExtractRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMachineGroupConfigsConfigExtractRule)(nil)).Elem()
}

func (i GetMachineGroupConfigsConfigExtractRuleArray) ToGetMachineGroupConfigsConfigExtractRuleArrayOutput() GetMachineGroupConfigsConfigExtractRuleArrayOutput {
	return i.ToGetMachineGroupConfigsConfigExtractRuleArrayOutputWithContext(context.Background())
}

func (i GetMachineGroupConfigsConfigExtractRuleArray) ToGetMachineGroupConfigsConfigExtractRuleArrayOutputWithContext(ctx context.Context) GetMachineGroupConfigsConfigExtractRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMachineGroupConfigsConfigExtractRuleArrayOutput)
}

type GetMachineGroupConfigsConfigExtractRuleOutput struct{ *pulumi.OutputState }

func (GetMachineGroupConfigsConfigExtractRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMachineGroupConfigsConfigExtractRule)(nil)).Elem()
}

func (o GetMachineGroupConfigsConfigExtractRuleOutput) ToGetMachineGroupConfigsConfigExtractRuleOutput() GetMachineGroupConfigsConfigExtractRuleOutput {
	return o
}

func (o GetMachineGroupConfigsConfigExtractRuleOutput) ToGetMachineGroupConfigsConfigExtractRuleOutputWithContext(ctx context.Context) GetMachineGroupConfigsConfigExtractRuleOutput {
	return o
}

func (o GetMachineGroupConfigsConfigExtractRuleOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfigExtractRule) string { return v.Address }).(pulumi.StringOutput)
}

func (o GetMachineGroupConfigsConfigExtractRuleOutput) Backtracking() pulumi.IntOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfigExtractRule) int { return v.Backtracking }).(pulumi.IntOutput)
}

func (o GetMachineGroupConfigsConfigExtractRuleOutput) BeginRegex() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfigExtractRule) string { return v.BeginRegex }).(pulumi.StringOutput)
}

func (o GetMachineGroupConfigsConfigExtractRuleOutput) Delimiter() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfigExtractRule) string { return v.Delimiter }).(pulumi.StringOutput)
}

func (o GetMachineGroupConfigsConfigExtractRuleOutput) FilterKeyRegexes() GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArrayOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfigExtractRule) []GetMachineGroupConfigsConfigExtractRuleFilterKeyRegex {
		return v.FilterKeyRegexes
	}).(GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArrayOutput)
}

func (o GetMachineGroupConfigsConfigExtractRuleOutput) IsGbk() pulumi.IntOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfigExtractRule) int { return v.IsGbk }).(pulumi.IntOutput)
}

func (o GetMachineGroupConfigsConfigExtractRuleOutput) JsonStandard() pulumi.IntOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfigExtractRule) int { return v.JsonStandard }).(pulumi.IntOutput)
}

func (o GetMachineGroupConfigsConfigExtractRuleOutput) Keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfigExtractRule) []string { return v.Keys }).(pulumi.StringArrayOutput)
}

func (o GetMachineGroupConfigsConfigExtractRuleOutput) LogRegex() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfigExtractRule) string { return v.LogRegex }).(pulumi.StringOutput)
}

func (o GetMachineGroupConfigsConfigExtractRuleOutput) MetaTags() GetMachineGroupConfigsConfigExtractRuleMetaTagArrayOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfigExtractRule) []GetMachineGroupConfigsConfigExtractRuleMetaTag {
		return v.MetaTags
	}).(GetMachineGroupConfigsConfigExtractRuleMetaTagArrayOutput)
}

func (o GetMachineGroupConfigsConfigExtractRuleOutput) MetadataType() pulumi.IntOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfigExtractRule) int { return v.MetadataType }).(pulumi.IntOutput)
}

func (o GetMachineGroupConfigsConfigExtractRuleOutput) ParseProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfigExtractRule) string { return v.ParseProtocol }).(pulumi.StringOutput)
}

func (o GetMachineGroupConfigsConfigExtractRuleOutput) PathRegex() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfigExtractRule) string { return v.PathRegex }).(pulumi.StringOutput)
}

func (o GetMachineGroupConfigsConfigExtractRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfigExtractRule) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o GetMachineGroupConfigsConfigExtractRuleOutput) TimeFormat() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfigExtractRule) string { return v.TimeFormat }).(pulumi.StringOutput)
}

func (o GetMachineGroupConfigsConfigExtractRuleOutput) TimeKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfigExtractRule) string { return v.TimeKey }).(pulumi.StringOutput)
}

func (o GetMachineGroupConfigsConfigExtractRuleOutput) UnMatchLogKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfigExtractRule) string { return v.UnMatchLogKey }).(pulumi.StringOutput)
}

func (o GetMachineGroupConfigsConfigExtractRuleOutput) UnMatchUpLoadSwitch() pulumi.BoolOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfigExtractRule) bool { return v.UnMatchUpLoadSwitch }).(pulumi.BoolOutput)
}

type GetMachineGroupConfigsConfigExtractRuleArrayOutput struct{ *pulumi.OutputState }

func (GetMachineGroupConfigsConfigExtractRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMachineGroupConfigsConfigExtractRule)(nil)).Elem()
}

func (o GetMachineGroupConfigsConfigExtractRuleArrayOutput) ToGetMachineGroupConfigsConfigExtractRuleArrayOutput() GetMachineGroupConfigsConfigExtractRuleArrayOutput {
	return o
}

func (o GetMachineGroupConfigsConfigExtractRuleArrayOutput) ToGetMachineGroupConfigsConfigExtractRuleArrayOutputWithContext(ctx context.Context) GetMachineGroupConfigsConfigExtractRuleArrayOutput {
	return o
}

func (o GetMachineGroupConfigsConfigExtractRuleArrayOutput) Index(i pulumi.IntInput) GetMachineGroupConfigsConfigExtractRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMachineGroupConfigsConfigExtractRule {
		return vs[0].([]GetMachineGroupConfigsConfigExtractRule)[vs[1].(int)]
	}).(GetMachineGroupConfigsConfigExtractRuleOutput)
}

type GetMachineGroupConfigsConfigExtractRuleFilterKeyRegex struct {
	Key   string `pulumi:"key"`
	Regex string `pulumi:"regex"`
}

// GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexInput is an input type that accepts GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArgs and GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexOutput values.
// You can construct a concrete instance of `GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexInput` via:
//
//	GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArgs{...}
type GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexInput interface {
	pulumi.Input

	ToGetMachineGroupConfigsConfigExtractRuleFilterKeyRegexOutput() GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexOutput
	ToGetMachineGroupConfigsConfigExtractRuleFilterKeyRegexOutputWithContext(context.Context) GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexOutput
}

type GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Regex pulumi.StringInput `pulumi:"regex"`
}

func (GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMachineGroupConfigsConfigExtractRuleFilterKeyRegex)(nil)).Elem()
}

func (i GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArgs) ToGetMachineGroupConfigsConfigExtractRuleFilterKeyRegexOutput() GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexOutput {
	return i.ToGetMachineGroupConfigsConfigExtractRuleFilterKeyRegexOutputWithContext(context.Background())
}

func (i GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArgs) ToGetMachineGroupConfigsConfigExtractRuleFilterKeyRegexOutputWithContext(ctx context.Context) GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexOutput)
}

// GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArrayInput is an input type that accepts GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArray and GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArrayOutput values.
// You can construct a concrete instance of `GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArrayInput` via:
//
//	GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArray{ GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArgs{...} }
type GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArrayInput interface {
	pulumi.Input

	ToGetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArrayOutput() GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArrayOutput
	ToGetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArrayOutputWithContext(context.Context) GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArrayOutput
}

type GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArray []GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexInput

func (GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMachineGroupConfigsConfigExtractRuleFilterKeyRegex)(nil)).Elem()
}

func (i GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArray) ToGetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArrayOutput() GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArrayOutput {
	return i.ToGetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArrayOutputWithContext(context.Background())
}

func (i GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArray) ToGetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArrayOutputWithContext(ctx context.Context) GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArrayOutput)
}

type GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexOutput struct{ *pulumi.OutputState }

func (GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMachineGroupConfigsConfigExtractRuleFilterKeyRegex)(nil)).Elem()
}

func (o GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexOutput) ToGetMachineGroupConfigsConfigExtractRuleFilterKeyRegexOutput() GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexOutput {
	return o
}

func (o GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexOutput) ToGetMachineGroupConfigsConfigExtractRuleFilterKeyRegexOutputWithContext(ctx context.Context) GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexOutput {
	return o
}

func (o GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfigExtractRuleFilterKeyRegex) string { return v.Key }).(pulumi.StringOutput)
}

func (o GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexOutput) Regex() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfigExtractRuleFilterKeyRegex) string { return v.Regex }).(pulumi.StringOutput)
}

type GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArrayOutput struct{ *pulumi.OutputState }

func (GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMachineGroupConfigsConfigExtractRuleFilterKeyRegex)(nil)).Elem()
}

func (o GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArrayOutput) ToGetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArrayOutput() GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArrayOutput {
	return o
}

func (o GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArrayOutput) ToGetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArrayOutputWithContext(ctx context.Context) GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArrayOutput {
	return o
}

func (o GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArrayOutput) Index(i pulumi.IntInput) GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMachineGroupConfigsConfigExtractRuleFilterKeyRegex {
		return vs[0].([]GetMachineGroupConfigsConfigExtractRuleFilterKeyRegex)[vs[1].(int)]
	}).(GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexOutput)
}

type GetMachineGroupConfigsConfigExtractRuleMetaTag struct {
	Key   string `pulumi:"key"`
	Value string `pulumi:"value"`
}

// GetMachineGroupConfigsConfigExtractRuleMetaTagInput is an input type that accepts GetMachineGroupConfigsConfigExtractRuleMetaTagArgs and GetMachineGroupConfigsConfigExtractRuleMetaTagOutput values.
// You can construct a concrete instance of `GetMachineGroupConfigsConfigExtractRuleMetaTagInput` via:
//
//	GetMachineGroupConfigsConfigExtractRuleMetaTagArgs{...}
type GetMachineGroupConfigsConfigExtractRuleMetaTagInput interface {
	pulumi.Input

	ToGetMachineGroupConfigsConfigExtractRuleMetaTagOutput() GetMachineGroupConfigsConfigExtractRuleMetaTagOutput
	ToGetMachineGroupConfigsConfigExtractRuleMetaTagOutputWithContext(context.Context) GetMachineGroupConfigsConfigExtractRuleMetaTagOutput
}

type GetMachineGroupConfigsConfigExtractRuleMetaTagArgs struct {
	Key   pulumi.StringInput `pulumi:"key"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetMachineGroupConfigsConfigExtractRuleMetaTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMachineGroupConfigsConfigExtractRuleMetaTag)(nil)).Elem()
}

func (i GetMachineGroupConfigsConfigExtractRuleMetaTagArgs) ToGetMachineGroupConfigsConfigExtractRuleMetaTagOutput() GetMachineGroupConfigsConfigExtractRuleMetaTagOutput {
	return i.ToGetMachineGroupConfigsConfigExtractRuleMetaTagOutputWithContext(context.Background())
}

func (i GetMachineGroupConfigsConfigExtractRuleMetaTagArgs) ToGetMachineGroupConfigsConfigExtractRuleMetaTagOutputWithContext(ctx context.Context) GetMachineGroupConfigsConfigExtractRuleMetaTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMachineGroupConfigsConfigExtractRuleMetaTagOutput)
}

// GetMachineGroupConfigsConfigExtractRuleMetaTagArrayInput is an input type that accepts GetMachineGroupConfigsConfigExtractRuleMetaTagArray and GetMachineGroupConfigsConfigExtractRuleMetaTagArrayOutput values.
// You can construct a concrete instance of `GetMachineGroupConfigsConfigExtractRuleMetaTagArrayInput` via:
//
//	GetMachineGroupConfigsConfigExtractRuleMetaTagArray{ GetMachineGroupConfigsConfigExtractRuleMetaTagArgs{...} }
type GetMachineGroupConfigsConfigExtractRuleMetaTagArrayInput interface {
	pulumi.Input

	ToGetMachineGroupConfigsConfigExtractRuleMetaTagArrayOutput() GetMachineGroupConfigsConfigExtractRuleMetaTagArrayOutput
	ToGetMachineGroupConfigsConfigExtractRuleMetaTagArrayOutputWithContext(context.Context) GetMachineGroupConfigsConfigExtractRuleMetaTagArrayOutput
}

type GetMachineGroupConfigsConfigExtractRuleMetaTagArray []GetMachineGroupConfigsConfigExtractRuleMetaTagInput

func (GetMachineGroupConfigsConfigExtractRuleMetaTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMachineGroupConfigsConfigExtractRuleMetaTag)(nil)).Elem()
}

func (i GetMachineGroupConfigsConfigExtractRuleMetaTagArray) ToGetMachineGroupConfigsConfigExtractRuleMetaTagArrayOutput() GetMachineGroupConfigsConfigExtractRuleMetaTagArrayOutput {
	return i.ToGetMachineGroupConfigsConfigExtractRuleMetaTagArrayOutputWithContext(context.Background())
}

func (i GetMachineGroupConfigsConfigExtractRuleMetaTagArray) ToGetMachineGroupConfigsConfigExtractRuleMetaTagArrayOutputWithContext(ctx context.Context) GetMachineGroupConfigsConfigExtractRuleMetaTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMachineGroupConfigsConfigExtractRuleMetaTagArrayOutput)
}

type GetMachineGroupConfigsConfigExtractRuleMetaTagOutput struct{ *pulumi.OutputState }

func (GetMachineGroupConfigsConfigExtractRuleMetaTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMachineGroupConfigsConfigExtractRuleMetaTag)(nil)).Elem()
}

func (o GetMachineGroupConfigsConfigExtractRuleMetaTagOutput) ToGetMachineGroupConfigsConfigExtractRuleMetaTagOutput() GetMachineGroupConfigsConfigExtractRuleMetaTagOutput {
	return o
}

func (o GetMachineGroupConfigsConfigExtractRuleMetaTagOutput) ToGetMachineGroupConfigsConfigExtractRuleMetaTagOutputWithContext(ctx context.Context) GetMachineGroupConfigsConfigExtractRuleMetaTagOutput {
	return o
}

func (o GetMachineGroupConfigsConfigExtractRuleMetaTagOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfigExtractRuleMetaTag) string { return v.Key }).(pulumi.StringOutput)
}

func (o GetMachineGroupConfigsConfigExtractRuleMetaTagOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachineGroupConfigsConfigExtractRuleMetaTag) string { return v.Value }).(pulumi.StringOutput)
}

type GetMachineGroupConfigsConfigExtractRuleMetaTagArrayOutput struct{ *pulumi.OutputState }

func (GetMachineGroupConfigsConfigExtractRuleMetaTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMachineGroupConfigsConfigExtractRuleMetaTag)(nil)).Elem()
}

func (o GetMachineGroupConfigsConfigExtractRuleMetaTagArrayOutput) ToGetMachineGroupConfigsConfigExtractRuleMetaTagArrayOutput() GetMachineGroupConfigsConfigExtractRuleMetaTagArrayOutput {
	return o
}

func (o GetMachineGroupConfigsConfigExtractRuleMetaTagArrayOutput) ToGetMachineGroupConfigsConfigExtractRuleMetaTagArrayOutputWithContext(ctx context.Context) GetMachineGroupConfigsConfigExtractRuleMetaTagArrayOutput {
	return o
}

func (o GetMachineGroupConfigsConfigExtractRuleMetaTagArrayOutput) Index(i pulumi.IntInput) GetMachineGroupConfigsConfigExtractRuleMetaTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMachineGroupConfigsConfigExtractRuleMetaTag {
		return vs[0].([]GetMachineGroupConfigsConfigExtractRuleMetaTag)[vs[1].(int)]
	}).(GetMachineGroupConfigsConfigExtractRuleMetaTagOutput)
}

type GetMachinesMachine struct {
	AutoUpdate   int    `pulumi:"autoUpdate"`
	ErrCode      int    `pulumi:"errCode"`
	ErrMsg       string `pulumi:"errMsg"`
	Ip           string `pulumi:"ip"`
	OfflineTime  string `pulumi:"offlineTime"`
	Status       int    `pulumi:"status"`
	UpdateStatus int    `pulumi:"updateStatus"`
	Version      string `pulumi:"version"`
}

// GetMachinesMachineInput is an input type that accepts GetMachinesMachineArgs and GetMachinesMachineOutput values.
// You can construct a concrete instance of `GetMachinesMachineInput` via:
//
//	GetMachinesMachineArgs{...}
type GetMachinesMachineInput interface {
	pulumi.Input

	ToGetMachinesMachineOutput() GetMachinesMachineOutput
	ToGetMachinesMachineOutputWithContext(context.Context) GetMachinesMachineOutput
}

type GetMachinesMachineArgs struct {
	AutoUpdate   pulumi.IntInput    `pulumi:"autoUpdate"`
	ErrCode      pulumi.IntInput    `pulumi:"errCode"`
	ErrMsg       pulumi.StringInput `pulumi:"errMsg"`
	Ip           pulumi.StringInput `pulumi:"ip"`
	OfflineTime  pulumi.StringInput `pulumi:"offlineTime"`
	Status       pulumi.IntInput    `pulumi:"status"`
	UpdateStatus pulumi.IntInput    `pulumi:"updateStatus"`
	Version      pulumi.StringInput `pulumi:"version"`
}

func (GetMachinesMachineArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMachinesMachine)(nil)).Elem()
}

func (i GetMachinesMachineArgs) ToGetMachinesMachineOutput() GetMachinesMachineOutput {
	return i.ToGetMachinesMachineOutputWithContext(context.Background())
}

func (i GetMachinesMachineArgs) ToGetMachinesMachineOutputWithContext(ctx context.Context) GetMachinesMachineOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMachinesMachineOutput)
}

// GetMachinesMachineArrayInput is an input type that accepts GetMachinesMachineArray and GetMachinesMachineArrayOutput values.
// You can construct a concrete instance of `GetMachinesMachineArrayInput` via:
//
//	GetMachinesMachineArray{ GetMachinesMachineArgs{...} }
type GetMachinesMachineArrayInput interface {
	pulumi.Input

	ToGetMachinesMachineArrayOutput() GetMachinesMachineArrayOutput
	ToGetMachinesMachineArrayOutputWithContext(context.Context) GetMachinesMachineArrayOutput
}

type GetMachinesMachineArray []GetMachinesMachineInput

func (GetMachinesMachineArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMachinesMachine)(nil)).Elem()
}

func (i GetMachinesMachineArray) ToGetMachinesMachineArrayOutput() GetMachinesMachineArrayOutput {
	return i.ToGetMachinesMachineArrayOutputWithContext(context.Background())
}

func (i GetMachinesMachineArray) ToGetMachinesMachineArrayOutputWithContext(ctx context.Context) GetMachinesMachineArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMachinesMachineArrayOutput)
}

type GetMachinesMachineOutput struct{ *pulumi.OutputState }

func (GetMachinesMachineOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMachinesMachine)(nil)).Elem()
}

func (o GetMachinesMachineOutput) ToGetMachinesMachineOutput() GetMachinesMachineOutput {
	return o
}

func (o GetMachinesMachineOutput) ToGetMachinesMachineOutputWithContext(ctx context.Context) GetMachinesMachineOutput {
	return o
}

func (o GetMachinesMachineOutput) AutoUpdate() pulumi.IntOutput {
	return o.ApplyT(func(v GetMachinesMachine) int { return v.AutoUpdate }).(pulumi.IntOutput)
}

func (o GetMachinesMachineOutput) ErrCode() pulumi.IntOutput {
	return o.ApplyT(func(v GetMachinesMachine) int { return v.ErrCode }).(pulumi.IntOutput)
}

func (o GetMachinesMachineOutput) ErrMsg() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachinesMachine) string { return v.ErrMsg }).(pulumi.StringOutput)
}

func (o GetMachinesMachineOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachinesMachine) string { return v.Ip }).(pulumi.StringOutput)
}

func (o GetMachinesMachineOutput) OfflineTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachinesMachine) string { return v.OfflineTime }).(pulumi.StringOutput)
}

func (o GetMachinesMachineOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetMachinesMachine) int { return v.Status }).(pulumi.IntOutput)
}

func (o GetMachinesMachineOutput) UpdateStatus() pulumi.IntOutput {
	return o.ApplyT(func(v GetMachinesMachine) int { return v.UpdateStatus }).(pulumi.IntOutput)
}

func (o GetMachinesMachineOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetMachinesMachine) string { return v.Version }).(pulumi.StringOutput)
}

type GetMachinesMachineArrayOutput struct{ *pulumi.OutputState }

func (GetMachinesMachineArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMachinesMachine)(nil)).Elem()
}

func (o GetMachinesMachineArrayOutput) ToGetMachinesMachineArrayOutput() GetMachinesMachineArrayOutput {
	return o
}

func (o GetMachinesMachineArrayOutput) ToGetMachinesMachineArrayOutputWithContext(ctx context.Context) GetMachinesMachineArrayOutput {
	return o
}

func (o GetMachinesMachineArrayOutput) Index(i pulumi.IntInput) GetMachinesMachineOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMachinesMachine {
		return vs[0].([]GetMachinesMachine)[vs[1].(int)]
	}).(GetMachinesMachineOutput)
}

type GetShipperTasksTask struct {
	EndTime    int    `pulumi:"endTime"`
	Message    string `pulumi:"message"`
	RangeEnd   int    `pulumi:"rangeEnd"`
	RangeStart int    `pulumi:"rangeStart"`
	ShipperId  string `pulumi:"shipperId"`
	StartTime  int    `pulumi:"startTime"`
	Status     string `pulumi:"status"`
	TaskId     string `pulumi:"taskId"`
	TopicId    string `pulumi:"topicId"`
}

// GetShipperTasksTaskInput is an input type that accepts GetShipperTasksTaskArgs and GetShipperTasksTaskOutput values.
// You can construct a concrete instance of `GetShipperTasksTaskInput` via:
//
//	GetShipperTasksTaskArgs{...}
type GetShipperTasksTaskInput interface {
	pulumi.Input

	ToGetShipperTasksTaskOutput() GetShipperTasksTaskOutput
	ToGetShipperTasksTaskOutputWithContext(context.Context) GetShipperTasksTaskOutput
}

type GetShipperTasksTaskArgs struct {
	EndTime    pulumi.IntInput    `pulumi:"endTime"`
	Message    pulumi.StringInput `pulumi:"message"`
	RangeEnd   pulumi.IntInput    `pulumi:"rangeEnd"`
	RangeStart pulumi.IntInput    `pulumi:"rangeStart"`
	ShipperId  pulumi.StringInput `pulumi:"shipperId"`
	StartTime  pulumi.IntInput    `pulumi:"startTime"`
	Status     pulumi.StringInput `pulumi:"status"`
	TaskId     pulumi.StringInput `pulumi:"taskId"`
	TopicId    pulumi.StringInput `pulumi:"topicId"`
}

func (GetShipperTasksTaskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShipperTasksTask)(nil)).Elem()
}

func (i GetShipperTasksTaskArgs) ToGetShipperTasksTaskOutput() GetShipperTasksTaskOutput {
	return i.ToGetShipperTasksTaskOutputWithContext(context.Background())
}

func (i GetShipperTasksTaskArgs) ToGetShipperTasksTaskOutputWithContext(ctx context.Context) GetShipperTasksTaskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetShipperTasksTaskOutput)
}

// GetShipperTasksTaskArrayInput is an input type that accepts GetShipperTasksTaskArray and GetShipperTasksTaskArrayOutput values.
// You can construct a concrete instance of `GetShipperTasksTaskArrayInput` via:
//
//	GetShipperTasksTaskArray{ GetShipperTasksTaskArgs{...} }
type GetShipperTasksTaskArrayInput interface {
	pulumi.Input

	ToGetShipperTasksTaskArrayOutput() GetShipperTasksTaskArrayOutput
	ToGetShipperTasksTaskArrayOutputWithContext(context.Context) GetShipperTasksTaskArrayOutput
}

type GetShipperTasksTaskArray []GetShipperTasksTaskInput

func (GetShipperTasksTaskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetShipperTasksTask)(nil)).Elem()
}

func (i GetShipperTasksTaskArray) ToGetShipperTasksTaskArrayOutput() GetShipperTasksTaskArrayOutput {
	return i.ToGetShipperTasksTaskArrayOutputWithContext(context.Background())
}

func (i GetShipperTasksTaskArray) ToGetShipperTasksTaskArrayOutputWithContext(ctx context.Context) GetShipperTasksTaskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetShipperTasksTaskArrayOutput)
}

type GetShipperTasksTaskOutput struct{ *pulumi.OutputState }

func (GetShipperTasksTaskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShipperTasksTask)(nil)).Elem()
}

func (o GetShipperTasksTaskOutput) ToGetShipperTasksTaskOutput() GetShipperTasksTaskOutput {
	return o
}

func (o GetShipperTasksTaskOutput) ToGetShipperTasksTaskOutputWithContext(ctx context.Context) GetShipperTasksTaskOutput {
	return o
}

func (o GetShipperTasksTaskOutput) EndTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetShipperTasksTask) int { return v.EndTime }).(pulumi.IntOutput)
}

func (o GetShipperTasksTaskOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v GetShipperTasksTask) string { return v.Message }).(pulumi.StringOutput)
}

func (o GetShipperTasksTaskOutput) RangeEnd() pulumi.IntOutput {
	return o.ApplyT(func(v GetShipperTasksTask) int { return v.RangeEnd }).(pulumi.IntOutput)
}

func (o GetShipperTasksTaskOutput) RangeStart() pulumi.IntOutput {
	return o.ApplyT(func(v GetShipperTasksTask) int { return v.RangeStart }).(pulumi.IntOutput)
}

func (o GetShipperTasksTaskOutput) ShipperId() pulumi.StringOutput {
	return o.ApplyT(func(v GetShipperTasksTask) string { return v.ShipperId }).(pulumi.StringOutput)
}

func (o GetShipperTasksTaskOutput) StartTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetShipperTasksTask) int { return v.StartTime }).(pulumi.IntOutput)
}

func (o GetShipperTasksTaskOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetShipperTasksTask) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetShipperTasksTaskOutput) TaskId() pulumi.StringOutput {
	return o.ApplyT(func(v GetShipperTasksTask) string { return v.TaskId }).(pulumi.StringOutput)
}

func (o GetShipperTasksTaskOutput) TopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetShipperTasksTask) string { return v.TopicId }).(pulumi.StringOutput)
}

type GetShipperTasksTaskArrayOutput struct{ *pulumi.OutputState }

func (GetShipperTasksTaskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetShipperTasksTask)(nil)).Elem()
}

func (o GetShipperTasksTaskArrayOutput) ToGetShipperTasksTaskArrayOutput() GetShipperTasksTaskArrayOutput {
	return o
}

func (o GetShipperTasksTaskArrayOutput) ToGetShipperTasksTaskArrayOutputWithContext(ctx context.Context) GetShipperTasksTaskArrayOutput {
	return o
}

func (o GetShipperTasksTaskArrayOutput) Index(i pulumi.IntInput) GetShipperTasksTaskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetShipperTasksTask {
		return vs[0].([]GetShipperTasksTask)[vs[1].(int)]
	}).(GetShipperTasksTaskOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmAlarmTargetInput)(nil)).Elem(), AlarmAlarmTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmAlarmTargetArrayInput)(nil)).Elem(), AlarmAlarmTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmAnalysisInput)(nil)).Elem(), AlarmAnalysisArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmAnalysisArrayInput)(nil)).Elem(), AlarmAnalysisArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmAnalysisConfigInfoInput)(nil)).Elem(), AlarmAnalysisConfigInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmAnalysisConfigInfoArrayInput)(nil)).Elem(), AlarmAnalysisConfigInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmCallBackInput)(nil)).Elem(), AlarmCallBackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmCallBackPtrInput)(nil)).Elem(), AlarmCallBackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmMonitorTimeInput)(nil)).Elem(), AlarmMonitorTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmMonitorTimePtrInput)(nil)).Elem(), AlarmMonitorTimeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmNoticeNoticeReceiverInput)(nil)).Elem(), AlarmNoticeNoticeReceiverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmNoticeNoticeReceiverArrayInput)(nil)).Elem(), AlarmNoticeNoticeReceiverArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmNoticeWebCallbackInput)(nil)).Elem(), AlarmNoticeWebCallbackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlarmNoticeWebCallbackArrayInput)(nil)).Elem(), AlarmNoticeWebCallbackArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CkafkaConsumerCkafkaInput)(nil)).Elem(), CkafkaConsumerCkafkaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CkafkaConsumerCkafkaPtrInput)(nil)).Elem(), CkafkaConsumerCkafkaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CkafkaConsumerContentInput)(nil)).Elem(), CkafkaConsumerContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CkafkaConsumerContentPtrInput)(nil)).Elem(), CkafkaConsumerContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigExcludePathInput)(nil)).Elem(), ConfigExcludePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigExcludePathArrayInput)(nil)).Elem(), ConfigExcludePathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigExtraContainerFileInput)(nil)).Elem(), ConfigExtraContainerFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigExtraContainerFilePtrInput)(nil)).Elem(), ConfigExtraContainerFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigExtraContainerFileWorkloadInput)(nil)).Elem(), ConfigExtraContainerFileWorkloadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigExtraContainerFileWorkloadPtrInput)(nil)).Elem(), ConfigExtraContainerFileWorkloadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigExtraContainerStdoutInput)(nil)).Elem(), ConfigExtraContainerStdoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigExtraContainerStdoutPtrInput)(nil)).Elem(), ConfigExtraContainerStdoutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigExtraContainerStdoutWorkloadInput)(nil)).Elem(), ConfigExtraContainerStdoutWorkloadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigExtraContainerStdoutWorkloadArrayInput)(nil)).Elem(), ConfigExtraContainerStdoutWorkloadArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigExtraExcludePathInput)(nil)).Elem(), ConfigExtraExcludePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigExtraExcludePathArrayInput)(nil)).Elem(), ConfigExtraExcludePathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigExtraExtractRuleInput)(nil)).Elem(), ConfigExtraExtractRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigExtraExtractRulePtrInput)(nil)).Elem(), ConfigExtraExtractRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigExtraExtractRuleFilterKeyRegexInput)(nil)).Elem(), ConfigExtraExtractRuleFilterKeyRegexArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigExtraExtractRuleFilterKeyRegexArrayInput)(nil)).Elem(), ConfigExtraExtractRuleFilterKeyRegexArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigExtraHostFileInput)(nil)).Elem(), ConfigExtraHostFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigExtraHostFilePtrInput)(nil)).Elem(), ConfigExtraHostFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigExtractRuleInput)(nil)).Elem(), ConfigExtractRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigExtractRulePtrInput)(nil)).Elem(), ConfigExtractRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigExtractRuleFilterKeyRegexInput)(nil)).Elem(), ConfigExtractRuleFilterKeyRegexArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigExtractRuleFilterKeyRegexArrayInput)(nil)).Elem(), ConfigExtractRuleFilterKeyRegexArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigExtractRuleMetaTagInput)(nil)).Elem(), ConfigExtractRuleMetaTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigExtractRuleMetaTagArrayInput)(nil)).Elem(), ConfigExtractRuleMetaTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosRechargeExtractRuleInfoInput)(nil)).Elem(), CosRechargeExtractRuleInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosRechargeExtractRuleInfoPtrInput)(nil)).Elem(), CosRechargeExtractRuleInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosRechargeExtractRuleInfoFilterKeyRegexInput)(nil)).Elem(), CosRechargeExtractRuleInfoFilterKeyRegexArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosRechargeExtractRuleInfoFilterKeyRegexArrayInput)(nil)).Elem(), CosRechargeExtractRuleInfoFilterKeyRegexArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosRechargeExtractRuleInfoMetaTagInput)(nil)).Elem(), CosRechargeExtractRuleInfoMetaTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosRechargeExtractRuleInfoMetaTagArrayInput)(nil)).Elem(), CosRechargeExtractRuleInfoMetaTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosShipperCompressInput)(nil)).Elem(), CosShipperCompressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosShipperCompressPtrInput)(nil)).Elem(), CosShipperCompressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosShipperContentInput)(nil)).Elem(), CosShipperContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosShipperContentPtrInput)(nil)).Elem(), CosShipperContentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosShipperContentCsvInput)(nil)).Elem(), CosShipperContentCsvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosShipperContentCsvPtrInput)(nil)).Elem(), CosShipperContentCsvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosShipperContentJsonInput)(nil)).Elem(), CosShipperContentJsonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosShipperContentJsonPtrInput)(nil)).Elem(), CosShipperContentJsonArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosShipperFilterRuleInput)(nil)).Elem(), CosShipperFilterRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CosShipperFilterRuleArrayInput)(nil)).Elem(), CosShipperFilterRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataTransformDstResourceInput)(nil)).Elem(), DataTransformDstResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataTransformDstResourceArrayInput)(nil)).Elem(), DataTransformDstResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IndexRuleInput)(nil)).Elem(), IndexRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IndexRulePtrInput)(nil)).Elem(), IndexRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IndexRuleFullTextInput)(nil)).Elem(), IndexRuleFullTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IndexRuleFullTextPtrInput)(nil)).Elem(), IndexRuleFullTextArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IndexRuleKeyValueInput)(nil)).Elem(), IndexRuleKeyValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IndexRuleKeyValuePtrInput)(nil)).Elem(), IndexRuleKeyValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IndexRuleKeyValueKeyValueInput)(nil)).Elem(), IndexRuleKeyValueKeyValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IndexRuleKeyValueKeyValueArrayInput)(nil)).Elem(), IndexRuleKeyValueKeyValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IndexRuleKeyValueKeyValueValueInput)(nil)).Elem(), IndexRuleKeyValueKeyValueValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IndexRuleKeyValueKeyValueValuePtrInput)(nil)).Elem(), IndexRuleKeyValueKeyValueValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IndexRuleTagInput)(nil)).Elem(), IndexRuleTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IndexRuleTagPtrInput)(nil)).Elem(), IndexRuleTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IndexRuleTagKeyValueInput)(nil)).Elem(), IndexRuleTagKeyValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IndexRuleTagKeyValueArrayInput)(nil)).Elem(), IndexRuleTagKeyValueArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IndexRuleTagKeyValueValueInput)(nil)).Elem(), IndexRuleTagKeyValueValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IndexRuleTagKeyValueValuePtrInput)(nil)).Elem(), IndexRuleTagKeyValueValueArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaRechargeLogRechargeRuleInput)(nil)).Elem(), KafkaRechargeLogRechargeRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaRechargeLogRechargeRulePtrInput)(nil)).Elem(), KafkaRechargeLogRechargeRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaRechargeProtocolInput)(nil)).Elem(), KafkaRechargeProtocolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KafkaRechargeProtocolPtrInput)(nil)).Elem(), KafkaRechargeProtocolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineGroupMachineGroupTypeInput)(nil)).Elem(), MachineGroupMachineGroupTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MachineGroupMachineGroupTypePtrInput)(nil)).Elem(), MachineGroupMachineGroupTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledSqlDstResourceInput)(nil)).Elem(), ScheduledSqlDstResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScheduledSqlDstResourcePtrInput)(nil)).Elem(), ScheduledSqlDstResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMachineGroupConfigsConfigInput)(nil)).Elem(), GetMachineGroupConfigsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMachineGroupConfigsConfigArrayInput)(nil)).Elem(), GetMachineGroupConfigsConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMachineGroupConfigsConfigExcludePathInput)(nil)).Elem(), GetMachineGroupConfigsConfigExcludePathArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMachineGroupConfigsConfigExcludePathArrayInput)(nil)).Elem(), GetMachineGroupConfigsConfigExcludePathArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMachineGroupConfigsConfigExtractRuleInput)(nil)).Elem(), GetMachineGroupConfigsConfigExtractRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMachineGroupConfigsConfigExtractRuleArrayInput)(nil)).Elem(), GetMachineGroupConfigsConfigExtractRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexInput)(nil)).Elem(), GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArrayInput)(nil)).Elem(), GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMachineGroupConfigsConfigExtractRuleMetaTagInput)(nil)).Elem(), GetMachineGroupConfigsConfigExtractRuleMetaTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMachineGroupConfigsConfigExtractRuleMetaTagArrayInput)(nil)).Elem(), GetMachineGroupConfigsConfigExtractRuleMetaTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMachinesMachineInput)(nil)).Elem(), GetMachinesMachineArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMachinesMachineArrayInput)(nil)).Elem(), GetMachinesMachineArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetShipperTasksTaskInput)(nil)).Elem(), GetShipperTasksTaskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetShipperTasksTaskArrayInput)(nil)).Elem(), GetShipperTasksTaskArray{})
	pulumi.RegisterOutputType(AlarmAlarmTargetOutput{})
	pulumi.RegisterOutputType(AlarmAlarmTargetArrayOutput{})
	pulumi.RegisterOutputType(AlarmAnalysisOutput{})
	pulumi.RegisterOutputType(AlarmAnalysisArrayOutput{})
	pulumi.RegisterOutputType(AlarmAnalysisConfigInfoOutput{})
	pulumi.RegisterOutputType(AlarmAnalysisConfigInfoArrayOutput{})
	pulumi.RegisterOutputType(AlarmCallBackOutput{})
	pulumi.RegisterOutputType(AlarmCallBackPtrOutput{})
	pulumi.RegisterOutputType(AlarmMonitorTimeOutput{})
	pulumi.RegisterOutputType(AlarmMonitorTimePtrOutput{})
	pulumi.RegisterOutputType(AlarmNoticeNoticeReceiverOutput{})
	pulumi.RegisterOutputType(AlarmNoticeNoticeReceiverArrayOutput{})
	pulumi.RegisterOutputType(AlarmNoticeWebCallbackOutput{})
	pulumi.RegisterOutputType(AlarmNoticeWebCallbackArrayOutput{})
	pulumi.RegisterOutputType(CkafkaConsumerCkafkaOutput{})
	pulumi.RegisterOutputType(CkafkaConsumerCkafkaPtrOutput{})
	pulumi.RegisterOutputType(CkafkaConsumerContentOutput{})
	pulumi.RegisterOutputType(CkafkaConsumerContentPtrOutput{})
	pulumi.RegisterOutputType(ConfigExcludePathOutput{})
	pulumi.RegisterOutputType(ConfigExcludePathArrayOutput{})
	pulumi.RegisterOutputType(ConfigExtraContainerFileOutput{})
	pulumi.RegisterOutputType(ConfigExtraContainerFilePtrOutput{})
	pulumi.RegisterOutputType(ConfigExtraContainerFileWorkloadOutput{})
	pulumi.RegisterOutputType(ConfigExtraContainerFileWorkloadPtrOutput{})
	pulumi.RegisterOutputType(ConfigExtraContainerStdoutOutput{})
	pulumi.RegisterOutputType(ConfigExtraContainerStdoutPtrOutput{})
	pulumi.RegisterOutputType(ConfigExtraContainerStdoutWorkloadOutput{})
	pulumi.RegisterOutputType(ConfigExtraContainerStdoutWorkloadArrayOutput{})
	pulumi.RegisterOutputType(ConfigExtraExcludePathOutput{})
	pulumi.RegisterOutputType(ConfigExtraExcludePathArrayOutput{})
	pulumi.RegisterOutputType(ConfigExtraExtractRuleOutput{})
	pulumi.RegisterOutputType(ConfigExtraExtractRulePtrOutput{})
	pulumi.RegisterOutputType(ConfigExtraExtractRuleFilterKeyRegexOutput{})
	pulumi.RegisterOutputType(ConfigExtraExtractRuleFilterKeyRegexArrayOutput{})
	pulumi.RegisterOutputType(ConfigExtraHostFileOutput{})
	pulumi.RegisterOutputType(ConfigExtraHostFilePtrOutput{})
	pulumi.RegisterOutputType(ConfigExtractRuleOutput{})
	pulumi.RegisterOutputType(ConfigExtractRulePtrOutput{})
	pulumi.RegisterOutputType(ConfigExtractRuleFilterKeyRegexOutput{})
	pulumi.RegisterOutputType(ConfigExtractRuleFilterKeyRegexArrayOutput{})
	pulumi.RegisterOutputType(ConfigExtractRuleMetaTagOutput{})
	pulumi.RegisterOutputType(ConfigExtractRuleMetaTagArrayOutput{})
	pulumi.RegisterOutputType(CosRechargeExtractRuleInfoOutput{})
	pulumi.RegisterOutputType(CosRechargeExtractRuleInfoPtrOutput{})
	pulumi.RegisterOutputType(CosRechargeExtractRuleInfoFilterKeyRegexOutput{})
	pulumi.RegisterOutputType(CosRechargeExtractRuleInfoFilterKeyRegexArrayOutput{})
	pulumi.RegisterOutputType(CosRechargeExtractRuleInfoMetaTagOutput{})
	pulumi.RegisterOutputType(CosRechargeExtractRuleInfoMetaTagArrayOutput{})
	pulumi.RegisterOutputType(CosShipperCompressOutput{})
	pulumi.RegisterOutputType(CosShipperCompressPtrOutput{})
	pulumi.RegisterOutputType(CosShipperContentOutput{})
	pulumi.RegisterOutputType(CosShipperContentPtrOutput{})
	pulumi.RegisterOutputType(CosShipperContentCsvOutput{})
	pulumi.RegisterOutputType(CosShipperContentCsvPtrOutput{})
	pulumi.RegisterOutputType(CosShipperContentJsonOutput{})
	pulumi.RegisterOutputType(CosShipperContentJsonPtrOutput{})
	pulumi.RegisterOutputType(CosShipperFilterRuleOutput{})
	pulumi.RegisterOutputType(CosShipperFilterRuleArrayOutput{})
	pulumi.RegisterOutputType(DataTransformDstResourceOutput{})
	pulumi.RegisterOutputType(DataTransformDstResourceArrayOutput{})
	pulumi.RegisterOutputType(IndexRuleOutput{})
	pulumi.RegisterOutputType(IndexRulePtrOutput{})
	pulumi.RegisterOutputType(IndexRuleFullTextOutput{})
	pulumi.RegisterOutputType(IndexRuleFullTextPtrOutput{})
	pulumi.RegisterOutputType(IndexRuleKeyValueOutput{})
	pulumi.RegisterOutputType(IndexRuleKeyValuePtrOutput{})
	pulumi.RegisterOutputType(IndexRuleKeyValueKeyValueOutput{})
	pulumi.RegisterOutputType(IndexRuleKeyValueKeyValueArrayOutput{})
	pulumi.RegisterOutputType(IndexRuleKeyValueKeyValueValueOutput{})
	pulumi.RegisterOutputType(IndexRuleKeyValueKeyValueValuePtrOutput{})
	pulumi.RegisterOutputType(IndexRuleTagOutput{})
	pulumi.RegisterOutputType(IndexRuleTagPtrOutput{})
	pulumi.RegisterOutputType(IndexRuleTagKeyValueOutput{})
	pulumi.RegisterOutputType(IndexRuleTagKeyValueArrayOutput{})
	pulumi.RegisterOutputType(IndexRuleTagKeyValueValueOutput{})
	pulumi.RegisterOutputType(IndexRuleTagKeyValueValuePtrOutput{})
	pulumi.RegisterOutputType(KafkaRechargeLogRechargeRuleOutput{})
	pulumi.RegisterOutputType(KafkaRechargeLogRechargeRulePtrOutput{})
	pulumi.RegisterOutputType(KafkaRechargeProtocolOutput{})
	pulumi.RegisterOutputType(KafkaRechargeProtocolPtrOutput{})
	pulumi.RegisterOutputType(MachineGroupMachineGroupTypeOutput{})
	pulumi.RegisterOutputType(MachineGroupMachineGroupTypePtrOutput{})
	pulumi.RegisterOutputType(ScheduledSqlDstResourceOutput{})
	pulumi.RegisterOutputType(ScheduledSqlDstResourcePtrOutput{})
	pulumi.RegisterOutputType(GetMachineGroupConfigsConfigOutput{})
	pulumi.RegisterOutputType(GetMachineGroupConfigsConfigArrayOutput{})
	pulumi.RegisterOutputType(GetMachineGroupConfigsConfigExcludePathOutput{})
	pulumi.RegisterOutputType(GetMachineGroupConfigsConfigExcludePathArrayOutput{})
	pulumi.RegisterOutputType(GetMachineGroupConfigsConfigExtractRuleOutput{})
	pulumi.RegisterOutputType(GetMachineGroupConfigsConfigExtractRuleArrayOutput{})
	pulumi.RegisterOutputType(GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexOutput{})
	pulumi.RegisterOutputType(GetMachineGroupConfigsConfigExtractRuleFilterKeyRegexArrayOutput{})
	pulumi.RegisterOutputType(GetMachineGroupConfigsConfigExtractRuleMetaTagOutput{})
	pulumi.RegisterOutputType(GetMachineGroupConfigsConfigExtractRuleMetaTagArrayOutput{})
	pulumi.RegisterOutputType(GetMachinesMachineOutput{})
	pulumi.RegisterOutputType(GetMachinesMachineArrayOutput{})
	pulumi.RegisterOutputType(GetShipperTasksTaskOutput{})
	pulumi.RegisterOutputType(GetShipperTasksTaskArrayOutput{})
}
