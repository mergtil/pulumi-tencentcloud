// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cls

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetShipperTasks(ctx *pulumi.Context, args *GetShipperTasksArgs, opts ...pulumi.InvokeOption) (*GetShipperTasksResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetShipperTasksResult
	err := ctx.Invoke("tencentcloud:Cls/getShipperTasks:getShipperTasks", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getShipperTasks.
type GetShipperTasksArgs struct {
	EndTime          int     `pulumi:"endTime"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	ShipperId        string  `pulumi:"shipperId"`
	StartTime        int     `pulumi:"startTime"`
}

// A collection of values returned by getShipperTasks.
type GetShipperTasksResult struct {
	EndTime int `pulumi:"endTime"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                `pulumi:"id"`
	ResultOutputFile *string               `pulumi:"resultOutputFile"`
	ShipperId        string                `pulumi:"shipperId"`
	StartTime        int                   `pulumi:"startTime"`
	Tasks            []GetShipperTasksTask `pulumi:"tasks"`
}

func GetShipperTasksOutput(ctx *pulumi.Context, args GetShipperTasksOutputArgs, opts ...pulumi.InvokeOption) GetShipperTasksResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetShipperTasksResult, error) {
			args := v.(GetShipperTasksArgs)
			r, err := GetShipperTasks(ctx, &args, opts...)
			var s GetShipperTasksResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetShipperTasksResultOutput)
}

// A collection of arguments for invoking getShipperTasks.
type GetShipperTasksOutputArgs struct {
	EndTime          pulumi.IntInput       `pulumi:"endTime"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	ShipperId        pulumi.StringInput    `pulumi:"shipperId"`
	StartTime        pulumi.IntInput       `pulumi:"startTime"`
}

func (GetShipperTasksOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShipperTasksArgs)(nil)).Elem()
}

// A collection of values returned by getShipperTasks.
type GetShipperTasksResultOutput struct{ *pulumi.OutputState }

func (GetShipperTasksResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetShipperTasksResult)(nil)).Elem()
}

func (o GetShipperTasksResultOutput) ToGetShipperTasksResultOutput() GetShipperTasksResultOutput {
	return o
}

func (o GetShipperTasksResultOutput) ToGetShipperTasksResultOutputWithContext(ctx context.Context) GetShipperTasksResultOutput {
	return o
}

func (o GetShipperTasksResultOutput) EndTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetShipperTasksResult) int { return v.EndTime }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetShipperTasksResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetShipperTasksResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetShipperTasksResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetShipperTasksResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetShipperTasksResultOutput) ShipperId() pulumi.StringOutput {
	return o.ApplyT(func(v GetShipperTasksResult) string { return v.ShipperId }).(pulumi.StringOutput)
}

func (o GetShipperTasksResultOutput) StartTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetShipperTasksResult) int { return v.StartTime }).(pulumi.IntOutput)
}

func (o GetShipperTasksResultOutput) Tasks() GetShipperTasksTaskArrayOutput {
	return o.ApplyT(func(v GetShipperTasksResult) []GetShipperTasksTask { return v.Tasks }).(GetShipperTasksTaskArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetShipperTasksResultOutput{})
}
