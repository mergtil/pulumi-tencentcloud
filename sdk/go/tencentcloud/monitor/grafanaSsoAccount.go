// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitor

import (
	"context"
	"reflect"

	"errors"
	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GrafanaSsoAccount struct {
	pulumi.CustomResourceState

	// grafana instance id.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// account related description.
	Notes pulumi.StringOutput `pulumi:"notes"`
	// grafana role.
	Roles GrafanaSsoAccountRoleArrayOutput `pulumi:"roles"`
	// sub account uin of specific user.
	UserId pulumi.StringOutput `pulumi:"userId"`
}

// NewGrafanaSsoAccount registers a new resource with the given unique name, arguments, and options.
func NewGrafanaSsoAccount(ctx *pulumi.Context,
	name string, args *GrafanaSsoAccountArgs, opts ...pulumi.ResourceOption) (*GrafanaSsoAccount, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.UserId == nil {
		return nil, errors.New("invalid value for required argument 'UserId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GrafanaSsoAccount
	err := ctx.RegisterResource("tencentcloud:Monitor/grafanaSsoAccount:GrafanaSsoAccount", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGrafanaSsoAccount gets an existing GrafanaSsoAccount resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGrafanaSsoAccount(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GrafanaSsoAccountState, opts ...pulumi.ResourceOption) (*GrafanaSsoAccount, error) {
	var resource GrafanaSsoAccount
	err := ctx.ReadResource("tencentcloud:Monitor/grafanaSsoAccount:GrafanaSsoAccount", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GrafanaSsoAccount resources.
type grafanaSsoAccountState struct {
	// grafana instance id.
	InstanceId *string `pulumi:"instanceId"`
	// account related description.
	Notes *string `pulumi:"notes"`
	// grafana role.
	Roles []GrafanaSsoAccountRole `pulumi:"roles"`
	// sub account uin of specific user.
	UserId *string `pulumi:"userId"`
}

type GrafanaSsoAccountState struct {
	// grafana instance id.
	InstanceId pulumi.StringPtrInput
	// account related description.
	Notes pulumi.StringPtrInput
	// grafana role.
	Roles GrafanaSsoAccountRoleArrayInput
	// sub account uin of specific user.
	UserId pulumi.StringPtrInput
}

func (GrafanaSsoAccountState) ElementType() reflect.Type {
	return reflect.TypeOf((*grafanaSsoAccountState)(nil)).Elem()
}

type grafanaSsoAccountArgs struct {
	// grafana instance id.
	InstanceId string `pulumi:"instanceId"`
	// account related description.
	Notes *string `pulumi:"notes"`
	// grafana role.
	Roles []GrafanaSsoAccountRole `pulumi:"roles"`
	// sub account uin of specific user.
	UserId string `pulumi:"userId"`
}

// The set of arguments for constructing a GrafanaSsoAccount resource.
type GrafanaSsoAccountArgs struct {
	// grafana instance id.
	InstanceId pulumi.StringInput
	// account related description.
	Notes pulumi.StringPtrInput
	// grafana role.
	Roles GrafanaSsoAccountRoleArrayInput
	// sub account uin of specific user.
	UserId pulumi.StringInput
}

func (GrafanaSsoAccountArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*grafanaSsoAccountArgs)(nil)).Elem()
}

type GrafanaSsoAccountInput interface {
	pulumi.Input

	ToGrafanaSsoAccountOutput() GrafanaSsoAccountOutput
	ToGrafanaSsoAccountOutputWithContext(ctx context.Context) GrafanaSsoAccountOutput
}

func (*GrafanaSsoAccount) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaSsoAccount)(nil)).Elem()
}

func (i *GrafanaSsoAccount) ToGrafanaSsoAccountOutput() GrafanaSsoAccountOutput {
	return i.ToGrafanaSsoAccountOutputWithContext(context.Background())
}

func (i *GrafanaSsoAccount) ToGrafanaSsoAccountOutputWithContext(ctx context.Context) GrafanaSsoAccountOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaSsoAccountOutput)
}

// GrafanaSsoAccountArrayInput is an input type that accepts GrafanaSsoAccountArray and GrafanaSsoAccountArrayOutput values.
// You can construct a concrete instance of `GrafanaSsoAccountArrayInput` via:
//
//	GrafanaSsoAccountArray{ GrafanaSsoAccountArgs{...} }
type GrafanaSsoAccountArrayInput interface {
	pulumi.Input

	ToGrafanaSsoAccountArrayOutput() GrafanaSsoAccountArrayOutput
	ToGrafanaSsoAccountArrayOutputWithContext(context.Context) GrafanaSsoAccountArrayOutput
}

type GrafanaSsoAccountArray []GrafanaSsoAccountInput

func (GrafanaSsoAccountArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GrafanaSsoAccount)(nil)).Elem()
}

func (i GrafanaSsoAccountArray) ToGrafanaSsoAccountArrayOutput() GrafanaSsoAccountArrayOutput {
	return i.ToGrafanaSsoAccountArrayOutputWithContext(context.Background())
}

func (i GrafanaSsoAccountArray) ToGrafanaSsoAccountArrayOutputWithContext(ctx context.Context) GrafanaSsoAccountArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaSsoAccountArrayOutput)
}

// GrafanaSsoAccountMapInput is an input type that accepts GrafanaSsoAccountMap and GrafanaSsoAccountMapOutput values.
// You can construct a concrete instance of `GrafanaSsoAccountMapInput` via:
//
//	GrafanaSsoAccountMap{ "key": GrafanaSsoAccountArgs{...} }
type GrafanaSsoAccountMapInput interface {
	pulumi.Input

	ToGrafanaSsoAccountMapOutput() GrafanaSsoAccountMapOutput
	ToGrafanaSsoAccountMapOutputWithContext(context.Context) GrafanaSsoAccountMapOutput
}

type GrafanaSsoAccountMap map[string]GrafanaSsoAccountInput

func (GrafanaSsoAccountMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GrafanaSsoAccount)(nil)).Elem()
}

func (i GrafanaSsoAccountMap) ToGrafanaSsoAccountMapOutput() GrafanaSsoAccountMapOutput {
	return i.ToGrafanaSsoAccountMapOutputWithContext(context.Background())
}

func (i GrafanaSsoAccountMap) ToGrafanaSsoAccountMapOutputWithContext(ctx context.Context) GrafanaSsoAccountMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaSsoAccountMapOutput)
}

type GrafanaSsoAccountOutput struct{ *pulumi.OutputState }

func (GrafanaSsoAccountOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaSsoAccount)(nil)).Elem()
}

func (o GrafanaSsoAccountOutput) ToGrafanaSsoAccountOutput() GrafanaSsoAccountOutput {
	return o
}

func (o GrafanaSsoAccountOutput) ToGrafanaSsoAccountOutputWithContext(ctx context.Context) GrafanaSsoAccountOutput {
	return o
}

// grafana instance id.
func (o GrafanaSsoAccountOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *GrafanaSsoAccount) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// account related description.
func (o GrafanaSsoAccountOutput) Notes() pulumi.StringOutput {
	return o.ApplyT(func(v *GrafanaSsoAccount) pulumi.StringOutput { return v.Notes }).(pulumi.StringOutput)
}

// grafana role.
func (o GrafanaSsoAccountOutput) Roles() GrafanaSsoAccountRoleArrayOutput {
	return o.ApplyT(func(v *GrafanaSsoAccount) GrafanaSsoAccountRoleArrayOutput { return v.Roles }).(GrafanaSsoAccountRoleArrayOutput)
}

// sub account uin of specific user.
func (o GrafanaSsoAccountOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v *GrafanaSsoAccount) pulumi.StringOutput { return v.UserId }).(pulumi.StringOutput)
}

type GrafanaSsoAccountArrayOutput struct{ *pulumi.OutputState }

func (GrafanaSsoAccountArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GrafanaSsoAccount)(nil)).Elem()
}

func (o GrafanaSsoAccountArrayOutput) ToGrafanaSsoAccountArrayOutput() GrafanaSsoAccountArrayOutput {
	return o
}

func (o GrafanaSsoAccountArrayOutput) ToGrafanaSsoAccountArrayOutputWithContext(ctx context.Context) GrafanaSsoAccountArrayOutput {
	return o
}

func (o GrafanaSsoAccountArrayOutput) Index(i pulumi.IntInput) GrafanaSsoAccountOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GrafanaSsoAccount {
		return vs[0].([]*GrafanaSsoAccount)[vs[1].(int)]
	}).(GrafanaSsoAccountOutput)
}

type GrafanaSsoAccountMapOutput struct{ *pulumi.OutputState }

func (GrafanaSsoAccountMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GrafanaSsoAccount)(nil)).Elem()
}

func (o GrafanaSsoAccountMapOutput) ToGrafanaSsoAccountMapOutput() GrafanaSsoAccountMapOutput {
	return o
}

func (o GrafanaSsoAccountMapOutput) ToGrafanaSsoAccountMapOutputWithContext(ctx context.Context) GrafanaSsoAccountMapOutput {
	return o
}

func (o GrafanaSsoAccountMapOutput) MapIndex(k pulumi.StringInput) GrafanaSsoAccountOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GrafanaSsoAccount {
		return vs[0].(map[string]*GrafanaSsoAccount)[vs[1].(string)]
	}).(GrafanaSsoAccountOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GrafanaSsoAccountInput)(nil)).Elem(), &GrafanaSsoAccount{})
	pulumi.RegisterInputType(reflect.TypeOf((*GrafanaSsoAccountArrayInput)(nil)).Elem(), GrafanaSsoAccountArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GrafanaSsoAccountMapInput)(nil)).Elem(), GrafanaSsoAccountMap{})
	pulumi.RegisterOutputType(GrafanaSsoAccountOutput{})
	pulumi.RegisterOutputType(GrafanaSsoAccountArrayOutput{})
	pulumi.RegisterOutputType(GrafanaSsoAccountMapOutput{})
}
