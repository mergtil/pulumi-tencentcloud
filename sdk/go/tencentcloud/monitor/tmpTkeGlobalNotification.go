// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitor

import (
	"context"
	"reflect"

	"errors"
	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type TmpTkeGlobalNotification struct {
	pulumi.CustomResourceState

	// Instance Id.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Alarm notification channels.
	Notification TmpTkeGlobalNotificationNotificationOutput `pulumi:"notification"`
}

// NewTmpTkeGlobalNotification registers a new resource with the given unique name, arguments, and options.
func NewTmpTkeGlobalNotification(ctx *pulumi.Context,
	name string, args *TmpTkeGlobalNotificationArgs, opts ...pulumi.ResourceOption) (*TmpTkeGlobalNotification, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.Notification == nil {
		return nil, errors.New("invalid value for required argument 'Notification'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TmpTkeGlobalNotification
	err := ctx.RegisterResource("tencentcloud:Monitor/tmpTkeGlobalNotification:TmpTkeGlobalNotification", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTmpTkeGlobalNotification gets an existing TmpTkeGlobalNotification resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTmpTkeGlobalNotification(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TmpTkeGlobalNotificationState, opts ...pulumi.ResourceOption) (*TmpTkeGlobalNotification, error) {
	var resource TmpTkeGlobalNotification
	err := ctx.ReadResource("tencentcloud:Monitor/tmpTkeGlobalNotification:TmpTkeGlobalNotification", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TmpTkeGlobalNotification resources.
type tmpTkeGlobalNotificationState struct {
	// Instance Id.
	InstanceId *string `pulumi:"instanceId"`
	// Alarm notification channels.
	Notification *TmpTkeGlobalNotificationNotification `pulumi:"notification"`
}

type TmpTkeGlobalNotificationState struct {
	// Instance Id.
	InstanceId pulumi.StringPtrInput
	// Alarm notification channels.
	Notification TmpTkeGlobalNotificationNotificationPtrInput
}

func (TmpTkeGlobalNotificationState) ElementType() reflect.Type {
	return reflect.TypeOf((*tmpTkeGlobalNotificationState)(nil)).Elem()
}

type tmpTkeGlobalNotificationArgs struct {
	// Instance Id.
	InstanceId string `pulumi:"instanceId"`
	// Alarm notification channels.
	Notification TmpTkeGlobalNotificationNotification `pulumi:"notification"`
}

// The set of arguments for constructing a TmpTkeGlobalNotification resource.
type TmpTkeGlobalNotificationArgs struct {
	// Instance Id.
	InstanceId pulumi.StringInput
	// Alarm notification channels.
	Notification TmpTkeGlobalNotificationNotificationInput
}

func (TmpTkeGlobalNotificationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tmpTkeGlobalNotificationArgs)(nil)).Elem()
}

type TmpTkeGlobalNotificationInput interface {
	pulumi.Input

	ToTmpTkeGlobalNotificationOutput() TmpTkeGlobalNotificationOutput
	ToTmpTkeGlobalNotificationOutputWithContext(ctx context.Context) TmpTkeGlobalNotificationOutput
}

func (*TmpTkeGlobalNotification) ElementType() reflect.Type {
	return reflect.TypeOf((**TmpTkeGlobalNotification)(nil)).Elem()
}

func (i *TmpTkeGlobalNotification) ToTmpTkeGlobalNotificationOutput() TmpTkeGlobalNotificationOutput {
	return i.ToTmpTkeGlobalNotificationOutputWithContext(context.Background())
}

func (i *TmpTkeGlobalNotification) ToTmpTkeGlobalNotificationOutputWithContext(ctx context.Context) TmpTkeGlobalNotificationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TmpTkeGlobalNotificationOutput)
}

// TmpTkeGlobalNotificationArrayInput is an input type that accepts TmpTkeGlobalNotificationArray and TmpTkeGlobalNotificationArrayOutput values.
// You can construct a concrete instance of `TmpTkeGlobalNotificationArrayInput` via:
//
//	TmpTkeGlobalNotificationArray{ TmpTkeGlobalNotificationArgs{...} }
type TmpTkeGlobalNotificationArrayInput interface {
	pulumi.Input

	ToTmpTkeGlobalNotificationArrayOutput() TmpTkeGlobalNotificationArrayOutput
	ToTmpTkeGlobalNotificationArrayOutputWithContext(context.Context) TmpTkeGlobalNotificationArrayOutput
}

type TmpTkeGlobalNotificationArray []TmpTkeGlobalNotificationInput

func (TmpTkeGlobalNotificationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TmpTkeGlobalNotification)(nil)).Elem()
}

func (i TmpTkeGlobalNotificationArray) ToTmpTkeGlobalNotificationArrayOutput() TmpTkeGlobalNotificationArrayOutput {
	return i.ToTmpTkeGlobalNotificationArrayOutputWithContext(context.Background())
}

func (i TmpTkeGlobalNotificationArray) ToTmpTkeGlobalNotificationArrayOutputWithContext(ctx context.Context) TmpTkeGlobalNotificationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TmpTkeGlobalNotificationArrayOutput)
}

// TmpTkeGlobalNotificationMapInput is an input type that accepts TmpTkeGlobalNotificationMap and TmpTkeGlobalNotificationMapOutput values.
// You can construct a concrete instance of `TmpTkeGlobalNotificationMapInput` via:
//
//	TmpTkeGlobalNotificationMap{ "key": TmpTkeGlobalNotificationArgs{...} }
type TmpTkeGlobalNotificationMapInput interface {
	pulumi.Input

	ToTmpTkeGlobalNotificationMapOutput() TmpTkeGlobalNotificationMapOutput
	ToTmpTkeGlobalNotificationMapOutputWithContext(context.Context) TmpTkeGlobalNotificationMapOutput
}

type TmpTkeGlobalNotificationMap map[string]TmpTkeGlobalNotificationInput

func (TmpTkeGlobalNotificationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TmpTkeGlobalNotification)(nil)).Elem()
}

func (i TmpTkeGlobalNotificationMap) ToTmpTkeGlobalNotificationMapOutput() TmpTkeGlobalNotificationMapOutput {
	return i.ToTmpTkeGlobalNotificationMapOutputWithContext(context.Background())
}

func (i TmpTkeGlobalNotificationMap) ToTmpTkeGlobalNotificationMapOutputWithContext(ctx context.Context) TmpTkeGlobalNotificationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TmpTkeGlobalNotificationMapOutput)
}

type TmpTkeGlobalNotificationOutput struct{ *pulumi.OutputState }

func (TmpTkeGlobalNotificationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TmpTkeGlobalNotification)(nil)).Elem()
}

func (o TmpTkeGlobalNotificationOutput) ToTmpTkeGlobalNotificationOutput() TmpTkeGlobalNotificationOutput {
	return o
}

func (o TmpTkeGlobalNotificationOutput) ToTmpTkeGlobalNotificationOutputWithContext(ctx context.Context) TmpTkeGlobalNotificationOutput {
	return o
}

// Instance Id.
func (o TmpTkeGlobalNotificationOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *TmpTkeGlobalNotification) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Alarm notification channels.
func (o TmpTkeGlobalNotificationOutput) Notification() TmpTkeGlobalNotificationNotificationOutput {
	return o.ApplyT(func(v *TmpTkeGlobalNotification) TmpTkeGlobalNotificationNotificationOutput { return v.Notification }).(TmpTkeGlobalNotificationNotificationOutput)
}

type TmpTkeGlobalNotificationArrayOutput struct{ *pulumi.OutputState }

func (TmpTkeGlobalNotificationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TmpTkeGlobalNotification)(nil)).Elem()
}

func (o TmpTkeGlobalNotificationArrayOutput) ToTmpTkeGlobalNotificationArrayOutput() TmpTkeGlobalNotificationArrayOutput {
	return o
}

func (o TmpTkeGlobalNotificationArrayOutput) ToTmpTkeGlobalNotificationArrayOutputWithContext(ctx context.Context) TmpTkeGlobalNotificationArrayOutput {
	return o
}

func (o TmpTkeGlobalNotificationArrayOutput) Index(i pulumi.IntInput) TmpTkeGlobalNotificationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TmpTkeGlobalNotification {
		return vs[0].([]*TmpTkeGlobalNotification)[vs[1].(int)]
	}).(TmpTkeGlobalNotificationOutput)
}

type TmpTkeGlobalNotificationMapOutput struct{ *pulumi.OutputState }

func (TmpTkeGlobalNotificationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TmpTkeGlobalNotification)(nil)).Elem()
}

func (o TmpTkeGlobalNotificationMapOutput) ToTmpTkeGlobalNotificationMapOutput() TmpTkeGlobalNotificationMapOutput {
	return o
}

func (o TmpTkeGlobalNotificationMapOutput) ToTmpTkeGlobalNotificationMapOutputWithContext(ctx context.Context) TmpTkeGlobalNotificationMapOutput {
	return o
}

func (o TmpTkeGlobalNotificationMapOutput) MapIndex(k pulumi.StringInput) TmpTkeGlobalNotificationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TmpTkeGlobalNotification {
		return vs[0].(map[string]*TmpTkeGlobalNotification)[vs[1].(string)]
	}).(TmpTkeGlobalNotificationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TmpTkeGlobalNotificationInput)(nil)).Elem(), &TmpTkeGlobalNotification{})
	pulumi.RegisterInputType(reflect.TypeOf((*TmpTkeGlobalNotificationArrayInput)(nil)).Elem(), TmpTkeGlobalNotificationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TmpTkeGlobalNotificationMapInput)(nil)).Elem(), TmpTkeGlobalNotificationMap{})
	pulumi.RegisterOutputType(TmpTkeGlobalNotificationOutput{})
	pulumi.RegisterOutputType(TmpTkeGlobalNotificationArrayOutput{})
	pulumi.RegisterOutputType(TmpTkeGlobalNotificationMapOutput{})
}
