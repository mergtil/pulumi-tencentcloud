// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitor

import (
	"context"
	"reflect"

	"errors"
	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type TmpTkeClusterAgent struct {
	pulumi.CustomResourceState

	// agent list.
	Agents TmpTkeClusterAgentAgentsOutput `pulumi:"agents"`
	// Instance Id.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
}

// NewTmpTkeClusterAgent registers a new resource with the given unique name, arguments, and options.
func NewTmpTkeClusterAgent(ctx *pulumi.Context,
	name string, args *TmpTkeClusterAgentArgs, opts ...pulumi.ResourceOption) (*TmpTkeClusterAgent, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Agents == nil {
		return nil, errors.New("invalid value for required argument 'Agents'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TmpTkeClusterAgent
	err := ctx.RegisterResource("tencentcloud:Monitor/tmpTkeClusterAgent:TmpTkeClusterAgent", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTmpTkeClusterAgent gets an existing TmpTkeClusterAgent resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTmpTkeClusterAgent(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TmpTkeClusterAgentState, opts ...pulumi.ResourceOption) (*TmpTkeClusterAgent, error) {
	var resource TmpTkeClusterAgent
	err := ctx.ReadResource("tencentcloud:Monitor/tmpTkeClusterAgent:TmpTkeClusterAgent", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TmpTkeClusterAgent resources.
type tmpTkeClusterAgentState struct {
	// agent list.
	Agents *TmpTkeClusterAgentAgents `pulumi:"agents"`
	// Instance Id.
	InstanceId *string `pulumi:"instanceId"`
}

type TmpTkeClusterAgentState struct {
	// agent list.
	Agents TmpTkeClusterAgentAgentsPtrInput
	// Instance Id.
	InstanceId pulumi.StringPtrInput
}

func (TmpTkeClusterAgentState) ElementType() reflect.Type {
	return reflect.TypeOf((*tmpTkeClusterAgentState)(nil)).Elem()
}

type tmpTkeClusterAgentArgs struct {
	// agent list.
	Agents TmpTkeClusterAgentAgents `pulumi:"agents"`
	// Instance Id.
	InstanceId string `pulumi:"instanceId"`
}

// The set of arguments for constructing a TmpTkeClusterAgent resource.
type TmpTkeClusterAgentArgs struct {
	// agent list.
	Agents TmpTkeClusterAgentAgentsInput
	// Instance Id.
	InstanceId pulumi.StringInput
}

func (TmpTkeClusterAgentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tmpTkeClusterAgentArgs)(nil)).Elem()
}

type TmpTkeClusterAgentInput interface {
	pulumi.Input

	ToTmpTkeClusterAgentOutput() TmpTkeClusterAgentOutput
	ToTmpTkeClusterAgentOutputWithContext(ctx context.Context) TmpTkeClusterAgentOutput
}

func (*TmpTkeClusterAgent) ElementType() reflect.Type {
	return reflect.TypeOf((**TmpTkeClusterAgent)(nil)).Elem()
}

func (i *TmpTkeClusterAgent) ToTmpTkeClusterAgentOutput() TmpTkeClusterAgentOutput {
	return i.ToTmpTkeClusterAgentOutputWithContext(context.Background())
}

func (i *TmpTkeClusterAgent) ToTmpTkeClusterAgentOutputWithContext(ctx context.Context) TmpTkeClusterAgentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TmpTkeClusterAgentOutput)
}

// TmpTkeClusterAgentArrayInput is an input type that accepts TmpTkeClusterAgentArray and TmpTkeClusterAgentArrayOutput values.
// You can construct a concrete instance of `TmpTkeClusterAgentArrayInput` via:
//
//	TmpTkeClusterAgentArray{ TmpTkeClusterAgentArgs{...} }
type TmpTkeClusterAgentArrayInput interface {
	pulumi.Input

	ToTmpTkeClusterAgentArrayOutput() TmpTkeClusterAgentArrayOutput
	ToTmpTkeClusterAgentArrayOutputWithContext(context.Context) TmpTkeClusterAgentArrayOutput
}

type TmpTkeClusterAgentArray []TmpTkeClusterAgentInput

func (TmpTkeClusterAgentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TmpTkeClusterAgent)(nil)).Elem()
}

func (i TmpTkeClusterAgentArray) ToTmpTkeClusterAgentArrayOutput() TmpTkeClusterAgentArrayOutput {
	return i.ToTmpTkeClusterAgentArrayOutputWithContext(context.Background())
}

func (i TmpTkeClusterAgentArray) ToTmpTkeClusterAgentArrayOutputWithContext(ctx context.Context) TmpTkeClusterAgentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TmpTkeClusterAgentArrayOutput)
}

// TmpTkeClusterAgentMapInput is an input type that accepts TmpTkeClusterAgentMap and TmpTkeClusterAgentMapOutput values.
// You can construct a concrete instance of `TmpTkeClusterAgentMapInput` via:
//
//	TmpTkeClusterAgentMap{ "key": TmpTkeClusterAgentArgs{...} }
type TmpTkeClusterAgentMapInput interface {
	pulumi.Input

	ToTmpTkeClusterAgentMapOutput() TmpTkeClusterAgentMapOutput
	ToTmpTkeClusterAgentMapOutputWithContext(context.Context) TmpTkeClusterAgentMapOutput
}

type TmpTkeClusterAgentMap map[string]TmpTkeClusterAgentInput

func (TmpTkeClusterAgentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TmpTkeClusterAgent)(nil)).Elem()
}

func (i TmpTkeClusterAgentMap) ToTmpTkeClusterAgentMapOutput() TmpTkeClusterAgentMapOutput {
	return i.ToTmpTkeClusterAgentMapOutputWithContext(context.Background())
}

func (i TmpTkeClusterAgentMap) ToTmpTkeClusterAgentMapOutputWithContext(ctx context.Context) TmpTkeClusterAgentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TmpTkeClusterAgentMapOutput)
}

type TmpTkeClusterAgentOutput struct{ *pulumi.OutputState }

func (TmpTkeClusterAgentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TmpTkeClusterAgent)(nil)).Elem()
}

func (o TmpTkeClusterAgentOutput) ToTmpTkeClusterAgentOutput() TmpTkeClusterAgentOutput {
	return o
}

func (o TmpTkeClusterAgentOutput) ToTmpTkeClusterAgentOutputWithContext(ctx context.Context) TmpTkeClusterAgentOutput {
	return o
}

// agent list.
func (o TmpTkeClusterAgentOutput) Agents() TmpTkeClusterAgentAgentsOutput {
	return o.ApplyT(func(v *TmpTkeClusterAgent) TmpTkeClusterAgentAgentsOutput { return v.Agents }).(TmpTkeClusterAgentAgentsOutput)
}

// Instance Id.
func (o TmpTkeClusterAgentOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *TmpTkeClusterAgent) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

type TmpTkeClusterAgentArrayOutput struct{ *pulumi.OutputState }

func (TmpTkeClusterAgentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TmpTkeClusterAgent)(nil)).Elem()
}

func (o TmpTkeClusterAgentArrayOutput) ToTmpTkeClusterAgentArrayOutput() TmpTkeClusterAgentArrayOutput {
	return o
}

func (o TmpTkeClusterAgentArrayOutput) ToTmpTkeClusterAgentArrayOutputWithContext(ctx context.Context) TmpTkeClusterAgentArrayOutput {
	return o
}

func (o TmpTkeClusterAgentArrayOutput) Index(i pulumi.IntInput) TmpTkeClusterAgentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TmpTkeClusterAgent {
		return vs[0].([]*TmpTkeClusterAgent)[vs[1].(int)]
	}).(TmpTkeClusterAgentOutput)
}

type TmpTkeClusterAgentMapOutput struct{ *pulumi.OutputState }

func (TmpTkeClusterAgentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TmpTkeClusterAgent)(nil)).Elem()
}

func (o TmpTkeClusterAgentMapOutput) ToTmpTkeClusterAgentMapOutput() TmpTkeClusterAgentMapOutput {
	return o
}

func (o TmpTkeClusterAgentMapOutput) ToTmpTkeClusterAgentMapOutputWithContext(ctx context.Context) TmpTkeClusterAgentMapOutput {
	return o
}

func (o TmpTkeClusterAgentMapOutput) MapIndex(k pulumi.StringInput) TmpTkeClusterAgentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TmpTkeClusterAgent {
		return vs[0].(map[string]*TmpTkeClusterAgent)[vs[1].(string)]
	}).(TmpTkeClusterAgentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TmpTkeClusterAgentInput)(nil)).Elem(), &TmpTkeClusterAgent{})
	pulumi.RegisterInputType(reflect.TypeOf((*TmpTkeClusterAgentArrayInput)(nil)).Elem(), TmpTkeClusterAgentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TmpTkeClusterAgentMapInput)(nil)).Elem(), TmpTkeClusterAgentMap{})
	pulumi.RegisterOutputType(TmpTkeClusterAgentOutput{})
	pulumi.RegisterOutputType(TmpTkeClusterAgentArrayOutput{})
	pulumi.RegisterOutputType(TmpTkeClusterAgentMapOutput{})
}
