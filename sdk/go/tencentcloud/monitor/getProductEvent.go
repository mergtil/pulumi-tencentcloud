// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitor

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetProductEvent(ctx *pulumi.Context, args *GetProductEventArgs, opts ...pulumi.InvokeOption) (*GetProductEventResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetProductEventResult
	err := ctx.Invoke("tencentcloud:Monitor/getProductEvent:getProductEvent", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProductEvent.
type GetProductEventArgs struct {
	Dimensions       []GetProductEventDimension `pulumi:"dimensions"`
	EndTime          *int                       `pulumi:"endTime"`
	EventNames       []string                   `pulumi:"eventNames"`
	InstanceIds      []string                   `pulumi:"instanceIds"`
	IsAlarmConfig    *int                       `pulumi:"isAlarmConfig"`
	ProductNames     []string                   `pulumi:"productNames"`
	ProjectIds       []string                   `pulumi:"projectIds"`
	RegionLists      []string                   `pulumi:"regionLists"`
	ResultOutputFile *string                    `pulumi:"resultOutputFile"`
	StartTime        *int                       `pulumi:"startTime"`
	Statuses         []string                   `pulumi:"statuses"`
	Types            []string                   `pulumi:"types"`
}

// A collection of values returned by getProductEvent.
type GetProductEventResult struct {
	Dimensions []GetProductEventDimension `pulumi:"dimensions"`
	EndTime    *int                       `pulumi:"endTime"`
	EventNames []string                   `pulumi:"eventNames"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                `pulumi:"id"`
	InstanceIds      []string              `pulumi:"instanceIds"`
	IsAlarmConfig    *int                  `pulumi:"isAlarmConfig"`
	Lists            []GetProductEventList `pulumi:"lists"`
	ProductNames     []string              `pulumi:"productNames"`
	ProjectIds       []string              `pulumi:"projectIds"`
	RegionLists      []string              `pulumi:"regionLists"`
	ResultOutputFile *string               `pulumi:"resultOutputFile"`
	StartTime        *int                  `pulumi:"startTime"`
	Statuses         []string              `pulumi:"statuses"`
	Types            []string              `pulumi:"types"`
}

func GetProductEventOutput(ctx *pulumi.Context, args GetProductEventOutputArgs, opts ...pulumi.InvokeOption) GetProductEventResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetProductEventResult, error) {
			args := v.(GetProductEventArgs)
			r, err := GetProductEvent(ctx, &args, opts...)
			var s GetProductEventResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetProductEventResultOutput)
}

// A collection of arguments for invoking getProductEvent.
type GetProductEventOutputArgs struct {
	Dimensions       GetProductEventDimensionArrayInput `pulumi:"dimensions"`
	EndTime          pulumi.IntPtrInput                 `pulumi:"endTime"`
	EventNames       pulumi.StringArrayInput            `pulumi:"eventNames"`
	InstanceIds      pulumi.StringArrayInput            `pulumi:"instanceIds"`
	IsAlarmConfig    pulumi.IntPtrInput                 `pulumi:"isAlarmConfig"`
	ProductNames     pulumi.StringArrayInput            `pulumi:"productNames"`
	ProjectIds       pulumi.StringArrayInput            `pulumi:"projectIds"`
	RegionLists      pulumi.StringArrayInput            `pulumi:"regionLists"`
	ResultOutputFile pulumi.StringPtrInput              `pulumi:"resultOutputFile"`
	StartTime        pulumi.IntPtrInput                 `pulumi:"startTime"`
	Statuses         pulumi.StringArrayInput            `pulumi:"statuses"`
	Types            pulumi.StringArrayInput            `pulumi:"types"`
}

func (GetProductEventOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProductEventArgs)(nil)).Elem()
}

// A collection of values returned by getProductEvent.
type GetProductEventResultOutput struct{ *pulumi.OutputState }

func (GetProductEventResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProductEventResult)(nil)).Elem()
}

func (o GetProductEventResultOutput) ToGetProductEventResultOutput() GetProductEventResultOutput {
	return o
}

func (o GetProductEventResultOutput) ToGetProductEventResultOutputWithContext(ctx context.Context) GetProductEventResultOutput {
	return o
}

func (o GetProductEventResultOutput) Dimensions() GetProductEventDimensionArrayOutput {
	return o.ApplyT(func(v GetProductEventResult) []GetProductEventDimension { return v.Dimensions }).(GetProductEventDimensionArrayOutput)
}

func (o GetProductEventResultOutput) EndTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetProductEventResult) *int { return v.EndTime }).(pulumi.IntPtrOutput)
}

func (o GetProductEventResultOutput) EventNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProductEventResult) []string { return v.EventNames }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetProductEventResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProductEventResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetProductEventResultOutput) InstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProductEventResult) []string { return v.InstanceIds }).(pulumi.StringArrayOutput)
}

func (o GetProductEventResultOutput) IsAlarmConfig() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetProductEventResult) *int { return v.IsAlarmConfig }).(pulumi.IntPtrOutput)
}

func (o GetProductEventResultOutput) Lists() GetProductEventListArrayOutput {
	return o.ApplyT(func(v GetProductEventResult) []GetProductEventList { return v.Lists }).(GetProductEventListArrayOutput)
}

func (o GetProductEventResultOutput) ProductNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProductEventResult) []string { return v.ProductNames }).(pulumi.StringArrayOutput)
}

func (o GetProductEventResultOutput) ProjectIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProductEventResult) []string { return v.ProjectIds }).(pulumi.StringArrayOutput)
}

func (o GetProductEventResultOutput) RegionLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProductEventResult) []string { return v.RegionLists }).(pulumi.StringArrayOutput)
}

func (o GetProductEventResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProductEventResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetProductEventResultOutput) StartTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetProductEventResult) *int { return v.StartTime }).(pulumi.IntPtrOutput)
}

func (o GetProductEventResultOutput) Statuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProductEventResult) []string { return v.Statuses }).(pulumi.StringArrayOutput)
}

func (o GetProductEventResultOutput) Types() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProductEventResult) []string { return v.Types }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetProductEventResultOutput{})
}
