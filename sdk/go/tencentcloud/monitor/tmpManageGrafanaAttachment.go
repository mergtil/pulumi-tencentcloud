// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitor

import (
	"context"
	"reflect"

	"errors"
	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type TmpManageGrafanaAttachment struct {
	pulumi.CustomResourceState

	// Grafana instance ID.
	GrafanaId pulumi.StringOutput `pulumi:"grafanaId"`
	// Prometheus instance ID.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
}

// NewTmpManageGrafanaAttachment registers a new resource with the given unique name, arguments, and options.
func NewTmpManageGrafanaAttachment(ctx *pulumi.Context,
	name string, args *TmpManageGrafanaAttachmentArgs, opts ...pulumi.ResourceOption) (*TmpManageGrafanaAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GrafanaId == nil {
		return nil, errors.New("invalid value for required argument 'GrafanaId'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource TmpManageGrafanaAttachment
	err := ctx.RegisterResource("tencentcloud:Monitor/tmpManageGrafanaAttachment:TmpManageGrafanaAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetTmpManageGrafanaAttachment gets an existing TmpManageGrafanaAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTmpManageGrafanaAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *TmpManageGrafanaAttachmentState, opts ...pulumi.ResourceOption) (*TmpManageGrafanaAttachment, error) {
	var resource TmpManageGrafanaAttachment
	err := ctx.ReadResource("tencentcloud:Monitor/tmpManageGrafanaAttachment:TmpManageGrafanaAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering TmpManageGrafanaAttachment resources.
type tmpManageGrafanaAttachmentState struct {
	// Grafana instance ID.
	GrafanaId *string `pulumi:"grafanaId"`
	// Prometheus instance ID.
	InstanceId *string `pulumi:"instanceId"`
}

type TmpManageGrafanaAttachmentState struct {
	// Grafana instance ID.
	GrafanaId pulumi.StringPtrInput
	// Prometheus instance ID.
	InstanceId pulumi.StringPtrInput
}

func (TmpManageGrafanaAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*tmpManageGrafanaAttachmentState)(nil)).Elem()
}

type tmpManageGrafanaAttachmentArgs struct {
	// Grafana instance ID.
	GrafanaId string `pulumi:"grafanaId"`
	// Prometheus instance ID.
	InstanceId string `pulumi:"instanceId"`
}

// The set of arguments for constructing a TmpManageGrafanaAttachment resource.
type TmpManageGrafanaAttachmentArgs struct {
	// Grafana instance ID.
	GrafanaId pulumi.StringInput
	// Prometheus instance ID.
	InstanceId pulumi.StringInput
}

func (TmpManageGrafanaAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*tmpManageGrafanaAttachmentArgs)(nil)).Elem()
}

type TmpManageGrafanaAttachmentInput interface {
	pulumi.Input

	ToTmpManageGrafanaAttachmentOutput() TmpManageGrafanaAttachmentOutput
	ToTmpManageGrafanaAttachmentOutputWithContext(ctx context.Context) TmpManageGrafanaAttachmentOutput
}

func (*TmpManageGrafanaAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**TmpManageGrafanaAttachment)(nil)).Elem()
}

func (i *TmpManageGrafanaAttachment) ToTmpManageGrafanaAttachmentOutput() TmpManageGrafanaAttachmentOutput {
	return i.ToTmpManageGrafanaAttachmentOutputWithContext(context.Background())
}

func (i *TmpManageGrafanaAttachment) ToTmpManageGrafanaAttachmentOutputWithContext(ctx context.Context) TmpManageGrafanaAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TmpManageGrafanaAttachmentOutput)
}

// TmpManageGrafanaAttachmentArrayInput is an input type that accepts TmpManageGrafanaAttachmentArray and TmpManageGrafanaAttachmentArrayOutput values.
// You can construct a concrete instance of `TmpManageGrafanaAttachmentArrayInput` via:
//
//	TmpManageGrafanaAttachmentArray{ TmpManageGrafanaAttachmentArgs{...} }
type TmpManageGrafanaAttachmentArrayInput interface {
	pulumi.Input

	ToTmpManageGrafanaAttachmentArrayOutput() TmpManageGrafanaAttachmentArrayOutput
	ToTmpManageGrafanaAttachmentArrayOutputWithContext(context.Context) TmpManageGrafanaAttachmentArrayOutput
}

type TmpManageGrafanaAttachmentArray []TmpManageGrafanaAttachmentInput

func (TmpManageGrafanaAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TmpManageGrafanaAttachment)(nil)).Elem()
}

func (i TmpManageGrafanaAttachmentArray) ToTmpManageGrafanaAttachmentArrayOutput() TmpManageGrafanaAttachmentArrayOutput {
	return i.ToTmpManageGrafanaAttachmentArrayOutputWithContext(context.Background())
}

func (i TmpManageGrafanaAttachmentArray) ToTmpManageGrafanaAttachmentArrayOutputWithContext(ctx context.Context) TmpManageGrafanaAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TmpManageGrafanaAttachmentArrayOutput)
}

// TmpManageGrafanaAttachmentMapInput is an input type that accepts TmpManageGrafanaAttachmentMap and TmpManageGrafanaAttachmentMapOutput values.
// You can construct a concrete instance of `TmpManageGrafanaAttachmentMapInput` via:
//
//	TmpManageGrafanaAttachmentMap{ "key": TmpManageGrafanaAttachmentArgs{...} }
type TmpManageGrafanaAttachmentMapInput interface {
	pulumi.Input

	ToTmpManageGrafanaAttachmentMapOutput() TmpManageGrafanaAttachmentMapOutput
	ToTmpManageGrafanaAttachmentMapOutputWithContext(context.Context) TmpManageGrafanaAttachmentMapOutput
}

type TmpManageGrafanaAttachmentMap map[string]TmpManageGrafanaAttachmentInput

func (TmpManageGrafanaAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TmpManageGrafanaAttachment)(nil)).Elem()
}

func (i TmpManageGrafanaAttachmentMap) ToTmpManageGrafanaAttachmentMapOutput() TmpManageGrafanaAttachmentMapOutput {
	return i.ToTmpManageGrafanaAttachmentMapOutputWithContext(context.Background())
}

func (i TmpManageGrafanaAttachmentMap) ToTmpManageGrafanaAttachmentMapOutputWithContext(ctx context.Context) TmpManageGrafanaAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(TmpManageGrafanaAttachmentMapOutput)
}

type TmpManageGrafanaAttachmentOutput struct{ *pulumi.OutputState }

func (TmpManageGrafanaAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**TmpManageGrafanaAttachment)(nil)).Elem()
}

func (o TmpManageGrafanaAttachmentOutput) ToTmpManageGrafanaAttachmentOutput() TmpManageGrafanaAttachmentOutput {
	return o
}

func (o TmpManageGrafanaAttachmentOutput) ToTmpManageGrafanaAttachmentOutputWithContext(ctx context.Context) TmpManageGrafanaAttachmentOutput {
	return o
}

// Grafana instance ID.
func (o TmpManageGrafanaAttachmentOutput) GrafanaId() pulumi.StringOutput {
	return o.ApplyT(func(v *TmpManageGrafanaAttachment) pulumi.StringOutput { return v.GrafanaId }).(pulumi.StringOutput)
}

// Prometheus instance ID.
func (o TmpManageGrafanaAttachmentOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *TmpManageGrafanaAttachment) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

type TmpManageGrafanaAttachmentArrayOutput struct{ *pulumi.OutputState }

func (TmpManageGrafanaAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*TmpManageGrafanaAttachment)(nil)).Elem()
}

func (o TmpManageGrafanaAttachmentArrayOutput) ToTmpManageGrafanaAttachmentArrayOutput() TmpManageGrafanaAttachmentArrayOutput {
	return o
}

func (o TmpManageGrafanaAttachmentArrayOutput) ToTmpManageGrafanaAttachmentArrayOutputWithContext(ctx context.Context) TmpManageGrafanaAttachmentArrayOutput {
	return o
}

func (o TmpManageGrafanaAttachmentArrayOutput) Index(i pulumi.IntInput) TmpManageGrafanaAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *TmpManageGrafanaAttachment {
		return vs[0].([]*TmpManageGrafanaAttachment)[vs[1].(int)]
	}).(TmpManageGrafanaAttachmentOutput)
}

type TmpManageGrafanaAttachmentMapOutput struct{ *pulumi.OutputState }

func (TmpManageGrafanaAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*TmpManageGrafanaAttachment)(nil)).Elem()
}

func (o TmpManageGrafanaAttachmentMapOutput) ToTmpManageGrafanaAttachmentMapOutput() TmpManageGrafanaAttachmentMapOutput {
	return o
}

func (o TmpManageGrafanaAttachmentMapOutput) ToTmpManageGrafanaAttachmentMapOutputWithContext(ctx context.Context) TmpManageGrafanaAttachmentMapOutput {
	return o
}

func (o TmpManageGrafanaAttachmentMapOutput) MapIndex(k pulumi.StringInput) TmpManageGrafanaAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *TmpManageGrafanaAttachment {
		return vs[0].(map[string]*TmpManageGrafanaAttachment)[vs[1].(string)]
	}).(TmpManageGrafanaAttachmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*TmpManageGrafanaAttachmentInput)(nil)).Elem(), &TmpManageGrafanaAttachment{})
	pulumi.RegisterInputType(reflect.TypeOf((*TmpManageGrafanaAttachmentArrayInput)(nil)).Elem(), TmpManageGrafanaAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*TmpManageGrafanaAttachmentMapInput)(nil)).Elem(), TmpManageGrafanaAttachmentMap{})
	pulumi.RegisterOutputType(TmpManageGrafanaAttachmentOutput{})
	pulumi.RegisterOutputType(TmpManageGrafanaAttachmentArrayOutput{})
	pulumi.RegisterOutputType(TmpManageGrafanaAttachmentMapOutput{})
}
