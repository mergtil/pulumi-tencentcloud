// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pts

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type FileFileInfo struct {
	FileId    *string `pulumi:"fileId"`
	Name      *string `pulumi:"name"`
	Size      *int    `pulumi:"size"`
	Type      *string `pulumi:"type"`
	UpdatedAt *string `pulumi:"updatedAt"`
}

// FileFileInfoInput is an input type that accepts FileFileInfoArgs and FileFileInfoOutput values.
// You can construct a concrete instance of `FileFileInfoInput` via:
//
//	FileFileInfoArgs{...}
type FileFileInfoInput interface {
	pulumi.Input

	ToFileFileInfoOutput() FileFileInfoOutput
	ToFileFileInfoOutputWithContext(context.Context) FileFileInfoOutput
}

type FileFileInfoArgs struct {
	FileId    pulumi.StringPtrInput `pulumi:"fileId"`
	Name      pulumi.StringPtrInput `pulumi:"name"`
	Size      pulumi.IntPtrInput    `pulumi:"size"`
	Type      pulumi.StringPtrInput `pulumi:"type"`
	UpdatedAt pulumi.StringPtrInput `pulumi:"updatedAt"`
}

func (FileFileInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FileFileInfo)(nil)).Elem()
}

func (i FileFileInfoArgs) ToFileFileInfoOutput() FileFileInfoOutput {
	return i.ToFileFileInfoOutputWithContext(context.Background())
}

func (i FileFileInfoArgs) ToFileFileInfoOutputWithContext(ctx context.Context) FileFileInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileFileInfoOutput)
}

// FileFileInfoArrayInput is an input type that accepts FileFileInfoArray and FileFileInfoArrayOutput values.
// You can construct a concrete instance of `FileFileInfoArrayInput` via:
//
//	FileFileInfoArray{ FileFileInfoArgs{...} }
type FileFileInfoArrayInput interface {
	pulumi.Input

	ToFileFileInfoArrayOutput() FileFileInfoArrayOutput
	ToFileFileInfoArrayOutputWithContext(context.Context) FileFileInfoArrayOutput
}

type FileFileInfoArray []FileFileInfoInput

func (FileFileInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileFileInfo)(nil)).Elem()
}

func (i FileFileInfoArray) ToFileFileInfoArrayOutput() FileFileInfoArrayOutput {
	return i.ToFileFileInfoArrayOutputWithContext(context.Background())
}

func (i FileFileInfoArray) ToFileFileInfoArrayOutputWithContext(ctx context.Context) FileFileInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FileFileInfoArrayOutput)
}

type FileFileInfoOutput struct{ *pulumi.OutputState }

func (FileFileInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FileFileInfo)(nil)).Elem()
}

func (o FileFileInfoOutput) ToFileFileInfoOutput() FileFileInfoOutput {
	return o
}

func (o FileFileInfoOutput) ToFileFileInfoOutputWithContext(ctx context.Context) FileFileInfoOutput {
	return o
}

func (o FileFileInfoOutput) FileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileFileInfo) *string { return v.FileId }).(pulumi.StringPtrOutput)
}

func (o FileFileInfoOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileFileInfo) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o FileFileInfoOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FileFileInfo) *int { return v.Size }).(pulumi.IntPtrOutput)
}

func (o FileFileInfoOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileFileInfo) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o FileFileInfoOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FileFileInfo) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type FileFileInfoArrayOutput struct{ *pulumi.OutputState }

func (FileFileInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FileFileInfo)(nil)).Elem()
}

func (o FileFileInfoArrayOutput) ToFileFileInfoArrayOutput() FileFileInfoArrayOutput {
	return o
}

func (o FileFileInfoArrayOutput) ToFileFileInfoArrayOutputWithContext(ctx context.Context) FileFileInfoArrayOutput {
	return o
}

func (o FileFileInfoArrayOutput) Index(i pulumi.IntInput) FileFileInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FileFileInfo {
		return vs[0].([]FileFileInfo)[vs[1].(int)]
	}).(FileFileInfoOutput)
}

type JobDataset struct {
	FileId        *string  `pulumi:"fileId"`
	HeadLines     []string `pulumi:"headLines"`
	HeaderColumns []string `pulumi:"headerColumns"`
	HeaderInFile  bool     `pulumi:"headerInFile"`
	LineCount     *int     `pulumi:"lineCount"`
	Name          string   `pulumi:"name"`
	Size          *int     `pulumi:"size"`
	Split         bool     `pulumi:"split"`
	TailLines     []string `pulumi:"tailLines"`
	Type          *string  `pulumi:"type"`
	UpdatedAt     *string  `pulumi:"updatedAt"`
}

// JobDatasetInput is an input type that accepts JobDatasetArgs and JobDatasetOutput values.
// You can construct a concrete instance of `JobDatasetInput` via:
//
//	JobDatasetArgs{...}
type JobDatasetInput interface {
	pulumi.Input

	ToJobDatasetOutput() JobDatasetOutput
	ToJobDatasetOutputWithContext(context.Context) JobDatasetOutput
}

type JobDatasetArgs struct {
	FileId        pulumi.StringPtrInput   `pulumi:"fileId"`
	HeadLines     pulumi.StringArrayInput `pulumi:"headLines"`
	HeaderColumns pulumi.StringArrayInput `pulumi:"headerColumns"`
	HeaderInFile  pulumi.BoolInput        `pulumi:"headerInFile"`
	LineCount     pulumi.IntPtrInput      `pulumi:"lineCount"`
	Name          pulumi.StringInput      `pulumi:"name"`
	Size          pulumi.IntPtrInput      `pulumi:"size"`
	Split         pulumi.BoolInput        `pulumi:"split"`
	TailLines     pulumi.StringArrayInput `pulumi:"tailLines"`
	Type          pulumi.StringPtrInput   `pulumi:"type"`
	UpdatedAt     pulumi.StringPtrInput   `pulumi:"updatedAt"`
}

func (JobDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDataset)(nil)).Elem()
}

func (i JobDatasetArgs) ToJobDatasetOutput() JobDatasetOutput {
	return i.ToJobDatasetOutputWithContext(context.Background())
}

func (i JobDatasetArgs) ToJobDatasetOutputWithContext(ctx context.Context) JobDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDatasetOutput)
}

// JobDatasetArrayInput is an input type that accepts JobDatasetArray and JobDatasetArrayOutput values.
// You can construct a concrete instance of `JobDatasetArrayInput` via:
//
//	JobDatasetArray{ JobDatasetArgs{...} }
type JobDatasetArrayInput interface {
	pulumi.Input

	ToJobDatasetArrayOutput() JobDatasetArrayOutput
	ToJobDatasetArrayOutputWithContext(context.Context) JobDatasetArrayOutput
}

type JobDatasetArray []JobDatasetInput

func (JobDatasetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobDataset)(nil)).Elem()
}

func (i JobDatasetArray) ToJobDatasetArrayOutput() JobDatasetArrayOutput {
	return i.ToJobDatasetArrayOutputWithContext(context.Background())
}

func (i JobDatasetArray) ToJobDatasetArrayOutputWithContext(ctx context.Context) JobDatasetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDatasetArrayOutput)
}

type JobDatasetOutput struct{ *pulumi.OutputState }

func (JobDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDataset)(nil)).Elem()
}

func (o JobDatasetOutput) ToJobDatasetOutput() JobDatasetOutput {
	return o
}

func (o JobDatasetOutput) ToJobDatasetOutputWithContext(ctx context.Context) JobDatasetOutput {
	return o
}

func (o JobDatasetOutput) FileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDataset) *string { return v.FileId }).(pulumi.StringPtrOutput)
}

func (o JobDatasetOutput) HeadLines() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobDataset) []string { return v.HeadLines }).(pulumi.StringArrayOutput)
}

func (o JobDatasetOutput) HeaderColumns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobDataset) []string { return v.HeaderColumns }).(pulumi.StringArrayOutput)
}

func (o JobDatasetOutput) HeaderInFile() pulumi.BoolOutput {
	return o.ApplyT(func(v JobDataset) bool { return v.HeaderInFile }).(pulumi.BoolOutput)
}

func (o JobDatasetOutput) LineCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobDataset) *int { return v.LineCount }).(pulumi.IntPtrOutput)
}

func (o JobDatasetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v JobDataset) string { return v.Name }).(pulumi.StringOutput)
}

func (o JobDatasetOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobDataset) *int { return v.Size }).(pulumi.IntPtrOutput)
}

func (o JobDatasetOutput) Split() pulumi.BoolOutput {
	return o.ApplyT(func(v JobDataset) bool { return v.Split }).(pulumi.BoolOutput)
}

func (o JobDatasetOutput) TailLines() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobDataset) []string { return v.TailLines }).(pulumi.StringArrayOutput)
}

func (o JobDatasetOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDataset) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o JobDatasetOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDataset) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type JobDatasetArrayOutput struct{ *pulumi.OutputState }

func (JobDatasetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobDataset)(nil)).Elem()
}

func (o JobDatasetArrayOutput) ToJobDatasetArrayOutput() JobDatasetArrayOutput {
	return o
}

func (o JobDatasetArrayOutput) ToJobDatasetArrayOutputWithContext(ctx context.Context) JobDatasetArrayOutput {
	return o
}

func (o JobDatasetArrayOutput) Index(i pulumi.IntInput) JobDatasetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobDataset {
		return vs[0].([]JobDataset)[vs[1].(int)]
	}).(JobDatasetOutput)
}

type JobDomainNameConfig struct {
	DnsConfig   *JobDomainNameConfigDnsConfig  `pulumi:"dnsConfig"`
	HostAliases []JobDomainNameConfigHostAlias `pulumi:"hostAliases"`
}

// JobDomainNameConfigInput is an input type that accepts JobDomainNameConfigArgs and JobDomainNameConfigOutput values.
// You can construct a concrete instance of `JobDomainNameConfigInput` via:
//
//	JobDomainNameConfigArgs{...}
type JobDomainNameConfigInput interface {
	pulumi.Input

	ToJobDomainNameConfigOutput() JobDomainNameConfigOutput
	ToJobDomainNameConfigOutputWithContext(context.Context) JobDomainNameConfigOutput
}

type JobDomainNameConfigArgs struct {
	DnsConfig   JobDomainNameConfigDnsConfigPtrInput   `pulumi:"dnsConfig"`
	HostAliases JobDomainNameConfigHostAliasArrayInput `pulumi:"hostAliases"`
}

func (JobDomainNameConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDomainNameConfig)(nil)).Elem()
}

func (i JobDomainNameConfigArgs) ToJobDomainNameConfigOutput() JobDomainNameConfigOutput {
	return i.ToJobDomainNameConfigOutputWithContext(context.Background())
}

func (i JobDomainNameConfigArgs) ToJobDomainNameConfigOutputWithContext(ctx context.Context) JobDomainNameConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDomainNameConfigOutput)
}

// JobDomainNameConfigArrayInput is an input type that accepts JobDomainNameConfigArray and JobDomainNameConfigArrayOutput values.
// You can construct a concrete instance of `JobDomainNameConfigArrayInput` via:
//
//	JobDomainNameConfigArray{ JobDomainNameConfigArgs{...} }
type JobDomainNameConfigArrayInput interface {
	pulumi.Input

	ToJobDomainNameConfigArrayOutput() JobDomainNameConfigArrayOutput
	ToJobDomainNameConfigArrayOutputWithContext(context.Context) JobDomainNameConfigArrayOutput
}

type JobDomainNameConfigArray []JobDomainNameConfigInput

func (JobDomainNameConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobDomainNameConfig)(nil)).Elem()
}

func (i JobDomainNameConfigArray) ToJobDomainNameConfigArrayOutput() JobDomainNameConfigArrayOutput {
	return i.ToJobDomainNameConfigArrayOutputWithContext(context.Background())
}

func (i JobDomainNameConfigArray) ToJobDomainNameConfigArrayOutputWithContext(ctx context.Context) JobDomainNameConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDomainNameConfigArrayOutput)
}

type JobDomainNameConfigOutput struct{ *pulumi.OutputState }

func (JobDomainNameConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDomainNameConfig)(nil)).Elem()
}

func (o JobDomainNameConfigOutput) ToJobDomainNameConfigOutput() JobDomainNameConfigOutput {
	return o
}

func (o JobDomainNameConfigOutput) ToJobDomainNameConfigOutputWithContext(ctx context.Context) JobDomainNameConfigOutput {
	return o
}

func (o JobDomainNameConfigOutput) DnsConfig() JobDomainNameConfigDnsConfigPtrOutput {
	return o.ApplyT(func(v JobDomainNameConfig) *JobDomainNameConfigDnsConfig { return v.DnsConfig }).(JobDomainNameConfigDnsConfigPtrOutput)
}

func (o JobDomainNameConfigOutput) HostAliases() JobDomainNameConfigHostAliasArrayOutput {
	return o.ApplyT(func(v JobDomainNameConfig) []JobDomainNameConfigHostAlias { return v.HostAliases }).(JobDomainNameConfigHostAliasArrayOutput)
}

type JobDomainNameConfigArrayOutput struct{ *pulumi.OutputState }

func (JobDomainNameConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobDomainNameConfig)(nil)).Elem()
}

func (o JobDomainNameConfigArrayOutput) ToJobDomainNameConfigArrayOutput() JobDomainNameConfigArrayOutput {
	return o
}

func (o JobDomainNameConfigArrayOutput) ToJobDomainNameConfigArrayOutputWithContext(ctx context.Context) JobDomainNameConfigArrayOutput {
	return o
}

func (o JobDomainNameConfigArrayOutput) Index(i pulumi.IntInput) JobDomainNameConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobDomainNameConfig {
		return vs[0].([]JobDomainNameConfig)[vs[1].(int)]
	}).(JobDomainNameConfigOutput)
}

type JobDomainNameConfigDnsConfig struct {
	Nameservers []string `pulumi:"nameservers"`
}

// JobDomainNameConfigDnsConfigInput is an input type that accepts JobDomainNameConfigDnsConfigArgs and JobDomainNameConfigDnsConfigOutput values.
// You can construct a concrete instance of `JobDomainNameConfigDnsConfigInput` via:
//
//	JobDomainNameConfigDnsConfigArgs{...}
type JobDomainNameConfigDnsConfigInput interface {
	pulumi.Input

	ToJobDomainNameConfigDnsConfigOutput() JobDomainNameConfigDnsConfigOutput
	ToJobDomainNameConfigDnsConfigOutputWithContext(context.Context) JobDomainNameConfigDnsConfigOutput
}

type JobDomainNameConfigDnsConfigArgs struct {
	Nameservers pulumi.StringArrayInput `pulumi:"nameservers"`
}

func (JobDomainNameConfigDnsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDomainNameConfigDnsConfig)(nil)).Elem()
}

func (i JobDomainNameConfigDnsConfigArgs) ToJobDomainNameConfigDnsConfigOutput() JobDomainNameConfigDnsConfigOutput {
	return i.ToJobDomainNameConfigDnsConfigOutputWithContext(context.Background())
}

func (i JobDomainNameConfigDnsConfigArgs) ToJobDomainNameConfigDnsConfigOutputWithContext(ctx context.Context) JobDomainNameConfigDnsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDomainNameConfigDnsConfigOutput)
}

func (i JobDomainNameConfigDnsConfigArgs) ToJobDomainNameConfigDnsConfigPtrOutput() JobDomainNameConfigDnsConfigPtrOutput {
	return i.ToJobDomainNameConfigDnsConfigPtrOutputWithContext(context.Background())
}

func (i JobDomainNameConfigDnsConfigArgs) ToJobDomainNameConfigDnsConfigPtrOutputWithContext(ctx context.Context) JobDomainNameConfigDnsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDomainNameConfigDnsConfigOutput).ToJobDomainNameConfigDnsConfigPtrOutputWithContext(ctx)
}

// JobDomainNameConfigDnsConfigPtrInput is an input type that accepts JobDomainNameConfigDnsConfigArgs, JobDomainNameConfigDnsConfigPtr and JobDomainNameConfigDnsConfigPtrOutput values.
// You can construct a concrete instance of `JobDomainNameConfigDnsConfigPtrInput` via:
//
//	        JobDomainNameConfigDnsConfigArgs{...}
//
//	or:
//
//	        nil
type JobDomainNameConfigDnsConfigPtrInput interface {
	pulumi.Input

	ToJobDomainNameConfigDnsConfigPtrOutput() JobDomainNameConfigDnsConfigPtrOutput
	ToJobDomainNameConfigDnsConfigPtrOutputWithContext(context.Context) JobDomainNameConfigDnsConfigPtrOutput
}

type jobDomainNameConfigDnsConfigPtrType JobDomainNameConfigDnsConfigArgs

func JobDomainNameConfigDnsConfigPtr(v *JobDomainNameConfigDnsConfigArgs) JobDomainNameConfigDnsConfigPtrInput {
	return (*jobDomainNameConfigDnsConfigPtrType)(v)
}

func (*jobDomainNameConfigDnsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDomainNameConfigDnsConfig)(nil)).Elem()
}

func (i *jobDomainNameConfigDnsConfigPtrType) ToJobDomainNameConfigDnsConfigPtrOutput() JobDomainNameConfigDnsConfigPtrOutput {
	return i.ToJobDomainNameConfigDnsConfigPtrOutputWithContext(context.Background())
}

func (i *jobDomainNameConfigDnsConfigPtrType) ToJobDomainNameConfigDnsConfigPtrOutputWithContext(ctx context.Context) JobDomainNameConfigDnsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDomainNameConfigDnsConfigPtrOutput)
}

type JobDomainNameConfigDnsConfigOutput struct{ *pulumi.OutputState }

func (JobDomainNameConfigDnsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDomainNameConfigDnsConfig)(nil)).Elem()
}

func (o JobDomainNameConfigDnsConfigOutput) ToJobDomainNameConfigDnsConfigOutput() JobDomainNameConfigDnsConfigOutput {
	return o
}

func (o JobDomainNameConfigDnsConfigOutput) ToJobDomainNameConfigDnsConfigOutputWithContext(ctx context.Context) JobDomainNameConfigDnsConfigOutput {
	return o
}

func (o JobDomainNameConfigDnsConfigOutput) ToJobDomainNameConfigDnsConfigPtrOutput() JobDomainNameConfigDnsConfigPtrOutput {
	return o.ToJobDomainNameConfigDnsConfigPtrOutputWithContext(context.Background())
}

func (o JobDomainNameConfigDnsConfigOutput) ToJobDomainNameConfigDnsConfigPtrOutputWithContext(ctx context.Context) JobDomainNameConfigDnsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobDomainNameConfigDnsConfig) *JobDomainNameConfigDnsConfig {
		return &v
	}).(JobDomainNameConfigDnsConfigPtrOutput)
}

func (o JobDomainNameConfigDnsConfigOutput) Nameservers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobDomainNameConfigDnsConfig) []string { return v.Nameservers }).(pulumi.StringArrayOutput)
}

type JobDomainNameConfigDnsConfigPtrOutput struct{ *pulumi.OutputState }

func (JobDomainNameConfigDnsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobDomainNameConfigDnsConfig)(nil)).Elem()
}

func (o JobDomainNameConfigDnsConfigPtrOutput) ToJobDomainNameConfigDnsConfigPtrOutput() JobDomainNameConfigDnsConfigPtrOutput {
	return o
}

func (o JobDomainNameConfigDnsConfigPtrOutput) ToJobDomainNameConfigDnsConfigPtrOutputWithContext(ctx context.Context) JobDomainNameConfigDnsConfigPtrOutput {
	return o
}

func (o JobDomainNameConfigDnsConfigPtrOutput) Elem() JobDomainNameConfigDnsConfigOutput {
	return o.ApplyT(func(v *JobDomainNameConfigDnsConfig) JobDomainNameConfigDnsConfig {
		if v != nil {
			return *v
		}
		var ret JobDomainNameConfigDnsConfig
		return ret
	}).(JobDomainNameConfigDnsConfigOutput)
}

func (o JobDomainNameConfigDnsConfigPtrOutput) Nameservers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *JobDomainNameConfigDnsConfig) []string {
		if v == nil {
			return nil
		}
		return v.Nameservers
	}).(pulumi.StringArrayOutput)
}

type JobDomainNameConfigHostAlias struct {
	HostNames []string `pulumi:"hostNames"`
	Ip        *string  `pulumi:"ip"`
}

// JobDomainNameConfigHostAliasInput is an input type that accepts JobDomainNameConfigHostAliasArgs and JobDomainNameConfigHostAliasOutput values.
// You can construct a concrete instance of `JobDomainNameConfigHostAliasInput` via:
//
//	JobDomainNameConfigHostAliasArgs{...}
type JobDomainNameConfigHostAliasInput interface {
	pulumi.Input

	ToJobDomainNameConfigHostAliasOutput() JobDomainNameConfigHostAliasOutput
	ToJobDomainNameConfigHostAliasOutputWithContext(context.Context) JobDomainNameConfigHostAliasOutput
}

type JobDomainNameConfigHostAliasArgs struct {
	HostNames pulumi.StringArrayInput `pulumi:"hostNames"`
	Ip        pulumi.StringPtrInput   `pulumi:"ip"`
}

func (JobDomainNameConfigHostAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDomainNameConfigHostAlias)(nil)).Elem()
}

func (i JobDomainNameConfigHostAliasArgs) ToJobDomainNameConfigHostAliasOutput() JobDomainNameConfigHostAliasOutput {
	return i.ToJobDomainNameConfigHostAliasOutputWithContext(context.Background())
}

func (i JobDomainNameConfigHostAliasArgs) ToJobDomainNameConfigHostAliasOutputWithContext(ctx context.Context) JobDomainNameConfigHostAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDomainNameConfigHostAliasOutput)
}

// JobDomainNameConfigHostAliasArrayInput is an input type that accepts JobDomainNameConfigHostAliasArray and JobDomainNameConfigHostAliasArrayOutput values.
// You can construct a concrete instance of `JobDomainNameConfigHostAliasArrayInput` via:
//
//	JobDomainNameConfigHostAliasArray{ JobDomainNameConfigHostAliasArgs{...} }
type JobDomainNameConfigHostAliasArrayInput interface {
	pulumi.Input

	ToJobDomainNameConfigHostAliasArrayOutput() JobDomainNameConfigHostAliasArrayOutput
	ToJobDomainNameConfigHostAliasArrayOutputWithContext(context.Context) JobDomainNameConfigHostAliasArrayOutput
}

type JobDomainNameConfigHostAliasArray []JobDomainNameConfigHostAliasInput

func (JobDomainNameConfigHostAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobDomainNameConfigHostAlias)(nil)).Elem()
}

func (i JobDomainNameConfigHostAliasArray) ToJobDomainNameConfigHostAliasArrayOutput() JobDomainNameConfigHostAliasArrayOutput {
	return i.ToJobDomainNameConfigHostAliasArrayOutputWithContext(context.Background())
}

func (i JobDomainNameConfigHostAliasArray) ToJobDomainNameConfigHostAliasArrayOutputWithContext(ctx context.Context) JobDomainNameConfigHostAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobDomainNameConfigHostAliasArrayOutput)
}

type JobDomainNameConfigHostAliasOutput struct{ *pulumi.OutputState }

func (JobDomainNameConfigHostAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobDomainNameConfigHostAlias)(nil)).Elem()
}

func (o JobDomainNameConfigHostAliasOutput) ToJobDomainNameConfigHostAliasOutput() JobDomainNameConfigHostAliasOutput {
	return o
}

func (o JobDomainNameConfigHostAliasOutput) ToJobDomainNameConfigHostAliasOutputWithContext(ctx context.Context) JobDomainNameConfigHostAliasOutput {
	return o
}

func (o JobDomainNameConfigHostAliasOutput) HostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobDomainNameConfigHostAlias) []string { return v.HostNames }).(pulumi.StringArrayOutput)
}

func (o JobDomainNameConfigHostAliasOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobDomainNameConfigHostAlias) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type JobDomainNameConfigHostAliasArrayOutput struct{ *pulumi.OutputState }

func (JobDomainNameConfigHostAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobDomainNameConfigHostAlias)(nil)).Elem()
}

func (o JobDomainNameConfigHostAliasArrayOutput) ToJobDomainNameConfigHostAliasArrayOutput() JobDomainNameConfigHostAliasArrayOutput {
	return o
}

func (o JobDomainNameConfigHostAliasArrayOutput) ToJobDomainNameConfigHostAliasArrayOutputWithContext(ctx context.Context) JobDomainNameConfigHostAliasArrayOutput {
	return o
}

func (o JobDomainNameConfigHostAliasArrayOutput) Index(i pulumi.IntInput) JobDomainNameConfigHostAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobDomainNameConfigHostAlias {
		return vs[0].([]JobDomainNameConfigHostAlias)[vs[1].(int)]
	}).(JobDomainNameConfigHostAliasOutput)
}

type JobLoad struct {
	GeoRegionsLoadDistributions []JobLoadGeoRegionsLoadDistribution `pulumi:"geoRegionsLoadDistributions"`
	LoadSpec                    *JobLoadLoadSpec                    `pulumi:"loadSpec"`
	VpcLoadDistribution         *JobLoadVpcLoadDistribution         `pulumi:"vpcLoadDistribution"`
}

// JobLoadInput is an input type that accepts JobLoadArgs and JobLoadOutput values.
// You can construct a concrete instance of `JobLoadInput` via:
//
//	JobLoadArgs{...}
type JobLoadInput interface {
	pulumi.Input

	ToJobLoadOutput() JobLoadOutput
	ToJobLoadOutputWithContext(context.Context) JobLoadOutput
}

type JobLoadArgs struct {
	GeoRegionsLoadDistributions JobLoadGeoRegionsLoadDistributionArrayInput `pulumi:"geoRegionsLoadDistributions"`
	LoadSpec                    JobLoadLoadSpecPtrInput                     `pulumi:"loadSpec"`
	VpcLoadDistribution         JobLoadVpcLoadDistributionPtrInput          `pulumi:"vpcLoadDistribution"`
}

func (JobLoadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobLoad)(nil)).Elem()
}

func (i JobLoadArgs) ToJobLoadOutput() JobLoadOutput {
	return i.ToJobLoadOutputWithContext(context.Background())
}

func (i JobLoadArgs) ToJobLoadOutputWithContext(ctx context.Context) JobLoadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobLoadOutput)
}

// JobLoadArrayInput is an input type that accepts JobLoadArray and JobLoadArrayOutput values.
// You can construct a concrete instance of `JobLoadArrayInput` via:
//
//	JobLoadArray{ JobLoadArgs{...} }
type JobLoadArrayInput interface {
	pulumi.Input

	ToJobLoadArrayOutput() JobLoadArrayOutput
	ToJobLoadArrayOutputWithContext(context.Context) JobLoadArrayOutput
}

type JobLoadArray []JobLoadInput

func (JobLoadArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobLoad)(nil)).Elem()
}

func (i JobLoadArray) ToJobLoadArrayOutput() JobLoadArrayOutput {
	return i.ToJobLoadArrayOutputWithContext(context.Background())
}

func (i JobLoadArray) ToJobLoadArrayOutputWithContext(ctx context.Context) JobLoadArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobLoadArrayOutput)
}

type JobLoadOutput struct{ *pulumi.OutputState }

func (JobLoadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobLoad)(nil)).Elem()
}

func (o JobLoadOutput) ToJobLoadOutput() JobLoadOutput {
	return o
}

func (o JobLoadOutput) ToJobLoadOutputWithContext(ctx context.Context) JobLoadOutput {
	return o
}

func (o JobLoadOutput) GeoRegionsLoadDistributions() JobLoadGeoRegionsLoadDistributionArrayOutput {
	return o.ApplyT(func(v JobLoad) []JobLoadGeoRegionsLoadDistribution { return v.GeoRegionsLoadDistributions }).(JobLoadGeoRegionsLoadDistributionArrayOutput)
}

func (o JobLoadOutput) LoadSpec() JobLoadLoadSpecPtrOutput {
	return o.ApplyT(func(v JobLoad) *JobLoadLoadSpec { return v.LoadSpec }).(JobLoadLoadSpecPtrOutput)
}

func (o JobLoadOutput) VpcLoadDistribution() JobLoadVpcLoadDistributionPtrOutput {
	return o.ApplyT(func(v JobLoad) *JobLoadVpcLoadDistribution { return v.VpcLoadDistribution }).(JobLoadVpcLoadDistributionPtrOutput)
}

type JobLoadArrayOutput struct{ *pulumi.OutputState }

func (JobLoadArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobLoad)(nil)).Elem()
}

func (o JobLoadArrayOutput) ToJobLoadArrayOutput() JobLoadArrayOutput {
	return o
}

func (o JobLoadArrayOutput) ToJobLoadArrayOutputWithContext(ctx context.Context) JobLoadArrayOutput {
	return o
}

func (o JobLoadArrayOutput) Index(i pulumi.IntInput) JobLoadOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobLoad {
		return vs[0].([]JobLoad)[vs[1].(int)]
	}).(JobLoadOutput)
}

type JobLoadGeoRegionsLoadDistribution struct {
	Percentage *int    `pulumi:"percentage"`
	Region     *string `pulumi:"region"`
	RegionId   int     `pulumi:"regionId"`
}

// JobLoadGeoRegionsLoadDistributionInput is an input type that accepts JobLoadGeoRegionsLoadDistributionArgs and JobLoadGeoRegionsLoadDistributionOutput values.
// You can construct a concrete instance of `JobLoadGeoRegionsLoadDistributionInput` via:
//
//	JobLoadGeoRegionsLoadDistributionArgs{...}
type JobLoadGeoRegionsLoadDistributionInput interface {
	pulumi.Input

	ToJobLoadGeoRegionsLoadDistributionOutput() JobLoadGeoRegionsLoadDistributionOutput
	ToJobLoadGeoRegionsLoadDistributionOutputWithContext(context.Context) JobLoadGeoRegionsLoadDistributionOutput
}

type JobLoadGeoRegionsLoadDistributionArgs struct {
	Percentage pulumi.IntPtrInput    `pulumi:"percentage"`
	Region     pulumi.StringPtrInput `pulumi:"region"`
	RegionId   pulumi.IntInput       `pulumi:"regionId"`
}

func (JobLoadGeoRegionsLoadDistributionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobLoadGeoRegionsLoadDistribution)(nil)).Elem()
}

func (i JobLoadGeoRegionsLoadDistributionArgs) ToJobLoadGeoRegionsLoadDistributionOutput() JobLoadGeoRegionsLoadDistributionOutput {
	return i.ToJobLoadGeoRegionsLoadDistributionOutputWithContext(context.Background())
}

func (i JobLoadGeoRegionsLoadDistributionArgs) ToJobLoadGeoRegionsLoadDistributionOutputWithContext(ctx context.Context) JobLoadGeoRegionsLoadDistributionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobLoadGeoRegionsLoadDistributionOutput)
}

// JobLoadGeoRegionsLoadDistributionArrayInput is an input type that accepts JobLoadGeoRegionsLoadDistributionArray and JobLoadGeoRegionsLoadDistributionArrayOutput values.
// You can construct a concrete instance of `JobLoadGeoRegionsLoadDistributionArrayInput` via:
//
//	JobLoadGeoRegionsLoadDistributionArray{ JobLoadGeoRegionsLoadDistributionArgs{...} }
type JobLoadGeoRegionsLoadDistributionArrayInput interface {
	pulumi.Input

	ToJobLoadGeoRegionsLoadDistributionArrayOutput() JobLoadGeoRegionsLoadDistributionArrayOutput
	ToJobLoadGeoRegionsLoadDistributionArrayOutputWithContext(context.Context) JobLoadGeoRegionsLoadDistributionArrayOutput
}

type JobLoadGeoRegionsLoadDistributionArray []JobLoadGeoRegionsLoadDistributionInput

func (JobLoadGeoRegionsLoadDistributionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobLoadGeoRegionsLoadDistribution)(nil)).Elem()
}

func (i JobLoadGeoRegionsLoadDistributionArray) ToJobLoadGeoRegionsLoadDistributionArrayOutput() JobLoadGeoRegionsLoadDistributionArrayOutput {
	return i.ToJobLoadGeoRegionsLoadDistributionArrayOutputWithContext(context.Background())
}

func (i JobLoadGeoRegionsLoadDistributionArray) ToJobLoadGeoRegionsLoadDistributionArrayOutputWithContext(ctx context.Context) JobLoadGeoRegionsLoadDistributionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobLoadGeoRegionsLoadDistributionArrayOutput)
}

type JobLoadGeoRegionsLoadDistributionOutput struct{ *pulumi.OutputState }

func (JobLoadGeoRegionsLoadDistributionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobLoadGeoRegionsLoadDistribution)(nil)).Elem()
}

func (o JobLoadGeoRegionsLoadDistributionOutput) ToJobLoadGeoRegionsLoadDistributionOutput() JobLoadGeoRegionsLoadDistributionOutput {
	return o
}

func (o JobLoadGeoRegionsLoadDistributionOutput) ToJobLoadGeoRegionsLoadDistributionOutputWithContext(ctx context.Context) JobLoadGeoRegionsLoadDistributionOutput {
	return o
}

func (o JobLoadGeoRegionsLoadDistributionOutput) Percentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobLoadGeoRegionsLoadDistribution) *int { return v.Percentage }).(pulumi.IntPtrOutput)
}

func (o JobLoadGeoRegionsLoadDistributionOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobLoadGeoRegionsLoadDistribution) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o JobLoadGeoRegionsLoadDistributionOutput) RegionId() pulumi.IntOutput {
	return o.ApplyT(func(v JobLoadGeoRegionsLoadDistribution) int { return v.RegionId }).(pulumi.IntOutput)
}

type JobLoadGeoRegionsLoadDistributionArrayOutput struct{ *pulumi.OutputState }

func (JobLoadGeoRegionsLoadDistributionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobLoadGeoRegionsLoadDistribution)(nil)).Elem()
}

func (o JobLoadGeoRegionsLoadDistributionArrayOutput) ToJobLoadGeoRegionsLoadDistributionArrayOutput() JobLoadGeoRegionsLoadDistributionArrayOutput {
	return o
}

func (o JobLoadGeoRegionsLoadDistributionArrayOutput) ToJobLoadGeoRegionsLoadDistributionArrayOutputWithContext(ctx context.Context) JobLoadGeoRegionsLoadDistributionArrayOutput {
	return o
}

func (o JobLoadGeoRegionsLoadDistributionArrayOutput) Index(i pulumi.IntInput) JobLoadGeoRegionsLoadDistributionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobLoadGeoRegionsLoadDistribution {
		return vs[0].([]JobLoadGeoRegionsLoadDistribution)[vs[1].(int)]
	}).(JobLoadGeoRegionsLoadDistributionOutput)
}

type JobLoadLoadSpec struct {
	Concurrency       *JobLoadLoadSpecConcurrency       `pulumi:"concurrency"`
	RequestsPerSecond *JobLoadLoadSpecRequestsPerSecond `pulumi:"requestsPerSecond"`
	ScriptOrigin      *JobLoadLoadSpecScriptOrigin      `pulumi:"scriptOrigin"`
}

// JobLoadLoadSpecInput is an input type that accepts JobLoadLoadSpecArgs and JobLoadLoadSpecOutput values.
// You can construct a concrete instance of `JobLoadLoadSpecInput` via:
//
//	JobLoadLoadSpecArgs{...}
type JobLoadLoadSpecInput interface {
	pulumi.Input

	ToJobLoadLoadSpecOutput() JobLoadLoadSpecOutput
	ToJobLoadLoadSpecOutputWithContext(context.Context) JobLoadLoadSpecOutput
}

type JobLoadLoadSpecArgs struct {
	Concurrency       JobLoadLoadSpecConcurrencyPtrInput       `pulumi:"concurrency"`
	RequestsPerSecond JobLoadLoadSpecRequestsPerSecondPtrInput `pulumi:"requestsPerSecond"`
	ScriptOrigin      JobLoadLoadSpecScriptOriginPtrInput      `pulumi:"scriptOrigin"`
}

func (JobLoadLoadSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobLoadLoadSpec)(nil)).Elem()
}

func (i JobLoadLoadSpecArgs) ToJobLoadLoadSpecOutput() JobLoadLoadSpecOutput {
	return i.ToJobLoadLoadSpecOutputWithContext(context.Background())
}

func (i JobLoadLoadSpecArgs) ToJobLoadLoadSpecOutputWithContext(ctx context.Context) JobLoadLoadSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobLoadLoadSpecOutput)
}

func (i JobLoadLoadSpecArgs) ToJobLoadLoadSpecPtrOutput() JobLoadLoadSpecPtrOutput {
	return i.ToJobLoadLoadSpecPtrOutputWithContext(context.Background())
}

func (i JobLoadLoadSpecArgs) ToJobLoadLoadSpecPtrOutputWithContext(ctx context.Context) JobLoadLoadSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobLoadLoadSpecOutput).ToJobLoadLoadSpecPtrOutputWithContext(ctx)
}

// JobLoadLoadSpecPtrInput is an input type that accepts JobLoadLoadSpecArgs, JobLoadLoadSpecPtr and JobLoadLoadSpecPtrOutput values.
// You can construct a concrete instance of `JobLoadLoadSpecPtrInput` via:
//
//	        JobLoadLoadSpecArgs{...}
//
//	or:
//
//	        nil
type JobLoadLoadSpecPtrInput interface {
	pulumi.Input

	ToJobLoadLoadSpecPtrOutput() JobLoadLoadSpecPtrOutput
	ToJobLoadLoadSpecPtrOutputWithContext(context.Context) JobLoadLoadSpecPtrOutput
}

type jobLoadLoadSpecPtrType JobLoadLoadSpecArgs

func JobLoadLoadSpecPtr(v *JobLoadLoadSpecArgs) JobLoadLoadSpecPtrInput {
	return (*jobLoadLoadSpecPtrType)(v)
}

func (*jobLoadLoadSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobLoadLoadSpec)(nil)).Elem()
}

func (i *jobLoadLoadSpecPtrType) ToJobLoadLoadSpecPtrOutput() JobLoadLoadSpecPtrOutput {
	return i.ToJobLoadLoadSpecPtrOutputWithContext(context.Background())
}

func (i *jobLoadLoadSpecPtrType) ToJobLoadLoadSpecPtrOutputWithContext(ctx context.Context) JobLoadLoadSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobLoadLoadSpecPtrOutput)
}

type JobLoadLoadSpecOutput struct{ *pulumi.OutputState }

func (JobLoadLoadSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobLoadLoadSpec)(nil)).Elem()
}

func (o JobLoadLoadSpecOutput) ToJobLoadLoadSpecOutput() JobLoadLoadSpecOutput {
	return o
}

func (o JobLoadLoadSpecOutput) ToJobLoadLoadSpecOutputWithContext(ctx context.Context) JobLoadLoadSpecOutput {
	return o
}

func (o JobLoadLoadSpecOutput) ToJobLoadLoadSpecPtrOutput() JobLoadLoadSpecPtrOutput {
	return o.ToJobLoadLoadSpecPtrOutputWithContext(context.Background())
}

func (o JobLoadLoadSpecOutput) ToJobLoadLoadSpecPtrOutputWithContext(ctx context.Context) JobLoadLoadSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobLoadLoadSpec) *JobLoadLoadSpec {
		return &v
	}).(JobLoadLoadSpecPtrOutput)
}

func (o JobLoadLoadSpecOutput) Concurrency() JobLoadLoadSpecConcurrencyPtrOutput {
	return o.ApplyT(func(v JobLoadLoadSpec) *JobLoadLoadSpecConcurrency { return v.Concurrency }).(JobLoadLoadSpecConcurrencyPtrOutput)
}

func (o JobLoadLoadSpecOutput) RequestsPerSecond() JobLoadLoadSpecRequestsPerSecondPtrOutput {
	return o.ApplyT(func(v JobLoadLoadSpec) *JobLoadLoadSpecRequestsPerSecond { return v.RequestsPerSecond }).(JobLoadLoadSpecRequestsPerSecondPtrOutput)
}

func (o JobLoadLoadSpecOutput) ScriptOrigin() JobLoadLoadSpecScriptOriginPtrOutput {
	return o.ApplyT(func(v JobLoadLoadSpec) *JobLoadLoadSpecScriptOrigin { return v.ScriptOrigin }).(JobLoadLoadSpecScriptOriginPtrOutput)
}

type JobLoadLoadSpecPtrOutput struct{ *pulumi.OutputState }

func (JobLoadLoadSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobLoadLoadSpec)(nil)).Elem()
}

func (o JobLoadLoadSpecPtrOutput) ToJobLoadLoadSpecPtrOutput() JobLoadLoadSpecPtrOutput {
	return o
}

func (o JobLoadLoadSpecPtrOutput) ToJobLoadLoadSpecPtrOutputWithContext(ctx context.Context) JobLoadLoadSpecPtrOutput {
	return o
}

func (o JobLoadLoadSpecPtrOutput) Elem() JobLoadLoadSpecOutput {
	return o.ApplyT(func(v *JobLoadLoadSpec) JobLoadLoadSpec {
		if v != nil {
			return *v
		}
		var ret JobLoadLoadSpec
		return ret
	}).(JobLoadLoadSpecOutput)
}

func (o JobLoadLoadSpecPtrOutput) Concurrency() JobLoadLoadSpecConcurrencyPtrOutput {
	return o.ApplyT(func(v *JobLoadLoadSpec) *JobLoadLoadSpecConcurrency {
		if v == nil {
			return nil
		}
		return v.Concurrency
	}).(JobLoadLoadSpecConcurrencyPtrOutput)
}

func (o JobLoadLoadSpecPtrOutput) RequestsPerSecond() JobLoadLoadSpecRequestsPerSecondPtrOutput {
	return o.ApplyT(func(v *JobLoadLoadSpec) *JobLoadLoadSpecRequestsPerSecond {
		if v == nil {
			return nil
		}
		return v.RequestsPerSecond
	}).(JobLoadLoadSpecRequestsPerSecondPtrOutput)
}

func (o JobLoadLoadSpecPtrOutput) ScriptOrigin() JobLoadLoadSpecScriptOriginPtrOutput {
	return o.ApplyT(func(v *JobLoadLoadSpec) *JobLoadLoadSpecScriptOrigin {
		if v == nil {
			return nil
		}
		return v.ScriptOrigin
	}).(JobLoadLoadSpecScriptOriginPtrOutput)
}

type JobLoadLoadSpecConcurrency struct {
	GracefulStopSeconds  *int                              `pulumi:"gracefulStopSeconds"`
	IterationCount       *int                              `pulumi:"iterationCount"`
	MaxRequestsPerSecond *int                              `pulumi:"maxRequestsPerSecond"`
	Stages               []JobLoadLoadSpecConcurrencyStage `pulumi:"stages"`
}

// JobLoadLoadSpecConcurrencyInput is an input type that accepts JobLoadLoadSpecConcurrencyArgs and JobLoadLoadSpecConcurrencyOutput values.
// You can construct a concrete instance of `JobLoadLoadSpecConcurrencyInput` via:
//
//	JobLoadLoadSpecConcurrencyArgs{...}
type JobLoadLoadSpecConcurrencyInput interface {
	pulumi.Input

	ToJobLoadLoadSpecConcurrencyOutput() JobLoadLoadSpecConcurrencyOutput
	ToJobLoadLoadSpecConcurrencyOutputWithContext(context.Context) JobLoadLoadSpecConcurrencyOutput
}

type JobLoadLoadSpecConcurrencyArgs struct {
	GracefulStopSeconds  pulumi.IntPtrInput                        `pulumi:"gracefulStopSeconds"`
	IterationCount       pulumi.IntPtrInput                        `pulumi:"iterationCount"`
	MaxRequestsPerSecond pulumi.IntPtrInput                        `pulumi:"maxRequestsPerSecond"`
	Stages               JobLoadLoadSpecConcurrencyStageArrayInput `pulumi:"stages"`
}

func (JobLoadLoadSpecConcurrencyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobLoadLoadSpecConcurrency)(nil)).Elem()
}

func (i JobLoadLoadSpecConcurrencyArgs) ToJobLoadLoadSpecConcurrencyOutput() JobLoadLoadSpecConcurrencyOutput {
	return i.ToJobLoadLoadSpecConcurrencyOutputWithContext(context.Background())
}

func (i JobLoadLoadSpecConcurrencyArgs) ToJobLoadLoadSpecConcurrencyOutputWithContext(ctx context.Context) JobLoadLoadSpecConcurrencyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobLoadLoadSpecConcurrencyOutput)
}

func (i JobLoadLoadSpecConcurrencyArgs) ToJobLoadLoadSpecConcurrencyPtrOutput() JobLoadLoadSpecConcurrencyPtrOutput {
	return i.ToJobLoadLoadSpecConcurrencyPtrOutputWithContext(context.Background())
}

func (i JobLoadLoadSpecConcurrencyArgs) ToJobLoadLoadSpecConcurrencyPtrOutputWithContext(ctx context.Context) JobLoadLoadSpecConcurrencyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobLoadLoadSpecConcurrencyOutput).ToJobLoadLoadSpecConcurrencyPtrOutputWithContext(ctx)
}

// JobLoadLoadSpecConcurrencyPtrInput is an input type that accepts JobLoadLoadSpecConcurrencyArgs, JobLoadLoadSpecConcurrencyPtr and JobLoadLoadSpecConcurrencyPtrOutput values.
// You can construct a concrete instance of `JobLoadLoadSpecConcurrencyPtrInput` via:
//
//	        JobLoadLoadSpecConcurrencyArgs{...}
//
//	or:
//
//	        nil
type JobLoadLoadSpecConcurrencyPtrInput interface {
	pulumi.Input

	ToJobLoadLoadSpecConcurrencyPtrOutput() JobLoadLoadSpecConcurrencyPtrOutput
	ToJobLoadLoadSpecConcurrencyPtrOutputWithContext(context.Context) JobLoadLoadSpecConcurrencyPtrOutput
}

type jobLoadLoadSpecConcurrencyPtrType JobLoadLoadSpecConcurrencyArgs

func JobLoadLoadSpecConcurrencyPtr(v *JobLoadLoadSpecConcurrencyArgs) JobLoadLoadSpecConcurrencyPtrInput {
	return (*jobLoadLoadSpecConcurrencyPtrType)(v)
}

func (*jobLoadLoadSpecConcurrencyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobLoadLoadSpecConcurrency)(nil)).Elem()
}

func (i *jobLoadLoadSpecConcurrencyPtrType) ToJobLoadLoadSpecConcurrencyPtrOutput() JobLoadLoadSpecConcurrencyPtrOutput {
	return i.ToJobLoadLoadSpecConcurrencyPtrOutputWithContext(context.Background())
}

func (i *jobLoadLoadSpecConcurrencyPtrType) ToJobLoadLoadSpecConcurrencyPtrOutputWithContext(ctx context.Context) JobLoadLoadSpecConcurrencyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobLoadLoadSpecConcurrencyPtrOutput)
}

type JobLoadLoadSpecConcurrencyOutput struct{ *pulumi.OutputState }

func (JobLoadLoadSpecConcurrencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobLoadLoadSpecConcurrency)(nil)).Elem()
}

func (o JobLoadLoadSpecConcurrencyOutput) ToJobLoadLoadSpecConcurrencyOutput() JobLoadLoadSpecConcurrencyOutput {
	return o
}

func (o JobLoadLoadSpecConcurrencyOutput) ToJobLoadLoadSpecConcurrencyOutputWithContext(ctx context.Context) JobLoadLoadSpecConcurrencyOutput {
	return o
}

func (o JobLoadLoadSpecConcurrencyOutput) ToJobLoadLoadSpecConcurrencyPtrOutput() JobLoadLoadSpecConcurrencyPtrOutput {
	return o.ToJobLoadLoadSpecConcurrencyPtrOutputWithContext(context.Background())
}

func (o JobLoadLoadSpecConcurrencyOutput) ToJobLoadLoadSpecConcurrencyPtrOutputWithContext(ctx context.Context) JobLoadLoadSpecConcurrencyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobLoadLoadSpecConcurrency) *JobLoadLoadSpecConcurrency {
		return &v
	}).(JobLoadLoadSpecConcurrencyPtrOutput)
}

func (o JobLoadLoadSpecConcurrencyOutput) GracefulStopSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobLoadLoadSpecConcurrency) *int { return v.GracefulStopSeconds }).(pulumi.IntPtrOutput)
}

func (o JobLoadLoadSpecConcurrencyOutput) IterationCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobLoadLoadSpecConcurrency) *int { return v.IterationCount }).(pulumi.IntPtrOutput)
}

func (o JobLoadLoadSpecConcurrencyOutput) MaxRequestsPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobLoadLoadSpecConcurrency) *int { return v.MaxRequestsPerSecond }).(pulumi.IntPtrOutput)
}

func (o JobLoadLoadSpecConcurrencyOutput) Stages() JobLoadLoadSpecConcurrencyStageArrayOutput {
	return o.ApplyT(func(v JobLoadLoadSpecConcurrency) []JobLoadLoadSpecConcurrencyStage { return v.Stages }).(JobLoadLoadSpecConcurrencyStageArrayOutput)
}

type JobLoadLoadSpecConcurrencyPtrOutput struct{ *pulumi.OutputState }

func (JobLoadLoadSpecConcurrencyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobLoadLoadSpecConcurrency)(nil)).Elem()
}

func (o JobLoadLoadSpecConcurrencyPtrOutput) ToJobLoadLoadSpecConcurrencyPtrOutput() JobLoadLoadSpecConcurrencyPtrOutput {
	return o
}

func (o JobLoadLoadSpecConcurrencyPtrOutput) ToJobLoadLoadSpecConcurrencyPtrOutputWithContext(ctx context.Context) JobLoadLoadSpecConcurrencyPtrOutput {
	return o
}

func (o JobLoadLoadSpecConcurrencyPtrOutput) Elem() JobLoadLoadSpecConcurrencyOutput {
	return o.ApplyT(func(v *JobLoadLoadSpecConcurrency) JobLoadLoadSpecConcurrency {
		if v != nil {
			return *v
		}
		var ret JobLoadLoadSpecConcurrency
		return ret
	}).(JobLoadLoadSpecConcurrencyOutput)
}

func (o JobLoadLoadSpecConcurrencyPtrOutput) GracefulStopSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobLoadLoadSpecConcurrency) *int {
		if v == nil {
			return nil
		}
		return v.GracefulStopSeconds
	}).(pulumi.IntPtrOutput)
}

func (o JobLoadLoadSpecConcurrencyPtrOutput) IterationCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobLoadLoadSpecConcurrency) *int {
		if v == nil {
			return nil
		}
		return v.IterationCount
	}).(pulumi.IntPtrOutput)
}

func (o JobLoadLoadSpecConcurrencyPtrOutput) MaxRequestsPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobLoadLoadSpecConcurrency) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestsPerSecond
	}).(pulumi.IntPtrOutput)
}

func (o JobLoadLoadSpecConcurrencyPtrOutput) Stages() JobLoadLoadSpecConcurrencyStageArrayOutput {
	return o.ApplyT(func(v *JobLoadLoadSpecConcurrency) []JobLoadLoadSpecConcurrencyStage {
		if v == nil {
			return nil
		}
		return v.Stages
	}).(JobLoadLoadSpecConcurrencyStageArrayOutput)
}

type JobLoadLoadSpecConcurrencyStage struct {
	DurationSeconds    *int `pulumi:"durationSeconds"`
	TargetVirtualUsers *int `pulumi:"targetVirtualUsers"`
}

// JobLoadLoadSpecConcurrencyStageInput is an input type that accepts JobLoadLoadSpecConcurrencyStageArgs and JobLoadLoadSpecConcurrencyStageOutput values.
// You can construct a concrete instance of `JobLoadLoadSpecConcurrencyStageInput` via:
//
//	JobLoadLoadSpecConcurrencyStageArgs{...}
type JobLoadLoadSpecConcurrencyStageInput interface {
	pulumi.Input

	ToJobLoadLoadSpecConcurrencyStageOutput() JobLoadLoadSpecConcurrencyStageOutput
	ToJobLoadLoadSpecConcurrencyStageOutputWithContext(context.Context) JobLoadLoadSpecConcurrencyStageOutput
}

type JobLoadLoadSpecConcurrencyStageArgs struct {
	DurationSeconds    pulumi.IntPtrInput `pulumi:"durationSeconds"`
	TargetVirtualUsers pulumi.IntPtrInput `pulumi:"targetVirtualUsers"`
}

func (JobLoadLoadSpecConcurrencyStageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobLoadLoadSpecConcurrencyStage)(nil)).Elem()
}

func (i JobLoadLoadSpecConcurrencyStageArgs) ToJobLoadLoadSpecConcurrencyStageOutput() JobLoadLoadSpecConcurrencyStageOutput {
	return i.ToJobLoadLoadSpecConcurrencyStageOutputWithContext(context.Background())
}

func (i JobLoadLoadSpecConcurrencyStageArgs) ToJobLoadLoadSpecConcurrencyStageOutputWithContext(ctx context.Context) JobLoadLoadSpecConcurrencyStageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobLoadLoadSpecConcurrencyStageOutput)
}

// JobLoadLoadSpecConcurrencyStageArrayInput is an input type that accepts JobLoadLoadSpecConcurrencyStageArray and JobLoadLoadSpecConcurrencyStageArrayOutput values.
// You can construct a concrete instance of `JobLoadLoadSpecConcurrencyStageArrayInput` via:
//
//	JobLoadLoadSpecConcurrencyStageArray{ JobLoadLoadSpecConcurrencyStageArgs{...} }
type JobLoadLoadSpecConcurrencyStageArrayInput interface {
	pulumi.Input

	ToJobLoadLoadSpecConcurrencyStageArrayOutput() JobLoadLoadSpecConcurrencyStageArrayOutput
	ToJobLoadLoadSpecConcurrencyStageArrayOutputWithContext(context.Context) JobLoadLoadSpecConcurrencyStageArrayOutput
}

type JobLoadLoadSpecConcurrencyStageArray []JobLoadLoadSpecConcurrencyStageInput

func (JobLoadLoadSpecConcurrencyStageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobLoadLoadSpecConcurrencyStage)(nil)).Elem()
}

func (i JobLoadLoadSpecConcurrencyStageArray) ToJobLoadLoadSpecConcurrencyStageArrayOutput() JobLoadLoadSpecConcurrencyStageArrayOutput {
	return i.ToJobLoadLoadSpecConcurrencyStageArrayOutputWithContext(context.Background())
}

func (i JobLoadLoadSpecConcurrencyStageArray) ToJobLoadLoadSpecConcurrencyStageArrayOutputWithContext(ctx context.Context) JobLoadLoadSpecConcurrencyStageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobLoadLoadSpecConcurrencyStageArrayOutput)
}

type JobLoadLoadSpecConcurrencyStageOutput struct{ *pulumi.OutputState }

func (JobLoadLoadSpecConcurrencyStageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobLoadLoadSpecConcurrencyStage)(nil)).Elem()
}

func (o JobLoadLoadSpecConcurrencyStageOutput) ToJobLoadLoadSpecConcurrencyStageOutput() JobLoadLoadSpecConcurrencyStageOutput {
	return o
}

func (o JobLoadLoadSpecConcurrencyStageOutput) ToJobLoadLoadSpecConcurrencyStageOutputWithContext(ctx context.Context) JobLoadLoadSpecConcurrencyStageOutput {
	return o
}

func (o JobLoadLoadSpecConcurrencyStageOutput) DurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobLoadLoadSpecConcurrencyStage) *int { return v.DurationSeconds }).(pulumi.IntPtrOutput)
}

func (o JobLoadLoadSpecConcurrencyStageOutput) TargetVirtualUsers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobLoadLoadSpecConcurrencyStage) *int { return v.TargetVirtualUsers }).(pulumi.IntPtrOutput)
}

type JobLoadLoadSpecConcurrencyStageArrayOutput struct{ *pulumi.OutputState }

func (JobLoadLoadSpecConcurrencyStageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobLoadLoadSpecConcurrencyStage)(nil)).Elem()
}

func (o JobLoadLoadSpecConcurrencyStageArrayOutput) ToJobLoadLoadSpecConcurrencyStageArrayOutput() JobLoadLoadSpecConcurrencyStageArrayOutput {
	return o
}

func (o JobLoadLoadSpecConcurrencyStageArrayOutput) ToJobLoadLoadSpecConcurrencyStageArrayOutputWithContext(ctx context.Context) JobLoadLoadSpecConcurrencyStageArrayOutput {
	return o
}

func (o JobLoadLoadSpecConcurrencyStageArrayOutput) Index(i pulumi.IntInput) JobLoadLoadSpecConcurrencyStageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobLoadLoadSpecConcurrencyStage {
		return vs[0].([]JobLoadLoadSpecConcurrencyStage)[vs[1].(int)]
	}).(JobLoadLoadSpecConcurrencyStageOutput)
}

type JobLoadLoadSpecRequestsPerSecond struct {
	DurationSeconds         *int `pulumi:"durationSeconds"`
	GracefulStopSeconds     *int `pulumi:"gracefulStopSeconds"`
	MaxRequestsPerSecond    *int `pulumi:"maxRequestsPerSecond"`
	Resources               *int `pulumi:"resources"`
	StartRequestsPerSecond  *int `pulumi:"startRequestsPerSecond"`
	TargetRequestsPerSecond *int `pulumi:"targetRequestsPerSecond"`
}

// JobLoadLoadSpecRequestsPerSecondInput is an input type that accepts JobLoadLoadSpecRequestsPerSecondArgs and JobLoadLoadSpecRequestsPerSecondOutput values.
// You can construct a concrete instance of `JobLoadLoadSpecRequestsPerSecondInput` via:
//
//	JobLoadLoadSpecRequestsPerSecondArgs{...}
type JobLoadLoadSpecRequestsPerSecondInput interface {
	pulumi.Input

	ToJobLoadLoadSpecRequestsPerSecondOutput() JobLoadLoadSpecRequestsPerSecondOutput
	ToJobLoadLoadSpecRequestsPerSecondOutputWithContext(context.Context) JobLoadLoadSpecRequestsPerSecondOutput
}

type JobLoadLoadSpecRequestsPerSecondArgs struct {
	DurationSeconds         pulumi.IntPtrInput `pulumi:"durationSeconds"`
	GracefulStopSeconds     pulumi.IntPtrInput `pulumi:"gracefulStopSeconds"`
	MaxRequestsPerSecond    pulumi.IntPtrInput `pulumi:"maxRequestsPerSecond"`
	Resources               pulumi.IntPtrInput `pulumi:"resources"`
	StartRequestsPerSecond  pulumi.IntPtrInput `pulumi:"startRequestsPerSecond"`
	TargetRequestsPerSecond pulumi.IntPtrInput `pulumi:"targetRequestsPerSecond"`
}

func (JobLoadLoadSpecRequestsPerSecondArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobLoadLoadSpecRequestsPerSecond)(nil)).Elem()
}

func (i JobLoadLoadSpecRequestsPerSecondArgs) ToJobLoadLoadSpecRequestsPerSecondOutput() JobLoadLoadSpecRequestsPerSecondOutput {
	return i.ToJobLoadLoadSpecRequestsPerSecondOutputWithContext(context.Background())
}

func (i JobLoadLoadSpecRequestsPerSecondArgs) ToJobLoadLoadSpecRequestsPerSecondOutputWithContext(ctx context.Context) JobLoadLoadSpecRequestsPerSecondOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobLoadLoadSpecRequestsPerSecondOutput)
}

func (i JobLoadLoadSpecRequestsPerSecondArgs) ToJobLoadLoadSpecRequestsPerSecondPtrOutput() JobLoadLoadSpecRequestsPerSecondPtrOutput {
	return i.ToJobLoadLoadSpecRequestsPerSecondPtrOutputWithContext(context.Background())
}

func (i JobLoadLoadSpecRequestsPerSecondArgs) ToJobLoadLoadSpecRequestsPerSecondPtrOutputWithContext(ctx context.Context) JobLoadLoadSpecRequestsPerSecondPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobLoadLoadSpecRequestsPerSecondOutput).ToJobLoadLoadSpecRequestsPerSecondPtrOutputWithContext(ctx)
}

// JobLoadLoadSpecRequestsPerSecondPtrInput is an input type that accepts JobLoadLoadSpecRequestsPerSecondArgs, JobLoadLoadSpecRequestsPerSecondPtr and JobLoadLoadSpecRequestsPerSecondPtrOutput values.
// You can construct a concrete instance of `JobLoadLoadSpecRequestsPerSecondPtrInput` via:
//
//	        JobLoadLoadSpecRequestsPerSecondArgs{...}
//
//	or:
//
//	        nil
type JobLoadLoadSpecRequestsPerSecondPtrInput interface {
	pulumi.Input

	ToJobLoadLoadSpecRequestsPerSecondPtrOutput() JobLoadLoadSpecRequestsPerSecondPtrOutput
	ToJobLoadLoadSpecRequestsPerSecondPtrOutputWithContext(context.Context) JobLoadLoadSpecRequestsPerSecondPtrOutput
}

type jobLoadLoadSpecRequestsPerSecondPtrType JobLoadLoadSpecRequestsPerSecondArgs

func JobLoadLoadSpecRequestsPerSecondPtr(v *JobLoadLoadSpecRequestsPerSecondArgs) JobLoadLoadSpecRequestsPerSecondPtrInput {
	return (*jobLoadLoadSpecRequestsPerSecondPtrType)(v)
}

func (*jobLoadLoadSpecRequestsPerSecondPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobLoadLoadSpecRequestsPerSecond)(nil)).Elem()
}

func (i *jobLoadLoadSpecRequestsPerSecondPtrType) ToJobLoadLoadSpecRequestsPerSecondPtrOutput() JobLoadLoadSpecRequestsPerSecondPtrOutput {
	return i.ToJobLoadLoadSpecRequestsPerSecondPtrOutputWithContext(context.Background())
}

func (i *jobLoadLoadSpecRequestsPerSecondPtrType) ToJobLoadLoadSpecRequestsPerSecondPtrOutputWithContext(ctx context.Context) JobLoadLoadSpecRequestsPerSecondPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobLoadLoadSpecRequestsPerSecondPtrOutput)
}

type JobLoadLoadSpecRequestsPerSecondOutput struct{ *pulumi.OutputState }

func (JobLoadLoadSpecRequestsPerSecondOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobLoadLoadSpecRequestsPerSecond)(nil)).Elem()
}

func (o JobLoadLoadSpecRequestsPerSecondOutput) ToJobLoadLoadSpecRequestsPerSecondOutput() JobLoadLoadSpecRequestsPerSecondOutput {
	return o
}

func (o JobLoadLoadSpecRequestsPerSecondOutput) ToJobLoadLoadSpecRequestsPerSecondOutputWithContext(ctx context.Context) JobLoadLoadSpecRequestsPerSecondOutput {
	return o
}

func (o JobLoadLoadSpecRequestsPerSecondOutput) ToJobLoadLoadSpecRequestsPerSecondPtrOutput() JobLoadLoadSpecRequestsPerSecondPtrOutput {
	return o.ToJobLoadLoadSpecRequestsPerSecondPtrOutputWithContext(context.Background())
}

func (o JobLoadLoadSpecRequestsPerSecondOutput) ToJobLoadLoadSpecRequestsPerSecondPtrOutputWithContext(ctx context.Context) JobLoadLoadSpecRequestsPerSecondPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobLoadLoadSpecRequestsPerSecond) *JobLoadLoadSpecRequestsPerSecond {
		return &v
	}).(JobLoadLoadSpecRequestsPerSecondPtrOutput)
}

func (o JobLoadLoadSpecRequestsPerSecondOutput) DurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobLoadLoadSpecRequestsPerSecond) *int { return v.DurationSeconds }).(pulumi.IntPtrOutput)
}

func (o JobLoadLoadSpecRequestsPerSecondOutput) GracefulStopSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobLoadLoadSpecRequestsPerSecond) *int { return v.GracefulStopSeconds }).(pulumi.IntPtrOutput)
}

func (o JobLoadLoadSpecRequestsPerSecondOutput) MaxRequestsPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobLoadLoadSpecRequestsPerSecond) *int { return v.MaxRequestsPerSecond }).(pulumi.IntPtrOutput)
}

func (o JobLoadLoadSpecRequestsPerSecondOutput) Resources() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobLoadLoadSpecRequestsPerSecond) *int { return v.Resources }).(pulumi.IntPtrOutput)
}

func (o JobLoadLoadSpecRequestsPerSecondOutput) StartRequestsPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobLoadLoadSpecRequestsPerSecond) *int { return v.StartRequestsPerSecond }).(pulumi.IntPtrOutput)
}

func (o JobLoadLoadSpecRequestsPerSecondOutput) TargetRequestsPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobLoadLoadSpecRequestsPerSecond) *int { return v.TargetRequestsPerSecond }).(pulumi.IntPtrOutput)
}

type JobLoadLoadSpecRequestsPerSecondPtrOutput struct{ *pulumi.OutputState }

func (JobLoadLoadSpecRequestsPerSecondPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobLoadLoadSpecRequestsPerSecond)(nil)).Elem()
}

func (o JobLoadLoadSpecRequestsPerSecondPtrOutput) ToJobLoadLoadSpecRequestsPerSecondPtrOutput() JobLoadLoadSpecRequestsPerSecondPtrOutput {
	return o
}

func (o JobLoadLoadSpecRequestsPerSecondPtrOutput) ToJobLoadLoadSpecRequestsPerSecondPtrOutputWithContext(ctx context.Context) JobLoadLoadSpecRequestsPerSecondPtrOutput {
	return o
}

func (o JobLoadLoadSpecRequestsPerSecondPtrOutput) Elem() JobLoadLoadSpecRequestsPerSecondOutput {
	return o.ApplyT(func(v *JobLoadLoadSpecRequestsPerSecond) JobLoadLoadSpecRequestsPerSecond {
		if v != nil {
			return *v
		}
		var ret JobLoadLoadSpecRequestsPerSecond
		return ret
	}).(JobLoadLoadSpecRequestsPerSecondOutput)
}

func (o JobLoadLoadSpecRequestsPerSecondPtrOutput) DurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobLoadLoadSpecRequestsPerSecond) *int {
		if v == nil {
			return nil
		}
		return v.DurationSeconds
	}).(pulumi.IntPtrOutput)
}

func (o JobLoadLoadSpecRequestsPerSecondPtrOutput) GracefulStopSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobLoadLoadSpecRequestsPerSecond) *int {
		if v == nil {
			return nil
		}
		return v.GracefulStopSeconds
	}).(pulumi.IntPtrOutput)
}

func (o JobLoadLoadSpecRequestsPerSecondPtrOutput) MaxRequestsPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobLoadLoadSpecRequestsPerSecond) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestsPerSecond
	}).(pulumi.IntPtrOutput)
}

func (o JobLoadLoadSpecRequestsPerSecondPtrOutput) Resources() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobLoadLoadSpecRequestsPerSecond) *int {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(pulumi.IntPtrOutput)
}

func (o JobLoadLoadSpecRequestsPerSecondPtrOutput) StartRequestsPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobLoadLoadSpecRequestsPerSecond) *int {
		if v == nil {
			return nil
		}
		return v.StartRequestsPerSecond
	}).(pulumi.IntPtrOutput)
}

func (o JobLoadLoadSpecRequestsPerSecondPtrOutput) TargetRequestsPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobLoadLoadSpecRequestsPerSecond) *int {
		if v == nil {
			return nil
		}
		return v.TargetRequestsPerSecond
	}).(pulumi.IntPtrOutput)
}

type JobLoadLoadSpecScriptOrigin struct {
	DurationSeconds      int    `pulumi:"durationSeconds"`
	MachineNumber        int    `pulumi:"machineNumber"`
	MachineSpecification string `pulumi:"machineSpecification"`
}

// JobLoadLoadSpecScriptOriginInput is an input type that accepts JobLoadLoadSpecScriptOriginArgs and JobLoadLoadSpecScriptOriginOutput values.
// You can construct a concrete instance of `JobLoadLoadSpecScriptOriginInput` via:
//
//	JobLoadLoadSpecScriptOriginArgs{...}
type JobLoadLoadSpecScriptOriginInput interface {
	pulumi.Input

	ToJobLoadLoadSpecScriptOriginOutput() JobLoadLoadSpecScriptOriginOutput
	ToJobLoadLoadSpecScriptOriginOutputWithContext(context.Context) JobLoadLoadSpecScriptOriginOutput
}

type JobLoadLoadSpecScriptOriginArgs struct {
	DurationSeconds      pulumi.IntInput    `pulumi:"durationSeconds"`
	MachineNumber        pulumi.IntInput    `pulumi:"machineNumber"`
	MachineSpecification pulumi.StringInput `pulumi:"machineSpecification"`
}

func (JobLoadLoadSpecScriptOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobLoadLoadSpecScriptOrigin)(nil)).Elem()
}

func (i JobLoadLoadSpecScriptOriginArgs) ToJobLoadLoadSpecScriptOriginOutput() JobLoadLoadSpecScriptOriginOutput {
	return i.ToJobLoadLoadSpecScriptOriginOutputWithContext(context.Background())
}

func (i JobLoadLoadSpecScriptOriginArgs) ToJobLoadLoadSpecScriptOriginOutputWithContext(ctx context.Context) JobLoadLoadSpecScriptOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobLoadLoadSpecScriptOriginOutput)
}

func (i JobLoadLoadSpecScriptOriginArgs) ToJobLoadLoadSpecScriptOriginPtrOutput() JobLoadLoadSpecScriptOriginPtrOutput {
	return i.ToJobLoadLoadSpecScriptOriginPtrOutputWithContext(context.Background())
}

func (i JobLoadLoadSpecScriptOriginArgs) ToJobLoadLoadSpecScriptOriginPtrOutputWithContext(ctx context.Context) JobLoadLoadSpecScriptOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobLoadLoadSpecScriptOriginOutput).ToJobLoadLoadSpecScriptOriginPtrOutputWithContext(ctx)
}

// JobLoadLoadSpecScriptOriginPtrInput is an input type that accepts JobLoadLoadSpecScriptOriginArgs, JobLoadLoadSpecScriptOriginPtr and JobLoadLoadSpecScriptOriginPtrOutput values.
// You can construct a concrete instance of `JobLoadLoadSpecScriptOriginPtrInput` via:
//
//	        JobLoadLoadSpecScriptOriginArgs{...}
//
//	or:
//
//	        nil
type JobLoadLoadSpecScriptOriginPtrInput interface {
	pulumi.Input

	ToJobLoadLoadSpecScriptOriginPtrOutput() JobLoadLoadSpecScriptOriginPtrOutput
	ToJobLoadLoadSpecScriptOriginPtrOutputWithContext(context.Context) JobLoadLoadSpecScriptOriginPtrOutput
}

type jobLoadLoadSpecScriptOriginPtrType JobLoadLoadSpecScriptOriginArgs

func JobLoadLoadSpecScriptOriginPtr(v *JobLoadLoadSpecScriptOriginArgs) JobLoadLoadSpecScriptOriginPtrInput {
	return (*jobLoadLoadSpecScriptOriginPtrType)(v)
}

func (*jobLoadLoadSpecScriptOriginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobLoadLoadSpecScriptOrigin)(nil)).Elem()
}

func (i *jobLoadLoadSpecScriptOriginPtrType) ToJobLoadLoadSpecScriptOriginPtrOutput() JobLoadLoadSpecScriptOriginPtrOutput {
	return i.ToJobLoadLoadSpecScriptOriginPtrOutputWithContext(context.Background())
}

func (i *jobLoadLoadSpecScriptOriginPtrType) ToJobLoadLoadSpecScriptOriginPtrOutputWithContext(ctx context.Context) JobLoadLoadSpecScriptOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobLoadLoadSpecScriptOriginPtrOutput)
}

type JobLoadLoadSpecScriptOriginOutput struct{ *pulumi.OutputState }

func (JobLoadLoadSpecScriptOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobLoadLoadSpecScriptOrigin)(nil)).Elem()
}

func (o JobLoadLoadSpecScriptOriginOutput) ToJobLoadLoadSpecScriptOriginOutput() JobLoadLoadSpecScriptOriginOutput {
	return o
}

func (o JobLoadLoadSpecScriptOriginOutput) ToJobLoadLoadSpecScriptOriginOutputWithContext(ctx context.Context) JobLoadLoadSpecScriptOriginOutput {
	return o
}

func (o JobLoadLoadSpecScriptOriginOutput) ToJobLoadLoadSpecScriptOriginPtrOutput() JobLoadLoadSpecScriptOriginPtrOutput {
	return o.ToJobLoadLoadSpecScriptOriginPtrOutputWithContext(context.Background())
}

func (o JobLoadLoadSpecScriptOriginOutput) ToJobLoadLoadSpecScriptOriginPtrOutputWithContext(ctx context.Context) JobLoadLoadSpecScriptOriginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobLoadLoadSpecScriptOrigin) *JobLoadLoadSpecScriptOrigin {
		return &v
	}).(JobLoadLoadSpecScriptOriginPtrOutput)
}

func (o JobLoadLoadSpecScriptOriginOutput) DurationSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v JobLoadLoadSpecScriptOrigin) int { return v.DurationSeconds }).(pulumi.IntOutput)
}

func (o JobLoadLoadSpecScriptOriginOutput) MachineNumber() pulumi.IntOutput {
	return o.ApplyT(func(v JobLoadLoadSpecScriptOrigin) int { return v.MachineNumber }).(pulumi.IntOutput)
}

func (o JobLoadLoadSpecScriptOriginOutput) MachineSpecification() pulumi.StringOutput {
	return o.ApplyT(func(v JobLoadLoadSpecScriptOrigin) string { return v.MachineSpecification }).(pulumi.StringOutput)
}

type JobLoadLoadSpecScriptOriginPtrOutput struct{ *pulumi.OutputState }

func (JobLoadLoadSpecScriptOriginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobLoadLoadSpecScriptOrigin)(nil)).Elem()
}

func (o JobLoadLoadSpecScriptOriginPtrOutput) ToJobLoadLoadSpecScriptOriginPtrOutput() JobLoadLoadSpecScriptOriginPtrOutput {
	return o
}

func (o JobLoadLoadSpecScriptOriginPtrOutput) ToJobLoadLoadSpecScriptOriginPtrOutputWithContext(ctx context.Context) JobLoadLoadSpecScriptOriginPtrOutput {
	return o
}

func (o JobLoadLoadSpecScriptOriginPtrOutput) Elem() JobLoadLoadSpecScriptOriginOutput {
	return o.ApplyT(func(v *JobLoadLoadSpecScriptOrigin) JobLoadLoadSpecScriptOrigin {
		if v != nil {
			return *v
		}
		var ret JobLoadLoadSpecScriptOrigin
		return ret
	}).(JobLoadLoadSpecScriptOriginOutput)
}

func (o JobLoadLoadSpecScriptOriginPtrOutput) DurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobLoadLoadSpecScriptOrigin) *int {
		if v == nil {
			return nil
		}
		return &v.DurationSeconds
	}).(pulumi.IntPtrOutput)
}

func (o JobLoadLoadSpecScriptOriginPtrOutput) MachineNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobLoadLoadSpecScriptOrigin) *int {
		if v == nil {
			return nil
		}
		return &v.MachineNumber
	}).(pulumi.IntPtrOutput)
}

func (o JobLoadLoadSpecScriptOriginPtrOutput) MachineSpecification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobLoadLoadSpecScriptOrigin) *string {
		if v == nil {
			return nil
		}
		return &v.MachineSpecification
	}).(pulumi.StringPtrOutput)
}

type JobLoadVpcLoadDistribution struct {
	Region    *string  `pulumi:"region"`
	RegionId  int      `pulumi:"regionId"`
	SubnetIds []string `pulumi:"subnetIds"`
	VpcId     *string  `pulumi:"vpcId"`
}

// JobLoadVpcLoadDistributionInput is an input type that accepts JobLoadVpcLoadDistributionArgs and JobLoadVpcLoadDistributionOutput values.
// You can construct a concrete instance of `JobLoadVpcLoadDistributionInput` via:
//
//	JobLoadVpcLoadDistributionArgs{...}
type JobLoadVpcLoadDistributionInput interface {
	pulumi.Input

	ToJobLoadVpcLoadDistributionOutput() JobLoadVpcLoadDistributionOutput
	ToJobLoadVpcLoadDistributionOutputWithContext(context.Context) JobLoadVpcLoadDistributionOutput
}

type JobLoadVpcLoadDistributionArgs struct {
	Region    pulumi.StringPtrInput   `pulumi:"region"`
	RegionId  pulumi.IntInput         `pulumi:"regionId"`
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	VpcId     pulumi.StringPtrInput   `pulumi:"vpcId"`
}

func (JobLoadVpcLoadDistributionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobLoadVpcLoadDistribution)(nil)).Elem()
}

func (i JobLoadVpcLoadDistributionArgs) ToJobLoadVpcLoadDistributionOutput() JobLoadVpcLoadDistributionOutput {
	return i.ToJobLoadVpcLoadDistributionOutputWithContext(context.Background())
}

func (i JobLoadVpcLoadDistributionArgs) ToJobLoadVpcLoadDistributionOutputWithContext(ctx context.Context) JobLoadVpcLoadDistributionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobLoadVpcLoadDistributionOutput)
}

func (i JobLoadVpcLoadDistributionArgs) ToJobLoadVpcLoadDistributionPtrOutput() JobLoadVpcLoadDistributionPtrOutput {
	return i.ToJobLoadVpcLoadDistributionPtrOutputWithContext(context.Background())
}

func (i JobLoadVpcLoadDistributionArgs) ToJobLoadVpcLoadDistributionPtrOutputWithContext(ctx context.Context) JobLoadVpcLoadDistributionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobLoadVpcLoadDistributionOutput).ToJobLoadVpcLoadDistributionPtrOutputWithContext(ctx)
}

// JobLoadVpcLoadDistributionPtrInput is an input type that accepts JobLoadVpcLoadDistributionArgs, JobLoadVpcLoadDistributionPtr and JobLoadVpcLoadDistributionPtrOutput values.
// You can construct a concrete instance of `JobLoadVpcLoadDistributionPtrInput` via:
//
//	        JobLoadVpcLoadDistributionArgs{...}
//
//	or:
//
//	        nil
type JobLoadVpcLoadDistributionPtrInput interface {
	pulumi.Input

	ToJobLoadVpcLoadDistributionPtrOutput() JobLoadVpcLoadDistributionPtrOutput
	ToJobLoadVpcLoadDistributionPtrOutputWithContext(context.Context) JobLoadVpcLoadDistributionPtrOutput
}

type jobLoadVpcLoadDistributionPtrType JobLoadVpcLoadDistributionArgs

func JobLoadVpcLoadDistributionPtr(v *JobLoadVpcLoadDistributionArgs) JobLoadVpcLoadDistributionPtrInput {
	return (*jobLoadVpcLoadDistributionPtrType)(v)
}

func (*jobLoadVpcLoadDistributionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JobLoadVpcLoadDistribution)(nil)).Elem()
}

func (i *jobLoadVpcLoadDistributionPtrType) ToJobLoadVpcLoadDistributionPtrOutput() JobLoadVpcLoadDistributionPtrOutput {
	return i.ToJobLoadVpcLoadDistributionPtrOutputWithContext(context.Background())
}

func (i *jobLoadVpcLoadDistributionPtrType) ToJobLoadVpcLoadDistributionPtrOutputWithContext(ctx context.Context) JobLoadVpcLoadDistributionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobLoadVpcLoadDistributionPtrOutput)
}

type JobLoadVpcLoadDistributionOutput struct{ *pulumi.OutputState }

func (JobLoadVpcLoadDistributionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobLoadVpcLoadDistribution)(nil)).Elem()
}

func (o JobLoadVpcLoadDistributionOutput) ToJobLoadVpcLoadDistributionOutput() JobLoadVpcLoadDistributionOutput {
	return o
}

func (o JobLoadVpcLoadDistributionOutput) ToJobLoadVpcLoadDistributionOutputWithContext(ctx context.Context) JobLoadVpcLoadDistributionOutput {
	return o
}

func (o JobLoadVpcLoadDistributionOutput) ToJobLoadVpcLoadDistributionPtrOutput() JobLoadVpcLoadDistributionPtrOutput {
	return o.ToJobLoadVpcLoadDistributionPtrOutputWithContext(context.Background())
}

func (o JobLoadVpcLoadDistributionOutput) ToJobLoadVpcLoadDistributionPtrOutputWithContext(ctx context.Context) JobLoadVpcLoadDistributionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JobLoadVpcLoadDistribution) *JobLoadVpcLoadDistribution {
		return &v
	}).(JobLoadVpcLoadDistributionPtrOutput)
}

func (o JobLoadVpcLoadDistributionOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobLoadVpcLoadDistribution) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o JobLoadVpcLoadDistributionOutput) RegionId() pulumi.IntOutput {
	return o.ApplyT(func(v JobLoadVpcLoadDistribution) int { return v.RegionId }).(pulumi.IntOutput)
}

func (o JobLoadVpcLoadDistributionOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JobLoadVpcLoadDistribution) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

func (o JobLoadVpcLoadDistributionOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobLoadVpcLoadDistribution) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type JobLoadVpcLoadDistributionPtrOutput struct{ *pulumi.OutputState }

func (JobLoadVpcLoadDistributionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobLoadVpcLoadDistribution)(nil)).Elem()
}

func (o JobLoadVpcLoadDistributionPtrOutput) ToJobLoadVpcLoadDistributionPtrOutput() JobLoadVpcLoadDistributionPtrOutput {
	return o
}

func (o JobLoadVpcLoadDistributionPtrOutput) ToJobLoadVpcLoadDistributionPtrOutputWithContext(ctx context.Context) JobLoadVpcLoadDistributionPtrOutput {
	return o
}

func (o JobLoadVpcLoadDistributionPtrOutput) Elem() JobLoadVpcLoadDistributionOutput {
	return o.ApplyT(func(v *JobLoadVpcLoadDistribution) JobLoadVpcLoadDistribution {
		if v != nil {
			return *v
		}
		var ret JobLoadVpcLoadDistribution
		return ret
	}).(JobLoadVpcLoadDistributionOutput)
}

func (o JobLoadVpcLoadDistributionPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobLoadVpcLoadDistribution) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

func (o JobLoadVpcLoadDistributionPtrOutput) RegionId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobLoadVpcLoadDistribution) *int {
		if v == nil {
			return nil
		}
		return &v.RegionId
	}).(pulumi.IntPtrOutput)
}

func (o JobLoadVpcLoadDistributionPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *JobLoadVpcLoadDistribution) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

func (o JobLoadVpcLoadDistributionPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobLoadVpcLoadDistribution) *string {
		if v == nil {
			return nil
		}
		return v.VpcId
	}).(pulumi.StringPtrOutput)
}

type JobPlugin struct {
	FileId    *string `pulumi:"fileId"`
	Name      *string `pulumi:"name"`
	Size      *int    `pulumi:"size"`
	Type      *string `pulumi:"type"`
	UpdatedAt *string `pulumi:"updatedAt"`
}

// JobPluginInput is an input type that accepts JobPluginArgs and JobPluginOutput values.
// You can construct a concrete instance of `JobPluginInput` via:
//
//	JobPluginArgs{...}
type JobPluginInput interface {
	pulumi.Input

	ToJobPluginOutput() JobPluginOutput
	ToJobPluginOutputWithContext(context.Context) JobPluginOutput
}

type JobPluginArgs struct {
	FileId    pulumi.StringPtrInput `pulumi:"fileId"`
	Name      pulumi.StringPtrInput `pulumi:"name"`
	Size      pulumi.IntPtrInput    `pulumi:"size"`
	Type      pulumi.StringPtrInput `pulumi:"type"`
	UpdatedAt pulumi.StringPtrInput `pulumi:"updatedAt"`
}

func (JobPluginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPlugin)(nil)).Elem()
}

func (i JobPluginArgs) ToJobPluginOutput() JobPluginOutput {
	return i.ToJobPluginOutputWithContext(context.Background())
}

func (i JobPluginArgs) ToJobPluginOutputWithContext(ctx context.Context) JobPluginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPluginOutput)
}

// JobPluginArrayInput is an input type that accepts JobPluginArray and JobPluginArrayOutput values.
// You can construct a concrete instance of `JobPluginArrayInput` via:
//
//	JobPluginArray{ JobPluginArgs{...} }
type JobPluginArrayInput interface {
	pulumi.Input

	ToJobPluginArrayOutput() JobPluginArrayOutput
	ToJobPluginArrayOutputWithContext(context.Context) JobPluginArrayOutput
}

type JobPluginArray []JobPluginInput

func (JobPluginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobPlugin)(nil)).Elem()
}

func (i JobPluginArray) ToJobPluginArrayOutput() JobPluginArrayOutput {
	return i.ToJobPluginArrayOutputWithContext(context.Background())
}

func (i JobPluginArray) ToJobPluginArrayOutputWithContext(ctx context.Context) JobPluginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobPluginArrayOutput)
}

type JobPluginOutput struct{ *pulumi.OutputState }

func (JobPluginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobPlugin)(nil)).Elem()
}

func (o JobPluginOutput) ToJobPluginOutput() JobPluginOutput {
	return o
}

func (o JobPluginOutput) ToJobPluginOutputWithContext(ctx context.Context) JobPluginOutput {
	return o
}

func (o JobPluginOutput) FileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobPlugin) *string { return v.FileId }).(pulumi.StringPtrOutput)
}

func (o JobPluginOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobPlugin) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o JobPluginOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobPlugin) *int { return v.Size }).(pulumi.IntPtrOutput)
}

func (o JobPluginOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobPlugin) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o JobPluginOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobPlugin) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type JobPluginArrayOutput struct{ *pulumi.OutputState }

func (JobPluginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobPlugin)(nil)).Elem()
}

func (o JobPluginArrayOutput) ToJobPluginArrayOutput() JobPluginArrayOutput {
	return o
}

func (o JobPluginArrayOutput) ToJobPluginArrayOutputWithContext(ctx context.Context) JobPluginArrayOutput {
	return o
}

func (o JobPluginArrayOutput) Index(i pulumi.IntInput) JobPluginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobPlugin {
		return vs[0].([]JobPlugin)[vs[1].(int)]
	}).(JobPluginOutput)
}

type JobProtocol struct {
	FileId    *string `pulumi:"fileId"`
	Name      *string `pulumi:"name"`
	Size      *int    `pulumi:"size"`
	Type      *string `pulumi:"type"`
	UpdatedAt *string `pulumi:"updatedAt"`
}

// JobProtocolInput is an input type that accepts JobProtocolArgs and JobProtocolOutput values.
// You can construct a concrete instance of `JobProtocolInput` via:
//
//	JobProtocolArgs{...}
type JobProtocolInput interface {
	pulumi.Input

	ToJobProtocolOutput() JobProtocolOutput
	ToJobProtocolOutputWithContext(context.Context) JobProtocolOutput
}

type JobProtocolArgs struct {
	FileId    pulumi.StringPtrInput `pulumi:"fileId"`
	Name      pulumi.StringPtrInput `pulumi:"name"`
	Size      pulumi.IntPtrInput    `pulumi:"size"`
	Type      pulumi.StringPtrInput `pulumi:"type"`
	UpdatedAt pulumi.StringPtrInput `pulumi:"updatedAt"`
}

func (JobProtocolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobProtocol)(nil)).Elem()
}

func (i JobProtocolArgs) ToJobProtocolOutput() JobProtocolOutput {
	return i.ToJobProtocolOutputWithContext(context.Background())
}

func (i JobProtocolArgs) ToJobProtocolOutputWithContext(ctx context.Context) JobProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobProtocolOutput)
}

// JobProtocolArrayInput is an input type that accepts JobProtocolArray and JobProtocolArrayOutput values.
// You can construct a concrete instance of `JobProtocolArrayInput` via:
//
//	JobProtocolArray{ JobProtocolArgs{...} }
type JobProtocolArrayInput interface {
	pulumi.Input

	ToJobProtocolArrayOutput() JobProtocolArrayOutput
	ToJobProtocolArrayOutputWithContext(context.Context) JobProtocolArrayOutput
}

type JobProtocolArray []JobProtocolInput

func (JobProtocolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobProtocol)(nil)).Elem()
}

func (i JobProtocolArray) ToJobProtocolArrayOutput() JobProtocolArrayOutput {
	return i.ToJobProtocolArrayOutputWithContext(context.Background())
}

func (i JobProtocolArray) ToJobProtocolArrayOutputWithContext(ctx context.Context) JobProtocolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobProtocolArrayOutput)
}

type JobProtocolOutput struct{ *pulumi.OutputState }

func (JobProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobProtocol)(nil)).Elem()
}

func (o JobProtocolOutput) ToJobProtocolOutput() JobProtocolOutput {
	return o
}

func (o JobProtocolOutput) ToJobProtocolOutputWithContext(ctx context.Context) JobProtocolOutput {
	return o
}

func (o JobProtocolOutput) FileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobProtocol) *string { return v.FileId }).(pulumi.StringPtrOutput)
}

func (o JobProtocolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobProtocol) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o JobProtocolOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobProtocol) *int { return v.Size }).(pulumi.IntPtrOutput)
}

func (o JobProtocolOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobProtocol) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o JobProtocolOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobProtocol) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type JobProtocolArrayOutput struct{ *pulumi.OutputState }

func (JobProtocolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobProtocol)(nil)).Elem()
}

func (o JobProtocolArrayOutput) ToJobProtocolArrayOutput() JobProtocolArrayOutput {
	return o
}

func (o JobProtocolArrayOutput) ToJobProtocolArrayOutputWithContext(ctx context.Context) JobProtocolArrayOutput {
	return o
}

func (o JobProtocolArrayOutput) Index(i pulumi.IntInput) JobProtocolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobProtocol {
		return vs[0].([]JobProtocol)[vs[1].(int)]
	}).(JobProtocolOutput)
}

type JobRequestFile struct {
	FileId    *string `pulumi:"fileId"`
	Name      *string `pulumi:"name"`
	Size      *int    `pulumi:"size"`
	Type      *string `pulumi:"type"`
	UpdatedAt *string `pulumi:"updatedAt"`
}

// JobRequestFileInput is an input type that accepts JobRequestFileArgs and JobRequestFileOutput values.
// You can construct a concrete instance of `JobRequestFileInput` via:
//
//	JobRequestFileArgs{...}
type JobRequestFileInput interface {
	pulumi.Input

	ToJobRequestFileOutput() JobRequestFileOutput
	ToJobRequestFileOutputWithContext(context.Context) JobRequestFileOutput
}

type JobRequestFileArgs struct {
	FileId    pulumi.StringPtrInput `pulumi:"fileId"`
	Name      pulumi.StringPtrInput `pulumi:"name"`
	Size      pulumi.IntPtrInput    `pulumi:"size"`
	Type      pulumi.StringPtrInput `pulumi:"type"`
	UpdatedAt pulumi.StringPtrInput `pulumi:"updatedAt"`
}

func (JobRequestFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobRequestFile)(nil)).Elem()
}

func (i JobRequestFileArgs) ToJobRequestFileOutput() JobRequestFileOutput {
	return i.ToJobRequestFileOutputWithContext(context.Background())
}

func (i JobRequestFileArgs) ToJobRequestFileOutputWithContext(ctx context.Context) JobRequestFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobRequestFileOutput)
}

// JobRequestFileArrayInput is an input type that accepts JobRequestFileArray and JobRequestFileArrayOutput values.
// You can construct a concrete instance of `JobRequestFileArrayInput` via:
//
//	JobRequestFileArray{ JobRequestFileArgs{...} }
type JobRequestFileArrayInput interface {
	pulumi.Input

	ToJobRequestFileArrayOutput() JobRequestFileArrayOutput
	ToJobRequestFileArrayOutputWithContext(context.Context) JobRequestFileArrayOutput
}

type JobRequestFileArray []JobRequestFileInput

func (JobRequestFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobRequestFile)(nil)).Elem()
}

func (i JobRequestFileArray) ToJobRequestFileArrayOutput() JobRequestFileArrayOutput {
	return i.ToJobRequestFileArrayOutputWithContext(context.Background())
}

func (i JobRequestFileArray) ToJobRequestFileArrayOutputWithContext(ctx context.Context) JobRequestFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobRequestFileArrayOutput)
}

type JobRequestFileOutput struct{ *pulumi.OutputState }

func (JobRequestFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobRequestFile)(nil)).Elem()
}

func (o JobRequestFileOutput) ToJobRequestFileOutput() JobRequestFileOutput {
	return o
}

func (o JobRequestFileOutput) ToJobRequestFileOutputWithContext(ctx context.Context) JobRequestFileOutput {
	return o
}

func (o JobRequestFileOutput) FileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobRequestFile) *string { return v.FileId }).(pulumi.StringPtrOutput)
}

func (o JobRequestFileOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobRequestFile) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o JobRequestFileOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobRequestFile) *int { return v.Size }).(pulumi.IntPtrOutput)
}

func (o JobRequestFileOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobRequestFile) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o JobRequestFileOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobRequestFile) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type JobRequestFileArrayOutput struct{ *pulumi.OutputState }

func (JobRequestFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobRequestFile)(nil)).Elem()
}

func (o JobRequestFileArrayOutput) ToJobRequestFileArrayOutput() JobRequestFileArrayOutput {
	return o
}

func (o JobRequestFileArrayOutput) ToJobRequestFileArrayOutputWithContext(ctx context.Context) JobRequestFileArrayOutput {
	return o
}

func (o JobRequestFileArrayOutput) Index(i pulumi.IntInput) JobRequestFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobRequestFile {
		return vs[0].([]JobRequestFile)[vs[1].(int)]
	}).(JobRequestFileOutput)
}

type JobTestScript struct {
	EncodedContent     *string `pulumi:"encodedContent"`
	EncodedHttpArchive *string `pulumi:"encodedHttpArchive"`
	LoadWeight         *int    `pulumi:"loadWeight"`
	Name               *string `pulumi:"name"`
	Size               *int    `pulumi:"size"`
	Type               *string `pulumi:"type"`
	UpdatedAt          *string `pulumi:"updatedAt"`
}

// JobTestScriptInput is an input type that accepts JobTestScriptArgs and JobTestScriptOutput values.
// You can construct a concrete instance of `JobTestScriptInput` via:
//
//	JobTestScriptArgs{...}
type JobTestScriptInput interface {
	pulumi.Input

	ToJobTestScriptOutput() JobTestScriptOutput
	ToJobTestScriptOutputWithContext(context.Context) JobTestScriptOutput
}

type JobTestScriptArgs struct {
	EncodedContent     pulumi.StringPtrInput `pulumi:"encodedContent"`
	EncodedHttpArchive pulumi.StringPtrInput `pulumi:"encodedHttpArchive"`
	LoadWeight         pulumi.IntPtrInput    `pulumi:"loadWeight"`
	Name               pulumi.StringPtrInput `pulumi:"name"`
	Size               pulumi.IntPtrInput    `pulumi:"size"`
	Type               pulumi.StringPtrInput `pulumi:"type"`
	UpdatedAt          pulumi.StringPtrInput `pulumi:"updatedAt"`
}

func (JobTestScriptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTestScript)(nil)).Elem()
}

func (i JobTestScriptArgs) ToJobTestScriptOutput() JobTestScriptOutput {
	return i.ToJobTestScriptOutputWithContext(context.Background())
}

func (i JobTestScriptArgs) ToJobTestScriptOutputWithContext(ctx context.Context) JobTestScriptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTestScriptOutput)
}

// JobTestScriptArrayInput is an input type that accepts JobTestScriptArray and JobTestScriptArrayOutput values.
// You can construct a concrete instance of `JobTestScriptArrayInput` via:
//
//	JobTestScriptArray{ JobTestScriptArgs{...} }
type JobTestScriptArrayInput interface {
	pulumi.Input

	ToJobTestScriptArrayOutput() JobTestScriptArrayOutput
	ToJobTestScriptArrayOutputWithContext(context.Context) JobTestScriptArrayOutput
}

type JobTestScriptArray []JobTestScriptInput

func (JobTestScriptArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobTestScript)(nil)).Elem()
}

func (i JobTestScriptArray) ToJobTestScriptArrayOutput() JobTestScriptArrayOutput {
	return i.ToJobTestScriptArrayOutputWithContext(context.Background())
}

func (i JobTestScriptArray) ToJobTestScriptArrayOutputWithContext(ctx context.Context) JobTestScriptArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobTestScriptArrayOutput)
}

type JobTestScriptOutput struct{ *pulumi.OutputState }

func (JobTestScriptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JobTestScript)(nil)).Elem()
}

func (o JobTestScriptOutput) ToJobTestScriptOutput() JobTestScriptOutput {
	return o
}

func (o JobTestScriptOutput) ToJobTestScriptOutputWithContext(ctx context.Context) JobTestScriptOutput {
	return o
}

func (o JobTestScriptOutput) EncodedContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobTestScript) *string { return v.EncodedContent }).(pulumi.StringPtrOutput)
}

func (o JobTestScriptOutput) EncodedHttpArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobTestScript) *string { return v.EncodedHttpArchive }).(pulumi.StringPtrOutput)
}

func (o JobTestScriptOutput) LoadWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobTestScript) *int { return v.LoadWeight }).(pulumi.IntPtrOutput)
}

func (o JobTestScriptOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobTestScript) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o JobTestScriptOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JobTestScript) *int { return v.Size }).(pulumi.IntPtrOutput)
}

func (o JobTestScriptOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobTestScript) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o JobTestScriptOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JobTestScript) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type JobTestScriptArrayOutput struct{ *pulumi.OutputState }

func (JobTestScriptArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JobTestScript)(nil)).Elem()
}

func (o JobTestScriptArrayOutput) ToJobTestScriptArrayOutput() JobTestScriptArrayOutput {
	return o
}

func (o JobTestScriptArrayOutput) ToJobTestScriptArrayOutputWithContext(ctx context.Context) JobTestScriptArrayOutput {
	return o
}

func (o JobTestScriptArrayOutput) Index(i pulumi.IntInput) JobTestScriptOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JobTestScript {
		return vs[0].([]JobTestScript)[vs[1].(int)]
	}).(JobTestScriptOutput)
}

type ProjectTag struct {
	TagKey   *string `pulumi:"tagKey"`
	TagValue *string `pulumi:"tagValue"`
}

// ProjectTagInput is an input type that accepts ProjectTagArgs and ProjectTagOutput values.
// You can construct a concrete instance of `ProjectTagInput` via:
//
//	ProjectTagArgs{...}
type ProjectTagInput interface {
	pulumi.Input

	ToProjectTagOutput() ProjectTagOutput
	ToProjectTagOutputWithContext(context.Context) ProjectTagOutput
}

type ProjectTagArgs struct {
	TagKey   pulumi.StringPtrInput `pulumi:"tagKey"`
	TagValue pulumi.StringPtrInput `pulumi:"tagValue"`
}

func (ProjectTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTag)(nil)).Elem()
}

func (i ProjectTagArgs) ToProjectTagOutput() ProjectTagOutput {
	return i.ToProjectTagOutputWithContext(context.Background())
}

func (i ProjectTagArgs) ToProjectTagOutputWithContext(ctx context.Context) ProjectTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTagOutput)
}

// ProjectTagArrayInput is an input type that accepts ProjectTagArray and ProjectTagArrayOutput values.
// You can construct a concrete instance of `ProjectTagArrayInput` via:
//
//	ProjectTagArray{ ProjectTagArgs{...} }
type ProjectTagArrayInput interface {
	pulumi.Input

	ToProjectTagArrayOutput() ProjectTagArrayOutput
	ToProjectTagArrayOutputWithContext(context.Context) ProjectTagArrayOutput
}

type ProjectTagArray []ProjectTagInput

func (ProjectTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectTag)(nil)).Elem()
}

func (i ProjectTagArray) ToProjectTagArrayOutput() ProjectTagArrayOutput {
	return i.ToProjectTagArrayOutputWithContext(context.Background())
}

func (i ProjectTagArray) ToProjectTagArrayOutputWithContext(ctx context.Context) ProjectTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectTagArrayOutput)
}

type ProjectTagOutput struct{ *pulumi.OutputState }

func (ProjectTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectTag)(nil)).Elem()
}

func (o ProjectTagOutput) ToProjectTagOutput() ProjectTagOutput {
	return o
}

func (o ProjectTagOutput) ToProjectTagOutputWithContext(ctx context.Context) ProjectTagOutput {
	return o
}

func (o ProjectTagOutput) TagKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectTag) *string { return v.TagKey }).(pulumi.StringPtrOutput)
}

func (o ProjectTagOutput) TagValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectTag) *string { return v.TagValue }).(pulumi.StringPtrOutput)
}

type ProjectTagArrayOutput struct{ *pulumi.OutputState }

func (ProjectTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectTag)(nil)).Elem()
}

func (o ProjectTagArrayOutput) ToProjectTagArrayOutput() ProjectTagArrayOutput {
	return o
}

func (o ProjectTagArrayOutput) ToProjectTagArrayOutputWithContext(ctx context.Context) ProjectTagArrayOutput {
	return o
}

func (o ProjectTagArrayOutput) Index(i pulumi.IntInput) ProjectTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectTag {
		return vs[0].([]ProjectTag)[vs[1].(int)]
	}).(ProjectTagOutput)
}

type ScenarioDataset struct {
	FileId        *string  `pulumi:"fileId"`
	HeadLines     []string `pulumi:"headLines"`
	HeaderColumns []string `pulumi:"headerColumns"`
	HeaderInFile  bool     `pulumi:"headerInFile"`
	LineCount     *int     `pulumi:"lineCount"`
	Name          string   `pulumi:"name"`
	Size          *int     `pulumi:"size"`
	Split         bool     `pulumi:"split"`
	TailLines     []string `pulumi:"tailLines"`
	Type          *string  `pulumi:"type"`
	UpdatedAt     *string  `pulumi:"updatedAt"`
}

// ScenarioDatasetInput is an input type that accepts ScenarioDatasetArgs and ScenarioDatasetOutput values.
// You can construct a concrete instance of `ScenarioDatasetInput` via:
//
//	ScenarioDatasetArgs{...}
type ScenarioDatasetInput interface {
	pulumi.Input

	ToScenarioDatasetOutput() ScenarioDatasetOutput
	ToScenarioDatasetOutputWithContext(context.Context) ScenarioDatasetOutput
}

type ScenarioDatasetArgs struct {
	FileId        pulumi.StringPtrInput   `pulumi:"fileId"`
	HeadLines     pulumi.StringArrayInput `pulumi:"headLines"`
	HeaderColumns pulumi.StringArrayInput `pulumi:"headerColumns"`
	HeaderInFile  pulumi.BoolInput        `pulumi:"headerInFile"`
	LineCount     pulumi.IntPtrInput      `pulumi:"lineCount"`
	Name          pulumi.StringInput      `pulumi:"name"`
	Size          pulumi.IntPtrInput      `pulumi:"size"`
	Split         pulumi.BoolInput        `pulumi:"split"`
	TailLines     pulumi.StringArrayInput `pulumi:"tailLines"`
	Type          pulumi.StringPtrInput   `pulumi:"type"`
	UpdatedAt     pulumi.StringPtrInput   `pulumi:"updatedAt"`
}

func (ScenarioDatasetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioDataset)(nil)).Elem()
}

func (i ScenarioDatasetArgs) ToScenarioDatasetOutput() ScenarioDatasetOutput {
	return i.ToScenarioDatasetOutputWithContext(context.Background())
}

func (i ScenarioDatasetArgs) ToScenarioDatasetOutputWithContext(ctx context.Context) ScenarioDatasetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioDatasetOutput)
}

// ScenarioDatasetArrayInput is an input type that accepts ScenarioDatasetArray and ScenarioDatasetArrayOutput values.
// You can construct a concrete instance of `ScenarioDatasetArrayInput` via:
//
//	ScenarioDatasetArray{ ScenarioDatasetArgs{...} }
type ScenarioDatasetArrayInput interface {
	pulumi.Input

	ToScenarioDatasetArrayOutput() ScenarioDatasetArrayOutput
	ToScenarioDatasetArrayOutputWithContext(context.Context) ScenarioDatasetArrayOutput
}

type ScenarioDatasetArray []ScenarioDatasetInput

func (ScenarioDatasetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScenarioDataset)(nil)).Elem()
}

func (i ScenarioDatasetArray) ToScenarioDatasetArrayOutput() ScenarioDatasetArrayOutput {
	return i.ToScenarioDatasetArrayOutputWithContext(context.Background())
}

func (i ScenarioDatasetArray) ToScenarioDatasetArrayOutputWithContext(ctx context.Context) ScenarioDatasetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioDatasetArrayOutput)
}

type ScenarioDatasetOutput struct{ *pulumi.OutputState }

func (ScenarioDatasetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioDataset)(nil)).Elem()
}

func (o ScenarioDatasetOutput) ToScenarioDatasetOutput() ScenarioDatasetOutput {
	return o
}

func (o ScenarioDatasetOutput) ToScenarioDatasetOutputWithContext(ctx context.Context) ScenarioDatasetOutput {
	return o
}

func (o ScenarioDatasetOutput) FileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioDataset) *string { return v.FileId }).(pulumi.StringPtrOutput)
}

func (o ScenarioDatasetOutput) HeadLines() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScenarioDataset) []string { return v.HeadLines }).(pulumi.StringArrayOutput)
}

func (o ScenarioDatasetOutput) HeaderColumns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScenarioDataset) []string { return v.HeaderColumns }).(pulumi.StringArrayOutput)
}

func (o ScenarioDatasetOutput) HeaderInFile() pulumi.BoolOutput {
	return o.ApplyT(func(v ScenarioDataset) bool { return v.HeaderInFile }).(pulumi.BoolOutput)
}

func (o ScenarioDatasetOutput) LineCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScenarioDataset) *int { return v.LineCount }).(pulumi.IntPtrOutput)
}

func (o ScenarioDatasetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ScenarioDataset) string { return v.Name }).(pulumi.StringOutput)
}

func (o ScenarioDatasetOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScenarioDataset) *int { return v.Size }).(pulumi.IntPtrOutput)
}

func (o ScenarioDatasetOutput) Split() pulumi.BoolOutput {
	return o.ApplyT(func(v ScenarioDataset) bool { return v.Split }).(pulumi.BoolOutput)
}

func (o ScenarioDatasetOutput) TailLines() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScenarioDataset) []string { return v.TailLines }).(pulumi.StringArrayOutput)
}

func (o ScenarioDatasetOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioDataset) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ScenarioDatasetOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioDataset) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type ScenarioDatasetArrayOutput struct{ *pulumi.OutputState }

func (ScenarioDatasetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScenarioDataset)(nil)).Elem()
}

func (o ScenarioDatasetArrayOutput) ToScenarioDatasetArrayOutput() ScenarioDatasetArrayOutput {
	return o
}

func (o ScenarioDatasetArrayOutput) ToScenarioDatasetArrayOutputWithContext(ctx context.Context) ScenarioDatasetArrayOutput {
	return o
}

func (o ScenarioDatasetArrayOutput) Index(i pulumi.IntInput) ScenarioDatasetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScenarioDataset {
		return vs[0].([]ScenarioDataset)[vs[1].(int)]
	}).(ScenarioDatasetOutput)
}

type ScenarioDomainNameConfig struct {
	DnsConfig   *ScenarioDomainNameConfigDnsConfig  `pulumi:"dnsConfig"`
	HostAliases []ScenarioDomainNameConfigHostAlias `pulumi:"hostAliases"`
}

// ScenarioDomainNameConfigInput is an input type that accepts ScenarioDomainNameConfigArgs and ScenarioDomainNameConfigOutput values.
// You can construct a concrete instance of `ScenarioDomainNameConfigInput` via:
//
//	ScenarioDomainNameConfigArgs{...}
type ScenarioDomainNameConfigInput interface {
	pulumi.Input

	ToScenarioDomainNameConfigOutput() ScenarioDomainNameConfigOutput
	ToScenarioDomainNameConfigOutputWithContext(context.Context) ScenarioDomainNameConfigOutput
}

type ScenarioDomainNameConfigArgs struct {
	DnsConfig   ScenarioDomainNameConfigDnsConfigPtrInput   `pulumi:"dnsConfig"`
	HostAliases ScenarioDomainNameConfigHostAliasArrayInput `pulumi:"hostAliases"`
}

func (ScenarioDomainNameConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioDomainNameConfig)(nil)).Elem()
}

func (i ScenarioDomainNameConfigArgs) ToScenarioDomainNameConfigOutput() ScenarioDomainNameConfigOutput {
	return i.ToScenarioDomainNameConfigOutputWithContext(context.Background())
}

func (i ScenarioDomainNameConfigArgs) ToScenarioDomainNameConfigOutputWithContext(ctx context.Context) ScenarioDomainNameConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioDomainNameConfigOutput)
}

func (i ScenarioDomainNameConfigArgs) ToScenarioDomainNameConfigPtrOutput() ScenarioDomainNameConfigPtrOutput {
	return i.ToScenarioDomainNameConfigPtrOutputWithContext(context.Background())
}

func (i ScenarioDomainNameConfigArgs) ToScenarioDomainNameConfigPtrOutputWithContext(ctx context.Context) ScenarioDomainNameConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioDomainNameConfigOutput).ToScenarioDomainNameConfigPtrOutputWithContext(ctx)
}

// ScenarioDomainNameConfigPtrInput is an input type that accepts ScenarioDomainNameConfigArgs, ScenarioDomainNameConfigPtr and ScenarioDomainNameConfigPtrOutput values.
// You can construct a concrete instance of `ScenarioDomainNameConfigPtrInput` via:
//
//	        ScenarioDomainNameConfigArgs{...}
//
//	or:
//
//	        nil
type ScenarioDomainNameConfigPtrInput interface {
	pulumi.Input

	ToScenarioDomainNameConfigPtrOutput() ScenarioDomainNameConfigPtrOutput
	ToScenarioDomainNameConfigPtrOutputWithContext(context.Context) ScenarioDomainNameConfigPtrOutput
}

type scenarioDomainNameConfigPtrType ScenarioDomainNameConfigArgs

func ScenarioDomainNameConfigPtr(v *ScenarioDomainNameConfigArgs) ScenarioDomainNameConfigPtrInput {
	return (*scenarioDomainNameConfigPtrType)(v)
}

func (*scenarioDomainNameConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScenarioDomainNameConfig)(nil)).Elem()
}

func (i *scenarioDomainNameConfigPtrType) ToScenarioDomainNameConfigPtrOutput() ScenarioDomainNameConfigPtrOutput {
	return i.ToScenarioDomainNameConfigPtrOutputWithContext(context.Background())
}

func (i *scenarioDomainNameConfigPtrType) ToScenarioDomainNameConfigPtrOutputWithContext(ctx context.Context) ScenarioDomainNameConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioDomainNameConfigPtrOutput)
}

type ScenarioDomainNameConfigOutput struct{ *pulumi.OutputState }

func (ScenarioDomainNameConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioDomainNameConfig)(nil)).Elem()
}

func (o ScenarioDomainNameConfigOutput) ToScenarioDomainNameConfigOutput() ScenarioDomainNameConfigOutput {
	return o
}

func (o ScenarioDomainNameConfigOutput) ToScenarioDomainNameConfigOutputWithContext(ctx context.Context) ScenarioDomainNameConfigOutput {
	return o
}

func (o ScenarioDomainNameConfigOutput) ToScenarioDomainNameConfigPtrOutput() ScenarioDomainNameConfigPtrOutput {
	return o.ToScenarioDomainNameConfigPtrOutputWithContext(context.Background())
}

func (o ScenarioDomainNameConfigOutput) ToScenarioDomainNameConfigPtrOutputWithContext(ctx context.Context) ScenarioDomainNameConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScenarioDomainNameConfig) *ScenarioDomainNameConfig {
		return &v
	}).(ScenarioDomainNameConfigPtrOutput)
}

func (o ScenarioDomainNameConfigOutput) DnsConfig() ScenarioDomainNameConfigDnsConfigPtrOutput {
	return o.ApplyT(func(v ScenarioDomainNameConfig) *ScenarioDomainNameConfigDnsConfig { return v.DnsConfig }).(ScenarioDomainNameConfigDnsConfigPtrOutput)
}

func (o ScenarioDomainNameConfigOutput) HostAliases() ScenarioDomainNameConfigHostAliasArrayOutput {
	return o.ApplyT(func(v ScenarioDomainNameConfig) []ScenarioDomainNameConfigHostAlias { return v.HostAliases }).(ScenarioDomainNameConfigHostAliasArrayOutput)
}

type ScenarioDomainNameConfigPtrOutput struct{ *pulumi.OutputState }

func (ScenarioDomainNameConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScenarioDomainNameConfig)(nil)).Elem()
}

func (o ScenarioDomainNameConfigPtrOutput) ToScenarioDomainNameConfigPtrOutput() ScenarioDomainNameConfigPtrOutput {
	return o
}

func (o ScenarioDomainNameConfigPtrOutput) ToScenarioDomainNameConfigPtrOutputWithContext(ctx context.Context) ScenarioDomainNameConfigPtrOutput {
	return o
}

func (o ScenarioDomainNameConfigPtrOutput) Elem() ScenarioDomainNameConfigOutput {
	return o.ApplyT(func(v *ScenarioDomainNameConfig) ScenarioDomainNameConfig {
		if v != nil {
			return *v
		}
		var ret ScenarioDomainNameConfig
		return ret
	}).(ScenarioDomainNameConfigOutput)
}

func (o ScenarioDomainNameConfigPtrOutput) DnsConfig() ScenarioDomainNameConfigDnsConfigPtrOutput {
	return o.ApplyT(func(v *ScenarioDomainNameConfig) *ScenarioDomainNameConfigDnsConfig {
		if v == nil {
			return nil
		}
		return v.DnsConfig
	}).(ScenarioDomainNameConfigDnsConfigPtrOutput)
}

func (o ScenarioDomainNameConfigPtrOutput) HostAliases() ScenarioDomainNameConfigHostAliasArrayOutput {
	return o.ApplyT(func(v *ScenarioDomainNameConfig) []ScenarioDomainNameConfigHostAlias {
		if v == nil {
			return nil
		}
		return v.HostAliases
	}).(ScenarioDomainNameConfigHostAliasArrayOutput)
}

type ScenarioDomainNameConfigDnsConfig struct {
	Nameservers []string `pulumi:"nameservers"`
}

// ScenarioDomainNameConfigDnsConfigInput is an input type that accepts ScenarioDomainNameConfigDnsConfigArgs and ScenarioDomainNameConfigDnsConfigOutput values.
// You can construct a concrete instance of `ScenarioDomainNameConfigDnsConfigInput` via:
//
//	ScenarioDomainNameConfigDnsConfigArgs{...}
type ScenarioDomainNameConfigDnsConfigInput interface {
	pulumi.Input

	ToScenarioDomainNameConfigDnsConfigOutput() ScenarioDomainNameConfigDnsConfigOutput
	ToScenarioDomainNameConfigDnsConfigOutputWithContext(context.Context) ScenarioDomainNameConfigDnsConfigOutput
}

type ScenarioDomainNameConfigDnsConfigArgs struct {
	Nameservers pulumi.StringArrayInput `pulumi:"nameservers"`
}

func (ScenarioDomainNameConfigDnsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioDomainNameConfigDnsConfig)(nil)).Elem()
}

func (i ScenarioDomainNameConfigDnsConfigArgs) ToScenarioDomainNameConfigDnsConfigOutput() ScenarioDomainNameConfigDnsConfigOutput {
	return i.ToScenarioDomainNameConfigDnsConfigOutputWithContext(context.Background())
}

func (i ScenarioDomainNameConfigDnsConfigArgs) ToScenarioDomainNameConfigDnsConfigOutputWithContext(ctx context.Context) ScenarioDomainNameConfigDnsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioDomainNameConfigDnsConfigOutput)
}

func (i ScenarioDomainNameConfigDnsConfigArgs) ToScenarioDomainNameConfigDnsConfigPtrOutput() ScenarioDomainNameConfigDnsConfigPtrOutput {
	return i.ToScenarioDomainNameConfigDnsConfigPtrOutputWithContext(context.Background())
}

func (i ScenarioDomainNameConfigDnsConfigArgs) ToScenarioDomainNameConfigDnsConfigPtrOutputWithContext(ctx context.Context) ScenarioDomainNameConfigDnsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioDomainNameConfigDnsConfigOutput).ToScenarioDomainNameConfigDnsConfigPtrOutputWithContext(ctx)
}

// ScenarioDomainNameConfigDnsConfigPtrInput is an input type that accepts ScenarioDomainNameConfigDnsConfigArgs, ScenarioDomainNameConfigDnsConfigPtr and ScenarioDomainNameConfigDnsConfigPtrOutput values.
// You can construct a concrete instance of `ScenarioDomainNameConfigDnsConfigPtrInput` via:
//
//	        ScenarioDomainNameConfigDnsConfigArgs{...}
//
//	or:
//
//	        nil
type ScenarioDomainNameConfigDnsConfigPtrInput interface {
	pulumi.Input

	ToScenarioDomainNameConfigDnsConfigPtrOutput() ScenarioDomainNameConfigDnsConfigPtrOutput
	ToScenarioDomainNameConfigDnsConfigPtrOutputWithContext(context.Context) ScenarioDomainNameConfigDnsConfigPtrOutput
}

type scenarioDomainNameConfigDnsConfigPtrType ScenarioDomainNameConfigDnsConfigArgs

func ScenarioDomainNameConfigDnsConfigPtr(v *ScenarioDomainNameConfigDnsConfigArgs) ScenarioDomainNameConfigDnsConfigPtrInput {
	return (*scenarioDomainNameConfigDnsConfigPtrType)(v)
}

func (*scenarioDomainNameConfigDnsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScenarioDomainNameConfigDnsConfig)(nil)).Elem()
}

func (i *scenarioDomainNameConfigDnsConfigPtrType) ToScenarioDomainNameConfigDnsConfigPtrOutput() ScenarioDomainNameConfigDnsConfigPtrOutput {
	return i.ToScenarioDomainNameConfigDnsConfigPtrOutputWithContext(context.Background())
}

func (i *scenarioDomainNameConfigDnsConfigPtrType) ToScenarioDomainNameConfigDnsConfigPtrOutputWithContext(ctx context.Context) ScenarioDomainNameConfigDnsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioDomainNameConfigDnsConfigPtrOutput)
}

type ScenarioDomainNameConfigDnsConfigOutput struct{ *pulumi.OutputState }

func (ScenarioDomainNameConfigDnsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioDomainNameConfigDnsConfig)(nil)).Elem()
}

func (o ScenarioDomainNameConfigDnsConfigOutput) ToScenarioDomainNameConfigDnsConfigOutput() ScenarioDomainNameConfigDnsConfigOutput {
	return o
}

func (o ScenarioDomainNameConfigDnsConfigOutput) ToScenarioDomainNameConfigDnsConfigOutputWithContext(ctx context.Context) ScenarioDomainNameConfigDnsConfigOutput {
	return o
}

func (o ScenarioDomainNameConfigDnsConfigOutput) ToScenarioDomainNameConfigDnsConfigPtrOutput() ScenarioDomainNameConfigDnsConfigPtrOutput {
	return o.ToScenarioDomainNameConfigDnsConfigPtrOutputWithContext(context.Background())
}

func (o ScenarioDomainNameConfigDnsConfigOutput) ToScenarioDomainNameConfigDnsConfigPtrOutputWithContext(ctx context.Context) ScenarioDomainNameConfigDnsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScenarioDomainNameConfigDnsConfig) *ScenarioDomainNameConfigDnsConfig {
		return &v
	}).(ScenarioDomainNameConfigDnsConfigPtrOutput)
}

func (o ScenarioDomainNameConfigDnsConfigOutput) Nameservers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScenarioDomainNameConfigDnsConfig) []string { return v.Nameservers }).(pulumi.StringArrayOutput)
}

type ScenarioDomainNameConfigDnsConfigPtrOutput struct{ *pulumi.OutputState }

func (ScenarioDomainNameConfigDnsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScenarioDomainNameConfigDnsConfig)(nil)).Elem()
}

func (o ScenarioDomainNameConfigDnsConfigPtrOutput) ToScenarioDomainNameConfigDnsConfigPtrOutput() ScenarioDomainNameConfigDnsConfigPtrOutput {
	return o
}

func (o ScenarioDomainNameConfigDnsConfigPtrOutput) ToScenarioDomainNameConfigDnsConfigPtrOutputWithContext(ctx context.Context) ScenarioDomainNameConfigDnsConfigPtrOutput {
	return o
}

func (o ScenarioDomainNameConfigDnsConfigPtrOutput) Elem() ScenarioDomainNameConfigDnsConfigOutput {
	return o.ApplyT(func(v *ScenarioDomainNameConfigDnsConfig) ScenarioDomainNameConfigDnsConfig {
		if v != nil {
			return *v
		}
		var ret ScenarioDomainNameConfigDnsConfig
		return ret
	}).(ScenarioDomainNameConfigDnsConfigOutput)
}

func (o ScenarioDomainNameConfigDnsConfigPtrOutput) Nameservers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScenarioDomainNameConfigDnsConfig) []string {
		if v == nil {
			return nil
		}
		return v.Nameservers
	}).(pulumi.StringArrayOutput)
}

type ScenarioDomainNameConfigHostAlias struct {
	HostNames []string `pulumi:"hostNames"`
	Ip        *string  `pulumi:"ip"`
}

// ScenarioDomainNameConfigHostAliasInput is an input type that accepts ScenarioDomainNameConfigHostAliasArgs and ScenarioDomainNameConfigHostAliasOutput values.
// You can construct a concrete instance of `ScenarioDomainNameConfigHostAliasInput` via:
//
//	ScenarioDomainNameConfigHostAliasArgs{...}
type ScenarioDomainNameConfigHostAliasInput interface {
	pulumi.Input

	ToScenarioDomainNameConfigHostAliasOutput() ScenarioDomainNameConfigHostAliasOutput
	ToScenarioDomainNameConfigHostAliasOutputWithContext(context.Context) ScenarioDomainNameConfigHostAliasOutput
}

type ScenarioDomainNameConfigHostAliasArgs struct {
	HostNames pulumi.StringArrayInput `pulumi:"hostNames"`
	Ip        pulumi.StringPtrInput   `pulumi:"ip"`
}

func (ScenarioDomainNameConfigHostAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioDomainNameConfigHostAlias)(nil)).Elem()
}

func (i ScenarioDomainNameConfigHostAliasArgs) ToScenarioDomainNameConfigHostAliasOutput() ScenarioDomainNameConfigHostAliasOutput {
	return i.ToScenarioDomainNameConfigHostAliasOutputWithContext(context.Background())
}

func (i ScenarioDomainNameConfigHostAliasArgs) ToScenarioDomainNameConfigHostAliasOutputWithContext(ctx context.Context) ScenarioDomainNameConfigHostAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioDomainNameConfigHostAliasOutput)
}

// ScenarioDomainNameConfigHostAliasArrayInput is an input type that accepts ScenarioDomainNameConfigHostAliasArray and ScenarioDomainNameConfigHostAliasArrayOutput values.
// You can construct a concrete instance of `ScenarioDomainNameConfigHostAliasArrayInput` via:
//
//	ScenarioDomainNameConfigHostAliasArray{ ScenarioDomainNameConfigHostAliasArgs{...} }
type ScenarioDomainNameConfigHostAliasArrayInput interface {
	pulumi.Input

	ToScenarioDomainNameConfigHostAliasArrayOutput() ScenarioDomainNameConfigHostAliasArrayOutput
	ToScenarioDomainNameConfigHostAliasArrayOutputWithContext(context.Context) ScenarioDomainNameConfigHostAliasArrayOutput
}

type ScenarioDomainNameConfigHostAliasArray []ScenarioDomainNameConfigHostAliasInput

func (ScenarioDomainNameConfigHostAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScenarioDomainNameConfigHostAlias)(nil)).Elem()
}

func (i ScenarioDomainNameConfigHostAliasArray) ToScenarioDomainNameConfigHostAliasArrayOutput() ScenarioDomainNameConfigHostAliasArrayOutput {
	return i.ToScenarioDomainNameConfigHostAliasArrayOutputWithContext(context.Background())
}

func (i ScenarioDomainNameConfigHostAliasArray) ToScenarioDomainNameConfigHostAliasArrayOutputWithContext(ctx context.Context) ScenarioDomainNameConfigHostAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioDomainNameConfigHostAliasArrayOutput)
}

type ScenarioDomainNameConfigHostAliasOutput struct{ *pulumi.OutputState }

func (ScenarioDomainNameConfigHostAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioDomainNameConfigHostAlias)(nil)).Elem()
}

func (o ScenarioDomainNameConfigHostAliasOutput) ToScenarioDomainNameConfigHostAliasOutput() ScenarioDomainNameConfigHostAliasOutput {
	return o
}

func (o ScenarioDomainNameConfigHostAliasOutput) ToScenarioDomainNameConfigHostAliasOutputWithContext(ctx context.Context) ScenarioDomainNameConfigHostAliasOutput {
	return o
}

func (o ScenarioDomainNameConfigHostAliasOutput) HostNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScenarioDomainNameConfigHostAlias) []string { return v.HostNames }).(pulumi.StringArrayOutput)
}

func (o ScenarioDomainNameConfigHostAliasOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioDomainNameConfigHostAlias) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

type ScenarioDomainNameConfigHostAliasArrayOutput struct{ *pulumi.OutputState }

func (ScenarioDomainNameConfigHostAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScenarioDomainNameConfigHostAlias)(nil)).Elem()
}

func (o ScenarioDomainNameConfigHostAliasArrayOutput) ToScenarioDomainNameConfigHostAliasArrayOutput() ScenarioDomainNameConfigHostAliasArrayOutput {
	return o
}

func (o ScenarioDomainNameConfigHostAliasArrayOutput) ToScenarioDomainNameConfigHostAliasArrayOutputWithContext(ctx context.Context) ScenarioDomainNameConfigHostAliasArrayOutput {
	return o
}

func (o ScenarioDomainNameConfigHostAliasArrayOutput) Index(i pulumi.IntInput) ScenarioDomainNameConfigHostAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScenarioDomainNameConfigHostAlias {
		return vs[0].([]ScenarioDomainNameConfigHostAlias)[vs[1].(int)]
	}).(ScenarioDomainNameConfigHostAliasOutput)
}

type ScenarioLoad struct {
	GeoRegionsLoadDistributions []ScenarioLoadGeoRegionsLoadDistribution `pulumi:"geoRegionsLoadDistributions"`
	LoadSpec                    *ScenarioLoadLoadSpec                    `pulumi:"loadSpec"`
	VpcLoadDistribution         *ScenarioLoadVpcLoadDistribution         `pulumi:"vpcLoadDistribution"`
}

// ScenarioLoadInput is an input type that accepts ScenarioLoadArgs and ScenarioLoadOutput values.
// You can construct a concrete instance of `ScenarioLoadInput` via:
//
//	ScenarioLoadArgs{...}
type ScenarioLoadInput interface {
	pulumi.Input

	ToScenarioLoadOutput() ScenarioLoadOutput
	ToScenarioLoadOutputWithContext(context.Context) ScenarioLoadOutput
}

type ScenarioLoadArgs struct {
	GeoRegionsLoadDistributions ScenarioLoadGeoRegionsLoadDistributionArrayInput `pulumi:"geoRegionsLoadDistributions"`
	LoadSpec                    ScenarioLoadLoadSpecPtrInput                     `pulumi:"loadSpec"`
	VpcLoadDistribution         ScenarioLoadVpcLoadDistributionPtrInput          `pulumi:"vpcLoadDistribution"`
}

func (ScenarioLoadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioLoad)(nil)).Elem()
}

func (i ScenarioLoadArgs) ToScenarioLoadOutput() ScenarioLoadOutput {
	return i.ToScenarioLoadOutputWithContext(context.Background())
}

func (i ScenarioLoadArgs) ToScenarioLoadOutputWithContext(ctx context.Context) ScenarioLoadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioLoadOutput)
}

func (i ScenarioLoadArgs) ToScenarioLoadPtrOutput() ScenarioLoadPtrOutput {
	return i.ToScenarioLoadPtrOutputWithContext(context.Background())
}

func (i ScenarioLoadArgs) ToScenarioLoadPtrOutputWithContext(ctx context.Context) ScenarioLoadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioLoadOutput).ToScenarioLoadPtrOutputWithContext(ctx)
}

// ScenarioLoadPtrInput is an input type that accepts ScenarioLoadArgs, ScenarioLoadPtr and ScenarioLoadPtrOutput values.
// You can construct a concrete instance of `ScenarioLoadPtrInput` via:
//
//	        ScenarioLoadArgs{...}
//
//	or:
//
//	        nil
type ScenarioLoadPtrInput interface {
	pulumi.Input

	ToScenarioLoadPtrOutput() ScenarioLoadPtrOutput
	ToScenarioLoadPtrOutputWithContext(context.Context) ScenarioLoadPtrOutput
}

type scenarioLoadPtrType ScenarioLoadArgs

func ScenarioLoadPtr(v *ScenarioLoadArgs) ScenarioLoadPtrInput {
	return (*scenarioLoadPtrType)(v)
}

func (*scenarioLoadPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScenarioLoad)(nil)).Elem()
}

func (i *scenarioLoadPtrType) ToScenarioLoadPtrOutput() ScenarioLoadPtrOutput {
	return i.ToScenarioLoadPtrOutputWithContext(context.Background())
}

func (i *scenarioLoadPtrType) ToScenarioLoadPtrOutputWithContext(ctx context.Context) ScenarioLoadPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioLoadPtrOutput)
}

type ScenarioLoadOutput struct{ *pulumi.OutputState }

func (ScenarioLoadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioLoad)(nil)).Elem()
}

func (o ScenarioLoadOutput) ToScenarioLoadOutput() ScenarioLoadOutput {
	return o
}

func (o ScenarioLoadOutput) ToScenarioLoadOutputWithContext(ctx context.Context) ScenarioLoadOutput {
	return o
}

func (o ScenarioLoadOutput) ToScenarioLoadPtrOutput() ScenarioLoadPtrOutput {
	return o.ToScenarioLoadPtrOutputWithContext(context.Background())
}

func (o ScenarioLoadOutput) ToScenarioLoadPtrOutputWithContext(ctx context.Context) ScenarioLoadPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScenarioLoad) *ScenarioLoad {
		return &v
	}).(ScenarioLoadPtrOutput)
}

func (o ScenarioLoadOutput) GeoRegionsLoadDistributions() ScenarioLoadGeoRegionsLoadDistributionArrayOutput {
	return o.ApplyT(func(v ScenarioLoad) []ScenarioLoadGeoRegionsLoadDistribution { return v.GeoRegionsLoadDistributions }).(ScenarioLoadGeoRegionsLoadDistributionArrayOutput)
}

func (o ScenarioLoadOutput) LoadSpec() ScenarioLoadLoadSpecPtrOutput {
	return o.ApplyT(func(v ScenarioLoad) *ScenarioLoadLoadSpec { return v.LoadSpec }).(ScenarioLoadLoadSpecPtrOutput)
}

func (o ScenarioLoadOutput) VpcLoadDistribution() ScenarioLoadVpcLoadDistributionPtrOutput {
	return o.ApplyT(func(v ScenarioLoad) *ScenarioLoadVpcLoadDistribution { return v.VpcLoadDistribution }).(ScenarioLoadVpcLoadDistributionPtrOutput)
}

type ScenarioLoadPtrOutput struct{ *pulumi.OutputState }

func (ScenarioLoadPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScenarioLoad)(nil)).Elem()
}

func (o ScenarioLoadPtrOutput) ToScenarioLoadPtrOutput() ScenarioLoadPtrOutput {
	return o
}

func (o ScenarioLoadPtrOutput) ToScenarioLoadPtrOutputWithContext(ctx context.Context) ScenarioLoadPtrOutput {
	return o
}

func (o ScenarioLoadPtrOutput) Elem() ScenarioLoadOutput {
	return o.ApplyT(func(v *ScenarioLoad) ScenarioLoad {
		if v != nil {
			return *v
		}
		var ret ScenarioLoad
		return ret
	}).(ScenarioLoadOutput)
}

func (o ScenarioLoadPtrOutput) GeoRegionsLoadDistributions() ScenarioLoadGeoRegionsLoadDistributionArrayOutput {
	return o.ApplyT(func(v *ScenarioLoad) []ScenarioLoadGeoRegionsLoadDistribution {
		if v == nil {
			return nil
		}
		return v.GeoRegionsLoadDistributions
	}).(ScenarioLoadGeoRegionsLoadDistributionArrayOutput)
}

func (o ScenarioLoadPtrOutput) LoadSpec() ScenarioLoadLoadSpecPtrOutput {
	return o.ApplyT(func(v *ScenarioLoad) *ScenarioLoadLoadSpec {
		if v == nil {
			return nil
		}
		return v.LoadSpec
	}).(ScenarioLoadLoadSpecPtrOutput)
}

func (o ScenarioLoadPtrOutput) VpcLoadDistribution() ScenarioLoadVpcLoadDistributionPtrOutput {
	return o.ApplyT(func(v *ScenarioLoad) *ScenarioLoadVpcLoadDistribution {
		if v == nil {
			return nil
		}
		return v.VpcLoadDistribution
	}).(ScenarioLoadVpcLoadDistributionPtrOutput)
}

type ScenarioLoadGeoRegionsLoadDistribution struct {
	Percentage *int    `pulumi:"percentage"`
	Region     *string `pulumi:"region"`
	RegionId   int     `pulumi:"regionId"`
}

// ScenarioLoadGeoRegionsLoadDistributionInput is an input type that accepts ScenarioLoadGeoRegionsLoadDistributionArgs and ScenarioLoadGeoRegionsLoadDistributionOutput values.
// You can construct a concrete instance of `ScenarioLoadGeoRegionsLoadDistributionInput` via:
//
//	ScenarioLoadGeoRegionsLoadDistributionArgs{...}
type ScenarioLoadGeoRegionsLoadDistributionInput interface {
	pulumi.Input

	ToScenarioLoadGeoRegionsLoadDistributionOutput() ScenarioLoadGeoRegionsLoadDistributionOutput
	ToScenarioLoadGeoRegionsLoadDistributionOutputWithContext(context.Context) ScenarioLoadGeoRegionsLoadDistributionOutput
}

type ScenarioLoadGeoRegionsLoadDistributionArgs struct {
	Percentage pulumi.IntPtrInput    `pulumi:"percentage"`
	Region     pulumi.StringPtrInput `pulumi:"region"`
	RegionId   pulumi.IntInput       `pulumi:"regionId"`
}

func (ScenarioLoadGeoRegionsLoadDistributionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioLoadGeoRegionsLoadDistribution)(nil)).Elem()
}

func (i ScenarioLoadGeoRegionsLoadDistributionArgs) ToScenarioLoadGeoRegionsLoadDistributionOutput() ScenarioLoadGeoRegionsLoadDistributionOutput {
	return i.ToScenarioLoadGeoRegionsLoadDistributionOutputWithContext(context.Background())
}

func (i ScenarioLoadGeoRegionsLoadDistributionArgs) ToScenarioLoadGeoRegionsLoadDistributionOutputWithContext(ctx context.Context) ScenarioLoadGeoRegionsLoadDistributionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioLoadGeoRegionsLoadDistributionOutput)
}

// ScenarioLoadGeoRegionsLoadDistributionArrayInput is an input type that accepts ScenarioLoadGeoRegionsLoadDistributionArray and ScenarioLoadGeoRegionsLoadDistributionArrayOutput values.
// You can construct a concrete instance of `ScenarioLoadGeoRegionsLoadDistributionArrayInput` via:
//
//	ScenarioLoadGeoRegionsLoadDistributionArray{ ScenarioLoadGeoRegionsLoadDistributionArgs{...} }
type ScenarioLoadGeoRegionsLoadDistributionArrayInput interface {
	pulumi.Input

	ToScenarioLoadGeoRegionsLoadDistributionArrayOutput() ScenarioLoadGeoRegionsLoadDistributionArrayOutput
	ToScenarioLoadGeoRegionsLoadDistributionArrayOutputWithContext(context.Context) ScenarioLoadGeoRegionsLoadDistributionArrayOutput
}

type ScenarioLoadGeoRegionsLoadDistributionArray []ScenarioLoadGeoRegionsLoadDistributionInput

func (ScenarioLoadGeoRegionsLoadDistributionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScenarioLoadGeoRegionsLoadDistribution)(nil)).Elem()
}

func (i ScenarioLoadGeoRegionsLoadDistributionArray) ToScenarioLoadGeoRegionsLoadDistributionArrayOutput() ScenarioLoadGeoRegionsLoadDistributionArrayOutput {
	return i.ToScenarioLoadGeoRegionsLoadDistributionArrayOutputWithContext(context.Background())
}

func (i ScenarioLoadGeoRegionsLoadDistributionArray) ToScenarioLoadGeoRegionsLoadDistributionArrayOutputWithContext(ctx context.Context) ScenarioLoadGeoRegionsLoadDistributionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioLoadGeoRegionsLoadDistributionArrayOutput)
}

type ScenarioLoadGeoRegionsLoadDistributionOutput struct{ *pulumi.OutputState }

func (ScenarioLoadGeoRegionsLoadDistributionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioLoadGeoRegionsLoadDistribution)(nil)).Elem()
}

func (o ScenarioLoadGeoRegionsLoadDistributionOutput) ToScenarioLoadGeoRegionsLoadDistributionOutput() ScenarioLoadGeoRegionsLoadDistributionOutput {
	return o
}

func (o ScenarioLoadGeoRegionsLoadDistributionOutput) ToScenarioLoadGeoRegionsLoadDistributionOutputWithContext(ctx context.Context) ScenarioLoadGeoRegionsLoadDistributionOutput {
	return o
}

func (o ScenarioLoadGeoRegionsLoadDistributionOutput) Percentage() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScenarioLoadGeoRegionsLoadDistribution) *int { return v.Percentage }).(pulumi.IntPtrOutput)
}

func (o ScenarioLoadGeoRegionsLoadDistributionOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioLoadGeoRegionsLoadDistribution) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o ScenarioLoadGeoRegionsLoadDistributionOutput) RegionId() pulumi.IntOutput {
	return o.ApplyT(func(v ScenarioLoadGeoRegionsLoadDistribution) int { return v.RegionId }).(pulumi.IntOutput)
}

type ScenarioLoadGeoRegionsLoadDistributionArrayOutput struct{ *pulumi.OutputState }

func (ScenarioLoadGeoRegionsLoadDistributionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScenarioLoadGeoRegionsLoadDistribution)(nil)).Elem()
}

func (o ScenarioLoadGeoRegionsLoadDistributionArrayOutput) ToScenarioLoadGeoRegionsLoadDistributionArrayOutput() ScenarioLoadGeoRegionsLoadDistributionArrayOutput {
	return o
}

func (o ScenarioLoadGeoRegionsLoadDistributionArrayOutput) ToScenarioLoadGeoRegionsLoadDistributionArrayOutputWithContext(ctx context.Context) ScenarioLoadGeoRegionsLoadDistributionArrayOutput {
	return o
}

func (o ScenarioLoadGeoRegionsLoadDistributionArrayOutput) Index(i pulumi.IntInput) ScenarioLoadGeoRegionsLoadDistributionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScenarioLoadGeoRegionsLoadDistribution {
		return vs[0].([]ScenarioLoadGeoRegionsLoadDistribution)[vs[1].(int)]
	}).(ScenarioLoadGeoRegionsLoadDistributionOutput)
}

type ScenarioLoadLoadSpec struct {
	Concurrency       *ScenarioLoadLoadSpecConcurrency       `pulumi:"concurrency"`
	RequestsPerSecond *ScenarioLoadLoadSpecRequestsPerSecond `pulumi:"requestsPerSecond"`
	ScriptOrigin      *ScenarioLoadLoadSpecScriptOrigin      `pulumi:"scriptOrigin"`
}

// ScenarioLoadLoadSpecInput is an input type that accepts ScenarioLoadLoadSpecArgs and ScenarioLoadLoadSpecOutput values.
// You can construct a concrete instance of `ScenarioLoadLoadSpecInput` via:
//
//	ScenarioLoadLoadSpecArgs{...}
type ScenarioLoadLoadSpecInput interface {
	pulumi.Input

	ToScenarioLoadLoadSpecOutput() ScenarioLoadLoadSpecOutput
	ToScenarioLoadLoadSpecOutputWithContext(context.Context) ScenarioLoadLoadSpecOutput
}

type ScenarioLoadLoadSpecArgs struct {
	Concurrency       ScenarioLoadLoadSpecConcurrencyPtrInput       `pulumi:"concurrency"`
	RequestsPerSecond ScenarioLoadLoadSpecRequestsPerSecondPtrInput `pulumi:"requestsPerSecond"`
	ScriptOrigin      ScenarioLoadLoadSpecScriptOriginPtrInput      `pulumi:"scriptOrigin"`
}

func (ScenarioLoadLoadSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioLoadLoadSpec)(nil)).Elem()
}

func (i ScenarioLoadLoadSpecArgs) ToScenarioLoadLoadSpecOutput() ScenarioLoadLoadSpecOutput {
	return i.ToScenarioLoadLoadSpecOutputWithContext(context.Background())
}

func (i ScenarioLoadLoadSpecArgs) ToScenarioLoadLoadSpecOutputWithContext(ctx context.Context) ScenarioLoadLoadSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioLoadLoadSpecOutput)
}

func (i ScenarioLoadLoadSpecArgs) ToScenarioLoadLoadSpecPtrOutput() ScenarioLoadLoadSpecPtrOutput {
	return i.ToScenarioLoadLoadSpecPtrOutputWithContext(context.Background())
}

func (i ScenarioLoadLoadSpecArgs) ToScenarioLoadLoadSpecPtrOutputWithContext(ctx context.Context) ScenarioLoadLoadSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioLoadLoadSpecOutput).ToScenarioLoadLoadSpecPtrOutputWithContext(ctx)
}

// ScenarioLoadLoadSpecPtrInput is an input type that accepts ScenarioLoadLoadSpecArgs, ScenarioLoadLoadSpecPtr and ScenarioLoadLoadSpecPtrOutput values.
// You can construct a concrete instance of `ScenarioLoadLoadSpecPtrInput` via:
//
//	        ScenarioLoadLoadSpecArgs{...}
//
//	or:
//
//	        nil
type ScenarioLoadLoadSpecPtrInput interface {
	pulumi.Input

	ToScenarioLoadLoadSpecPtrOutput() ScenarioLoadLoadSpecPtrOutput
	ToScenarioLoadLoadSpecPtrOutputWithContext(context.Context) ScenarioLoadLoadSpecPtrOutput
}

type scenarioLoadLoadSpecPtrType ScenarioLoadLoadSpecArgs

func ScenarioLoadLoadSpecPtr(v *ScenarioLoadLoadSpecArgs) ScenarioLoadLoadSpecPtrInput {
	return (*scenarioLoadLoadSpecPtrType)(v)
}

func (*scenarioLoadLoadSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScenarioLoadLoadSpec)(nil)).Elem()
}

func (i *scenarioLoadLoadSpecPtrType) ToScenarioLoadLoadSpecPtrOutput() ScenarioLoadLoadSpecPtrOutput {
	return i.ToScenarioLoadLoadSpecPtrOutputWithContext(context.Background())
}

func (i *scenarioLoadLoadSpecPtrType) ToScenarioLoadLoadSpecPtrOutputWithContext(ctx context.Context) ScenarioLoadLoadSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioLoadLoadSpecPtrOutput)
}

type ScenarioLoadLoadSpecOutput struct{ *pulumi.OutputState }

func (ScenarioLoadLoadSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioLoadLoadSpec)(nil)).Elem()
}

func (o ScenarioLoadLoadSpecOutput) ToScenarioLoadLoadSpecOutput() ScenarioLoadLoadSpecOutput {
	return o
}

func (o ScenarioLoadLoadSpecOutput) ToScenarioLoadLoadSpecOutputWithContext(ctx context.Context) ScenarioLoadLoadSpecOutput {
	return o
}

func (o ScenarioLoadLoadSpecOutput) ToScenarioLoadLoadSpecPtrOutput() ScenarioLoadLoadSpecPtrOutput {
	return o.ToScenarioLoadLoadSpecPtrOutputWithContext(context.Background())
}

func (o ScenarioLoadLoadSpecOutput) ToScenarioLoadLoadSpecPtrOutputWithContext(ctx context.Context) ScenarioLoadLoadSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScenarioLoadLoadSpec) *ScenarioLoadLoadSpec {
		return &v
	}).(ScenarioLoadLoadSpecPtrOutput)
}

func (o ScenarioLoadLoadSpecOutput) Concurrency() ScenarioLoadLoadSpecConcurrencyPtrOutput {
	return o.ApplyT(func(v ScenarioLoadLoadSpec) *ScenarioLoadLoadSpecConcurrency { return v.Concurrency }).(ScenarioLoadLoadSpecConcurrencyPtrOutput)
}

func (o ScenarioLoadLoadSpecOutput) RequestsPerSecond() ScenarioLoadLoadSpecRequestsPerSecondPtrOutput {
	return o.ApplyT(func(v ScenarioLoadLoadSpec) *ScenarioLoadLoadSpecRequestsPerSecond { return v.RequestsPerSecond }).(ScenarioLoadLoadSpecRequestsPerSecondPtrOutput)
}

func (o ScenarioLoadLoadSpecOutput) ScriptOrigin() ScenarioLoadLoadSpecScriptOriginPtrOutput {
	return o.ApplyT(func(v ScenarioLoadLoadSpec) *ScenarioLoadLoadSpecScriptOrigin { return v.ScriptOrigin }).(ScenarioLoadLoadSpecScriptOriginPtrOutput)
}

type ScenarioLoadLoadSpecPtrOutput struct{ *pulumi.OutputState }

func (ScenarioLoadLoadSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScenarioLoadLoadSpec)(nil)).Elem()
}

func (o ScenarioLoadLoadSpecPtrOutput) ToScenarioLoadLoadSpecPtrOutput() ScenarioLoadLoadSpecPtrOutput {
	return o
}

func (o ScenarioLoadLoadSpecPtrOutput) ToScenarioLoadLoadSpecPtrOutputWithContext(ctx context.Context) ScenarioLoadLoadSpecPtrOutput {
	return o
}

func (o ScenarioLoadLoadSpecPtrOutput) Elem() ScenarioLoadLoadSpecOutput {
	return o.ApplyT(func(v *ScenarioLoadLoadSpec) ScenarioLoadLoadSpec {
		if v != nil {
			return *v
		}
		var ret ScenarioLoadLoadSpec
		return ret
	}).(ScenarioLoadLoadSpecOutput)
}

func (o ScenarioLoadLoadSpecPtrOutput) Concurrency() ScenarioLoadLoadSpecConcurrencyPtrOutput {
	return o.ApplyT(func(v *ScenarioLoadLoadSpec) *ScenarioLoadLoadSpecConcurrency {
		if v == nil {
			return nil
		}
		return v.Concurrency
	}).(ScenarioLoadLoadSpecConcurrencyPtrOutput)
}

func (o ScenarioLoadLoadSpecPtrOutput) RequestsPerSecond() ScenarioLoadLoadSpecRequestsPerSecondPtrOutput {
	return o.ApplyT(func(v *ScenarioLoadLoadSpec) *ScenarioLoadLoadSpecRequestsPerSecond {
		if v == nil {
			return nil
		}
		return v.RequestsPerSecond
	}).(ScenarioLoadLoadSpecRequestsPerSecondPtrOutput)
}

func (o ScenarioLoadLoadSpecPtrOutput) ScriptOrigin() ScenarioLoadLoadSpecScriptOriginPtrOutput {
	return o.ApplyT(func(v *ScenarioLoadLoadSpec) *ScenarioLoadLoadSpecScriptOrigin {
		if v == nil {
			return nil
		}
		return v.ScriptOrigin
	}).(ScenarioLoadLoadSpecScriptOriginPtrOutput)
}

type ScenarioLoadLoadSpecConcurrency struct {
	GracefulStopSeconds  *int                                   `pulumi:"gracefulStopSeconds"`
	IterationCount       *int                                   `pulumi:"iterationCount"`
	MaxRequestsPerSecond *int                                   `pulumi:"maxRequestsPerSecond"`
	Stages               []ScenarioLoadLoadSpecConcurrencyStage `pulumi:"stages"`
}

// ScenarioLoadLoadSpecConcurrencyInput is an input type that accepts ScenarioLoadLoadSpecConcurrencyArgs and ScenarioLoadLoadSpecConcurrencyOutput values.
// You can construct a concrete instance of `ScenarioLoadLoadSpecConcurrencyInput` via:
//
//	ScenarioLoadLoadSpecConcurrencyArgs{...}
type ScenarioLoadLoadSpecConcurrencyInput interface {
	pulumi.Input

	ToScenarioLoadLoadSpecConcurrencyOutput() ScenarioLoadLoadSpecConcurrencyOutput
	ToScenarioLoadLoadSpecConcurrencyOutputWithContext(context.Context) ScenarioLoadLoadSpecConcurrencyOutput
}

type ScenarioLoadLoadSpecConcurrencyArgs struct {
	GracefulStopSeconds  pulumi.IntPtrInput                             `pulumi:"gracefulStopSeconds"`
	IterationCount       pulumi.IntPtrInput                             `pulumi:"iterationCount"`
	MaxRequestsPerSecond pulumi.IntPtrInput                             `pulumi:"maxRequestsPerSecond"`
	Stages               ScenarioLoadLoadSpecConcurrencyStageArrayInput `pulumi:"stages"`
}

func (ScenarioLoadLoadSpecConcurrencyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioLoadLoadSpecConcurrency)(nil)).Elem()
}

func (i ScenarioLoadLoadSpecConcurrencyArgs) ToScenarioLoadLoadSpecConcurrencyOutput() ScenarioLoadLoadSpecConcurrencyOutput {
	return i.ToScenarioLoadLoadSpecConcurrencyOutputWithContext(context.Background())
}

func (i ScenarioLoadLoadSpecConcurrencyArgs) ToScenarioLoadLoadSpecConcurrencyOutputWithContext(ctx context.Context) ScenarioLoadLoadSpecConcurrencyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioLoadLoadSpecConcurrencyOutput)
}

func (i ScenarioLoadLoadSpecConcurrencyArgs) ToScenarioLoadLoadSpecConcurrencyPtrOutput() ScenarioLoadLoadSpecConcurrencyPtrOutput {
	return i.ToScenarioLoadLoadSpecConcurrencyPtrOutputWithContext(context.Background())
}

func (i ScenarioLoadLoadSpecConcurrencyArgs) ToScenarioLoadLoadSpecConcurrencyPtrOutputWithContext(ctx context.Context) ScenarioLoadLoadSpecConcurrencyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioLoadLoadSpecConcurrencyOutput).ToScenarioLoadLoadSpecConcurrencyPtrOutputWithContext(ctx)
}

// ScenarioLoadLoadSpecConcurrencyPtrInput is an input type that accepts ScenarioLoadLoadSpecConcurrencyArgs, ScenarioLoadLoadSpecConcurrencyPtr and ScenarioLoadLoadSpecConcurrencyPtrOutput values.
// You can construct a concrete instance of `ScenarioLoadLoadSpecConcurrencyPtrInput` via:
//
//	        ScenarioLoadLoadSpecConcurrencyArgs{...}
//
//	or:
//
//	        nil
type ScenarioLoadLoadSpecConcurrencyPtrInput interface {
	pulumi.Input

	ToScenarioLoadLoadSpecConcurrencyPtrOutput() ScenarioLoadLoadSpecConcurrencyPtrOutput
	ToScenarioLoadLoadSpecConcurrencyPtrOutputWithContext(context.Context) ScenarioLoadLoadSpecConcurrencyPtrOutput
}

type scenarioLoadLoadSpecConcurrencyPtrType ScenarioLoadLoadSpecConcurrencyArgs

func ScenarioLoadLoadSpecConcurrencyPtr(v *ScenarioLoadLoadSpecConcurrencyArgs) ScenarioLoadLoadSpecConcurrencyPtrInput {
	return (*scenarioLoadLoadSpecConcurrencyPtrType)(v)
}

func (*scenarioLoadLoadSpecConcurrencyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScenarioLoadLoadSpecConcurrency)(nil)).Elem()
}

func (i *scenarioLoadLoadSpecConcurrencyPtrType) ToScenarioLoadLoadSpecConcurrencyPtrOutput() ScenarioLoadLoadSpecConcurrencyPtrOutput {
	return i.ToScenarioLoadLoadSpecConcurrencyPtrOutputWithContext(context.Background())
}

func (i *scenarioLoadLoadSpecConcurrencyPtrType) ToScenarioLoadLoadSpecConcurrencyPtrOutputWithContext(ctx context.Context) ScenarioLoadLoadSpecConcurrencyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioLoadLoadSpecConcurrencyPtrOutput)
}

type ScenarioLoadLoadSpecConcurrencyOutput struct{ *pulumi.OutputState }

func (ScenarioLoadLoadSpecConcurrencyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioLoadLoadSpecConcurrency)(nil)).Elem()
}

func (o ScenarioLoadLoadSpecConcurrencyOutput) ToScenarioLoadLoadSpecConcurrencyOutput() ScenarioLoadLoadSpecConcurrencyOutput {
	return o
}

func (o ScenarioLoadLoadSpecConcurrencyOutput) ToScenarioLoadLoadSpecConcurrencyOutputWithContext(ctx context.Context) ScenarioLoadLoadSpecConcurrencyOutput {
	return o
}

func (o ScenarioLoadLoadSpecConcurrencyOutput) ToScenarioLoadLoadSpecConcurrencyPtrOutput() ScenarioLoadLoadSpecConcurrencyPtrOutput {
	return o.ToScenarioLoadLoadSpecConcurrencyPtrOutputWithContext(context.Background())
}

func (o ScenarioLoadLoadSpecConcurrencyOutput) ToScenarioLoadLoadSpecConcurrencyPtrOutputWithContext(ctx context.Context) ScenarioLoadLoadSpecConcurrencyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScenarioLoadLoadSpecConcurrency) *ScenarioLoadLoadSpecConcurrency {
		return &v
	}).(ScenarioLoadLoadSpecConcurrencyPtrOutput)
}

func (o ScenarioLoadLoadSpecConcurrencyOutput) GracefulStopSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScenarioLoadLoadSpecConcurrency) *int { return v.GracefulStopSeconds }).(pulumi.IntPtrOutput)
}

func (o ScenarioLoadLoadSpecConcurrencyOutput) IterationCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScenarioLoadLoadSpecConcurrency) *int { return v.IterationCount }).(pulumi.IntPtrOutput)
}

func (o ScenarioLoadLoadSpecConcurrencyOutput) MaxRequestsPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScenarioLoadLoadSpecConcurrency) *int { return v.MaxRequestsPerSecond }).(pulumi.IntPtrOutput)
}

func (o ScenarioLoadLoadSpecConcurrencyOutput) Stages() ScenarioLoadLoadSpecConcurrencyStageArrayOutput {
	return o.ApplyT(func(v ScenarioLoadLoadSpecConcurrency) []ScenarioLoadLoadSpecConcurrencyStage { return v.Stages }).(ScenarioLoadLoadSpecConcurrencyStageArrayOutput)
}

type ScenarioLoadLoadSpecConcurrencyPtrOutput struct{ *pulumi.OutputState }

func (ScenarioLoadLoadSpecConcurrencyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScenarioLoadLoadSpecConcurrency)(nil)).Elem()
}

func (o ScenarioLoadLoadSpecConcurrencyPtrOutput) ToScenarioLoadLoadSpecConcurrencyPtrOutput() ScenarioLoadLoadSpecConcurrencyPtrOutput {
	return o
}

func (o ScenarioLoadLoadSpecConcurrencyPtrOutput) ToScenarioLoadLoadSpecConcurrencyPtrOutputWithContext(ctx context.Context) ScenarioLoadLoadSpecConcurrencyPtrOutput {
	return o
}

func (o ScenarioLoadLoadSpecConcurrencyPtrOutput) Elem() ScenarioLoadLoadSpecConcurrencyOutput {
	return o.ApplyT(func(v *ScenarioLoadLoadSpecConcurrency) ScenarioLoadLoadSpecConcurrency {
		if v != nil {
			return *v
		}
		var ret ScenarioLoadLoadSpecConcurrency
		return ret
	}).(ScenarioLoadLoadSpecConcurrencyOutput)
}

func (o ScenarioLoadLoadSpecConcurrencyPtrOutput) GracefulStopSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScenarioLoadLoadSpecConcurrency) *int {
		if v == nil {
			return nil
		}
		return v.GracefulStopSeconds
	}).(pulumi.IntPtrOutput)
}

func (o ScenarioLoadLoadSpecConcurrencyPtrOutput) IterationCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScenarioLoadLoadSpecConcurrency) *int {
		if v == nil {
			return nil
		}
		return v.IterationCount
	}).(pulumi.IntPtrOutput)
}

func (o ScenarioLoadLoadSpecConcurrencyPtrOutput) MaxRequestsPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScenarioLoadLoadSpecConcurrency) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestsPerSecond
	}).(pulumi.IntPtrOutput)
}

func (o ScenarioLoadLoadSpecConcurrencyPtrOutput) Stages() ScenarioLoadLoadSpecConcurrencyStageArrayOutput {
	return o.ApplyT(func(v *ScenarioLoadLoadSpecConcurrency) []ScenarioLoadLoadSpecConcurrencyStage {
		if v == nil {
			return nil
		}
		return v.Stages
	}).(ScenarioLoadLoadSpecConcurrencyStageArrayOutput)
}

type ScenarioLoadLoadSpecConcurrencyStage struct {
	DurationSeconds    *int `pulumi:"durationSeconds"`
	TargetVirtualUsers *int `pulumi:"targetVirtualUsers"`
}

// ScenarioLoadLoadSpecConcurrencyStageInput is an input type that accepts ScenarioLoadLoadSpecConcurrencyStageArgs and ScenarioLoadLoadSpecConcurrencyStageOutput values.
// You can construct a concrete instance of `ScenarioLoadLoadSpecConcurrencyStageInput` via:
//
//	ScenarioLoadLoadSpecConcurrencyStageArgs{...}
type ScenarioLoadLoadSpecConcurrencyStageInput interface {
	pulumi.Input

	ToScenarioLoadLoadSpecConcurrencyStageOutput() ScenarioLoadLoadSpecConcurrencyStageOutput
	ToScenarioLoadLoadSpecConcurrencyStageOutputWithContext(context.Context) ScenarioLoadLoadSpecConcurrencyStageOutput
}

type ScenarioLoadLoadSpecConcurrencyStageArgs struct {
	DurationSeconds    pulumi.IntPtrInput `pulumi:"durationSeconds"`
	TargetVirtualUsers pulumi.IntPtrInput `pulumi:"targetVirtualUsers"`
}

func (ScenarioLoadLoadSpecConcurrencyStageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioLoadLoadSpecConcurrencyStage)(nil)).Elem()
}

func (i ScenarioLoadLoadSpecConcurrencyStageArgs) ToScenarioLoadLoadSpecConcurrencyStageOutput() ScenarioLoadLoadSpecConcurrencyStageOutput {
	return i.ToScenarioLoadLoadSpecConcurrencyStageOutputWithContext(context.Background())
}

func (i ScenarioLoadLoadSpecConcurrencyStageArgs) ToScenarioLoadLoadSpecConcurrencyStageOutputWithContext(ctx context.Context) ScenarioLoadLoadSpecConcurrencyStageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioLoadLoadSpecConcurrencyStageOutput)
}

// ScenarioLoadLoadSpecConcurrencyStageArrayInput is an input type that accepts ScenarioLoadLoadSpecConcurrencyStageArray and ScenarioLoadLoadSpecConcurrencyStageArrayOutput values.
// You can construct a concrete instance of `ScenarioLoadLoadSpecConcurrencyStageArrayInput` via:
//
//	ScenarioLoadLoadSpecConcurrencyStageArray{ ScenarioLoadLoadSpecConcurrencyStageArgs{...} }
type ScenarioLoadLoadSpecConcurrencyStageArrayInput interface {
	pulumi.Input

	ToScenarioLoadLoadSpecConcurrencyStageArrayOutput() ScenarioLoadLoadSpecConcurrencyStageArrayOutput
	ToScenarioLoadLoadSpecConcurrencyStageArrayOutputWithContext(context.Context) ScenarioLoadLoadSpecConcurrencyStageArrayOutput
}

type ScenarioLoadLoadSpecConcurrencyStageArray []ScenarioLoadLoadSpecConcurrencyStageInput

func (ScenarioLoadLoadSpecConcurrencyStageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScenarioLoadLoadSpecConcurrencyStage)(nil)).Elem()
}

func (i ScenarioLoadLoadSpecConcurrencyStageArray) ToScenarioLoadLoadSpecConcurrencyStageArrayOutput() ScenarioLoadLoadSpecConcurrencyStageArrayOutput {
	return i.ToScenarioLoadLoadSpecConcurrencyStageArrayOutputWithContext(context.Background())
}

func (i ScenarioLoadLoadSpecConcurrencyStageArray) ToScenarioLoadLoadSpecConcurrencyStageArrayOutputWithContext(ctx context.Context) ScenarioLoadLoadSpecConcurrencyStageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioLoadLoadSpecConcurrencyStageArrayOutput)
}

type ScenarioLoadLoadSpecConcurrencyStageOutput struct{ *pulumi.OutputState }

func (ScenarioLoadLoadSpecConcurrencyStageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioLoadLoadSpecConcurrencyStage)(nil)).Elem()
}

func (o ScenarioLoadLoadSpecConcurrencyStageOutput) ToScenarioLoadLoadSpecConcurrencyStageOutput() ScenarioLoadLoadSpecConcurrencyStageOutput {
	return o
}

func (o ScenarioLoadLoadSpecConcurrencyStageOutput) ToScenarioLoadLoadSpecConcurrencyStageOutputWithContext(ctx context.Context) ScenarioLoadLoadSpecConcurrencyStageOutput {
	return o
}

func (o ScenarioLoadLoadSpecConcurrencyStageOutput) DurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScenarioLoadLoadSpecConcurrencyStage) *int { return v.DurationSeconds }).(pulumi.IntPtrOutput)
}

func (o ScenarioLoadLoadSpecConcurrencyStageOutput) TargetVirtualUsers() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScenarioLoadLoadSpecConcurrencyStage) *int { return v.TargetVirtualUsers }).(pulumi.IntPtrOutput)
}

type ScenarioLoadLoadSpecConcurrencyStageArrayOutput struct{ *pulumi.OutputState }

func (ScenarioLoadLoadSpecConcurrencyStageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScenarioLoadLoadSpecConcurrencyStage)(nil)).Elem()
}

func (o ScenarioLoadLoadSpecConcurrencyStageArrayOutput) ToScenarioLoadLoadSpecConcurrencyStageArrayOutput() ScenarioLoadLoadSpecConcurrencyStageArrayOutput {
	return o
}

func (o ScenarioLoadLoadSpecConcurrencyStageArrayOutput) ToScenarioLoadLoadSpecConcurrencyStageArrayOutputWithContext(ctx context.Context) ScenarioLoadLoadSpecConcurrencyStageArrayOutput {
	return o
}

func (o ScenarioLoadLoadSpecConcurrencyStageArrayOutput) Index(i pulumi.IntInput) ScenarioLoadLoadSpecConcurrencyStageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScenarioLoadLoadSpecConcurrencyStage {
		return vs[0].([]ScenarioLoadLoadSpecConcurrencyStage)[vs[1].(int)]
	}).(ScenarioLoadLoadSpecConcurrencyStageOutput)
}

type ScenarioLoadLoadSpecRequestsPerSecond struct {
	DurationSeconds         *int `pulumi:"durationSeconds"`
	GracefulStopSeconds     *int `pulumi:"gracefulStopSeconds"`
	MaxRequestsPerSecond    *int `pulumi:"maxRequestsPerSecond"`
	Resources               *int `pulumi:"resources"`
	StartRequestsPerSecond  *int `pulumi:"startRequestsPerSecond"`
	TargetRequestsPerSecond *int `pulumi:"targetRequestsPerSecond"`
}

// ScenarioLoadLoadSpecRequestsPerSecondInput is an input type that accepts ScenarioLoadLoadSpecRequestsPerSecondArgs and ScenarioLoadLoadSpecRequestsPerSecondOutput values.
// You can construct a concrete instance of `ScenarioLoadLoadSpecRequestsPerSecondInput` via:
//
//	ScenarioLoadLoadSpecRequestsPerSecondArgs{...}
type ScenarioLoadLoadSpecRequestsPerSecondInput interface {
	pulumi.Input

	ToScenarioLoadLoadSpecRequestsPerSecondOutput() ScenarioLoadLoadSpecRequestsPerSecondOutput
	ToScenarioLoadLoadSpecRequestsPerSecondOutputWithContext(context.Context) ScenarioLoadLoadSpecRequestsPerSecondOutput
}

type ScenarioLoadLoadSpecRequestsPerSecondArgs struct {
	DurationSeconds         pulumi.IntPtrInput `pulumi:"durationSeconds"`
	GracefulStopSeconds     pulumi.IntPtrInput `pulumi:"gracefulStopSeconds"`
	MaxRequestsPerSecond    pulumi.IntPtrInput `pulumi:"maxRequestsPerSecond"`
	Resources               pulumi.IntPtrInput `pulumi:"resources"`
	StartRequestsPerSecond  pulumi.IntPtrInput `pulumi:"startRequestsPerSecond"`
	TargetRequestsPerSecond pulumi.IntPtrInput `pulumi:"targetRequestsPerSecond"`
}

func (ScenarioLoadLoadSpecRequestsPerSecondArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioLoadLoadSpecRequestsPerSecond)(nil)).Elem()
}

func (i ScenarioLoadLoadSpecRequestsPerSecondArgs) ToScenarioLoadLoadSpecRequestsPerSecondOutput() ScenarioLoadLoadSpecRequestsPerSecondOutput {
	return i.ToScenarioLoadLoadSpecRequestsPerSecondOutputWithContext(context.Background())
}

func (i ScenarioLoadLoadSpecRequestsPerSecondArgs) ToScenarioLoadLoadSpecRequestsPerSecondOutputWithContext(ctx context.Context) ScenarioLoadLoadSpecRequestsPerSecondOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioLoadLoadSpecRequestsPerSecondOutput)
}

func (i ScenarioLoadLoadSpecRequestsPerSecondArgs) ToScenarioLoadLoadSpecRequestsPerSecondPtrOutput() ScenarioLoadLoadSpecRequestsPerSecondPtrOutput {
	return i.ToScenarioLoadLoadSpecRequestsPerSecondPtrOutputWithContext(context.Background())
}

func (i ScenarioLoadLoadSpecRequestsPerSecondArgs) ToScenarioLoadLoadSpecRequestsPerSecondPtrOutputWithContext(ctx context.Context) ScenarioLoadLoadSpecRequestsPerSecondPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioLoadLoadSpecRequestsPerSecondOutput).ToScenarioLoadLoadSpecRequestsPerSecondPtrOutputWithContext(ctx)
}

// ScenarioLoadLoadSpecRequestsPerSecondPtrInput is an input type that accepts ScenarioLoadLoadSpecRequestsPerSecondArgs, ScenarioLoadLoadSpecRequestsPerSecondPtr and ScenarioLoadLoadSpecRequestsPerSecondPtrOutput values.
// You can construct a concrete instance of `ScenarioLoadLoadSpecRequestsPerSecondPtrInput` via:
//
//	        ScenarioLoadLoadSpecRequestsPerSecondArgs{...}
//
//	or:
//
//	        nil
type ScenarioLoadLoadSpecRequestsPerSecondPtrInput interface {
	pulumi.Input

	ToScenarioLoadLoadSpecRequestsPerSecondPtrOutput() ScenarioLoadLoadSpecRequestsPerSecondPtrOutput
	ToScenarioLoadLoadSpecRequestsPerSecondPtrOutputWithContext(context.Context) ScenarioLoadLoadSpecRequestsPerSecondPtrOutput
}

type scenarioLoadLoadSpecRequestsPerSecondPtrType ScenarioLoadLoadSpecRequestsPerSecondArgs

func ScenarioLoadLoadSpecRequestsPerSecondPtr(v *ScenarioLoadLoadSpecRequestsPerSecondArgs) ScenarioLoadLoadSpecRequestsPerSecondPtrInput {
	return (*scenarioLoadLoadSpecRequestsPerSecondPtrType)(v)
}

func (*scenarioLoadLoadSpecRequestsPerSecondPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScenarioLoadLoadSpecRequestsPerSecond)(nil)).Elem()
}

func (i *scenarioLoadLoadSpecRequestsPerSecondPtrType) ToScenarioLoadLoadSpecRequestsPerSecondPtrOutput() ScenarioLoadLoadSpecRequestsPerSecondPtrOutput {
	return i.ToScenarioLoadLoadSpecRequestsPerSecondPtrOutputWithContext(context.Background())
}

func (i *scenarioLoadLoadSpecRequestsPerSecondPtrType) ToScenarioLoadLoadSpecRequestsPerSecondPtrOutputWithContext(ctx context.Context) ScenarioLoadLoadSpecRequestsPerSecondPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioLoadLoadSpecRequestsPerSecondPtrOutput)
}

type ScenarioLoadLoadSpecRequestsPerSecondOutput struct{ *pulumi.OutputState }

func (ScenarioLoadLoadSpecRequestsPerSecondOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioLoadLoadSpecRequestsPerSecond)(nil)).Elem()
}

func (o ScenarioLoadLoadSpecRequestsPerSecondOutput) ToScenarioLoadLoadSpecRequestsPerSecondOutput() ScenarioLoadLoadSpecRequestsPerSecondOutput {
	return o
}

func (o ScenarioLoadLoadSpecRequestsPerSecondOutput) ToScenarioLoadLoadSpecRequestsPerSecondOutputWithContext(ctx context.Context) ScenarioLoadLoadSpecRequestsPerSecondOutput {
	return o
}

func (o ScenarioLoadLoadSpecRequestsPerSecondOutput) ToScenarioLoadLoadSpecRequestsPerSecondPtrOutput() ScenarioLoadLoadSpecRequestsPerSecondPtrOutput {
	return o.ToScenarioLoadLoadSpecRequestsPerSecondPtrOutputWithContext(context.Background())
}

func (o ScenarioLoadLoadSpecRequestsPerSecondOutput) ToScenarioLoadLoadSpecRequestsPerSecondPtrOutputWithContext(ctx context.Context) ScenarioLoadLoadSpecRequestsPerSecondPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScenarioLoadLoadSpecRequestsPerSecond) *ScenarioLoadLoadSpecRequestsPerSecond {
		return &v
	}).(ScenarioLoadLoadSpecRequestsPerSecondPtrOutput)
}

func (o ScenarioLoadLoadSpecRequestsPerSecondOutput) DurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScenarioLoadLoadSpecRequestsPerSecond) *int { return v.DurationSeconds }).(pulumi.IntPtrOutput)
}

func (o ScenarioLoadLoadSpecRequestsPerSecondOutput) GracefulStopSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScenarioLoadLoadSpecRequestsPerSecond) *int { return v.GracefulStopSeconds }).(pulumi.IntPtrOutput)
}

func (o ScenarioLoadLoadSpecRequestsPerSecondOutput) MaxRequestsPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScenarioLoadLoadSpecRequestsPerSecond) *int { return v.MaxRequestsPerSecond }).(pulumi.IntPtrOutput)
}

func (o ScenarioLoadLoadSpecRequestsPerSecondOutput) Resources() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScenarioLoadLoadSpecRequestsPerSecond) *int { return v.Resources }).(pulumi.IntPtrOutput)
}

func (o ScenarioLoadLoadSpecRequestsPerSecondOutput) StartRequestsPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScenarioLoadLoadSpecRequestsPerSecond) *int { return v.StartRequestsPerSecond }).(pulumi.IntPtrOutput)
}

func (o ScenarioLoadLoadSpecRequestsPerSecondOutput) TargetRequestsPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScenarioLoadLoadSpecRequestsPerSecond) *int { return v.TargetRequestsPerSecond }).(pulumi.IntPtrOutput)
}

type ScenarioLoadLoadSpecRequestsPerSecondPtrOutput struct{ *pulumi.OutputState }

func (ScenarioLoadLoadSpecRequestsPerSecondPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScenarioLoadLoadSpecRequestsPerSecond)(nil)).Elem()
}

func (o ScenarioLoadLoadSpecRequestsPerSecondPtrOutput) ToScenarioLoadLoadSpecRequestsPerSecondPtrOutput() ScenarioLoadLoadSpecRequestsPerSecondPtrOutput {
	return o
}

func (o ScenarioLoadLoadSpecRequestsPerSecondPtrOutput) ToScenarioLoadLoadSpecRequestsPerSecondPtrOutputWithContext(ctx context.Context) ScenarioLoadLoadSpecRequestsPerSecondPtrOutput {
	return o
}

func (o ScenarioLoadLoadSpecRequestsPerSecondPtrOutput) Elem() ScenarioLoadLoadSpecRequestsPerSecondOutput {
	return o.ApplyT(func(v *ScenarioLoadLoadSpecRequestsPerSecond) ScenarioLoadLoadSpecRequestsPerSecond {
		if v != nil {
			return *v
		}
		var ret ScenarioLoadLoadSpecRequestsPerSecond
		return ret
	}).(ScenarioLoadLoadSpecRequestsPerSecondOutput)
}

func (o ScenarioLoadLoadSpecRequestsPerSecondPtrOutput) DurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScenarioLoadLoadSpecRequestsPerSecond) *int {
		if v == nil {
			return nil
		}
		return v.DurationSeconds
	}).(pulumi.IntPtrOutput)
}

func (o ScenarioLoadLoadSpecRequestsPerSecondPtrOutput) GracefulStopSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScenarioLoadLoadSpecRequestsPerSecond) *int {
		if v == nil {
			return nil
		}
		return v.GracefulStopSeconds
	}).(pulumi.IntPtrOutput)
}

func (o ScenarioLoadLoadSpecRequestsPerSecondPtrOutput) MaxRequestsPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScenarioLoadLoadSpecRequestsPerSecond) *int {
		if v == nil {
			return nil
		}
		return v.MaxRequestsPerSecond
	}).(pulumi.IntPtrOutput)
}

func (o ScenarioLoadLoadSpecRequestsPerSecondPtrOutput) Resources() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScenarioLoadLoadSpecRequestsPerSecond) *int {
		if v == nil {
			return nil
		}
		return v.Resources
	}).(pulumi.IntPtrOutput)
}

func (o ScenarioLoadLoadSpecRequestsPerSecondPtrOutput) StartRequestsPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScenarioLoadLoadSpecRequestsPerSecond) *int {
		if v == nil {
			return nil
		}
		return v.StartRequestsPerSecond
	}).(pulumi.IntPtrOutput)
}

func (o ScenarioLoadLoadSpecRequestsPerSecondPtrOutput) TargetRequestsPerSecond() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScenarioLoadLoadSpecRequestsPerSecond) *int {
		if v == nil {
			return nil
		}
		return v.TargetRequestsPerSecond
	}).(pulumi.IntPtrOutput)
}

type ScenarioLoadLoadSpecScriptOrigin struct {
	DurationSeconds      int    `pulumi:"durationSeconds"`
	MachineNumber        int    `pulumi:"machineNumber"`
	MachineSpecification string `pulumi:"machineSpecification"`
}

// ScenarioLoadLoadSpecScriptOriginInput is an input type that accepts ScenarioLoadLoadSpecScriptOriginArgs and ScenarioLoadLoadSpecScriptOriginOutput values.
// You can construct a concrete instance of `ScenarioLoadLoadSpecScriptOriginInput` via:
//
//	ScenarioLoadLoadSpecScriptOriginArgs{...}
type ScenarioLoadLoadSpecScriptOriginInput interface {
	pulumi.Input

	ToScenarioLoadLoadSpecScriptOriginOutput() ScenarioLoadLoadSpecScriptOriginOutput
	ToScenarioLoadLoadSpecScriptOriginOutputWithContext(context.Context) ScenarioLoadLoadSpecScriptOriginOutput
}

type ScenarioLoadLoadSpecScriptOriginArgs struct {
	DurationSeconds      pulumi.IntInput    `pulumi:"durationSeconds"`
	MachineNumber        pulumi.IntInput    `pulumi:"machineNumber"`
	MachineSpecification pulumi.StringInput `pulumi:"machineSpecification"`
}

func (ScenarioLoadLoadSpecScriptOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioLoadLoadSpecScriptOrigin)(nil)).Elem()
}

func (i ScenarioLoadLoadSpecScriptOriginArgs) ToScenarioLoadLoadSpecScriptOriginOutput() ScenarioLoadLoadSpecScriptOriginOutput {
	return i.ToScenarioLoadLoadSpecScriptOriginOutputWithContext(context.Background())
}

func (i ScenarioLoadLoadSpecScriptOriginArgs) ToScenarioLoadLoadSpecScriptOriginOutputWithContext(ctx context.Context) ScenarioLoadLoadSpecScriptOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioLoadLoadSpecScriptOriginOutput)
}

func (i ScenarioLoadLoadSpecScriptOriginArgs) ToScenarioLoadLoadSpecScriptOriginPtrOutput() ScenarioLoadLoadSpecScriptOriginPtrOutput {
	return i.ToScenarioLoadLoadSpecScriptOriginPtrOutputWithContext(context.Background())
}

func (i ScenarioLoadLoadSpecScriptOriginArgs) ToScenarioLoadLoadSpecScriptOriginPtrOutputWithContext(ctx context.Context) ScenarioLoadLoadSpecScriptOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioLoadLoadSpecScriptOriginOutput).ToScenarioLoadLoadSpecScriptOriginPtrOutputWithContext(ctx)
}

// ScenarioLoadLoadSpecScriptOriginPtrInput is an input type that accepts ScenarioLoadLoadSpecScriptOriginArgs, ScenarioLoadLoadSpecScriptOriginPtr and ScenarioLoadLoadSpecScriptOriginPtrOutput values.
// You can construct a concrete instance of `ScenarioLoadLoadSpecScriptOriginPtrInput` via:
//
//	        ScenarioLoadLoadSpecScriptOriginArgs{...}
//
//	or:
//
//	        nil
type ScenarioLoadLoadSpecScriptOriginPtrInput interface {
	pulumi.Input

	ToScenarioLoadLoadSpecScriptOriginPtrOutput() ScenarioLoadLoadSpecScriptOriginPtrOutput
	ToScenarioLoadLoadSpecScriptOriginPtrOutputWithContext(context.Context) ScenarioLoadLoadSpecScriptOriginPtrOutput
}

type scenarioLoadLoadSpecScriptOriginPtrType ScenarioLoadLoadSpecScriptOriginArgs

func ScenarioLoadLoadSpecScriptOriginPtr(v *ScenarioLoadLoadSpecScriptOriginArgs) ScenarioLoadLoadSpecScriptOriginPtrInput {
	return (*scenarioLoadLoadSpecScriptOriginPtrType)(v)
}

func (*scenarioLoadLoadSpecScriptOriginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScenarioLoadLoadSpecScriptOrigin)(nil)).Elem()
}

func (i *scenarioLoadLoadSpecScriptOriginPtrType) ToScenarioLoadLoadSpecScriptOriginPtrOutput() ScenarioLoadLoadSpecScriptOriginPtrOutput {
	return i.ToScenarioLoadLoadSpecScriptOriginPtrOutputWithContext(context.Background())
}

func (i *scenarioLoadLoadSpecScriptOriginPtrType) ToScenarioLoadLoadSpecScriptOriginPtrOutputWithContext(ctx context.Context) ScenarioLoadLoadSpecScriptOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioLoadLoadSpecScriptOriginPtrOutput)
}

type ScenarioLoadLoadSpecScriptOriginOutput struct{ *pulumi.OutputState }

func (ScenarioLoadLoadSpecScriptOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioLoadLoadSpecScriptOrigin)(nil)).Elem()
}

func (o ScenarioLoadLoadSpecScriptOriginOutput) ToScenarioLoadLoadSpecScriptOriginOutput() ScenarioLoadLoadSpecScriptOriginOutput {
	return o
}

func (o ScenarioLoadLoadSpecScriptOriginOutput) ToScenarioLoadLoadSpecScriptOriginOutputWithContext(ctx context.Context) ScenarioLoadLoadSpecScriptOriginOutput {
	return o
}

func (o ScenarioLoadLoadSpecScriptOriginOutput) ToScenarioLoadLoadSpecScriptOriginPtrOutput() ScenarioLoadLoadSpecScriptOriginPtrOutput {
	return o.ToScenarioLoadLoadSpecScriptOriginPtrOutputWithContext(context.Background())
}

func (o ScenarioLoadLoadSpecScriptOriginOutput) ToScenarioLoadLoadSpecScriptOriginPtrOutputWithContext(ctx context.Context) ScenarioLoadLoadSpecScriptOriginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScenarioLoadLoadSpecScriptOrigin) *ScenarioLoadLoadSpecScriptOrigin {
		return &v
	}).(ScenarioLoadLoadSpecScriptOriginPtrOutput)
}

func (o ScenarioLoadLoadSpecScriptOriginOutput) DurationSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v ScenarioLoadLoadSpecScriptOrigin) int { return v.DurationSeconds }).(pulumi.IntOutput)
}

func (o ScenarioLoadLoadSpecScriptOriginOutput) MachineNumber() pulumi.IntOutput {
	return o.ApplyT(func(v ScenarioLoadLoadSpecScriptOrigin) int { return v.MachineNumber }).(pulumi.IntOutput)
}

func (o ScenarioLoadLoadSpecScriptOriginOutput) MachineSpecification() pulumi.StringOutput {
	return o.ApplyT(func(v ScenarioLoadLoadSpecScriptOrigin) string { return v.MachineSpecification }).(pulumi.StringOutput)
}

type ScenarioLoadLoadSpecScriptOriginPtrOutput struct{ *pulumi.OutputState }

func (ScenarioLoadLoadSpecScriptOriginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScenarioLoadLoadSpecScriptOrigin)(nil)).Elem()
}

func (o ScenarioLoadLoadSpecScriptOriginPtrOutput) ToScenarioLoadLoadSpecScriptOriginPtrOutput() ScenarioLoadLoadSpecScriptOriginPtrOutput {
	return o
}

func (o ScenarioLoadLoadSpecScriptOriginPtrOutput) ToScenarioLoadLoadSpecScriptOriginPtrOutputWithContext(ctx context.Context) ScenarioLoadLoadSpecScriptOriginPtrOutput {
	return o
}

func (o ScenarioLoadLoadSpecScriptOriginPtrOutput) Elem() ScenarioLoadLoadSpecScriptOriginOutput {
	return o.ApplyT(func(v *ScenarioLoadLoadSpecScriptOrigin) ScenarioLoadLoadSpecScriptOrigin {
		if v != nil {
			return *v
		}
		var ret ScenarioLoadLoadSpecScriptOrigin
		return ret
	}).(ScenarioLoadLoadSpecScriptOriginOutput)
}

func (o ScenarioLoadLoadSpecScriptOriginPtrOutput) DurationSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScenarioLoadLoadSpecScriptOrigin) *int {
		if v == nil {
			return nil
		}
		return &v.DurationSeconds
	}).(pulumi.IntPtrOutput)
}

func (o ScenarioLoadLoadSpecScriptOriginPtrOutput) MachineNumber() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScenarioLoadLoadSpecScriptOrigin) *int {
		if v == nil {
			return nil
		}
		return &v.MachineNumber
	}).(pulumi.IntPtrOutput)
}

func (o ScenarioLoadLoadSpecScriptOriginPtrOutput) MachineSpecification() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScenarioLoadLoadSpecScriptOrigin) *string {
		if v == nil {
			return nil
		}
		return &v.MachineSpecification
	}).(pulumi.StringPtrOutput)
}

type ScenarioLoadVpcLoadDistribution struct {
	Region    *string  `pulumi:"region"`
	RegionId  int      `pulumi:"regionId"`
	SubnetIds []string `pulumi:"subnetIds"`
	VpcId     *string  `pulumi:"vpcId"`
}

// ScenarioLoadVpcLoadDistributionInput is an input type that accepts ScenarioLoadVpcLoadDistributionArgs and ScenarioLoadVpcLoadDistributionOutput values.
// You can construct a concrete instance of `ScenarioLoadVpcLoadDistributionInput` via:
//
//	ScenarioLoadVpcLoadDistributionArgs{...}
type ScenarioLoadVpcLoadDistributionInput interface {
	pulumi.Input

	ToScenarioLoadVpcLoadDistributionOutput() ScenarioLoadVpcLoadDistributionOutput
	ToScenarioLoadVpcLoadDistributionOutputWithContext(context.Context) ScenarioLoadVpcLoadDistributionOutput
}

type ScenarioLoadVpcLoadDistributionArgs struct {
	Region    pulumi.StringPtrInput   `pulumi:"region"`
	RegionId  pulumi.IntInput         `pulumi:"regionId"`
	SubnetIds pulumi.StringArrayInput `pulumi:"subnetIds"`
	VpcId     pulumi.StringPtrInput   `pulumi:"vpcId"`
}

func (ScenarioLoadVpcLoadDistributionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioLoadVpcLoadDistribution)(nil)).Elem()
}

func (i ScenarioLoadVpcLoadDistributionArgs) ToScenarioLoadVpcLoadDistributionOutput() ScenarioLoadVpcLoadDistributionOutput {
	return i.ToScenarioLoadVpcLoadDistributionOutputWithContext(context.Background())
}

func (i ScenarioLoadVpcLoadDistributionArgs) ToScenarioLoadVpcLoadDistributionOutputWithContext(ctx context.Context) ScenarioLoadVpcLoadDistributionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioLoadVpcLoadDistributionOutput)
}

func (i ScenarioLoadVpcLoadDistributionArgs) ToScenarioLoadVpcLoadDistributionPtrOutput() ScenarioLoadVpcLoadDistributionPtrOutput {
	return i.ToScenarioLoadVpcLoadDistributionPtrOutputWithContext(context.Background())
}

func (i ScenarioLoadVpcLoadDistributionArgs) ToScenarioLoadVpcLoadDistributionPtrOutputWithContext(ctx context.Context) ScenarioLoadVpcLoadDistributionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioLoadVpcLoadDistributionOutput).ToScenarioLoadVpcLoadDistributionPtrOutputWithContext(ctx)
}

// ScenarioLoadVpcLoadDistributionPtrInput is an input type that accepts ScenarioLoadVpcLoadDistributionArgs, ScenarioLoadVpcLoadDistributionPtr and ScenarioLoadVpcLoadDistributionPtrOutput values.
// You can construct a concrete instance of `ScenarioLoadVpcLoadDistributionPtrInput` via:
//
//	        ScenarioLoadVpcLoadDistributionArgs{...}
//
//	or:
//
//	        nil
type ScenarioLoadVpcLoadDistributionPtrInput interface {
	pulumi.Input

	ToScenarioLoadVpcLoadDistributionPtrOutput() ScenarioLoadVpcLoadDistributionPtrOutput
	ToScenarioLoadVpcLoadDistributionPtrOutputWithContext(context.Context) ScenarioLoadVpcLoadDistributionPtrOutput
}

type scenarioLoadVpcLoadDistributionPtrType ScenarioLoadVpcLoadDistributionArgs

func ScenarioLoadVpcLoadDistributionPtr(v *ScenarioLoadVpcLoadDistributionArgs) ScenarioLoadVpcLoadDistributionPtrInput {
	return (*scenarioLoadVpcLoadDistributionPtrType)(v)
}

func (*scenarioLoadVpcLoadDistributionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScenarioLoadVpcLoadDistribution)(nil)).Elem()
}

func (i *scenarioLoadVpcLoadDistributionPtrType) ToScenarioLoadVpcLoadDistributionPtrOutput() ScenarioLoadVpcLoadDistributionPtrOutput {
	return i.ToScenarioLoadVpcLoadDistributionPtrOutputWithContext(context.Background())
}

func (i *scenarioLoadVpcLoadDistributionPtrType) ToScenarioLoadVpcLoadDistributionPtrOutputWithContext(ctx context.Context) ScenarioLoadVpcLoadDistributionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioLoadVpcLoadDistributionPtrOutput)
}

type ScenarioLoadVpcLoadDistributionOutput struct{ *pulumi.OutputState }

func (ScenarioLoadVpcLoadDistributionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioLoadVpcLoadDistribution)(nil)).Elem()
}

func (o ScenarioLoadVpcLoadDistributionOutput) ToScenarioLoadVpcLoadDistributionOutput() ScenarioLoadVpcLoadDistributionOutput {
	return o
}

func (o ScenarioLoadVpcLoadDistributionOutput) ToScenarioLoadVpcLoadDistributionOutputWithContext(ctx context.Context) ScenarioLoadVpcLoadDistributionOutput {
	return o
}

func (o ScenarioLoadVpcLoadDistributionOutput) ToScenarioLoadVpcLoadDistributionPtrOutput() ScenarioLoadVpcLoadDistributionPtrOutput {
	return o.ToScenarioLoadVpcLoadDistributionPtrOutputWithContext(context.Background())
}

func (o ScenarioLoadVpcLoadDistributionOutput) ToScenarioLoadVpcLoadDistributionPtrOutputWithContext(ctx context.Context) ScenarioLoadVpcLoadDistributionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScenarioLoadVpcLoadDistribution) *ScenarioLoadVpcLoadDistribution {
		return &v
	}).(ScenarioLoadVpcLoadDistributionPtrOutput)
}

func (o ScenarioLoadVpcLoadDistributionOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioLoadVpcLoadDistribution) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o ScenarioLoadVpcLoadDistributionOutput) RegionId() pulumi.IntOutput {
	return o.ApplyT(func(v ScenarioLoadVpcLoadDistribution) int { return v.RegionId }).(pulumi.IntOutput)
}

func (o ScenarioLoadVpcLoadDistributionOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ScenarioLoadVpcLoadDistribution) []string { return v.SubnetIds }).(pulumi.StringArrayOutput)
}

func (o ScenarioLoadVpcLoadDistributionOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioLoadVpcLoadDistribution) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

type ScenarioLoadVpcLoadDistributionPtrOutput struct{ *pulumi.OutputState }

func (ScenarioLoadVpcLoadDistributionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScenarioLoadVpcLoadDistribution)(nil)).Elem()
}

func (o ScenarioLoadVpcLoadDistributionPtrOutput) ToScenarioLoadVpcLoadDistributionPtrOutput() ScenarioLoadVpcLoadDistributionPtrOutput {
	return o
}

func (o ScenarioLoadVpcLoadDistributionPtrOutput) ToScenarioLoadVpcLoadDistributionPtrOutputWithContext(ctx context.Context) ScenarioLoadVpcLoadDistributionPtrOutput {
	return o
}

func (o ScenarioLoadVpcLoadDistributionPtrOutput) Elem() ScenarioLoadVpcLoadDistributionOutput {
	return o.ApplyT(func(v *ScenarioLoadVpcLoadDistribution) ScenarioLoadVpcLoadDistribution {
		if v != nil {
			return *v
		}
		var ret ScenarioLoadVpcLoadDistribution
		return ret
	}).(ScenarioLoadVpcLoadDistributionOutput)
}

func (o ScenarioLoadVpcLoadDistributionPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScenarioLoadVpcLoadDistribution) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

func (o ScenarioLoadVpcLoadDistributionPtrOutput) RegionId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ScenarioLoadVpcLoadDistribution) *int {
		if v == nil {
			return nil
		}
		return &v.RegionId
	}).(pulumi.IntPtrOutput)
}

func (o ScenarioLoadVpcLoadDistributionPtrOutput) SubnetIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ScenarioLoadVpcLoadDistribution) []string {
		if v == nil {
			return nil
		}
		return v.SubnetIds
	}).(pulumi.StringArrayOutput)
}

func (o ScenarioLoadVpcLoadDistributionPtrOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScenarioLoadVpcLoadDistribution) *string {
		if v == nil {
			return nil
		}
		return v.VpcId
	}).(pulumi.StringPtrOutput)
}

type ScenarioPlugin struct {
	FileId    *string `pulumi:"fileId"`
	Name      *string `pulumi:"name"`
	Size      *int    `pulumi:"size"`
	Type      *string `pulumi:"type"`
	UpdatedAt *string `pulumi:"updatedAt"`
}

// ScenarioPluginInput is an input type that accepts ScenarioPluginArgs and ScenarioPluginOutput values.
// You can construct a concrete instance of `ScenarioPluginInput` via:
//
//	ScenarioPluginArgs{...}
type ScenarioPluginInput interface {
	pulumi.Input

	ToScenarioPluginOutput() ScenarioPluginOutput
	ToScenarioPluginOutputWithContext(context.Context) ScenarioPluginOutput
}

type ScenarioPluginArgs struct {
	FileId    pulumi.StringPtrInput `pulumi:"fileId"`
	Name      pulumi.StringPtrInput `pulumi:"name"`
	Size      pulumi.IntPtrInput    `pulumi:"size"`
	Type      pulumi.StringPtrInput `pulumi:"type"`
	UpdatedAt pulumi.StringPtrInput `pulumi:"updatedAt"`
}

func (ScenarioPluginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioPlugin)(nil)).Elem()
}

func (i ScenarioPluginArgs) ToScenarioPluginOutput() ScenarioPluginOutput {
	return i.ToScenarioPluginOutputWithContext(context.Background())
}

func (i ScenarioPluginArgs) ToScenarioPluginOutputWithContext(ctx context.Context) ScenarioPluginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioPluginOutput)
}

// ScenarioPluginArrayInput is an input type that accepts ScenarioPluginArray and ScenarioPluginArrayOutput values.
// You can construct a concrete instance of `ScenarioPluginArrayInput` via:
//
//	ScenarioPluginArray{ ScenarioPluginArgs{...} }
type ScenarioPluginArrayInput interface {
	pulumi.Input

	ToScenarioPluginArrayOutput() ScenarioPluginArrayOutput
	ToScenarioPluginArrayOutputWithContext(context.Context) ScenarioPluginArrayOutput
}

type ScenarioPluginArray []ScenarioPluginInput

func (ScenarioPluginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScenarioPlugin)(nil)).Elem()
}

func (i ScenarioPluginArray) ToScenarioPluginArrayOutput() ScenarioPluginArrayOutput {
	return i.ToScenarioPluginArrayOutputWithContext(context.Background())
}

func (i ScenarioPluginArray) ToScenarioPluginArrayOutputWithContext(ctx context.Context) ScenarioPluginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioPluginArrayOutput)
}

type ScenarioPluginOutput struct{ *pulumi.OutputState }

func (ScenarioPluginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioPlugin)(nil)).Elem()
}

func (o ScenarioPluginOutput) ToScenarioPluginOutput() ScenarioPluginOutput {
	return o
}

func (o ScenarioPluginOutput) ToScenarioPluginOutputWithContext(ctx context.Context) ScenarioPluginOutput {
	return o
}

func (o ScenarioPluginOutput) FileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioPlugin) *string { return v.FileId }).(pulumi.StringPtrOutput)
}

func (o ScenarioPluginOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioPlugin) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ScenarioPluginOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScenarioPlugin) *int { return v.Size }).(pulumi.IntPtrOutput)
}

func (o ScenarioPluginOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioPlugin) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ScenarioPluginOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioPlugin) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type ScenarioPluginArrayOutput struct{ *pulumi.OutputState }

func (ScenarioPluginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScenarioPlugin)(nil)).Elem()
}

func (o ScenarioPluginArrayOutput) ToScenarioPluginArrayOutput() ScenarioPluginArrayOutput {
	return o
}

func (o ScenarioPluginArrayOutput) ToScenarioPluginArrayOutputWithContext(ctx context.Context) ScenarioPluginArrayOutput {
	return o
}

func (o ScenarioPluginArrayOutput) Index(i pulumi.IntInput) ScenarioPluginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScenarioPlugin {
		return vs[0].([]ScenarioPlugin)[vs[1].(int)]
	}).(ScenarioPluginOutput)
}

type ScenarioProtocol struct {
	FileId    *string `pulumi:"fileId"`
	Name      *string `pulumi:"name"`
	Size      *int    `pulumi:"size"`
	Type      *string `pulumi:"type"`
	UpdatedAt *string `pulumi:"updatedAt"`
}

// ScenarioProtocolInput is an input type that accepts ScenarioProtocolArgs and ScenarioProtocolOutput values.
// You can construct a concrete instance of `ScenarioProtocolInput` via:
//
//	ScenarioProtocolArgs{...}
type ScenarioProtocolInput interface {
	pulumi.Input

	ToScenarioProtocolOutput() ScenarioProtocolOutput
	ToScenarioProtocolOutputWithContext(context.Context) ScenarioProtocolOutput
}

type ScenarioProtocolArgs struct {
	FileId    pulumi.StringPtrInput `pulumi:"fileId"`
	Name      pulumi.StringPtrInput `pulumi:"name"`
	Size      pulumi.IntPtrInput    `pulumi:"size"`
	Type      pulumi.StringPtrInput `pulumi:"type"`
	UpdatedAt pulumi.StringPtrInput `pulumi:"updatedAt"`
}

func (ScenarioProtocolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioProtocol)(nil)).Elem()
}

func (i ScenarioProtocolArgs) ToScenarioProtocolOutput() ScenarioProtocolOutput {
	return i.ToScenarioProtocolOutputWithContext(context.Background())
}

func (i ScenarioProtocolArgs) ToScenarioProtocolOutputWithContext(ctx context.Context) ScenarioProtocolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioProtocolOutput)
}

// ScenarioProtocolArrayInput is an input type that accepts ScenarioProtocolArray and ScenarioProtocolArrayOutput values.
// You can construct a concrete instance of `ScenarioProtocolArrayInput` via:
//
//	ScenarioProtocolArray{ ScenarioProtocolArgs{...} }
type ScenarioProtocolArrayInput interface {
	pulumi.Input

	ToScenarioProtocolArrayOutput() ScenarioProtocolArrayOutput
	ToScenarioProtocolArrayOutputWithContext(context.Context) ScenarioProtocolArrayOutput
}

type ScenarioProtocolArray []ScenarioProtocolInput

func (ScenarioProtocolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScenarioProtocol)(nil)).Elem()
}

func (i ScenarioProtocolArray) ToScenarioProtocolArrayOutput() ScenarioProtocolArrayOutput {
	return i.ToScenarioProtocolArrayOutputWithContext(context.Background())
}

func (i ScenarioProtocolArray) ToScenarioProtocolArrayOutputWithContext(ctx context.Context) ScenarioProtocolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioProtocolArrayOutput)
}

type ScenarioProtocolOutput struct{ *pulumi.OutputState }

func (ScenarioProtocolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioProtocol)(nil)).Elem()
}

func (o ScenarioProtocolOutput) ToScenarioProtocolOutput() ScenarioProtocolOutput {
	return o
}

func (o ScenarioProtocolOutput) ToScenarioProtocolOutputWithContext(ctx context.Context) ScenarioProtocolOutput {
	return o
}

func (o ScenarioProtocolOutput) FileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioProtocol) *string { return v.FileId }).(pulumi.StringPtrOutput)
}

func (o ScenarioProtocolOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioProtocol) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ScenarioProtocolOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScenarioProtocol) *int { return v.Size }).(pulumi.IntPtrOutput)
}

func (o ScenarioProtocolOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioProtocol) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ScenarioProtocolOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioProtocol) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type ScenarioProtocolArrayOutput struct{ *pulumi.OutputState }

func (ScenarioProtocolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScenarioProtocol)(nil)).Elem()
}

func (o ScenarioProtocolArrayOutput) ToScenarioProtocolArrayOutput() ScenarioProtocolArrayOutput {
	return o
}

func (o ScenarioProtocolArrayOutput) ToScenarioProtocolArrayOutputWithContext(ctx context.Context) ScenarioProtocolArrayOutput {
	return o
}

func (o ScenarioProtocolArrayOutput) Index(i pulumi.IntInput) ScenarioProtocolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScenarioProtocol {
		return vs[0].([]ScenarioProtocol)[vs[1].(int)]
	}).(ScenarioProtocolOutput)
}

type ScenarioRequestFile struct {
	FileId    *string `pulumi:"fileId"`
	Name      *string `pulumi:"name"`
	Size      *int    `pulumi:"size"`
	Type      *string `pulumi:"type"`
	UpdatedAt *string `pulumi:"updatedAt"`
}

// ScenarioRequestFileInput is an input type that accepts ScenarioRequestFileArgs and ScenarioRequestFileOutput values.
// You can construct a concrete instance of `ScenarioRequestFileInput` via:
//
//	ScenarioRequestFileArgs{...}
type ScenarioRequestFileInput interface {
	pulumi.Input

	ToScenarioRequestFileOutput() ScenarioRequestFileOutput
	ToScenarioRequestFileOutputWithContext(context.Context) ScenarioRequestFileOutput
}

type ScenarioRequestFileArgs struct {
	FileId    pulumi.StringPtrInput `pulumi:"fileId"`
	Name      pulumi.StringPtrInput `pulumi:"name"`
	Size      pulumi.IntPtrInput    `pulumi:"size"`
	Type      pulumi.StringPtrInput `pulumi:"type"`
	UpdatedAt pulumi.StringPtrInput `pulumi:"updatedAt"`
}

func (ScenarioRequestFileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioRequestFile)(nil)).Elem()
}

func (i ScenarioRequestFileArgs) ToScenarioRequestFileOutput() ScenarioRequestFileOutput {
	return i.ToScenarioRequestFileOutputWithContext(context.Background())
}

func (i ScenarioRequestFileArgs) ToScenarioRequestFileOutputWithContext(ctx context.Context) ScenarioRequestFileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioRequestFileOutput)
}

// ScenarioRequestFileArrayInput is an input type that accepts ScenarioRequestFileArray and ScenarioRequestFileArrayOutput values.
// You can construct a concrete instance of `ScenarioRequestFileArrayInput` via:
//
//	ScenarioRequestFileArray{ ScenarioRequestFileArgs{...} }
type ScenarioRequestFileArrayInput interface {
	pulumi.Input

	ToScenarioRequestFileArrayOutput() ScenarioRequestFileArrayOutput
	ToScenarioRequestFileArrayOutputWithContext(context.Context) ScenarioRequestFileArrayOutput
}

type ScenarioRequestFileArray []ScenarioRequestFileInput

func (ScenarioRequestFileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScenarioRequestFile)(nil)).Elem()
}

func (i ScenarioRequestFileArray) ToScenarioRequestFileArrayOutput() ScenarioRequestFileArrayOutput {
	return i.ToScenarioRequestFileArrayOutputWithContext(context.Background())
}

func (i ScenarioRequestFileArray) ToScenarioRequestFileArrayOutputWithContext(ctx context.Context) ScenarioRequestFileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioRequestFileArrayOutput)
}

type ScenarioRequestFileOutput struct{ *pulumi.OutputState }

func (ScenarioRequestFileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioRequestFile)(nil)).Elem()
}

func (o ScenarioRequestFileOutput) ToScenarioRequestFileOutput() ScenarioRequestFileOutput {
	return o
}

func (o ScenarioRequestFileOutput) ToScenarioRequestFileOutputWithContext(ctx context.Context) ScenarioRequestFileOutput {
	return o
}

func (o ScenarioRequestFileOutput) FileId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioRequestFile) *string { return v.FileId }).(pulumi.StringPtrOutput)
}

func (o ScenarioRequestFileOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioRequestFile) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ScenarioRequestFileOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScenarioRequestFile) *int { return v.Size }).(pulumi.IntPtrOutput)
}

func (o ScenarioRequestFileOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioRequestFile) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ScenarioRequestFileOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioRequestFile) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type ScenarioRequestFileArrayOutput struct{ *pulumi.OutputState }

func (ScenarioRequestFileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScenarioRequestFile)(nil)).Elem()
}

func (o ScenarioRequestFileArrayOutput) ToScenarioRequestFileArrayOutput() ScenarioRequestFileArrayOutput {
	return o
}

func (o ScenarioRequestFileArrayOutput) ToScenarioRequestFileArrayOutputWithContext(ctx context.Context) ScenarioRequestFileArrayOutput {
	return o
}

func (o ScenarioRequestFileArrayOutput) Index(i pulumi.IntInput) ScenarioRequestFileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScenarioRequestFile {
		return vs[0].([]ScenarioRequestFile)[vs[1].(int)]
	}).(ScenarioRequestFileOutput)
}

type ScenarioSlaPolicy struct {
	AlertChannel *ScenarioSlaPolicyAlertChannel `pulumi:"alertChannel"`
	SlaRules     []ScenarioSlaPolicySlaRule     `pulumi:"slaRules"`
}

// ScenarioSlaPolicyInput is an input type that accepts ScenarioSlaPolicyArgs and ScenarioSlaPolicyOutput values.
// You can construct a concrete instance of `ScenarioSlaPolicyInput` via:
//
//	ScenarioSlaPolicyArgs{...}
type ScenarioSlaPolicyInput interface {
	pulumi.Input

	ToScenarioSlaPolicyOutput() ScenarioSlaPolicyOutput
	ToScenarioSlaPolicyOutputWithContext(context.Context) ScenarioSlaPolicyOutput
}

type ScenarioSlaPolicyArgs struct {
	AlertChannel ScenarioSlaPolicyAlertChannelPtrInput `pulumi:"alertChannel"`
	SlaRules     ScenarioSlaPolicySlaRuleArrayInput    `pulumi:"slaRules"`
}

func (ScenarioSlaPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioSlaPolicy)(nil)).Elem()
}

func (i ScenarioSlaPolicyArgs) ToScenarioSlaPolicyOutput() ScenarioSlaPolicyOutput {
	return i.ToScenarioSlaPolicyOutputWithContext(context.Background())
}

func (i ScenarioSlaPolicyArgs) ToScenarioSlaPolicyOutputWithContext(ctx context.Context) ScenarioSlaPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioSlaPolicyOutput)
}

func (i ScenarioSlaPolicyArgs) ToScenarioSlaPolicyPtrOutput() ScenarioSlaPolicyPtrOutput {
	return i.ToScenarioSlaPolicyPtrOutputWithContext(context.Background())
}

func (i ScenarioSlaPolicyArgs) ToScenarioSlaPolicyPtrOutputWithContext(ctx context.Context) ScenarioSlaPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioSlaPolicyOutput).ToScenarioSlaPolicyPtrOutputWithContext(ctx)
}

// ScenarioSlaPolicyPtrInput is an input type that accepts ScenarioSlaPolicyArgs, ScenarioSlaPolicyPtr and ScenarioSlaPolicyPtrOutput values.
// You can construct a concrete instance of `ScenarioSlaPolicyPtrInput` via:
//
//	        ScenarioSlaPolicyArgs{...}
//
//	or:
//
//	        nil
type ScenarioSlaPolicyPtrInput interface {
	pulumi.Input

	ToScenarioSlaPolicyPtrOutput() ScenarioSlaPolicyPtrOutput
	ToScenarioSlaPolicyPtrOutputWithContext(context.Context) ScenarioSlaPolicyPtrOutput
}

type scenarioSlaPolicyPtrType ScenarioSlaPolicyArgs

func ScenarioSlaPolicyPtr(v *ScenarioSlaPolicyArgs) ScenarioSlaPolicyPtrInput {
	return (*scenarioSlaPolicyPtrType)(v)
}

func (*scenarioSlaPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScenarioSlaPolicy)(nil)).Elem()
}

func (i *scenarioSlaPolicyPtrType) ToScenarioSlaPolicyPtrOutput() ScenarioSlaPolicyPtrOutput {
	return i.ToScenarioSlaPolicyPtrOutputWithContext(context.Background())
}

func (i *scenarioSlaPolicyPtrType) ToScenarioSlaPolicyPtrOutputWithContext(ctx context.Context) ScenarioSlaPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioSlaPolicyPtrOutput)
}

type ScenarioSlaPolicyOutput struct{ *pulumi.OutputState }

func (ScenarioSlaPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioSlaPolicy)(nil)).Elem()
}

func (o ScenarioSlaPolicyOutput) ToScenarioSlaPolicyOutput() ScenarioSlaPolicyOutput {
	return o
}

func (o ScenarioSlaPolicyOutput) ToScenarioSlaPolicyOutputWithContext(ctx context.Context) ScenarioSlaPolicyOutput {
	return o
}

func (o ScenarioSlaPolicyOutput) ToScenarioSlaPolicyPtrOutput() ScenarioSlaPolicyPtrOutput {
	return o.ToScenarioSlaPolicyPtrOutputWithContext(context.Background())
}

func (o ScenarioSlaPolicyOutput) ToScenarioSlaPolicyPtrOutputWithContext(ctx context.Context) ScenarioSlaPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScenarioSlaPolicy) *ScenarioSlaPolicy {
		return &v
	}).(ScenarioSlaPolicyPtrOutput)
}

func (o ScenarioSlaPolicyOutput) AlertChannel() ScenarioSlaPolicyAlertChannelPtrOutput {
	return o.ApplyT(func(v ScenarioSlaPolicy) *ScenarioSlaPolicyAlertChannel { return v.AlertChannel }).(ScenarioSlaPolicyAlertChannelPtrOutput)
}

func (o ScenarioSlaPolicyOutput) SlaRules() ScenarioSlaPolicySlaRuleArrayOutput {
	return o.ApplyT(func(v ScenarioSlaPolicy) []ScenarioSlaPolicySlaRule { return v.SlaRules }).(ScenarioSlaPolicySlaRuleArrayOutput)
}

type ScenarioSlaPolicyPtrOutput struct{ *pulumi.OutputState }

func (ScenarioSlaPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScenarioSlaPolicy)(nil)).Elem()
}

func (o ScenarioSlaPolicyPtrOutput) ToScenarioSlaPolicyPtrOutput() ScenarioSlaPolicyPtrOutput {
	return o
}

func (o ScenarioSlaPolicyPtrOutput) ToScenarioSlaPolicyPtrOutputWithContext(ctx context.Context) ScenarioSlaPolicyPtrOutput {
	return o
}

func (o ScenarioSlaPolicyPtrOutput) Elem() ScenarioSlaPolicyOutput {
	return o.ApplyT(func(v *ScenarioSlaPolicy) ScenarioSlaPolicy {
		if v != nil {
			return *v
		}
		var ret ScenarioSlaPolicy
		return ret
	}).(ScenarioSlaPolicyOutput)
}

func (o ScenarioSlaPolicyPtrOutput) AlertChannel() ScenarioSlaPolicyAlertChannelPtrOutput {
	return o.ApplyT(func(v *ScenarioSlaPolicy) *ScenarioSlaPolicyAlertChannel {
		if v == nil {
			return nil
		}
		return v.AlertChannel
	}).(ScenarioSlaPolicyAlertChannelPtrOutput)
}

func (o ScenarioSlaPolicyPtrOutput) SlaRules() ScenarioSlaPolicySlaRuleArrayOutput {
	return o.ApplyT(func(v *ScenarioSlaPolicy) []ScenarioSlaPolicySlaRule {
		if v == nil {
			return nil
		}
		return v.SlaRules
	}).(ScenarioSlaPolicySlaRuleArrayOutput)
}

type ScenarioSlaPolicyAlertChannel struct {
	AmpConsumerId *string `pulumi:"ampConsumerId"`
	NoticeId      *string `pulumi:"noticeId"`
}

// ScenarioSlaPolicyAlertChannelInput is an input type that accepts ScenarioSlaPolicyAlertChannelArgs and ScenarioSlaPolicyAlertChannelOutput values.
// You can construct a concrete instance of `ScenarioSlaPolicyAlertChannelInput` via:
//
//	ScenarioSlaPolicyAlertChannelArgs{...}
type ScenarioSlaPolicyAlertChannelInput interface {
	pulumi.Input

	ToScenarioSlaPolicyAlertChannelOutput() ScenarioSlaPolicyAlertChannelOutput
	ToScenarioSlaPolicyAlertChannelOutputWithContext(context.Context) ScenarioSlaPolicyAlertChannelOutput
}

type ScenarioSlaPolicyAlertChannelArgs struct {
	AmpConsumerId pulumi.StringPtrInput `pulumi:"ampConsumerId"`
	NoticeId      pulumi.StringPtrInput `pulumi:"noticeId"`
}

func (ScenarioSlaPolicyAlertChannelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioSlaPolicyAlertChannel)(nil)).Elem()
}

func (i ScenarioSlaPolicyAlertChannelArgs) ToScenarioSlaPolicyAlertChannelOutput() ScenarioSlaPolicyAlertChannelOutput {
	return i.ToScenarioSlaPolicyAlertChannelOutputWithContext(context.Background())
}

func (i ScenarioSlaPolicyAlertChannelArgs) ToScenarioSlaPolicyAlertChannelOutputWithContext(ctx context.Context) ScenarioSlaPolicyAlertChannelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioSlaPolicyAlertChannelOutput)
}

func (i ScenarioSlaPolicyAlertChannelArgs) ToScenarioSlaPolicyAlertChannelPtrOutput() ScenarioSlaPolicyAlertChannelPtrOutput {
	return i.ToScenarioSlaPolicyAlertChannelPtrOutputWithContext(context.Background())
}

func (i ScenarioSlaPolicyAlertChannelArgs) ToScenarioSlaPolicyAlertChannelPtrOutputWithContext(ctx context.Context) ScenarioSlaPolicyAlertChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioSlaPolicyAlertChannelOutput).ToScenarioSlaPolicyAlertChannelPtrOutputWithContext(ctx)
}

// ScenarioSlaPolicyAlertChannelPtrInput is an input type that accepts ScenarioSlaPolicyAlertChannelArgs, ScenarioSlaPolicyAlertChannelPtr and ScenarioSlaPolicyAlertChannelPtrOutput values.
// You can construct a concrete instance of `ScenarioSlaPolicyAlertChannelPtrInput` via:
//
//	        ScenarioSlaPolicyAlertChannelArgs{...}
//
//	or:
//
//	        nil
type ScenarioSlaPolicyAlertChannelPtrInput interface {
	pulumi.Input

	ToScenarioSlaPolicyAlertChannelPtrOutput() ScenarioSlaPolicyAlertChannelPtrOutput
	ToScenarioSlaPolicyAlertChannelPtrOutputWithContext(context.Context) ScenarioSlaPolicyAlertChannelPtrOutput
}

type scenarioSlaPolicyAlertChannelPtrType ScenarioSlaPolicyAlertChannelArgs

func ScenarioSlaPolicyAlertChannelPtr(v *ScenarioSlaPolicyAlertChannelArgs) ScenarioSlaPolicyAlertChannelPtrInput {
	return (*scenarioSlaPolicyAlertChannelPtrType)(v)
}

func (*scenarioSlaPolicyAlertChannelPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ScenarioSlaPolicyAlertChannel)(nil)).Elem()
}

func (i *scenarioSlaPolicyAlertChannelPtrType) ToScenarioSlaPolicyAlertChannelPtrOutput() ScenarioSlaPolicyAlertChannelPtrOutput {
	return i.ToScenarioSlaPolicyAlertChannelPtrOutputWithContext(context.Background())
}

func (i *scenarioSlaPolicyAlertChannelPtrType) ToScenarioSlaPolicyAlertChannelPtrOutputWithContext(ctx context.Context) ScenarioSlaPolicyAlertChannelPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioSlaPolicyAlertChannelPtrOutput)
}

type ScenarioSlaPolicyAlertChannelOutput struct{ *pulumi.OutputState }

func (ScenarioSlaPolicyAlertChannelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioSlaPolicyAlertChannel)(nil)).Elem()
}

func (o ScenarioSlaPolicyAlertChannelOutput) ToScenarioSlaPolicyAlertChannelOutput() ScenarioSlaPolicyAlertChannelOutput {
	return o
}

func (o ScenarioSlaPolicyAlertChannelOutput) ToScenarioSlaPolicyAlertChannelOutputWithContext(ctx context.Context) ScenarioSlaPolicyAlertChannelOutput {
	return o
}

func (o ScenarioSlaPolicyAlertChannelOutput) ToScenarioSlaPolicyAlertChannelPtrOutput() ScenarioSlaPolicyAlertChannelPtrOutput {
	return o.ToScenarioSlaPolicyAlertChannelPtrOutputWithContext(context.Background())
}

func (o ScenarioSlaPolicyAlertChannelOutput) ToScenarioSlaPolicyAlertChannelPtrOutputWithContext(ctx context.Context) ScenarioSlaPolicyAlertChannelPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ScenarioSlaPolicyAlertChannel) *ScenarioSlaPolicyAlertChannel {
		return &v
	}).(ScenarioSlaPolicyAlertChannelPtrOutput)
}

func (o ScenarioSlaPolicyAlertChannelOutput) AmpConsumerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioSlaPolicyAlertChannel) *string { return v.AmpConsumerId }).(pulumi.StringPtrOutput)
}

func (o ScenarioSlaPolicyAlertChannelOutput) NoticeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioSlaPolicyAlertChannel) *string { return v.NoticeId }).(pulumi.StringPtrOutput)
}

type ScenarioSlaPolicyAlertChannelPtrOutput struct{ *pulumi.OutputState }

func (ScenarioSlaPolicyAlertChannelPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ScenarioSlaPolicyAlertChannel)(nil)).Elem()
}

func (o ScenarioSlaPolicyAlertChannelPtrOutput) ToScenarioSlaPolicyAlertChannelPtrOutput() ScenarioSlaPolicyAlertChannelPtrOutput {
	return o
}

func (o ScenarioSlaPolicyAlertChannelPtrOutput) ToScenarioSlaPolicyAlertChannelPtrOutputWithContext(ctx context.Context) ScenarioSlaPolicyAlertChannelPtrOutput {
	return o
}

func (o ScenarioSlaPolicyAlertChannelPtrOutput) Elem() ScenarioSlaPolicyAlertChannelOutput {
	return o.ApplyT(func(v *ScenarioSlaPolicyAlertChannel) ScenarioSlaPolicyAlertChannel {
		if v != nil {
			return *v
		}
		var ret ScenarioSlaPolicyAlertChannel
		return ret
	}).(ScenarioSlaPolicyAlertChannelOutput)
}

func (o ScenarioSlaPolicyAlertChannelPtrOutput) AmpConsumerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScenarioSlaPolicyAlertChannel) *string {
		if v == nil {
			return nil
		}
		return v.AmpConsumerId
	}).(pulumi.StringPtrOutput)
}

func (o ScenarioSlaPolicyAlertChannelPtrOutput) NoticeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ScenarioSlaPolicyAlertChannel) *string {
		if v == nil {
			return nil
		}
		return v.NoticeId
	}).(pulumi.StringPtrOutput)
}

type ScenarioSlaPolicySlaRule struct {
	AbortFlag    *bool                                 `pulumi:"abortFlag"`
	Aggregation  *string                               `pulumi:"aggregation"`
	Condition    *string                               `pulumi:"condition"`
	For          *string                               `pulumi:"for"`
	LabelFilters []ScenarioSlaPolicySlaRuleLabelFilter `pulumi:"labelFilters"`
	Metric       *string                               `pulumi:"metric"`
	Value        *float64                              `pulumi:"value"`
}

// ScenarioSlaPolicySlaRuleInput is an input type that accepts ScenarioSlaPolicySlaRuleArgs and ScenarioSlaPolicySlaRuleOutput values.
// You can construct a concrete instance of `ScenarioSlaPolicySlaRuleInput` via:
//
//	ScenarioSlaPolicySlaRuleArgs{...}
type ScenarioSlaPolicySlaRuleInput interface {
	pulumi.Input

	ToScenarioSlaPolicySlaRuleOutput() ScenarioSlaPolicySlaRuleOutput
	ToScenarioSlaPolicySlaRuleOutputWithContext(context.Context) ScenarioSlaPolicySlaRuleOutput
}

type ScenarioSlaPolicySlaRuleArgs struct {
	AbortFlag    pulumi.BoolPtrInput                           `pulumi:"abortFlag"`
	Aggregation  pulumi.StringPtrInput                         `pulumi:"aggregation"`
	Condition    pulumi.StringPtrInput                         `pulumi:"condition"`
	For          pulumi.StringPtrInput                         `pulumi:"for"`
	LabelFilters ScenarioSlaPolicySlaRuleLabelFilterArrayInput `pulumi:"labelFilters"`
	Metric       pulumi.StringPtrInput                         `pulumi:"metric"`
	Value        pulumi.Float64PtrInput                        `pulumi:"value"`
}

func (ScenarioSlaPolicySlaRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioSlaPolicySlaRule)(nil)).Elem()
}

func (i ScenarioSlaPolicySlaRuleArgs) ToScenarioSlaPolicySlaRuleOutput() ScenarioSlaPolicySlaRuleOutput {
	return i.ToScenarioSlaPolicySlaRuleOutputWithContext(context.Background())
}

func (i ScenarioSlaPolicySlaRuleArgs) ToScenarioSlaPolicySlaRuleOutputWithContext(ctx context.Context) ScenarioSlaPolicySlaRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioSlaPolicySlaRuleOutput)
}

// ScenarioSlaPolicySlaRuleArrayInput is an input type that accepts ScenarioSlaPolicySlaRuleArray and ScenarioSlaPolicySlaRuleArrayOutput values.
// You can construct a concrete instance of `ScenarioSlaPolicySlaRuleArrayInput` via:
//
//	ScenarioSlaPolicySlaRuleArray{ ScenarioSlaPolicySlaRuleArgs{...} }
type ScenarioSlaPolicySlaRuleArrayInput interface {
	pulumi.Input

	ToScenarioSlaPolicySlaRuleArrayOutput() ScenarioSlaPolicySlaRuleArrayOutput
	ToScenarioSlaPolicySlaRuleArrayOutputWithContext(context.Context) ScenarioSlaPolicySlaRuleArrayOutput
}

type ScenarioSlaPolicySlaRuleArray []ScenarioSlaPolicySlaRuleInput

func (ScenarioSlaPolicySlaRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScenarioSlaPolicySlaRule)(nil)).Elem()
}

func (i ScenarioSlaPolicySlaRuleArray) ToScenarioSlaPolicySlaRuleArrayOutput() ScenarioSlaPolicySlaRuleArrayOutput {
	return i.ToScenarioSlaPolicySlaRuleArrayOutputWithContext(context.Background())
}

func (i ScenarioSlaPolicySlaRuleArray) ToScenarioSlaPolicySlaRuleArrayOutputWithContext(ctx context.Context) ScenarioSlaPolicySlaRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioSlaPolicySlaRuleArrayOutput)
}

type ScenarioSlaPolicySlaRuleOutput struct{ *pulumi.OutputState }

func (ScenarioSlaPolicySlaRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioSlaPolicySlaRule)(nil)).Elem()
}

func (o ScenarioSlaPolicySlaRuleOutput) ToScenarioSlaPolicySlaRuleOutput() ScenarioSlaPolicySlaRuleOutput {
	return o
}

func (o ScenarioSlaPolicySlaRuleOutput) ToScenarioSlaPolicySlaRuleOutputWithContext(ctx context.Context) ScenarioSlaPolicySlaRuleOutput {
	return o
}

func (o ScenarioSlaPolicySlaRuleOutput) AbortFlag() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ScenarioSlaPolicySlaRule) *bool { return v.AbortFlag }).(pulumi.BoolPtrOutput)
}

func (o ScenarioSlaPolicySlaRuleOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioSlaPolicySlaRule) *string { return v.Aggregation }).(pulumi.StringPtrOutput)
}

func (o ScenarioSlaPolicySlaRuleOutput) Condition() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioSlaPolicySlaRule) *string { return v.Condition }).(pulumi.StringPtrOutput)
}

func (o ScenarioSlaPolicySlaRuleOutput) For() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioSlaPolicySlaRule) *string { return v.For }).(pulumi.StringPtrOutput)
}

func (o ScenarioSlaPolicySlaRuleOutput) LabelFilters() ScenarioSlaPolicySlaRuleLabelFilterArrayOutput {
	return o.ApplyT(func(v ScenarioSlaPolicySlaRule) []ScenarioSlaPolicySlaRuleLabelFilter { return v.LabelFilters }).(ScenarioSlaPolicySlaRuleLabelFilterArrayOutput)
}

func (o ScenarioSlaPolicySlaRuleOutput) Metric() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioSlaPolicySlaRule) *string { return v.Metric }).(pulumi.StringPtrOutput)
}

func (o ScenarioSlaPolicySlaRuleOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v ScenarioSlaPolicySlaRule) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

type ScenarioSlaPolicySlaRuleArrayOutput struct{ *pulumi.OutputState }

func (ScenarioSlaPolicySlaRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScenarioSlaPolicySlaRule)(nil)).Elem()
}

func (o ScenarioSlaPolicySlaRuleArrayOutput) ToScenarioSlaPolicySlaRuleArrayOutput() ScenarioSlaPolicySlaRuleArrayOutput {
	return o
}

func (o ScenarioSlaPolicySlaRuleArrayOutput) ToScenarioSlaPolicySlaRuleArrayOutputWithContext(ctx context.Context) ScenarioSlaPolicySlaRuleArrayOutput {
	return o
}

func (o ScenarioSlaPolicySlaRuleArrayOutput) Index(i pulumi.IntInput) ScenarioSlaPolicySlaRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScenarioSlaPolicySlaRule {
		return vs[0].([]ScenarioSlaPolicySlaRule)[vs[1].(int)]
	}).(ScenarioSlaPolicySlaRuleOutput)
}

type ScenarioSlaPolicySlaRuleLabelFilter struct {
	LabelName  *string `pulumi:"labelName"`
	LabelValue *string `pulumi:"labelValue"`
}

// ScenarioSlaPolicySlaRuleLabelFilterInput is an input type that accepts ScenarioSlaPolicySlaRuleLabelFilterArgs and ScenarioSlaPolicySlaRuleLabelFilterOutput values.
// You can construct a concrete instance of `ScenarioSlaPolicySlaRuleLabelFilterInput` via:
//
//	ScenarioSlaPolicySlaRuleLabelFilterArgs{...}
type ScenarioSlaPolicySlaRuleLabelFilterInput interface {
	pulumi.Input

	ToScenarioSlaPolicySlaRuleLabelFilterOutput() ScenarioSlaPolicySlaRuleLabelFilterOutput
	ToScenarioSlaPolicySlaRuleLabelFilterOutputWithContext(context.Context) ScenarioSlaPolicySlaRuleLabelFilterOutput
}

type ScenarioSlaPolicySlaRuleLabelFilterArgs struct {
	LabelName  pulumi.StringPtrInput `pulumi:"labelName"`
	LabelValue pulumi.StringPtrInput `pulumi:"labelValue"`
}

func (ScenarioSlaPolicySlaRuleLabelFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioSlaPolicySlaRuleLabelFilter)(nil)).Elem()
}

func (i ScenarioSlaPolicySlaRuleLabelFilterArgs) ToScenarioSlaPolicySlaRuleLabelFilterOutput() ScenarioSlaPolicySlaRuleLabelFilterOutput {
	return i.ToScenarioSlaPolicySlaRuleLabelFilterOutputWithContext(context.Background())
}

func (i ScenarioSlaPolicySlaRuleLabelFilterArgs) ToScenarioSlaPolicySlaRuleLabelFilterOutputWithContext(ctx context.Context) ScenarioSlaPolicySlaRuleLabelFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioSlaPolicySlaRuleLabelFilterOutput)
}

// ScenarioSlaPolicySlaRuleLabelFilterArrayInput is an input type that accepts ScenarioSlaPolicySlaRuleLabelFilterArray and ScenarioSlaPolicySlaRuleLabelFilterArrayOutput values.
// You can construct a concrete instance of `ScenarioSlaPolicySlaRuleLabelFilterArrayInput` via:
//
//	ScenarioSlaPolicySlaRuleLabelFilterArray{ ScenarioSlaPolicySlaRuleLabelFilterArgs{...} }
type ScenarioSlaPolicySlaRuleLabelFilterArrayInput interface {
	pulumi.Input

	ToScenarioSlaPolicySlaRuleLabelFilterArrayOutput() ScenarioSlaPolicySlaRuleLabelFilterArrayOutput
	ToScenarioSlaPolicySlaRuleLabelFilterArrayOutputWithContext(context.Context) ScenarioSlaPolicySlaRuleLabelFilterArrayOutput
}

type ScenarioSlaPolicySlaRuleLabelFilterArray []ScenarioSlaPolicySlaRuleLabelFilterInput

func (ScenarioSlaPolicySlaRuleLabelFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScenarioSlaPolicySlaRuleLabelFilter)(nil)).Elem()
}

func (i ScenarioSlaPolicySlaRuleLabelFilterArray) ToScenarioSlaPolicySlaRuleLabelFilterArrayOutput() ScenarioSlaPolicySlaRuleLabelFilterArrayOutput {
	return i.ToScenarioSlaPolicySlaRuleLabelFilterArrayOutputWithContext(context.Background())
}

func (i ScenarioSlaPolicySlaRuleLabelFilterArray) ToScenarioSlaPolicySlaRuleLabelFilterArrayOutputWithContext(ctx context.Context) ScenarioSlaPolicySlaRuleLabelFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioSlaPolicySlaRuleLabelFilterArrayOutput)
}

type ScenarioSlaPolicySlaRuleLabelFilterOutput struct{ *pulumi.OutputState }

func (ScenarioSlaPolicySlaRuleLabelFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioSlaPolicySlaRuleLabelFilter)(nil)).Elem()
}

func (o ScenarioSlaPolicySlaRuleLabelFilterOutput) ToScenarioSlaPolicySlaRuleLabelFilterOutput() ScenarioSlaPolicySlaRuleLabelFilterOutput {
	return o
}

func (o ScenarioSlaPolicySlaRuleLabelFilterOutput) ToScenarioSlaPolicySlaRuleLabelFilterOutputWithContext(ctx context.Context) ScenarioSlaPolicySlaRuleLabelFilterOutput {
	return o
}

func (o ScenarioSlaPolicySlaRuleLabelFilterOutput) LabelName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioSlaPolicySlaRuleLabelFilter) *string { return v.LabelName }).(pulumi.StringPtrOutput)
}

func (o ScenarioSlaPolicySlaRuleLabelFilterOutput) LabelValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioSlaPolicySlaRuleLabelFilter) *string { return v.LabelValue }).(pulumi.StringPtrOutput)
}

type ScenarioSlaPolicySlaRuleLabelFilterArrayOutput struct{ *pulumi.OutputState }

func (ScenarioSlaPolicySlaRuleLabelFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScenarioSlaPolicySlaRuleLabelFilter)(nil)).Elem()
}

func (o ScenarioSlaPolicySlaRuleLabelFilterArrayOutput) ToScenarioSlaPolicySlaRuleLabelFilterArrayOutput() ScenarioSlaPolicySlaRuleLabelFilterArrayOutput {
	return o
}

func (o ScenarioSlaPolicySlaRuleLabelFilterArrayOutput) ToScenarioSlaPolicySlaRuleLabelFilterArrayOutputWithContext(ctx context.Context) ScenarioSlaPolicySlaRuleLabelFilterArrayOutput {
	return o
}

func (o ScenarioSlaPolicySlaRuleLabelFilterArrayOutput) Index(i pulumi.IntInput) ScenarioSlaPolicySlaRuleLabelFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScenarioSlaPolicySlaRuleLabelFilter {
		return vs[0].([]ScenarioSlaPolicySlaRuleLabelFilter)[vs[1].(int)]
	}).(ScenarioSlaPolicySlaRuleLabelFilterOutput)
}

type ScenarioTestScript struct {
	EncodedContent     *string `pulumi:"encodedContent"`
	EncodedHttpArchive *string `pulumi:"encodedHttpArchive"`
	LoadWeight         *int    `pulumi:"loadWeight"`
	Name               *string `pulumi:"name"`
	Size               *int    `pulumi:"size"`
	Type               *string `pulumi:"type"`
	UpdatedAt          *string `pulumi:"updatedAt"`
}

// ScenarioTestScriptInput is an input type that accepts ScenarioTestScriptArgs and ScenarioTestScriptOutput values.
// You can construct a concrete instance of `ScenarioTestScriptInput` via:
//
//	ScenarioTestScriptArgs{...}
type ScenarioTestScriptInput interface {
	pulumi.Input

	ToScenarioTestScriptOutput() ScenarioTestScriptOutput
	ToScenarioTestScriptOutputWithContext(context.Context) ScenarioTestScriptOutput
}

type ScenarioTestScriptArgs struct {
	EncodedContent     pulumi.StringPtrInput `pulumi:"encodedContent"`
	EncodedHttpArchive pulumi.StringPtrInput `pulumi:"encodedHttpArchive"`
	LoadWeight         pulumi.IntPtrInput    `pulumi:"loadWeight"`
	Name               pulumi.StringPtrInput `pulumi:"name"`
	Size               pulumi.IntPtrInput    `pulumi:"size"`
	Type               pulumi.StringPtrInput `pulumi:"type"`
	UpdatedAt          pulumi.StringPtrInput `pulumi:"updatedAt"`
}

func (ScenarioTestScriptArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioTestScript)(nil)).Elem()
}

func (i ScenarioTestScriptArgs) ToScenarioTestScriptOutput() ScenarioTestScriptOutput {
	return i.ToScenarioTestScriptOutputWithContext(context.Background())
}

func (i ScenarioTestScriptArgs) ToScenarioTestScriptOutputWithContext(ctx context.Context) ScenarioTestScriptOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioTestScriptOutput)
}

// ScenarioTestScriptArrayInput is an input type that accepts ScenarioTestScriptArray and ScenarioTestScriptArrayOutput values.
// You can construct a concrete instance of `ScenarioTestScriptArrayInput` via:
//
//	ScenarioTestScriptArray{ ScenarioTestScriptArgs{...} }
type ScenarioTestScriptArrayInput interface {
	pulumi.Input

	ToScenarioTestScriptArrayOutput() ScenarioTestScriptArrayOutput
	ToScenarioTestScriptArrayOutputWithContext(context.Context) ScenarioTestScriptArrayOutput
}

type ScenarioTestScriptArray []ScenarioTestScriptInput

func (ScenarioTestScriptArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScenarioTestScript)(nil)).Elem()
}

func (i ScenarioTestScriptArray) ToScenarioTestScriptArrayOutput() ScenarioTestScriptArrayOutput {
	return i.ToScenarioTestScriptArrayOutputWithContext(context.Background())
}

func (i ScenarioTestScriptArray) ToScenarioTestScriptArrayOutputWithContext(ctx context.Context) ScenarioTestScriptArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ScenarioTestScriptArrayOutput)
}

type ScenarioTestScriptOutput struct{ *pulumi.OutputState }

func (ScenarioTestScriptOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ScenarioTestScript)(nil)).Elem()
}

func (o ScenarioTestScriptOutput) ToScenarioTestScriptOutput() ScenarioTestScriptOutput {
	return o
}

func (o ScenarioTestScriptOutput) ToScenarioTestScriptOutputWithContext(ctx context.Context) ScenarioTestScriptOutput {
	return o
}

func (o ScenarioTestScriptOutput) EncodedContent() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioTestScript) *string { return v.EncodedContent }).(pulumi.StringPtrOutput)
}

func (o ScenarioTestScriptOutput) EncodedHttpArchive() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioTestScript) *string { return v.EncodedHttpArchive }).(pulumi.StringPtrOutput)
}

func (o ScenarioTestScriptOutput) LoadWeight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScenarioTestScript) *int { return v.LoadWeight }).(pulumi.IntPtrOutput)
}

func (o ScenarioTestScriptOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioTestScript) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ScenarioTestScriptOutput) Size() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ScenarioTestScript) *int { return v.Size }).(pulumi.IntPtrOutput)
}

func (o ScenarioTestScriptOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioTestScript) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o ScenarioTestScriptOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ScenarioTestScript) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type ScenarioTestScriptArrayOutput struct{ *pulumi.OutputState }

func (ScenarioTestScriptArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ScenarioTestScript)(nil)).Elem()
}

func (o ScenarioTestScriptArrayOutput) ToScenarioTestScriptArrayOutput() ScenarioTestScriptArrayOutput {
	return o
}

func (o ScenarioTestScriptArrayOutput) ToScenarioTestScriptArrayOutputWithContext(ctx context.Context) ScenarioTestScriptArrayOutput {
	return o
}

func (o ScenarioTestScriptArrayOutput) Index(i pulumi.IntInput) ScenarioTestScriptOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ScenarioTestScript {
		return vs[0].([]ScenarioTestScript)[vs[1].(int)]
	}).(ScenarioTestScriptOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FileFileInfoInput)(nil)).Elem(), FileFileInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FileFileInfoArrayInput)(nil)).Elem(), FileFileInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDatasetInput)(nil)).Elem(), JobDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDatasetArrayInput)(nil)).Elem(), JobDatasetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDomainNameConfigInput)(nil)).Elem(), JobDomainNameConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDomainNameConfigArrayInput)(nil)).Elem(), JobDomainNameConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDomainNameConfigDnsConfigInput)(nil)).Elem(), JobDomainNameConfigDnsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDomainNameConfigDnsConfigPtrInput)(nil)).Elem(), JobDomainNameConfigDnsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDomainNameConfigHostAliasInput)(nil)).Elem(), JobDomainNameConfigHostAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobDomainNameConfigHostAliasArrayInput)(nil)).Elem(), JobDomainNameConfigHostAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobLoadInput)(nil)).Elem(), JobLoadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobLoadArrayInput)(nil)).Elem(), JobLoadArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobLoadGeoRegionsLoadDistributionInput)(nil)).Elem(), JobLoadGeoRegionsLoadDistributionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobLoadGeoRegionsLoadDistributionArrayInput)(nil)).Elem(), JobLoadGeoRegionsLoadDistributionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobLoadLoadSpecInput)(nil)).Elem(), JobLoadLoadSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobLoadLoadSpecPtrInput)(nil)).Elem(), JobLoadLoadSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobLoadLoadSpecConcurrencyInput)(nil)).Elem(), JobLoadLoadSpecConcurrencyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobLoadLoadSpecConcurrencyPtrInput)(nil)).Elem(), JobLoadLoadSpecConcurrencyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobLoadLoadSpecConcurrencyStageInput)(nil)).Elem(), JobLoadLoadSpecConcurrencyStageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobLoadLoadSpecConcurrencyStageArrayInput)(nil)).Elem(), JobLoadLoadSpecConcurrencyStageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobLoadLoadSpecRequestsPerSecondInput)(nil)).Elem(), JobLoadLoadSpecRequestsPerSecondArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobLoadLoadSpecRequestsPerSecondPtrInput)(nil)).Elem(), JobLoadLoadSpecRequestsPerSecondArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobLoadLoadSpecScriptOriginInput)(nil)).Elem(), JobLoadLoadSpecScriptOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobLoadLoadSpecScriptOriginPtrInput)(nil)).Elem(), JobLoadLoadSpecScriptOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobLoadVpcLoadDistributionInput)(nil)).Elem(), JobLoadVpcLoadDistributionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobLoadVpcLoadDistributionPtrInput)(nil)).Elem(), JobLoadVpcLoadDistributionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobPluginInput)(nil)).Elem(), JobPluginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobPluginArrayInput)(nil)).Elem(), JobPluginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobProtocolInput)(nil)).Elem(), JobProtocolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobProtocolArrayInput)(nil)).Elem(), JobProtocolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobRequestFileInput)(nil)).Elem(), JobRequestFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobRequestFileArrayInput)(nil)).Elem(), JobRequestFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobTestScriptInput)(nil)).Elem(), JobTestScriptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobTestScriptArrayInput)(nil)).Elem(), JobTestScriptArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTagInput)(nil)).Elem(), ProjectTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectTagArrayInput)(nil)).Elem(), ProjectTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioDatasetInput)(nil)).Elem(), ScenarioDatasetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioDatasetArrayInput)(nil)).Elem(), ScenarioDatasetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioDomainNameConfigInput)(nil)).Elem(), ScenarioDomainNameConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioDomainNameConfigPtrInput)(nil)).Elem(), ScenarioDomainNameConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioDomainNameConfigDnsConfigInput)(nil)).Elem(), ScenarioDomainNameConfigDnsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioDomainNameConfigDnsConfigPtrInput)(nil)).Elem(), ScenarioDomainNameConfigDnsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioDomainNameConfigHostAliasInput)(nil)).Elem(), ScenarioDomainNameConfigHostAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioDomainNameConfigHostAliasArrayInput)(nil)).Elem(), ScenarioDomainNameConfigHostAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioLoadInput)(nil)).Elem(), ScenarioLoadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioLoadPtrInput)(nil)).Elem(), ScenarioLoadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioLoadGeoRegionsLoadDistributionInput)(nil)).Elem(), ScenarioLoadGeoRegionsLoadDistributionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioLoadGeoRegionsLoadDistributionArrayInput)(nil)).Elem(), ScenarioLoadGeoRegionsLoadDistributionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioLoadLoadSpecInput)(nil)).Elem(), ScenarioLoadLoadSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioLoadLoadSpecPtrInput)(nil)).Elem(), ScenarioLoadLoadSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioLoadLoadSpecConcurrencyInput)(nil)).Elem(), ScenarioLoadLoadSpecConcurrencyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioLoadLoadSpecConcurrencyPtrInput)(nil)).Elem(), ScenarioLoadLoadSpecConcurrencyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioLoadLoadSpecConcurrencyStageInput)(nil)).Elem(), ScenarioLoadLoadSpecConcurrencyStageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioLoadLoadSpecConcurrencyStageArrayInput)(nil)).Elem(), ScenarioLoadLoadSpecConcurrencyStageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioLoadLoadSpecRequestsPerSecondInput)(nil)).Elem(), ScenarioLoadLoadSpecRequestsPerSecondArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioLoadLoadSpecRequestsPerSecondPtrInput)(nil)).Elem(), ScenarioLoadLoadSpecRequestsPerSecondArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioLoadLoadSpecScriptOriginInput)(nil)).Elem(), ScenarioLoadLoadSpecScriptOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioLoadLoadSpecScriptOriginPtrInput)(nil)).Elem(), ScenarioLoadLoadSpecScriptOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioLoadVpcLoadDistributionInput)(nil)).Elem(), ScenarioLoadVpcLoadDistributionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioLoadVpcLoadDistributionPtrInput)(nil)).Elem(), ScenarioLoadVpcLoadDistributionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioPluginInput)(nil)).Elem(), ScenarioPluginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioPluginArrayInput)(nil)).Elem(), ScenarioPluginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioProtocolInput)(nil)).Elem(), ScenarioProtocolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioProtocolArrayInput)(nil)).Elem(), ScenarioProtocolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioRequestFileInput)(nil)).Elem(), ScenarioRequestFileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioRequestFileArrayInput)(nil)).Elem(), ScenarioRequestFileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioSlaPolicyInput)(nil)).Elem(), ScenarioSlaPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioSlaPolicyPtrInput)(nil)).Elem(), ScenarioSlaPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioSlaPolicyAlertChannelInput)(nil)).Elem(), ScenarioSlaPolicyAlertChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioSlaPolicyAlertChannelPtrInput)(nil)).Elem(), ScenarioSlaPolicyAlertChannelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioSlaPolicySlaRuleInput)(nil)).Elem(), ScenarioSlaPolicySlaRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioSlaPolicySlaRuleArrayInput)(nil)).Elem(), ScenarioSlaPolicySlaRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioSlaPolicySlaRuleLabelFilterInput)(nil)).Elem(), ScenarioSlaPolicySlaRuleLabelFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioSlaPolicySlaRuleLabelFilterArrayInput)(nil)).Elem(), ScenarioSlaPolicySlaRuleLabelFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioTestScriptInput)(nil)).Elem(), ScenarioTestScriptArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ScenarioTestScriptArrayInput)(nil)).Elem(), ScenarioTestScriptArray{})
	pulumi.RegisterOutputType(FileFileInfoOutput{})
	pulumi.RegisterOutputType(FileFileInfoArrayOutput{})
	pulumi.RegisterOutputType(JobDatasetOutput{})
	pulumi.RegisterOutputType(JobDatasetArrayOutput{})
	pulumi.RegisterOutputType(JobDomainNameConfigOutput{})
	pulumi.RegisterOutputType(JobDomainNameConfigArrayOutput{})
	pulumi.RegisterOutputType(JobDomainNameConfigDnsConfigOutput{})
	pulumi.RegisterOutputType(JobDomainNameConfigDnsConfigPtrOutput{})
	pulumi.RegisterOutputType(JobDomainNameConfigHostAliasOutput{})
	pulumi.RegisterOutputType(JobDomainNameConfigHostAliasArrayOutput{})
	pulumi.RegisterOutputType(JobLoadOutput{})
	pulumi.RegisterOutputType(JobLoadArrayOutput{})
	pulumi.RegisterOutputType(JobLoadGeoRegionsLoadDistributionOutput{})
	pulumi.RegisterOutputType(JobLoadGeoRegionsLoadDistributionArrayOutput{})
	pulumi.RegisterOutputType(JobLoadLoadSpecOutput{})
	pulumi.RegisterOutputType(JobLoadLoadSpecPtrOutput{})
	pulumi.RegisterOutputType(JobLoadLoadSpecConcurrencyOutput{})
	pulumi.RegisterOutputType(JobLoadLoadSpecConcurrencyPtrOutput{})
	pulumi.RegisterOutputType(JobLoadLoadSpecConcurrencyStageOutput{})
	pulumi.RegisterOutputType(JobLoadLoadSpecConcurrencyStageArrayOutput{})
	pulumi.RegisterOutputType(JobLoadLoadSpecRequestsPerSecondOutput{})
	pulumi.RegisterOutputType(JobLoadLoadSpecRequestsPerSecondPtrOutput{})
	pulumi.RegisterOutputType(JobLoadLoadSpecScriptOriginOutput{})
	pulumi.RegisterOutputType(JobLoadLoadSpecScriptOriginPtrOutput{})
	pulumi.RegisterOutputType(JobLoadVpcLoadDistributionOutput{})
	pulumi.RegisterOutputType(JobLoadVpcLoadDistributionPtrOutput{})
	pulumi.RegisterOutputType(JobPluginOutput{})
	pulumi.RegisterOutputType(JobPluginArrayOutput{})
	pulumi.RegisterOutputType(JobProtocolOutput{})
	pulumi.RegisterOutputType(JobProtocolArrayOutput{})
	pulumi.RegisterOutputType(JobRequestFileOutput{})
	pulumi.RegisterOutputType(JobRequestFileArrayOutput{})
	pulumi.RegisterOutputType(JobTestScriptOutput{})
	pulumi.RegisterOutputType(JobTestScriptArrayOutput{})
	pulumi.RegisterOutputType(ProjectTagOutput{})
	pulumi.RegisterOutputType(ProjectTagArrayOutput{})
	pulumi.RegisterOutputType(ScenarioDatasetOutput{})
	pulumi.RegisterOutputType(ScenarioDatasetArrayOutput{})
	pulumi.RegisterOutputType(ScenarioDomainNameConfigOutput{})
	pulumi.RegisterOutputType(ScenarioDomainNameConfigPtrOutput{})
	pulumi.RegisterOutputType(ScenarioDomainNameConfigDnsConfigOutput{})
	pulumi.RegisterOutputType(ScenarioDomainNameConfigDnsConfigPtrOutput{})
	pulumi.RegisterOutputType(ScenarioDomainNameConfigHostAliasOutput{})
	pulumi.RegisterOutputType(ScenarioDomainNameConfigHostAliasArrayOutput{})
	pulumi.RegisterOutputType(ScenarioLoadOutput{})
	pulumi.RegisterOutputType(ScenarioLoadPtrOutput{})
	pulumi.RegisterOutputType(ScenarioLoadGeoRegionsLoadDistributionOutput{})
	pulumi.RegisterOutputType(ScenarioLoadGeoRegionsLoadDistributionArrayOutput{})
	pulumi.RegisterOutputType(ScenarioLoadLoadSpecOutput{})
	pulumi.RegisterOutputType(ScenarioLoadLoadSpecPtrOutput{})
	pulumi.RegisterOutputType(ScenarioLoadLoadSpecConcurrencyOutput{})
	pulumi.RegisterOutputType(ScenarioLoadLoadSpecConcurrencyPtrOutput{})
	pulumi.RegisterOutputType(ScenarioLoadLoadSpecConcurrencyStageOutput{})
	pulumi.RegisterOutputType(ScenarioLoadLoadSpecConcurrencyStageArrayOutput{})
	pulumi.RegisterOutputType(ScenarioLoadLoadSpecRequestsPerSecondOutput{})
	pulumi.RegisterOutputType(ScenarioLoadLoadSpecRequestsPerSecondPtrOutput{})
	pulumi.RegisterOutputType(ScenarioLoadLoadSpecScriptOriginOutput{})
	pulumi.RegisterOutputType(ScenarioLoadLoadSpecScriptOriginPtrOutput{})
	pulumi.RegisterOutputType(ScenarioLoadVpcLoadDistributionOutput{})
	pulumi.RegisterOutputType(ScenarioLoadVpcLoadDistributionPtrOutput{})
	pulumi.RegisterOutputType(ScenarioPluginOutput{})
	pulumi.RegisterOutputType(ScenarioPluginArrayOutput{})
	pulumi.RegisterOutputType(ScenarioProtocolOutput{})
	pulumi.RegisterOutputType(ScenarioProtocolArrayOutput{})
	pulumi.RegisterOutputType(ScenarioRequestFileOutput{})
	pulumi.RegisterOutputType(ScenarioRequestFileArrayOutput{})
	pulumi.RegisterOutputType(ScenarioSlaPolicyOutput{})
	pulumi.RegisterOutputType(ScenarioSlaPolicyPtrOutput{})
	pulumi.RegisterOutputType(ScenarioSlaPolicyAlertChannelOutput{})
	pulumi.RegisterOutputType(ScenarioSlaPolicyAlertChannelPtrOutput{})
	pulumi.RegisterOutputType(ScenarioSlaPolicySlaRuleOutput{})
	pulumi.RegisterOutputType(ScenarioSlaPolicySlaRuleArrayOutput{})
	pulumi.RegisterOutputType(ScenarioSlaPolicySlaRuleLabelFilterOutput{})
	pulumi.RegisterOutputType(ScenarioSlaPolicySlaRuleLabelFilterArrayOutput{})
	pulumi.RegisterOutputType(ScenarioTestScriptOutput{})
	pulumi.RegisterOutputType(ScenarioTestScriptArrayOutput{})
}
