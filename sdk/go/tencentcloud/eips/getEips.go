// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package eips

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetEips(ctx *pulumi.Context, args *GetEipsArgs, opts ...pulumi.InvokeOption) (*GetEipsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetEipsResult
	err := ctx.Invoke("tencentcloud:Eips/getEips:getEips", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEips.
type GetEipsArgs struct {
	EipId            *string                `pulumi:"eipId"`
	EipName          *string                `pulumi:"eipName"`
	PublicIp         *string                `pulumi:"publicIp"`
	ResultOutputFile *string                `pulumi:"resultOutputFile"`
	Tags             map[string]interface{} `pulumi:"tags"`
}

// A collection of values returned by getEips.
type GetEipsResult struct {
	EipId    *string          `pulumi:"eipId"`
	EipLists []GetEipsEipList `pulumi:"eipLists"`
	EipName  *string          `pulumi:"eipName"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                 `pulumi:"id"`
	PublicIp         *string                `pulumi:"publicIp"`
	ResultOutputFile *string                `pulumi:"resultOutputFile"`
	Tags             map[string]interface{} `pulumi:"tags"`
}

func GetEipsOutput(ctx *pulumi.Context, args GetEipsOutputArgs, opts ...pulumi.InvokeOption) GetEipsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetEipsResult, error) {
			args := v.(GetEipsArgs)
			r, err := GetEips(ctx, &args, opts...)
			var s GetEipsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetEipsResultOutput)
}

// A collection of arguments for invoking getEips.
type GetEipsOutputArgs struct {
	EipId            pulumi.StringPtrInput `pulumi:"eipId"`
	EipName          pulumi.StringPtrInput `pulumi:"eipName"`
	PublicIp         pulumi.StringPtrInput `pulumi:"publicIp"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	Tags             pulumi.MapInput       `pulumi:"tags"`
}

func (GetEipsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEipsArgs)(nil)).Elem()
}

// A collection of values returned by getEips.
type GetEipsResultOutput struct{ *pulumi.OutputState }

func (GetEipsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetEipsResult)(nil)).Elem()
}

func (o GetEipsResultOutput) ToGetEipsResultOutput() GetEipsResultOutput {
	return o
}

func (o GetEipsResultOutput) ToGetEipsResultOutputWithContext(ctx context.Context) GetEipsResultOutput {
	return o
}

func (o GetEipsResultOutput) EipId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEipsResult) *string { return v.EipId }).(pulumi.StringPtrOutput)
}

func (o GetEipsResultOutput) EipLists() GetEipsEipListArrayOutput {
	return o.ApplyT(func(v GetEipsResult) []GetEipsEipList { return v.EipLists }).(GetEipsEipListArrayOutput)
}

func (o GetEipsResultOutput) EipName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEipsResult) *string { return v.EipName }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetEipsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetEipsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetEipsResultOutput) PublicIp() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEipsResult) *string { return v.PublicIp }).(pulumi.StringPtrOutput)
}

func (o GetEipsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetEipsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetEipsResultOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetEipsResult) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetEipsResultOutput{})
}
