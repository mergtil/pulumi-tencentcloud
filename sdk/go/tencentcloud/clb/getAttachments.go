// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package clb

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetAttachments(ctx *pulumi.Context, args *GetAttachmentsArgs, opts ...pulumi.InvokeOption) (*GetAttachmentsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAttachmentsResult
	err := ctx.Invoke("tencentcloud:Clb/getAttachments:getAttachments", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAttachments.
type GetAttachmentsArgs struct {
	ClbId            string  `pulumi:"clbId"`
	ListenerId       string  `pulumi:"listenerId"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	RuleId           *string `pulumi:"ruleId"`
}

// A collection of values returned by getAttachments.
type GetAttachmentsResult struct {
	AttachmentLists []GetAttachmentsAttachmentList `pulumi:"attachmentLists"`
	ClbId           string                         `pulumi:"clbId"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	ListenerId       string  `pulumi:"listenerId"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	RuleId           *string `pulumi:"ruleId"`
}

func GetAttachmentsOutput(ctx *pulumi.Context, args GetAttachmentsOutputArgs, opts ...pulumi.InvokeOption) GetAttachmentsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAttachmentsResult, error) {
			args := v.(GetAttachmentsArgs)
			r, err := GetAttachments(ctx, &args, opts...)
			var s GetAttachmentsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAttachmentsResultOutput)
}

// A collection of arguments for invoking getAttachments.
type GetAttachmentsOutputArgs struct {
	ClbId            pulumi.StringInput    `pulumi:"clbId"`
	ListenerId       pulumi.StringInput    `pulumi:"listenerId"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	RuleId           pulumi.StringPtrInput `pulumi:"ruleId"`
}

func (GetAttachmentsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttachmentsArgs)(nil)).Elem()
}

// A collection of values returned by getAttachments.
type GetAttachmentsResultOutput struct{ *pulumi.OutputState }

func (GetAttachmentsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttachmentsResult)(nil)).Elem()
}

func (o GetAttachmentsResultOutput) ToGetAttachmentsResultOutput() GetAttachmentsResultOutput {
	return o
}

func (o GetAttachmentsResultOutput) ToGetAttachmentsResultOutputWithContext(ctx context.Context) GetAttachmentsResultOutput {
	return o
}

func (o GetAttachmentsResultOutput) AttachmentLists() GetAttachmentsAttachmentListArrayOutput {
	return o.ApplyT(func(v GetAttachmentsResult) []GetAttachmentsAttachmentList { return v.AttachmentLists }).(GetAttachmentsAttachmentListArrayOutput)
}

func (o GetAttachmentsResultOutput) ClbId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttachmentsResult) string { return v.ClbId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAttachmentsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttachmentsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAttachmentsResultOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttachmentsResult) string { return v.ListenerId }).(pulumi.StringOutput)
}

func (o GetAttachmentsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAttachmentsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetAttachmentsResultOutput) RuleId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAttachmentsResult) *string { return v.RuleId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAttachmentsResultOutput{})
}
