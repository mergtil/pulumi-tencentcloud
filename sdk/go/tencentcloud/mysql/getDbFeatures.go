// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mysql

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetDbFeatures(ctx *pulumi.Context, args *GetDbFeaturesArgs, opts ...pulumi.InvokeOption) (*GetDbFeaturesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDbFeaturesResult
	err := ctx.Invoke("tencentcloud:Mysql/getDbFeatures:getDbFeatures", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDbFeatures.
type GetDbFeaturesArgs struct {
	InstanceId       string  `pulumi:"instanceId"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getDbFeatures.
type GetDbFeaturesResult struct {
	AuditNeedUpgrade      bool   `pulumi:"auditNeedUpgrade"`
	CurrentSubVersion     string `pulumi:"currentSubVersion"`
	EncryptionNeedUpgrade bool   `pulumi:"encryptionNeedUpgrade"`
	// The provider-assigned unique ID for this managed resource.
	Id                        string  `pulumi:"id"`
	InstanceId                string  `pulumi:"instanceId"`
	IsRemoteRo                bool    `pulumi:"isRemoteRo"`
	IsSupportAudit            bool    `pulumi:"isSupportAudit"`
	IsSupportEncryption       bool    `pulumi:"isSupportEncryption"`
	IsSupportUpdateSubVersion bool    `pulumi:"isSupportUpdateSubVersion"`
	MasterRegion              string  `pulumi:"masterRegion"`
	ResultOutputFile          *string `pulumi:"resultOutputFile"`
	TargetSubVersion          string  `pulumi:"targetSubVersion"`
}

func GetDbFeaturesOutput(ctx *pulumi.Context, args GetDbFeaturesOutputArgs, opts ...pulumi.InvokeOption) GetDbFeaturesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDbFeaturesResult, error) {
			args := v.(GetDbFeaturesArgs)
			r, err := GetDbFeatures(ctx, &args, opts...)
			var s GetDbFeaturesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDbFeaturesResultOutput)
}

// A collection of arguments for invoking getDbFeatures.
type GetDbFeaturesOutputArgs struct {
	InstanceId       pulumi.StringInput    `pulumi:"instanceId"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetDbFeaturesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbFeaturesArgs)(nil)).Elem()
}

// A collection of values returned by getDbFeatures.
type GetDbFeaturesResultOutput struct{ *pulumi.OutputState }

func (GetDbFeaturesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDbFeaturesResult)(nil)).Elem()
}

func (o GetDbFeaturesResultOutput) ToGetDbFeaturesResultOutput() GetDbFeaturesResultOutput {
	return o
}

func (o GetDbFeaturesResultOutput) ToGetDbFeaturesResultOutputWithContext(ctx context.Context) GetDbFeaturesResultOutput {
	return o
}

func (o GetDbFeaturesResultOutput) AuditNeedUpgrade() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDbFeaturesResult) bool { return v.AuditNeedUpgrade }).(pulumi.BoolOutput)
}

func (o GetDbFeaturesResultOutput) CurrentSubVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbFeaturesResult) string { return v.CurrentSubVersion }).(pulumi.StringOutput)
}

func (o GetDbFeaturesResultOutput) EncryptionNeedUpgrade() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDbFeaturesResult) bool { return v.EncryptionNeedUpgrade }).(pulumi.BoolOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDbFeaturesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbFeaturesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDbFeaturesResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbFeaturesResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetDbFeaturesResultOutput) IsRemoteRo() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDbFeaturesResult) bool { return v.IsRemoteRo }).(pulumi.BoolOutput)
}

func (o GetDbFeaturesResultOutput) IsSupportAudit() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDbFeaturesResult) bool { return v.IsSupportAudit }).(pulumi.BoolOutput)
}

func (o GetDbFeaturesResultOutput) IsSupportEncryption() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDbFeaturesResult) bool { return v.IsSupportEncryption }).(pulumi.BoolOutput)
}

func (o GetDbFeaturesResultOutput) IsSupportUpdateSubVersion() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDbFeaturesResult) bool { return v.IsSupportUpdateSubVersion }).(pulumi.BoolOutput)
}

func (o GetDbFeaturesResultOutput) MasterRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbFeaturesResult) string { return v.MasterRegion }).(pulumi.StringOutput)
}

func (o GetDbFeaturesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDbFeaturesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetDbFeaturesResultOutput) TargetSubVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetDbFeaturesResult) string { return v.TargetSubVersion }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDbFeaturesResultOutput{})
}
