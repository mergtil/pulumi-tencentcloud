// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mysql

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetInstanceInfo(ctx *pulumi.Context, args *GetInstanceInfoArgs, opts ...pulumi.InvokeOption) (*GetInstanceInfoResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetInstanceInfoResult
	err := ctx.Invoke("tencentcloud:Mysql/getInstanceInfo:getInstanceInfo", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstanceInfo.
type GetInstanceInfoArgs struct {
	InstanceId       string  `pulumi:"instanceId"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getInstanceInfo.
type GetInstanceInfoResult struct {
	DefaultKmsRegion string `pulumi:"defaultKmsRegion"`
	Encryption       string `pulumi:"encryption"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	InstanceId       string  `pulumi:"instanceId"`
	InstanceName     string  `pulumi:"instanceName"`
	KeyId            string  `pulumi:"keyId"`
	KeyRegion        string  `pulumi:"keyRegion"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

func GetInstanceInfoOutput(ctx *pulumi.Context, args GetInstanceInfoOutputArgs, opts ...pulumi.InvokeOption) GetInstanceInfoResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetInstanceInfoResult, error) {
			args := v.(GetInstanceInfoArgs)
			r, err := GetInstanceInfo(ctx, &args, opts...)
			var s GetInstanceInfoResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetInstanceInfoResultOutput)
}

// A collection of arguments for invoking getInstanceInfo.
type GetInstanceInfoOutputArgs struct {
	InstanceId       pulumi.StringInput    `pulumi:"instanceId"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetInstanceInfoOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceInfoArgs)(nil)).Elem()
}

// A collection of values returned by getInstanceInfo.
type GetInstanceInfoResultOutput struct{ *pulumi.OutputState }

func (GetInstanceInfoResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceInfoResult)(nil)).Elem()
}

func (o GetInstanceInfoResultOutput) ToGetInstanceInfoResultOutput() GetInstanceInfoResultOutput {
	return o
}

func (o GetInstanceInfoResultOutput) ToGetInstanceInfoResultOutputWithContext(ctx context.Context) GetInstanceInfoResultOutput {
	return o
}

func (o GetInstanceInfoResultOutput) DefaultKmsRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInfoResult) string { return v.DefaultKmsRegion }).(pulumi.StringOutput)
}

func (o GetInstanceInfoResultOutput) Encryption() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInfoResult) string { return v.Encryption }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetInstanceInfoResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInfoResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetInstanceInfoResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInfoResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetInstanceInfoResultOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInfoResult) string { return v.InstanceName }).(pulumi.StringOutput)
}

func (o GetInstanceInfoResultOutput) KeyId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInfoResult) string { return v.KeyId }).(pulumi.StringOutput)
}

func (o GetInstanceInfoResultOutput) KeyRegion() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceInfoResult) string { return v.KeyRegion }).(pulumi.StringOutput)
}

func (o GetInstanceInfoResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceInfoResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInstanceInfoResultOutput{})
}
