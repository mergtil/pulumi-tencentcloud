// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mysql

import (
	"context"
	"reflect"

	"errors"
	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RoStopReplication struct {
	pulumi.CustomResourceState

	// Read-Only instance ID.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
}

// NewRoStopReplication registers a new resource with the given unique name, arguments, and options.
func NewRoStopReplication(ctx *pulumi.Context,
	name string, args *RoStopReplicationArgs, opts ...pulumi.ResourceOption) (*RoStopReplication, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RoStopReplication
	err := ctx.RegisterResource("tencentcloud:Mysql/roStopReplication:RoStopReplication", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRoStopReplication gets an existing RoStopReplication resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRoStopReplication(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RoStopReplicationState, opts ...pulumi.ResourceOption) (*RoStopReplication, error) {
	var resource RoStopReplication
	err := ctx.ReadResource("tencentcloud:Mysql/roStopReplication:RoStopReplication", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RoStopReplication resources.
type roStopReplicationState struct {
	// Read-Only instance ID.
	InstanceId *string `pulumi:"instanceId"`
}

type RoStopReplicationState struct {
	// Read-Only instance ID.
	InstanceId pulumi.StringPtrInput
}

func (RoStopReplicationState) ElementType() reflect.Type {
	return reflect.TypeOf((*roStopReplicationState)(nil)).Elem()
}

type roStopReplicationArgs struct {
	// Read-Only instance ID.
	InstanceId string `pulumi:"instanceId"`
}

// The set of arguments for constructing a RoStopReplication resource.
type RoStopReplicationArgs struct {
	// Read-Only instance ID.
	InstanceId pulumi.StringInput
}

func (RoStopReplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*roStopReplicationArgs)(nil)).Elem()
}

type RoStopReplicationInput interface {
	pulumi.Input

	ToRoStopReplicationOutput() RoStopReplicationOutput
	ToRoStopReplicationOutputWithContext(ctx context.Context) RoStopReplicationOutput
}

func (*RoStopReplication) ElementType() reflect.Type {
	return reflect.TypeOf((**RoStopReplication)(nil)).Elem()
}

func (i *RoStopReplication) ToRoStopReplicationOutput() RoStopReplicationOutput {
	return i.ToRoStopReplicationOutputWithContext(context.Background())
}

func (i *RoStopReplication) ToRoStopReplicationOutputWithContext(ctx context.Context) RoStopReplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoStopReplicationOutput)
}

// RoStopReplicationArrayInput is an input type that accepts RoStopReplicationArray and RoStopReplicationArrayOutput values.
// You can construct a concrete instance of `RoStopReplicationArrayInput` via:
//
//	RoStopReplicationArray{ RoStopReplicationArgs{...} }
type RoStopReplicationArrayInput interface {
	pulumi.Input

	ToRoStopReplicationArrayOutput() RoStopReplicationArrayOutput
	ToRoStopReplicationArrayOutputWithContext(context.Context) RoStopReplicationArrayOutput
}

type RoStopReplicationArray []RoStopReplicationInput

func (RoStopReplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RoStopReplication)(nil)).Elem()
}

func (i RoStopReplicationArray) ToRoStopReplicationArrayOutput() RoStopReplicationArrayOutput {
	return i.ToRoStopReplicationArrayOutputWithContext(context.Background())
}

func (i RoStopReplicationArray) ToRoStopReplicationArrayOutputWithContext(ctx context.Context) RoStopReplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoStopReplicationArrayOutput)
}

// RoStopReplicationMapInput is an input type that accepts RoStopReplicationMap and RoStopReplicationMapOutput values.
// You can construct a concrete instance of `RoStopReplicationMapInput` via:
//
//	RoStopReplicationMap{ "key": RoStopReplicationArgs{...} }
type RoStopReplicationMapInput interface {
	pulumi.Input

	ToRoStopReplicationMapOutput() RoStopReplicationMapOutput
	ToRoStopReplicationMapOutputWithContext(context.Context) RoStopReplicationMapOutput
}

type RoStopReplicationMap map[string]RoStopReplicationInput

func (RoStopReplicationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RoStopReplication)(nil)).Elem()
}

func (i RoStopReplicationMap) ToRoStopReplicationMapOutput() RoStopReplicationMapOutput {
	return i.ToRoStopReplicationMapOutputWithContext(context.Background())
}

func (i RoStopReplicationMap) ToRoStopReplicationMapOutputWithContext(ctx context.Context) RoStopReplicationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RoStopReplicationMapOutput)
}

type RoStopReplicationOutput struct{ *pulumi.OutputState }

func (RoStopReplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RoStopReplication)(nil)).Elem()
}

func (o RoStopReplicationOutput) ToRoStopReplicationOutput() RoStopReplicationOutput {
	return o
}

func (o RoStopReplicationOutput) ToRoStopReplicationOutputWithContext(ctx context.Context) RoStopReplicationOutput {
	return o
}

// Read-Only instance ID.
func (o RoStopReplicationOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *RoStopReplication) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

type RoStopReplicationArrayOutput struct{ *pulumi.OutputState }

func (RoStopReplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RoStopReplication)(nil)).Elem()
}

func (o RoStopReplicationArrayOutput) ToRoStopReplicationArrayOutput() RoStopReplicationArrayOutput {
	return o
}

func (o RoStopReplicationArrayOutput) ToRoStopReplicationArrayOutputWithContext(ctx context.Context) RoStopReplicationArrayOutput {
	return o
}

func (o RoStopReplicationArrayOutput) Index(i pulumi.IntInput) RoStopReplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RoStopReplication {
		return vs[0].([]*RoStopReplication)[vs[1].(int)]
	}).(RoStopReplicationOutput)
}

type RoStopReplicationMapOutput struct{ *pulumi.OutputState }

func (RoStopReplicationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RoStopReplication)(nil)).Elem()
}

func (o RoStopReplicationMapOutput) ToRoStopReplicationMapOutput() RoStopReplicationMapOutput {
	return o
}

func (o RoStopReplicationMapOutput) ToRoStopReplicationMapOutputWithContext(ctx context.Context) RoStopReplicationMapOutput {
	return o
}

func (o RoStopReplicationMapOutput) MapIndex(k pulumi.StringInput) RoStopReplicationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RoStopReplication {
		return vs[0].(map[string]*RoStopReplication)[vs[1].(string)]
	}).(RoStopReplicationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RoStopReplicationInput)(nil)).Elem(), &RoStopReplication{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoStopReplicationArrayInput)(nil)).Elem(), RoStopReplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RoStopReplicationMapInput)(nil)).Elem(), RoStopReplicationMap{})
	pulumi.RegisterOutputType(RoStopReplicationOutput{})
	pulumi.RegisterOutputType(RoStopReplicationArrayOutput{})
	pulumi.RegisterOutputType(RoStopReplicationMapOutput{})
}
