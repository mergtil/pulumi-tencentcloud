// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mysql

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetInstanceRebootTime(ctx *pulumi.Context, args *GetInstanceRebootTimeArgs, opts ...pulumi.InvokeOption) (*GetInstanceRebootTimeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetInstanceRebootTimeResult
	err := ctx.Invoke("tencentcloud:Mysql/getInstanceRebootTime:getInstanceRebootTime", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstanceRebootTime.
type GetInstanceRebootTimeArgs struct {
	InstanceIds      []string `pulumi:"instanceIds"`
	ResultOutputFile *string  `pulumi:"resultOutputFile"`
}

// A collection of values returned by getInstanceRebootTime.
type GetInstanceRebootTimeResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id               string                      `pulumi:"id"`
	InstanceIds      []string                    `pulumi:"instanceIds"`
	Items            []GetInstanceRebootTimeItem `pulumi:"items"`
	ResultOutputFile *string                     `pulumi:"resultOutputFile"`
}

func GetInstanceRebootTimeOutput(ctx *pulumi.Context, args GetInstanceRebootTimeOutputArgs, opts ...pulumi.InvokeOption) GetInstanceRebootTimeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetInstanceRebootTimeResult, error) {
			args := v.(GetInstanceRebootTimeArgs)
			r, err := GetInstanceRebootTime(ctx, &args, opts...)
			var s GetInstanceRebootTimeResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetInstanceRebootTimeResultOutput)
}

// A collection of arguments for invoking getInstanceRebootTime.
type GetInstanceRebootTimeOutputArgs struct {
	InstanceIds      pulumi.StringArrayInput `pulumi:"instanceIds"`
	ResultOutputFile pulumi.StringPtrInput   `pulumi:"resultOutputFile"`
}

func (GetInstanceRebootTimeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceRebootTimeArgs)(nil)).Elem()
}

// A collection of values returned by getInstanceRebootTime.
type GetInstanceRebootTimeResultOutput struct{ *pulumi.OutputState }

func (GetInstanceRebootTimeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceRebootTimeResult)(nil)).Elem()
}

func (o GetInstanceRebootTimeResultOutput) ToGetInstanceRebootTimeResultOutput() GetInstanceRebootTimeResultOutput {
	return o
}

func (o GetInstanceRebootTimeResultOutput) ToGetInstanceRebootTimeResultOutputWithContext(ctx context.Context) GetInstanceRebootTimeResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetInstanceRebootTimeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceRebootTimeResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetInstanceRebootTimeResultOutput) InstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceRebootTimeResult) []string { return v.InstanceIds }).(pulumi.StringArrayOutput)
}

func (o GetInstanceRebootTimeResultOutput) Items() GetInstanceRebootTimeItemArrayOutput {
	return o.ApplyT(func(v GetInstanceRebootTimeResult) []GetInstanceRebootTimeItem { return v.Items }).(GetInstanceRebootTimeItemArrayOutput)
}

func (o GetInstanceRebootTimeResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceRebootTimeResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInstanceRebootTimeResultOutput{})
}
