// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sqlserver

import (
	"context"
	"reflect"

	"errors"
	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RestoreInstance struct {
	pulumi.CustomResourceState

	// Backup file ID, which can be obtained through the Id field in the returned value of the DescribeBackups API.
	BackupId pulumi.IntOutput `pulumi:"backupId"`
	// TDE encryption, `enable` encrypted, `disable` unencrypted.
	Encryptions RestoreInstanceEncryptionArrayOutput `pulumi:"encryptions"`
	// Instance ID.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Restore the databases listed in ReNameRestoreDatabase and rename them after restoration. If this parameter is left
	// empty, all databases will be restored and renamed in the default format.
	RenameRestores RestoreInstanceRenameRestoreArrayOutput `pulumi:"renameRestores"`
}

// NewRestoreInstance registers a new resource with the given unique name, arguments, and options.
func NewRestoreInstance(ctx *pulumi.Context,
	name string, args *RestoreInstanceArgs, opts ...pulumi.ResourceOption) (*RestoreInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BackupId == nil {
		return nil, errors.New("invalid value for required argument 'BackupId'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.RenameRestores == nil {
		return nil, errors.New("invalid value for required argument 'RenameRestores'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RestoreInstance
	err := ctx.RegisterResource("tencentcloud:Sqlserver/restoreInstance:RestoreInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRestoreInstance gets an existing RestoreInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRestoreInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RestoreInstanceState, opts ...pulumi.ResourceOption) (*RestoreInstance, error) {
	var resource RestoreInstance
	err := ctx.ReadResource("tencentcloud:Sqlserver/restoreInstance:RestoreInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RestoreInstance resources.
type restoreInstanceState struct {
	// Backup file ID, which can be obtained through the Id field in the returned value of the DescribeBackups API.
	BackupId *int `pulumi:"backupId"`
	// TDE encryption, `enable` encrypted, `disable` unencrypted.
	Encryptions []RestoreInstanceEncryption `pulumi:"encryptions"`
	// Instance ID.
	InstanceId *string `pulumi:"instanceId"`
	// Restore the databases listed in ReNameRestoreDatabase and rename them after restoration. If this parameter is left
	// empty, all databases will be restored and renamed in the default format.
	RenameRestores []RestoreInstanceRenameRestore `pulumi:"renameRestores"`
}

type RestoreInstanceState struct {
	// Backup file ID, which can be obtained through the Id field in the returned value of the DescribeBackups API.
	BackupId pulumi.IntPtrInput
	// TDE encryption, `enable` encrypted, `disable` unencrypted.
	Encryptions RestoreInstanceEncryptionArrayInput
	// Instance ID.
	InstanceId pulumi.StringPtrInput
	// Restore the databases listed in ReNameRestoreDatabase and rename them after restoration. If this parameter is left
	// empty, all databases will be restored and renamed in the default format.
	RenameRestores RestoreInstanceRenameRestoreArrayInput
}

func (RestoreInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*restoreInstanceState)(nil)).Elem()
}

type restoreInstanceArgs struct {
	// Backup file ID, which can be obtained through the Id field in the returned value of the DescribeBackups API.
	BackupId int `pulumi:"backupId"`
	// Instance ID.
	InstanceId string `pulumi:"instanceId"`
	// Restore the databases listed in ReNameRestoreDatabase and rename them after restoration. If this parameter is left
	// empty, all databases will be restored and renamed in the default format.
	RenameRestores []RestoreInstanceRenameRestore `pulumi:"renameRestores"`
}

// The set of arguments for constructing a RestoreInstance resource.
type RestoreInstanceArgs struct {
	// Backup file ID, which can be obtained through the Id field in the returned value of the DescribeBackups API.
	BackupId pulumi.IntInput
	// Instance ID.
	InstanceId pulumi.StringInput
	// Restore the databases listed in ReNameRestoreDatabase and rename them after restoration. If this parameter is left
	// empty, all databases will be restored and renamed in the default format.
	RenameRestores RestoreInstanceRenameRestoreArrayInput
}

func (RestoreInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*restoreInstanceArgs)(nil)).Elem()
}

type RestoreInstanceInput interface {
	pulumi.Input

	ToRestoreInstanceOutput() RestoreInstanceOutput
	ToRestoreInstanceOutputWithContext(ctx context.Context) RestoreInstanceOutput
}

func (*RestoreInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**RestoreInstance)(nil)).Elem()
}

func (i *RestoreInstance) ToRestoreInstanceOutput() RestoreInstanceOutput {
	return i.ToRestoreInstanceOutputWithContext(context.Background())
}

func (i *RestoreInstance) ToRestoreInstanceOutputWithContext(ctx context.Context) RestoreInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreInstanceOutput)
}

// RestoreInstanceArrayInput is an input type that accepts RestoreInstanceArray and RestoreInstanceArrayOutput values.
// You can construct a concrete instance of `RestoreInstanceArrayInput` via:
//
//	RestoreInstanceArray{ RestoreInstanceArgs{...} }
type RestoreInstanceArrayInput interface {
	pulumi.Input

	ToRestoreInstanceArrayOutput() RestoreInstanceArrayOutput
	ToRestoreInstanceArrayOutputWithContext(context.Context) RestoreInstanceArrayOutput
}

type RestoreInstanceArray []RestoreInstanceInput

func (RestoreInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RestoreInstance)(nil)).Elem()
}

func (i RestoreInstanceArray) ToRestoreInstanceArrayOutput() RestoreInstanceArrayOutput {
	return i.ToRestoreInstanceArrayOutputWithContext(context.Background())
}

func (i RestoreInstanceArray) ToRestoreInstanceArrayOutputWithContext(ctx context.Context) RestoreInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreInstanceArrayOutput)
}

// RestoreInstanceMapInput is an input type that accepts RestoreInstanceMap and RestoreInstanceMapOutput values.
// You can construct a concrete instance of `RestoreInstanceMapInput` via:
//
//	RestoreInstanceMap{ "key": RestoreInstanceArgs{...} }
type RestoreInstanceMapInput interface {
	pulumi.Input

	ToRestoreInstanceMapOutput() RestoreInstanceMapOutput
	ToRestoreInstanceMapOutputWithContext(context.Context) RestoreInstanceMapOutput
}

type RestoreInstanceMap map[string]RestoreInstanceInput

func (RestoreInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RestoreInstance)(nil)).Elem()
}

func (i RestoreInstanceMap) ToRestoreInstanceMapOutput() RestoreInstanceMapOutput {
	return i.ToRestoreInstanceMapOutputWithContext(context.Background())
}

func (i RestoreInstanceMap) ToRestoreInstanceMapOutputWithContext(ctx context.Context) RestoreInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RestoreInstanceMapOutput)
}

type RestoreInstanceOutput struct{ *pulumi.OutputState }

func (RestoreInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RestoreInstance)(nil)).Elem()
}

func (o RestoreInstanceOutput) ToRestoreInstanceOutput() RestoreInstanceOutput {
	return o
}

func (o RestoreInstanceOutput) ToRestoreInstanceOutputWithContext(ctx context.Context) RestoreInstanceOutput {
	return o
}

// Backup file ID, which can be obtained through the Id field in the returned value of the DescribeBackups API.
func (o RestoreInstanceOutput) BackupId() pulumi.IntOutput {
	return o.ApplyT(func(v *RestoreInstance) pulumi.IntOutput { return v.BackupId }).(pulumi.IntOutput)
}

// TDE encryption, `enable` encrypted, `disable` unencrypted.
func (o RestoreInstanceOutput) Encryptions() RestoreInstanceEncryptionArrayOutput {
	return o.ApplyT(func(v *RestoreInstance) RestoreInstanceEncryptionArrayOutput { return v.Encryptions }).(RestoreInstanceEncryptionArrayOutput)
}

// Instance ID.
func (o RestoreInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *RestoreInstance) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Restore the databases listed in ReNameRestoreDatabase and rename them after restoration. If this parameter is left
// empty, all databases will be restored and renamed in the default format.
func (o RestoreInstanceOutput) RenameRestores() RestoreInstanceRenameRestoreArrayOutput {
	return o.ApplyT(func(v *RestoreInstance) RestoreInstanceRenameRestoreArrayOutput { return v.RenameRestores }).(RestoreInstanceRenameRestoreArrayOutput)
}

type RestoreInstanceArrayOutput struct{ *pulumi.OutputState }

func (RestoreInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RestoreInstance)(nil)).Elem()
}

func (o RestoreInstanceArrayOutput) ToRestoreInstanceArrayOutput() RestoreInstanceArrayOutput {
	return o
}

func (o RestoreInstanceArrayOutput) ToRestoreInstanceArrayOutputWithContext(ctx context.Context) RestoreInstanceArrayOutput {
	return o
}

func (o RestoreInstanceArrayOutput) Index(i pulumi.IntInput) RestoreInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RestoreInstance {
		return vs[0].([]*RestoreInstance)[vs[1].(int)]
	}).(RestoreInstanceOutput)
}

type RestoreInstanceMapOutput struct{ *pulumi.OutputState }

func (RestoreInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RestoreInstance)(nil)).Elem()
}

func (o RestoreInstanceMapOutput) ToRestoreInstanceMapOutput() RestoreInstanceMapOutput {
	return o
}

func (o RestoreInstanceMapOutput) ToRestoreInstanceMapOutputWithContext(ctx context.Context) RestoreInstanceMapOutput {
	return o
}

func (o RestoreInstanceMapOutput) MapIndex(k pulumi.StringInput) RestoreInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RestoreInstance {
		return vs[0].(map[string]*RestoreInstance)[vs[1].(string)]
	}).(RestoreInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RestoreInstanceInput)(nil)).Elem(), &RestoreInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*RestoreInstanceArrayInput)(nil)).Elem(), RestoreInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RestoreInstanceMapInput)(nil)).Elem(), RestoreInstanceMap{})
	pulumi.RegisterOutputType(RestoreInstanceOutput{})
	pulumi.RegisterOutputType(RestoreInstanceArrayOutput{})
	pulumi.RegisterOutputType(RestoreInstanceMapOutput{})
}
