// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sqlserver

import (
	"context"
	"reflect"

	"errors"
	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ConfigDatabaseMdf struct {
	pulumi.CustomResourceState

	// Array of database names.
	DbName pulumi.StringOutput `pulumi:"dbName"`
	// Instance ID.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
}

// NewConfigDatabaseMdf registers a new resource with the given unique name, arguments, and options.
func NewConfigDatabaseMdf(ctx *pulumi.Context,
	name string, args *ConfigDatabaseMdfArgs, opts ...pulumi.ResourceOption) (*ConfigDatabaseMdf, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DbName == nil {
		return nil, errors.New("invalid value for required argument 'DbName'")
	}
	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ConfigDatabaseMdf
	err := ctx.RegisterResource("tencentcloud:Sqlserver/configDatabaseMdf:ConfigDatabaseMdf", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetConfigDatabaseMdf gets an existing ConfigDatabaseMdf resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetConfigDatabaseMdf(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ConfigDatabaseMdfState, opts ...pulumi.ResourceOption) (*ConfigDatabaseMdf, error) {
	var resource ConfigDatabaseMdf
	err := ctx.ReadResource("tencentcloud:Sqlserver/configDatabaseMdf:ConfigDatabaseMdf", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ConfigDatabaseMdf resources.
type configDatabaseMdfState struct {
	// Array of database names.
	DbName *string `pulumi:"dbName"`
	// Instance ID.
	InstanceId *string `pulumi:"instanceId"`
}

type ConfigDatabaseMdfState struct {
	// Array of database names.
	DbName pulumi.StringPtrInput
	// Instance ID.
	InstanceId pulumi.StringPtrInput
}

func (ConfigDatabaseMdfState) ElementType() reflect.Type {
	return reflect.TypeOf((*configDatabaseMdfState)(nil)).Elem()
}

type configDatabaseMdfArgs struct {
	// Array of database names.
	DbName string `pulumi:"dbName"`
	// Instance ID.
	InstanceId string `pulumi:"instanceId"`
}

// The set of arguments for constructing a ConfigDatabaseMdf resource.
type ConfigDatabaseMdfArgs struct {
	// Array of database names.
	DbName pulumi.StringInput
	// Instance ID.
	InstanceId pulumi.StringInput
}

func (ConfigDatabaseMdfArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*configDatabaseMdfArgs)(nil)).Elem()
}

type ConfigDatabaseMdfInput interface {
	pulumi.Input

	ToConfigDatabaseMdfOutput() ConfigDatabaseMdfOutput
	ToConfigDatabaseMdfOutputWithContext(ctx context.Context) ConfigDatabaseMdfOutput
}

func (*ConfigDatabaseMdf) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigDatabaseMdf)(nil)).Elem()
}

func (i *ConfigDatabaseMdf) ToConfigDatabaseMdfOutput() ConfigDatabaseMdfOutput {
	return i.ToConfigDatabaseMdfOutputWithContext(context.Background())
}

func (i *ConfigDatabaseMdf) ToConfigDatabaseMdfOutputWithContext(ctx context.Context) ConfigDatabaseMdfOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigDatabaseMdfOutput)
}

// ConfigDatabaseMdfArrayInput is an input type that accepts ConfigDatabaseMdfArray and ConfigDatabaseMdfArrayOutput values.
// You can construct a concrete instance of `ConfigDatabaseMdfArrayInput` via:
//
//	ConfigDatabaseMdfArray{ ConfigDatabaseMdfArgs{...} }
type ConfigDatabaseMdfArrayInput interface {
	pulumi.Input

	ToConfigDatabaseMdfArrayOutput() ConfigDatabaseMdfArrayOutput
	ToConfigDatabaseMdfArrayOutputWithContext(context.Context) ConfigDatabaseMdfArrayOutput
}

type ConfigDatabaseMdfArray []ConfigDatabaseMdfInput

func (ConfigDatabaseMdfArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConfigDatabaseMdf)(nil)).Elem()
}

func (i ConfigDatabaseMdfArray) ToConfigDatabaseMdfArrayOutput() ConfigDatabaseMdfArrayOutput {
	return i.ToConfigDatabaseMdfArrayOutputWithContext(context.Background())
}

func (i ConfigDatabaseMdfArray) ToConfigDatabaseMdfArrayOutputWithContext(ctx context.Context) ConfigDatabaseMdfArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigDatabaseMdfArrayOutput)
}

// ConfigDatabaseMdfMapInput is an input type that accepts ConfigDatabaseMdfMap and ConfigDatabaseMdfMapOutput values.
// You can construct a concrete instance of `ConfigDatabaseMdfMapInput` via:
//
//	ConfigDatabaseMdfMap{ "key": ConfigDatabaseMdfArgs{...} }
type ConfigDatabaseMdfMapInput interface {
	pulumi.Input

	ToConfigDatabaseMdfMapOutput() ConfigDatabaseMdfMapOutput
	ToConfigDatabaseMdfMapOutputWithContext(context.Context) ConfigDatabaseMdfMapOutput
}

type ConfigDatabaseMdfMap map[string]ConfigDatabaseMdfInput

func (ConfigDatabaseMdfMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConfigDatabaseMdf)(nil)).Elem()
}

func (i ConfigDatabaseMdfMap) ToConfigDatabaseMdfMapOutput() ConfigDatabaseMdfMapOutput {
	return i.ToConfigDatabaseMdfMapOutputWithContext(context.Background())
}

func (i ConfigDatabaseMdfMap) ToConfigDatabaseMdfMapOutputWithContext(ctx context.Context) ConfigDatabaseMdfMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConfigDatabaseMdfMapOutput)
}

type ConfigDatabaseMdfOutput struct{ *pulumi.OutputState }

func (ConfigDatabaseMdfOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ConfigDatabaseMdf)(nil)).Elem()
}

func (o ConfigDatabaseMdfOutput) ToConfigDatabaseMdfOutput() ConfigDatabaseMdfOutput {
	return o
}

func (o ConfigDatabaseMdfOutput) ToConfigDatabaseMdfOutputWithContext(ctx context.Context) ConfigDatabaseMdfOutput {
	return o
}

// Array of database names.
func (o ConfigDatabaseMdfOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigDatabaseMdf) pulumi.StringOutput { return v.DbName }).(pulumi.StringOutput)
}

// Instance ID.
func (o ConfigDatabaseMdfOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ConfigDatabaseMdf) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

type ConfigDatabaseMdfArrayOutput struct{ *pulumi.OutputState }

func (ConfigDatabaseMdfArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ConfigDatabaseMdf)(nil)).Elem()
}

func (o ConfigDatabaseMdfArrayOutput) ToConfigDatabaseMdfArrayOutput() ConfigDatabaseMdfArrayOutput {
	return o
}

func (o ConfigDatabaseMdfArrayOutput) ToConfigDatabaseMdfArrayOutputWithContext(ctx context.Context) ConfigDatabaseMdfArrayOutput {
	return o
}

func (o ConfigDatabaseMdfArrayOutput) Index(i pulumi.IntInput) ConfigDatabaseMdfOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ConfigDatabaseMdf {
		return vs[0].([]*ConfigDatabaseMdf)[vs[1].(int)]
	}).(ConfigDatabaseMdfOutput)
}

type ConfigDatabaseMdfMapOutput struct{ *pulumi.OutputState }

func (ConfigDatabaseMdfMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ConfigDatabaseMdf)(nil)).Elem()
}

func (o ConfigDatabaseMdfMapOutput) ToConfigDatabaseMdfMapOutput() ConfigDatabaseMdfMapOutput {
	return o
}

func (o ConfigDatabaseMdfMapOutput) ToConfigDatabaseMdfMapOutputWithContext(ctx context.Context) ConfigDatabaseMdfMapOutput {
	return o
}

func (o ConfigDatabaseMdfMapOutput) MapIndex(k pulumi.StringInput) ConfigDatabaseMdfOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ConfigDatabaseMdf {
		return vs[0].(map[string]*ConfigDatabaseMdf)[vs[1].(string)]
	}).(ConfigDatabaseMdfOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigDatabaseMdfInput)(nil)).Elem(), &ConfigDatabaseMdf{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigDatabaseMdfArrayInput)(nil)).Elem(), ConfigDatabaseMdfArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConfigDatabaseMdfMapInput)(nil)).Elem(), ConfigDatabaseMdfMap{})
	pulumi.RegisterOutputType(ConfigDatabaseMdfOutput{})
	pulumi.RegisterOutputType(ConfigDatabaseMdfArrayOutput{})
	pulumi.RegisterOutputType(ConfigDatabaseMdfMapOutput{})
}
