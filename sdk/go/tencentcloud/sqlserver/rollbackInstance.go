// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sqlserver

import (
	"context"
	"reflect"

	"errors"
	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RollbackInstance struct {
	pulumi.CustomResourceState

	// TDE encryption, `enable` encrypted, `disable` unencrypted.
	Encryptions RollbackInstanceEncryptionArrayOutput `pulumi:"encryptions"`
	// Instance ID.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Rename the databases listed in ReNameRestoreDatabase.
	RenameRestores RollbackInstanceRenameRestoreArrayOutput `pulumi:"renameRestores"`
	// Target time point for rollback.
	Time pulumi.StringOutput `pulumi:"time"`
}

// NewRollbackInstance registers a new resource with the given unique name, arguments, and options.
func NewRollbackInstance(ctx *pulumi.Context,
	name string, args *RollbackInstanceArgs, opts ...pulumi.ResourceOption) (*RollbackInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.RenameRestores == nil {
		return nil, errors.New("invalid value for required argument 'RenameRestores'")
	}
	if args.Time == nil {
		return nil, errors.New("invalid value for required argument 'Time'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource RollbackInstance
	err := ctx.RegisterResource("tencentcloud:Sqlserver/rollbackInstance:RollbackInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetRollbackInstance gets an existing RollbackInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetRollbackInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *RollbackInstanceState, opts ...pulumi.ResourceOption) (*RollbackInstance, error) {
	var resource RollbackInstance
	err := ctx.ReadResource("tencentcloud:Sqlserver/rollbackInstance:RollbackInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering RollbackInstance resources.
type rollbackInstanceState struct {
	// TDE encryption, `enable` encrypted, `disable` unencrypted.
	Encryptions []RollbackInstanceEncryption `pulumi:"encryptions"`
	// Instance ID.
	InstanceId *string `pulumi:"instanceId"`
	// Rename the databases listed in ReNameRestoreDatabase.
	RenameRestores []RollbackInstanceRenameRestore `pulumi:"renameRestores"`
	// Target time point for rollback.
	Time *string `pulumi:"time"`
}

type RollbackInstanceState struct {
	// TDE encryption, `enable` encrypted, `disable` unencrypted.
	Encryptions RollbackInstanceEncryptionArrayInput
	// Instance ID.
	InstanceId pulumi.StringPtrInput
	// Rename the databases listed in ReNameRestoreDatabase.
	RenameRestores RollbackInstanceRenameRestoreArrayInput
	// Target time point for rollback.
	Time pulumi.StringPtrInput
}

func (RollbackInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*rollbackInstanceState)(nil)).Elem()
}

type rollbackInstanceArgs struct {
	// Instance ID.
	InstanceId string `pulumi:"instanceId"`
	// Rename the databases listed in ReNameRestoreDatabase.
	RenameRestores []RollbackInstanceRenameRestore `pulumi:"renameRestores"`
	// Target time point for rollback.
	Time string `pulumi:"time"`
}

// The set of arguments for constructing a RollbackInstance resource.
type RollbackInstanceArgs struct {
	// Instance ID.
	InstanceId pulumi.StringInput
	// Rename the databases listed in ReNameRestoreDatabase.
	RenameRestores RollbackInstanceRenameRestoreArrayInput
	// Target time point for rollback.
	Time pulumi.StringInput
}

func (RollbackInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*rollbackInstanceArgs)(nil)).Elem()
}

type RollbackInstanceInput interface {
	pulumi.Input

	ToRollbackInstanceOutput() RollbackInstanceOutput
	ToRollbackInstanceOutputWithContext(ctx context.Context) RollbackInstanceOutput
}

func (*RollbackInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**RollbackInstance)(nil)).Elem()
}

func (i *RollbackInstance) ToRollbackInstanceOutput() RollbackInstanceOutput {
	return i.ToRollbackInstanceOutputWithContext(context.Background())
}

func (i *RollbackInstance) ToRollbackInstanceOutputWithContext(ctx context.Context) RollbackInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RollbackInstanceOutput)
}

// RollbackInstanceArrayInput is an input type that accepts RollbackInstanceArray and RollbackInstanceArrayOutput values.
// You can construct a concrete instance of `RollbackInstanceArrayInput` via:
//
//	RollbackInstanceArray{ RollbackInstanceArgs{...} }
type RollbackInstanceArrayInput interface {
	pulumi.Input

	ToRollbackInstanceArrayOutput() RollbackInstanceArrayOutput
	ToRollbackInstanceArrayOutputWithContext(context.Context) RollbackInstanceArrayOutput
}

type RollbackInstanceArray []RollbackInstanceInput

func (RollbackInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RollbackInstance)(nil)).Elem()
}

func (i RollbackInstanceArray) ToRollbackInstanceArrayOutput() RollbackInstanceArrayOutput {
	return i.ToRollbackInstanceArrayOutputWithContext(context.Background())
}

func (i RollbackInstanceArray) ToRollbackInstanceArrayOutputWithContext(ctx context.Context) RollbackInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RollbackInstanceArrayOutput)
}

// RollbackInstanceMapInput is an input type that accepts RollbackInstanceMap and RollbackInstanceMapOutput values.
// You can construct a concrete instance of `RollbackInstanceMapInput` via:
//
//	RollbackInstanceMap{ "key": RollbackInstanceArgs{...} }
type RollbackInstanceMapInput interface {
	pulumi.Input

	ToRollbackInstanceMapOutput() RollbackInstanceMapOutput
	ToRollbackInstanceMapOutputWithContext(context.Context) RollbackInstanceMapOutput
}

type RollbackInstanceMap map[string]RollbackInstanceInput

func (RollbackInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RollbackInstance)(nil)).Elem()
}

func (i RollbackInstanceMap) ToRollbackInstanceMapOutput() RollbackInstanceMapOutput {
	return i.ToRollbackInstanceMapOutputWithContext(context.Background())
}

func (i RollbackInstanceMap) ToRollbackInstanceMapOutputWithContext(ctx context.Context) RollbackInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RollbackInstanceMapOutput)
}

type RollbackInstanceOutput struct{ *pulumi.OutputState }

func (RollbackInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RollbackInstance)(nil)).Elem()
}

func (o RollbackInstanceOutput) ToRollbackInstanceOutput() RollbackInstanceOutput {
	return o
}

func (o RollbackInstanceOutput) ToRollbackInstanceOutputWithContext(ctx context.Context) RollbackInstanceOutput {
	return o
}

// TDE encryption, `enable` encrypted, `disable` unencrypted.
func (o RollbackInstanceOutput) Encryptions() RollbackInstanceEncryptionArrayOutput {
	return o.ApplyT(func(v *RollbackInstance) RollbackInstanceEncryptionArrayOutput { return v.Encryptions }).(RollbackInstanceEncryptionArrayOutput)
}

// Instance ID.
func (o RollbackInstanceOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *RollbackInstance) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Rename the databases listed in ReNameRestoreDatabase.
func (o RollbackInstanceOutput) RenameRestores() RollbackInstanceRenameRestoreArrayOutput {
	return o.ApplyT(func(v *RollbackInstance) RollbackInstanceRenameRestoreArrayOutput { return v.RenameRestores }).(RollbackInstanceRenameRestoreArrayOutput)
}

// Target time point for rollback.
func (o RollbackInstanceOutput) Time() pulumi.StringOutput {
	return o.ApplyT(func(v *RollbackInstance) pulumi.StringOutput { return v.Time }).(pulumi.StringOutput)
}

type RollbackInstanceArrayOutput struct{ *pulumi.OutputState }

func (RollbackInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*RollbackInstance)(nil)).Elem()
}

func (o RollbackInstanceArrayOutput) ToRollbackInstanceArrayOutput() RollbackInstanceArrayOutput {
	return o
}

func (o RollbackInstanceArrayOutput) ToRollbackInstanceArrayOutputWithContext(ctx context.Context) RollbackInstanceArrayOutput {
	return o
}

func (o RollbackInstanceArrayOutput) Index(i pulumi.IntInput) RollbackInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *RollbackInstance {
		return vs[0].([]*RollbackInstance)[vs[1].(int)]
	}).(RollbackInstanceOutput)
}

type RollbackInstanceMapOutput struct{ *pulumi.OutputState }

func (RollbackInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*RollbackInstance)(nil)).Elem()
}

func (o RollbackInstanceMapOutput) ToRollbackInstanceMapOutput() RollbackInstanceMapOutput {
	return o
}

func (o RollbackInstanceMapOutput) ToRollbackInstanceMapOutputWithContext(ctx context.Context) RollbackInstanceMapOutput {
	return o
}

func (o RollbackInstanceMapOutput) MapIndex(k pulumi.StringInput) RollbackInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *RollbackInstance {
		return vs[0].(map[string]*RollbackInstance)[vs[1].(string)]
	}).(RollbackInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RollbackInstanceInput)(nil)).Elem(), &RollbackInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*RollbackInstanceArrayInput)(nil)).Elem(), RollbackInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RollbackInstanceMapInput)(nil)).Elem(), RollbackInstanceMap{})
	pulumi.RegisterOutputType(RollbackInstanceOutput{})
	pulumi.RegisterOutputType(RollbackInstanceArrayOutput{})
	pulumi.RegisterOutputType(RollbackInstanceMapOutput{})
}
