// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package sqlserver

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetQueryXevent(ctx *pulumi.Context, args *GetQueryXeventArgs, opts ...pulumi.InvokeOption) (*GetQueryXeventResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetQueryXeventResult
	err := ctx.Invoke("tencentcloud:Sqlserver/getQueryXevent:getQueryXevent", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getQueryXevent.
type GetQueryXeventArgs struct {
	EndTime          string  `pulumi:"endTime"`
	EventType        string  `pulumi:"eventType"`
	InstanceId       string  `pulumi:"instanceId"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	StartTime        string  `pulumi:"startTime"`
}

// A collection of values returned by getQueryXevent.
type GetQueryXeventResult struct {
	EndTime   string                `pulumi:"endTime"`
	EventType string                `pulumi:"eventType"`
	Events    []GetQueryXeventEvent `pulumi:"events"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	InstanceId       string  `pulumi:"instanceId"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	StartTime        string  `pulumi:"startTime"`
}

func GetQueryXeventOutput(ctx *pulumi.Context, args GetQueryXeventOutputArgs, opts ...pulumi.InvokeOption) GetQueryXeventResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetQueryXeventResult, error) {
			args := v.(GetQueryXeventArgs)
			r, err := GetQueryXevent(ctx, &args, opts...)
			var s GetQueryXeventResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetQueryXeventResultOutput)
}

// A collection of arguments for invoking getQueryXevent.
type GetQueryXeventOutputArgs struct {
	EndTime          pulumi.StringInput    `pulumi:"endTime"`
	EventType        pulumi.StringInput    `pulumi:"eventType"`
	InstanceId       pulumi.StringInput    `pulumi:"instanceId"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	StartTime        pulumi.StringInput    `pulumi:"startTime"`
}

func (GetQueryXeventOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueryXeventArgs)(nil)).Elem()
}

// A collection of values returned by getQueryXevent.
type GetQueryXeventResultOutput struct{ *pulumi.OutputState }

func (GetQueryXeventResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetQueryXeventResult)(nil)).Elem()
}

func (o GetQueryXeventResultOutput) ToGetQueryXeventResultOutput() GetQueryXeventResultOutput {
	return o
}

func (o GetQueryXeventResultOutput) ToGetQueryXeventResultOutputWithContext(ctx context.Context) GetQueryXeventResultOutput {
	return o
}

func (o GetQueryXeventResultOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryXeventResult) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o GetQueryXeventResultOutput) EventType() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryXeventResult) string { return v.EventType }).(pulumi.StringOutput)
}

func (o GetQueryXeventResultOutput) Events() GetQueryXeventEventArrayOutput {
	return o.ApplyT(func(v GetQueryXeventResult) []GetQueryXeventEvent { return v.Events }).(GetQueryXeventEventArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetQueryXeventResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryXeventResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetQueryXeventResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryXeventResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetQueryXeventResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetQueryXeventResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetQueryXeventResultOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetQueryXeventResult) string { return v.StartTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetQueryXeventResultOutput{})
}
