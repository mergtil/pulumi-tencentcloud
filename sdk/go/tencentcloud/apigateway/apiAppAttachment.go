// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"errors"
	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ApiAppAttachment struct {
	pulumi.CustomResourceState

	// The unique ID of the application to be bound.
	ApiAppId pulumi.StringOutput `pulumi:"apiAppId"`
	// The unique ID of the API to be bound.
	ApiId pulumi.StringOutput `pulumi:"apiId"`
	// The environment to be bound.
	Environment pulumi.StringOutput `pulumi:"environment"`
	// The unique ID of the service to be bound.
	ServiceId pulumi.StringOutput `pulumi:"serviceId"`
}

// NewApiAppAttachment registers a new resource with the given unique name, arguments, and options.
func NewApiAppAttachment(ctx *pulumi.Context,
	name string, args *ApiAppAttachmentArgs, opts ...pulumi.ResourceOption) (*ApiAppAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiAppId == nil {
		return nil, errors.New("invalid value for required argument 'ApiAppId'")
	}
	if args.ApiId == nil {
		return nil, errors.New("invalid value for required argument 'ApiId'")
	}
	if args.Environment == nil {
		return nil, errors.New("invalid value for required argument 'Environment'")
	}
	if args.ServiceId == nil {
		return nil, errors.New("invalid value for required argument 'ServiceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ApiAppAttachment
	err := ctx.RegisterResource("tencentcloud:ApiGateway/apiAppAttachment:ApiAppAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetApiAppAttachment gets an existing ApiAppAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetApiAppAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ApiAppAttachmentState, opts ...pulumi.ResourceOption) (*ApiAppAttachment, error) {
	var resource ApiAppAttachment
	err := ctx.ReadResource("tencentcloud:ApiGateway/apiAppAttachment:ApiAppAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ApiAppAttachment resources.
type apiAppAttachmentState struct {
	// The unique ID of the application to be bound.
	ApiAppId *string `pulumi:"apiAppId"`
	// The unique ID of the API to be bound.
	ApiId *string `pulumi:"apiId"`
	// The environment to be bound.
	Environment *string `pulumi:"environment"`
	// The unique ID of the service to be bound.
	ServiceId *string `pulumi:"serviceId"`
}

type ApiAppAttachmentState struct {
	// The unique ID of the application to be bound.
	ApiAppId pulumi.StringPtrInput
	// The unique ID of the API to be bound.
	ApiId pulumi.StringPtrInput
	// The environment to be bound.
	Environment pulumi.StringPtrInput
	// The unique ID of the service to be bound.
	ServiceId pulumi.StringPtrInput
}

func (ApiAppAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*apiAppAttachmentState)(nil)).Elem()
}

type apiAppAttachmentArgs struct {
	// The unique ID of the application to be bound.
	ApiAppId string `pulumi:"apiAppId"`
	// The unique ID of the API to be bound.
	ApiId string `pulumi:"apiId"`
	// The environment to be bound.
	Environment string `pulumi:"environment"`
	// The unique ID of the service to be bound.
	ServiceId string `pulumi:"serviceId"`
}

// The set of arguments for constructing a ApiAppAttachment resource.
type ApiAppAttachmentArgs struct {
	// The unique ID of the application to be bound.
	ApiAppId pulumi.StringInput
	// The unique ID of the API to be bound.
	ApiId pulumi.StringInput
	// The environment to be bound.
	Environment pulumi.StringInput
	// The unique ID of the service to be bound.
	ServiceId pulumi.StringInput
}

func (ApiAppAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*apiAppAttachmentArgs)(nil)).Elem()
}

type ApiAppAttachmentInput interface {
	pulumi.Input

	ToApiAppAttachmentOutput() ApiAppAttachmentOutput
	ToApiAppAttachmentOutputWithContext(ctx context.Context) ApiAppAttachmentOutput
}

func (*ApiAppAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiAppAttachment)(nil)).Elem()
}

func (i *ApiAppAttachment) ToApiAppAttachmentOutput() ApiAppAttachmentOutput {
	return i.ToApiAppAttachmentOutputWithContext(context.Background())
}

func (i *ApiAppAttachment) ToApiAppAttachmentOutputWithContext(ctx context.Context) ApiAppAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiAppAttachmentOutput)
}

// ApiAppAttachmentArrayInput is an input type that accepts ApiAppAttachmentArray and ApiAppAttachmentArrayOutput values.
// You can construct a concrete instance of `ApiAppAttachmentArrayInput` via:
//
//	ApiAppAttachmentArray{ ApiAppAttachmentArgs{...} }
type ApiAppAttachmentArrayInput interface {
	pulumi.Input

	ToApiAppAttachmentArrayOutput() ApiAppAttachmentArrayOutput
	ToApiAppAttachmentArrayOutputWithContext(context.Context) ApiAppAttachmentArrayOutput
}

type ApiAppAttachmentArray []ApiAppAttachmentInput

func (ApiAppAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApiAppAttachment)(nil)).Elem()
}

func (i ApiAppAttachmentArray) ToApiAppAttachmentArrayOutput() ApiAppAttachmentArrayOutput {
	return i.ToApiAppAttachmentArrayOutputWithContext(context.Background())
}

func (i ApiAppAttachmentArray) ToApiAppAttachmentArrayOutputWithContext(ctx context.Context) ApiAppAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiAppAttachmentArrayOutput)
}

// ApiAppAttachmentMapInput is an input type that accepts ApiAppAttachmentMap and ApiAppAttachmentMapOutput values.
// You can construct a concrete instance of `ApiAppAttachmentMapInput` via:
//
//	ApiAppAttachmentMap{ "key": ApiAppAttachmentArgs{...} }
type ApiAppAttachmentMapInput interface {
	pulumi.Input

	ToApiAppAttachmentMapOutput() ApiAppAttachmentMapOutput
	ToApiAppAttachmentMapOutputWithContext(context.Context) ApiAppAttachmentMapOutput
}

type ApiAppAttachmentMap map[string]ApiAppAttachmentInput

func (ApiAppAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApiAppAttachment)(nil)).Elem()
}

func (i ApiAppAttachmentMap) ToApiAppAttachmentMapOutput() ApiAppAttachmentMapOutput {
	return i.ToApiAppAttachmentMapOutputWithContext(context.Background())
}

func (i ApiAppAttachmentMap) ToApiAppAttachmentMapOutputWithContext(ctx context.Context) ApiAppAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApiAppAttachmentMapOutput)
}

type ApiAppAttachmentOutput struct{ *pulumi.OutputState }

func (ApiAppAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApiAppAttachment)(nil)).Elem()
}

func (o ApiAppAttachmentOutput) ToApiAppAttachmentOutput() ApiAppAttachmentOutput {
	return o
}

func (o ApiAppAttachmentOutput) ToApiAppAttachmentOutputWithContext(ctx context.Context) ApiAppAttachmentOutput {
	return o
}

// The unique ID of the application to be bound.
func (o ApiAppAttachmentOutput) ApiAppId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiAppAttachment) pulumi.StringOutput { return v.ApiAppId }).(pulumi.StringOutput)
}

// The unique ID of the API to be bound.
func (o ApiAppAttachmentOutput) ApiId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiAppAttachment) pulumi.StringOutput { return v.ApiId }).(pulumi.StringOutput)
}

// The environment to be bound.
func (o ApiAppAttachmentOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiAppAttachment) pulumi.StringOutput { return v.Environment }).(pulumi.StringOutput)
}

// The unique ID of the service to be bound.
func (o ApiAppAttachmentOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v *ApiAppAttachment) pulumi.StringOutput { return v.ServiceId }).(pulumi.StringOutput)
}

type ApiAppAttachmentArrayOutput struct{ *pulumi.OutputState }

func (ApiAppAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ApiAppAttachment)(nil)).Elem()
}

func (o ApiAppAttachmentArrayOutput) ToApiAppAttachmentArrayOutput() ApiAppAttachmentArrayOutput {
	return o
}

func (o ApiAppAttachmentArrayOutput) ToApiAppAttachmentArrayOutputWithContext(ctx context.Context) ApiAppAttachmentArrayOutput {
	return o
}

func (o ApiAppAttachmentArrayOutput) Index(i pulumi.IntInput) ApiAppAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ApiAppAttachment {
		return vs[0].([]*ApiAppAttachment)[vs[1].(int)]
	}).(ApiAppAttachmentOutput)
}

type ApiAppAttachmentMapOutput struct{ *pulumi.OutputState }

func (ApiAppAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ApiAppAttachment)(nil)).Elem()
}

func (o ApiAppAttachmentMapOutput) ToApiAppAttachmentMapOutput() ApiAppAttachmentMapOutput {
	return o
}

func (o ApiAppAttachmentMapOutput) ToApiAppAttachmentMapOutputWithContext(ctx context.Context) ApiAppAttachmentMapOutput {
	return o
}

func (o ApiAppAttachmentMapOutput) MapIndex(k pulumi.StringInput) ApiAppAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ApiAppAttachment {
		return vs[0].(map[string]*ApiAppAttachment)[vs[1].(string)]
	}).(ApiAppAttachmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApiAppAttachmentInput)(nil)).Elem(), &ApiAppAttachment{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiAppAttachmentArrayInput)(nil)).Elem(), ApiAppAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApiAppAttachmentMapInput)(nil)).Elem(), ApiAppAttachmentMap{})
	pulumi.RegisterOutputType(ApiAppAttachmentOutput{})
	pulumi.RegisterOutputType(ApiAppAttachmentArrayOutput{})
	pulumi.RegisterOutputType(ApiAppAttachmentMapOutput{})
}
