// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetUsagePlanEnvironments(ctx *pulumi.Context, args *GetUsagePlanEnvironmentsArgs, opts ...pulumi.InvokeOption) (*GetUsagePlanEnvironmentsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetUsagePlanEnvironmentsResult
	err := ctx.Invoke("tencentcloud:ApiGateway/getUsagePlanEnvironments:getUsagePlanEnvironments", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUsagePlanEnvironments.
type GetUsagePlanEnvironmentsArgs struct {
	BindType         *string `pulumi:"bindType"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	UsagePlanId      string  `pulumi:"usagePlanId"`
}

// A collection of values returned by getUsagePlanEnvironments.
type GetUsagePlanEnvironmentsResult struct {
	BindType *string `pulumi:"bindType"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                         `pulumi:"id"`
	Lists            []GetUsagePlanEnvironmentsList `pulumi:"lists"`
	ResultOutputFile *string                        `pulumi:"resultOutputFile"`
	UsagePlanId      string                         `pulumi:"usagePlanId"`
}

func GetUsagePlanEnvironmentsOutput(ctx *pulumi.Context, args GetUsagePlanEnvironmentsOutputArgs, opts ...pulumi.InvokeOption) GetUsagePlanEnvironmentsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetUsagePlanEnvironmentsResult, error) {
			args := v.(GetUsagePlanEnvironmentsArgs)
			r, err := GetUsagePlanEnvironments(ctx, &args, opts...)
			var s GetUsagePlanEnvironmentsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetUsagePlanEnvironmentsResultOutput)
}

// A collection of arguments for invoking getUsagePlanEnvironments.
type GetUsagePlanEnvironmentsOutputArgs struct {
	BindType         pulumi.StringPtrInput `pulumi:"bindType"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	UsagePlanId      pulumi.StringInput    `pulumi:"usagePlanId"`
}

func (GetUsagePlanEnvironmentsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsagePlanEnvironmentsArgs)(nil)).Elem()
}

// A collection of values returned by getUsagePlanEnvironments.
type GetUsagePlanEnvironmentsResultOutput struct{ *pulumi.OutputState }

func (GetUsagePlanEnvironmentsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUsagePlanEnvironmentsResult)(nil)).Elem()
}

func (o GetUsagePlanEnvironmentsResultOutput) ToGetUsagePlanEnvironmentsResultOutput() GetUsagePlanEnvironmentsResultOutput {
	return o
}

func (o GetUsagePlanEnvironmentsResultOutput) ToGetUsagePlanEnvironmentsResultOutputWithContext(ctx context.Context) GetUsagePlanEnvironmentsResultOutput {
	return o
}

func (o GetUsagePlanEnvironmentsResultOutput) BindType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsagePlanEnvironmentsResult) *string { return v.BindType }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetUsagePlanEnvironmentsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsagePlanEnvironmentsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetUsagePlanEnvironmentsResultOutput) Lists() GetUsagePlanEnvironmentsListArrayOutput {
	return o.ApplyT(func(v GetUsagePlanEnvironmentsResult) []GetUsagePlanEnvironmentsList { return v.Lists }).(GetUsagePlanEnvironmentsListArrayOutput)
}

func (o GetUsagePlanEnvironmentsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUsagePlanEnvironmentsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetUsagePlanEnvironmentsResultOutput) UsagePlanId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUsagePlanEnvironmentsResult) string { return v.UsagePlanId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUsagePlanEnvironmentsResultOutput{})
}
