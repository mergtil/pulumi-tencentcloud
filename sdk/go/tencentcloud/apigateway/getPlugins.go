// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupPlugins(ctx *pulumi.Context, args *LookupPluginsArgs, opts ...pulumi.InvokeOption) (*LookupPluginsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupPluginsResult
	err := ctx.Invoke("tencentcloud:ApiGateway/getPlugins:getPlugins", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPlugins.
type LookupPluginsArgs struct {
	EnvironmentName  string  `pulumi:"environmentName"`
	PluginId         string  `pulumi:"pluginId"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	ServiceId        string  `pulumi:"serviceId"`
}

// A collection of values returned by getPlugins.
type LookupPluginsResult struct {
	EnvironmentName string `pulumi:"environmentName"`
	// The provider-assigned unique ID for this managed resource.
	Id               string             `pulumi:"id"`
	PluginId         string             `pulumi:"pluginId"`
	ResultOutputFile *string            `pulumi:"resultOutputFile"`
	Results          []GetPluginsResult `pulumi:"results"`
	ServiceId        string             `pulumi:"serviceId"`
}

func LookupPluginsOutput(ctx *pulumi.Context, args LookupPluginsOutputArgs, opts ...pulumi.InvokeOption) LookupPluginsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPluginsResult, error) {
			args := v.(LookupPluginsArgs)
			r, err := LookupPlugins(ctx, &args, opts...)
			var s LookupPluginsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPluginsResultOutput)
}

// A collection of arguments for invoking getPlugins.
type LookupPluginsOutputArgs struct {
	EnvironmentName  pulumi.StringInput    `pulumi:"environmentName"`
	PluginId         pulumi.StringInput    `pulumi:"pluginId"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	ServiceId        pulumi.StringInput    `pulumi:"serviceId"`
}

func (LookupPluginsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPluginsArgs)(nil)).Elem()
}

// A collection of values returned by getPlugins.
type LookupPluginsResultOutput struct{ *pulumi.OutputState }

func (LookupPluginsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPluginsResult)(nil)).Elem()
}

func (o LookupPluginsResultOutput) ToLookupPluginsResultOutput() LookupPluginsResultOutput {
	return o
}

func (o LookupPluginsResultOutput) ToLookupPluginsResultOutputWithContext(ctx context.Context) LookupPluginsResultOutput {
	return o
}

func (o LookupPluginsResultOutput) EnvironmentName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPluginsResult) string { return v.EnvironmentName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupPluginsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPluginsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupPluginsResultOutput) PluginId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPluginsResult) string { return v.PluginId }).(pulumi.StringOutput)
}

func (o LookupPluginsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPluginsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o LookupPluginsResultOutput) Results() GetPluginsResultArrayOutput {
	return o.ApplyT(func(v LookupPluginsResult) []GetPluginsResult { return v.Results }).(GetPluginsResultArrayOutput)
}

func (o LookupPluginsResultOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPluginsResult) string { return v.ServiceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPluginsResultOutput{})
}
