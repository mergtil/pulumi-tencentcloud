// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tdmq

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetVipInstance(ctx *pulumi.Context, args *GetVipInstanceArgs, opts ...pulumi.InvokeOption) (*GetVipInstanceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetVipInstanceResult
	err := ctx.Invoke("tencentcloud:Tdmq/getVipInstance:getVipInstance", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVipInstance.
type GetVipInstanceArgs struct {
	ClusterId        string  `pulumi:"clusterId"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getVipInstance.
type GetVipInstanceResult struct {
	ClusterId    string                      `pulumi:"clusterId"`
	ClusterInfos []GetVipInstanceClusterInfo `pulumi:"clusterInfos"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                         `pulumi:"id"`
	InstanceConfigs  []GetVipInstanceInstanceConfig `pulumi:"instanceConfigs"`
	ResultOutputFile *string                        `pulumi:"resultOutputFile"`
}

func GetVipInstanceOutput(ctx *pulumi.Context, args GetVipInstanceOutputArgs, opts ...pulumi.InvokeOption) GetVipInstanceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetVipInstanceResult, error) {
			args := v.(GetVipInstanceArgs)
			r, err := GetVipInstance(ctx, &args, opts...)
			var s GetVipInstanceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetVipInstanceResultOutput)
}

// A collection of arguments for invoking getVipInstance.
type GetVipInstanceOutputArgs struct {
	ClusterId        pulumi.StringInput    `pulumi:"clusterId"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetVipInstanceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVipInstanceArgs)(nil)).Elem()
}

// A collection of values returned by getVipInstance.
type GetVipInstanceResultOutput struct{ *pulumi.OutputState }

func (GetVipInstanceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVipInstanceResult)(nil)).Elem()
}

func (o GetVipInstanceResultOutput) ToGetVipInstanceResultOutput() GetVipInstanceResultOutput {
	return o
}

func (o GetVipInstanceResultOutput) ToGetVipInstanceResultOutputWithContext(ctx context.Context) GetVipInstanceResultOutput {
	return o
}

func (o GetVipInstanceResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetVipInstanceResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o GetVipInstanceResultOutput) ClusterInfos() GetVipInstanceClusterInfoArrayOutput {
	return o.ApplyT(func(v GetVipInstanceResult) []GetVipInstanceClusterInfo { return v.ClusterInfos }).(GetVipInstanceClusterInfoArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetVipInstanceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetVipInstanceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetVipInstanceResultOutput) InstanceConfigs() GetVipInstanceInstanceConfigArrayOutput {
	return o.ApplyT(func(v GetVipInstanceResult) []GetVipInstanceInstanceConfig { return v.InstanceConfigs }).(GetVipInstanceInstanceConfigArrayOutput)
}

func (o GetVipInstanceResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetVipInstanceResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetVipInstanceResultOutput{})
}
