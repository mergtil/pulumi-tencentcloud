// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tdmq

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetRocketmqMessages(ctx *pulumi.Context, args *GetRocketmqMessagesArgs, opts ...pulumi.InvokeOption) (*GetRocketmqMessagesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRocketmqMessagesResult
	err := ctx.Invoke("tencentcloud:Tdmq/getRocketmqMessages:getRocketmqMessages", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRocketmqMessages.
type GetRocketmqMessagesArgs struct {
	ClusterId        string  `pulumi:"clusterId"`
	EnvironmentId    string  `pulumi:"environmentId"`
	MsgId            string  `pulumi:"msgId"`
	QueryDlqMsg      *bool   `pulumi:"queryDlqMsg"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	TopicName        string  `pulumi:"topicName"`
}

// A collection of values returned by getRocketmqMessages.
type GetRocketmqMessagesResult struct {
	Body          string `pulumi:"body"`
	ClusterId     string `pulumi:"clusterId"`
	EnvironmentId string `pulumi:"environmentId"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                            `pulumi:"id"`
	MessageTracks    []GetRocketmqMessagesMessageTrack `pulumi:"messageTracks"`
	MsgId            string                            `pulumi:"msgId"`
	ProduceTime      string                            `pulumi:"produceTime"`
	ProducerAddr     string                            `pulumi:"producerAddr"`
	Properties       string                            `pulumi:"properties"`
	QueryDlqMsg      *bool                             `pulumi:"queryDlqMsg"`
	ResultOutputFile *string                           `pulumi:"resultOutputFile"`
	ShowTopicName    string                            `pulumi:"showTopicName"`
	TopicName        string                            `pulumi:"topicName"`
}

func GetRocketmqMessagesOutput(ctx *pulumi.Context, args GetRocketmqMessagesOutputArgs, opts ...pulumi.InvokeOption) GetRocketmqMessagesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRocketmqMessagesResult, error) {
			args := v.(GetRocketmqMessagesArgs)
			r, err := GetRocketmqMessages(ctx, &args, opts...)
			var s GetRocketmqMessagesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRocketmqMessagesResultOutput)
}

// A collection of arguments for invoking getRocketmqMessages.
type GetRocketmqMessagesOutputArgs struct {
	ClusterId        pulumi.StringInput    `pulumi:"clusterId"`
	EnvironmentId    pulumi.StringInput    `pulumi:"environmentId"`
	MsgId            pulumi.StringInput    `pulumi:"msgId"`
	QueryDlqMsg      pulumi.BoolPtrInput   `pulumi:"queryDlqMsg"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	TopicName        pulumi.StringInput    `pulumi:"topicName"`
}

func (GetRocketmqMessagesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRocketmqMessagesArgs)(nil)).Elem()
}

// A collection of values returned by getRocketmqMessages.
type GetRocketmqMessagesResultOutput struct{ *pulumi.OutputState }

func (GetRocketmqMessagesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRocketmqMessagesResult)(nil)).Elem()
}

func (o GetRocketmqMessagesResultOutput) ToGetRocketmqMessagesResultOutput() GetRocketmqMessagesResultOutput {
	return o
}

func (o GetRocketmqMessagesResultOutput) ToGetRocketmqMessagesResultOutputWithContext(ctx context.Context) GetRocketmqMessagesResultOutput {
	return o
}

func (o GetRocketmqMessagesResultOutput) Body() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqMessagesResult) string { return v.Body }).(pulumi.StringOutput)
}

func (o GetRocketmqMessagesResultOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqMessagesResult) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o GetRocketmqMessagesResultOutput) EnvironmentId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqMessagesResult) string { return v.EnvironmentId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRocketmqMessagesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqMessagesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRocketmqMessagesResultOutput) MessageTracks() GetRocketmqMessagesMessageTrackArrayOutput {
	return o.ApplyT(func(v GetRocketmqMessagesResult) []GetRocketmqMessagesMessageTrack { return v.MessageTracks }).(GetRocketmqMessagesMessageTrackArrayOutput)
}

func (o GetRocketmqMessagesResultOutput) MsgId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqMessagesResult) string { return v.MsgId }).(pulumi.StringOutput)
}

func (o GetRocketmqMessagesResultOutput) ProduceTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqMessagesResult) string { return v.ProduceTime }).(pulumi.StringOutput)
}

func (o GetRocketmqMessagesResultOutput) ProducerAddr() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqMessagesResult) string { return v.ProducerAddr }).(pulumi.StringOutput)
}

func (o GetRocketmqMessagesResultOutput) Properties() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqMessagesResult) string { return v.Properties }).(pulumi.StringOutput)
}

func (o GetRocketmqMessagesResultOutput) QueryDlqMsg() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetRocketmqMessagesResult) *bool { return v.QueryDlqMsg }).(pulumi.BoolPtrOutput)
}

func (o GetRocketmqMessagesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRocketmqMessagesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetRocketmqMessagesResultOutput) ShowTopicName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqMessagesResult) string { return v.ShowTopicName }).(pulumi.StringOutput)
}

func (o GetRocketmqMessagesResultOutput) TopicName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRocketmqMessagesResult) string { return v.TopicName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRocketmqMessagesResultOutput{})
}
