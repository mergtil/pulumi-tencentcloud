// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tdmq

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetRabbitmqNodeList(ctx *pulumi.Context, args *GetRabbitmqNodeListArgs, opts ...pulumi.InvokeOption) (*GetRabbitmqNodeListResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRabbitmqNodeListResult
	err := ctx.Invoke("tencentcloud:Tdmq/getRabbitmqNodeList:getRabbitmqNodeList", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRabbitmqNodeList.
type GetRabbitmqNodeListArgs struct {
	Filters          []GetRabbitmqNodeListFilter `pulumi:"filters"`
	InstanceId       string                      `pulumi:"instanceId"`
	NodeName         *string                     `pulumi:"nodeName"`
	ResultOutputFile *string                     `pulumi:"resultOutputFile"`
	SortElement      *string                     `pulumi:"sortElement"`
	SortOrder        *string                     `pulumi:"sortOrder"`
}

// A collection of values returned by getRabbitmqNodeList.
type GetRabbitmqNodeListResult struct {
	Filters []GetRabbitmqNodeListFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                        `pulumi:"id"`
	InstanceId       string                        `pulumi:"instanceId"`
	NodeLists        []GetRabbitmqNodeListNodeList `pulumi:"nodeLists"`
	NodeName         *string                       `pulumi:"nodeName"`
	ResultOutputFile *string                       `pulumi:"resultOutputFile"`
	SortElement      *string                       `pulumi:"sortElement"`
	SortOrder        *string                       `pulumi:"sortOrder"`
}

func GetRabbitmqNodeListOutput(ctx *pulumi.Context, args GetRabbitmqNodeListOutputArgs, opts ...pulumi.InvokeOption) GetRabbitmqNodeListResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRabbitmqNodeListResult, error) {
			args := v.(GetRabbitmqNodeListArgs)
			r, err := GetRabbitmqNodeList(ctx, &args, opts...)
			var s GetRabbitmqNodeListResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRabbitmqNodeListResultOutput)
}

// A collection of arguments for invoking getRabbitmqNodeList.
type GetRabbitmqNodeListOutputArgs struct {
	Filters          GetRabbitmqNodeListFilterArrayInput `pulumi:"filters"`
	InstanceId       pulumi.StringInput                  `pulumi:"instanceId"`
	NodeName         pulumi.StringPtrInput               `pulumi:"nodeName"`
	ResultOutputFile pulumi.StringPtrInput               `pulumi:"resultOutputFile"`
	SortElement      pulumi.StringPtrInput               `pulumi:"sortElement"`
	SortOrder        pulumi.StringPtrInput               `pulumi:"sortOrder"`
}

func (GetRabbitmqNodeListOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRabbitmqNodeListArgs)(nil)).Elem()
}

// A collection of values returned by getRabbitmqNodeList.
type GetRabbitmqNodeListResultOutput struct{ *pulumi.OutputState }

func (GetRabbitmqNodeListResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRabbitmqNodeListResult)(nil)).Elem()
}

func (o GetRabbitmqNodeListResultOutput) ToGetRabbitmqNodeListResultOutput() GetRabbitmqNodeListResultOutput {
	return o
}

func (o GetRabbitmqNodeListResultOutput) ToGetRabbitmqNodeListResultOutputWithContext(ctx context.Context) GetRabbitmqNodeListResultOutput {
	return o
}

func (o GetRabbitmqNodeListResultOutput) Filters() GetRabbitmqNodeListFilterArrayOutput {
	return o.ApplyT(func(v GetRabbitmqNodeListResult) []GetRabbitmqNodeListFilter { return v.Filters }).(GetRabbitmqNodeListFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRabbitmqNodeListResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRabbitmqNodeListResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRabbitmqNodeListResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRabbitmqNodeListResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetRabbitmqNodeListResultOutput) NodeLists() GetRabbitmqNodeListNodeListArrayOutput {
	return o.ApplyT(func(v GetRabbitmqNodeListResult) []GetRabbitmqNodeListNodeList { return v.NodeLists }).(GetRabbitmqNodeListNodeListArrayOutput)
}

func (o GetRabbitmqNodeListResultOutput) NodeName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRabbitmqNodeListResult) *string { return v.NodeName }).(pulumi.StringPtrOutput)
}

func (o GetRabbitmqNodeListResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRabbitmqNodeListResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetRabbitmqNodeListResultOutput) SortElement() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRabbitmqNodeListResult) *string { return v.SortElement }).(pulumi.StringPtrOutput)
}

func (o GetRabbitmqNodeListResultOutput) SortOrder() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRabbitmqNodeListResult) *string { return v.SortOrder }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRabbitmqNodeListResultOutput{})
}
