// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scf

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetLayerVersions(ctx *pulumi.Context, args *GetLayerVersionsArgs, opts ...pulumi.InvokeOption) (*GetLayerVersionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetLayerVersionsResult
	err := ctx.Invoke("tencentcloud:Scf/getLayerVersions:getLayerVersions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLayerVersions.
type GetLayerVersionsArgs struct {
	CompatibleRuntimes []string `pulumi:"compatibleRuntimes"`
	LayerName          string   `pulumi:"layerName"`
	ResultOutputFile   *string  `pulumi:"resultOutputFile"`
}

// A collection of values returned by getLayerVersions.
type GetLayerVersionsResult struct {
	CompatibleRuntimes []string `pulumi:"compatibleRuntimes"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                         `pulumi:"id"`
	LayerName        string                         `pulumi:"layerName"`
	LayerVersions    []GetLayerVersionsLayerVersion `pulumi:"layerVersions"`
	ResultOutputFile *string                        `pulumi:"resultOutputFile"`
}

func GetLayerVersionsOutput(ctx *pulumi.Context, args GetLayerVersionsOutputArgs, opts ...pulumi.InvokeOption) GetLayerVersionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetLayerVersionsResult, error) {
			args := v.(GetLayerVersionsArgs)
			r, err := GetLayerVersions(ctx, &args, opts...)
			var s GetLayerVersionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetLayerVersionsResultOutput)
}

// A collection of arguments for invoking getLayerVersions.
type GetLayerVersionsOutputArgs struct {
	CompatibleRuntimes pulumi.StringArrayInput `pulumi:"compatibleRuntimes"`
	LayerName          pulumi.StringInput      `pulumi:"layerName"`
	ResultOutputFile   pulumi.StringPtrInput   `pulumi:"resultOutputFile"`
}

func (GetLayerVersionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLayerVersionsArgs)(nil)).Elem()
}

// A collection of values returned by getLayerVersions.
type GetLayerVersionsResultOutput struct{ *pulumi.OutputState }

func (GetLayerVersionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLayerVersionsResult)(nil)).Elem()
}

func (o GetLayerVersionsResultOutput) ToGetLayerVersionsResultOutput() GetLayerVersionsResultOutput {
	return o
}

func (o GetLayerVersionsResultOutput) ToGetLayerVersionsResultOutputWithContext(ctx context.Context) GetLayerVersionsResultOutput {
	return o
}

func (o GetLayerVersionsResultOutput) CompatibleRuntimes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetLayerVersionsResult) []string { return v.CompatibleRuntimes }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetLayerVersionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetLayerVersionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetLayerVersionsResultOutput) LayerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLayerVersionsResult) string { return v.LayerName }).(pulumi.StringOutput)
}

func (o GetLayerVersionsResultOutput) LayerVersions() GetLayerVersionsLayerVersionArrayOutput {
	return o.ApplyT(func(v GetLayerVersionsResult) []GetLayerVersionsLayerVersion { return v.LayerVersions }).(GetLayerVersionsLayerVersionArrayOutput)
}

func (o GetLayerVersionsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetLayerVersionsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetLayerVersionsResultOutput{})
}
