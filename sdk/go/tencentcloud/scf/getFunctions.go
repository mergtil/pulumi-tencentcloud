// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scf

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetFunctions(ctx *pulumi.Context, args *GetFunctionsArgs, opts ...pulumi.InvokeOption) (*GetFunctionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetFunctionsResult
	err := ctx.Invoke("tencentcloud:Scf/getFunctions:getFunctions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFunctions.
type GetFunctionsArgs struct {
	Description      *string                `pulumi:"description"`
	Name             *string                `pulumi:"name"`
	Namespace        *string                `pulumi:"namespace"`
	ResultOutputFile *string                `pulumi:"resultOutputFile"`
	Tags             map[string]interface{} `pulumi:"tags"`
}

// A collection of values returned by getFunctions.
type GetFunctionsResult struct {
	Description *string                `pulumi:"description"`
	Functions   []GetFunctionsFunction `pulumi:"functions"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                 `pulumi:"id"`
	Name             *string                `pulumi:"name"`
	Namespace        *string                `pulumi:"namespace"`
	ResultOutputFile *string                `pulumi:"resultOutputFile"`
	Tags             map[string]interface{} `pulumi:"tags"`
}

func GetFunctionsOutput(ctx *pulumi.Context, args GetFunctionsOutputArgs, opts ...pulumi.InvokeOption) GetFunctionsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetFunctionsResult, error) {
			args := v.(GetFunctionsArgs)
			r, err := GetFunctions(ctx, &args, opts...)
			var s GetFunctionsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetFunctionsResultOutput)
}

// A collection of arguments for invoking getFunctions.
type GetFunctionsOutputArgs struct {
	Description      pulumi.StringPtrInput `pulumi:"description"`
	Name             pulumi.StringPtrInput `pulumi:"name"`
	Namespace        pulumi.StringPtrInput `pulumi:"namespace"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	Tags             pulumi.MapInput       `pulumi:"tags"`
}

func (GetFunctionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsArgs)(nil)).Elem()
}

// A collection of values returned by getFunctions.
type GetFunctionsResultOutput struct{ *pulumi.OutputState }

func (GetFunctionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFunctionsResult)(nil)).Elem()
}

func (o GetFunctionsResultOutput) ToGetFunctionsResultOutput() GetFunctionsResultOutput {
	return o
}

func (o GetFunctionsResultOutput) ToGetFunctionsResultOutputWithContext(ctx context.Context) GetFunctionsResultOutput {
	return o
}

func (o GetFunctionsResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFunctionsResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o GetFunctionsResultOutput) Functions() GetFunctionsFunctionArrayOutput {
	return o.ApplyT(func(v GetFunctionsResult) []GetFunctionsFunction { return v.Functions }).(GetFunctionsFunctionArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetFunctionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetFunctionsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetFunctionsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFunctionsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetFunctionsResultOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFunctionsResult) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

func (o GetFunctionsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFunctionsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetFunctionsResultOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetFunctionsResult) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetFunctionsResultOutput{})
}
