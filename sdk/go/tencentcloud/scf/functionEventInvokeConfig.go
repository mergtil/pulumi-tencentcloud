// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package scf

import (
	"context"
	"reflect"

	"errors"
	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type FunctionEventInvokeConfig struct {
	pulumi.CustomResourceState

	// Async retry configuration information.
	AsyncTriggerConfig FunctionEventInvokeConfigAsyncTriggerConfigOutput `pulumi:"asyncTriggerConfig"`
	// Function name.
	FunctionName pulumi.StringOutput `pulumi:"functionName"`
	// Function namespace. Default value: default.
	Namespace pulumi.StringPtrOutput `pulumi:"namespace"`
}

// NewFunctionEventInvokeConfig registers a new resource with the given unique name, arguments, and options.
func NewFunctionEventInvokeConfig(ctx *pulumi.Context,
	name string, args *FunctionEventInvokeConfigArgs, opts ...pulumi.ResourceOption) (*FunctionEventInvokeConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AsyncTriggerConfig == nil {
		return nil, errors.New("invalid value for required argument 'AsyncTriggerConfig'")
	}
	if args.FunctionName == nil {
		return nil, errors.New("invalid value for required argument 'FunctionName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FunctionEventInvokeConfig
	err := ctx.RegisterResource("tencentcloud:Scf/functionEventInvokeConfig:FunctionEventInvokeConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFunctionEventInvokeConfig gets an existing FunctionEventInvokeConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFunctionEventInvokeConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FunctionEventInvokeConfigState, opts ...pulumi.ResourceOption) (*FunctionEventInvokeConfig, error) {
	var resource FunctionEventInvokeConfig
	err := ctx.ReadResource("tencentcloud:Scf/functionEventInvokeConfig:FunctionEventInvokeConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FunctionEventInvokeConfig resources.
type functionEventInvokeConfigState struct {
	// Async retry configuration information.
	AsyncTriggerConfig *FunctionEventInvokeConfigAsyncTriggerConfig `pulumi:"asyncTriggerConfig"`
	// Function name.
	FunctionName *string `pulumi:"functionName"`
	// Function namespace. Default value: default.
	Namespace *string `pulumi:"namespace"`
}

type FunctionEventInvokeConfigState struct {
	// Async retry configuration information.
	AsyncTriggerConfig FunctionEventInvokeConfigAsyncTriggerConfigPtrInput
	// Function name.
	FunctionName pulumi.StringPtrInput
	// Function namespace. Default value: default.
	Namespace pulumi.StringPtrInput
}

func (FunctionEventInvokeConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*functionEventInvokeConfigState)(nil)).Elem()
}

type functionEventInvokeConfigArgs struct {
	// Async retry configuration information.
	AsyncTriggerConfig FunctionEventInvokeConfigAsyncTriggerConfig `pulumi:"asyncTriggerConfig"`
	// Function name.
	FunctionName string `pulumi:"functionName"`
	// Function namespace. Default value: default.
	Namespace *string `pulumi:"namespace"`
}

// The set of arguments for constructing a FunctionEventInvokeConfig resource.
type FunctionEventInvokeConfigArgs struct {
	// Async retry configuration information.
	AsyncTriggerConfig FunctionEventInvokeConfigAsyncTriggerConfigInput
	// Function name.
	FunctionName pulumi.StringInput
	// Function namespace. Default value: default.
	Namespace pulumi.StringPtrInput
}

func (FunctionEventInvokeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*functionEventInvokeConfigArgs)(nil)).Elem()
}

type FunctionEventInvokeConfigInput interface {
	pulumi.Input

	ToFunctionEventInvokeConfigOutput() FunctionEventInvokeConfigOutput
	ToFunctionEventInvokeConfigOutputWithContext(ctx context.Context) FunctionEventInvokeConfigOutput
}

func (*FunctionEventInvokeConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEventInvokeConfig)(nil)).Elem()
}

func (i *FunctionEventInvokeConfig) ToFunctionEventInvokeConfigOutput() FunctionEventInvokeConfigOutput {
	return i.ToFunctionEventInvokeConfigOutputWithContext(context.Background())
}

func (i *FunctionEventInvokeConfig) ToFunctionEventInvokeConfigOutputWithContext(ctx context.Context) FunctionEventInvokeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventInvokeConfigOutput)
}

// FunctionEventInvokeConfigArrayInput is an input type that accepts FunctionEventInvokeConfigArray and FunctionEventInvokeConfigArrayOutput values.
// You can construct a concrete instance of `FunctionEventInvokeConfigArrayInput` via:
//
//	FunctionEventInvokeConfigArray{ FunctionEventInvokeConfigArgs{...} }
type FunctionEventInvokeConfigArrayInput interface {
	pulumi.Input

	ToFunctionEventInvokeConfigArrayOutput() FunctionEventInvokeConfigArrayOutput
	ToFunctionEventInvokeConfigArrayOutputWithContext(context.Context) FunctionEventInvokeConfigArrayOutput
}

type FunctionEventInvokeConfigArray []FunctionEventInvokeConfigInput

func (FunctionEventInvokeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FunctionEventInvokeConfig)(nil)).Elem()
}

func (i FunctionEventInvokeConfigArray) ToFunctionEventInvokeConfigArrayOutput() FunctionEventInvokeConfigArrayOutput {
	return i.ToFunctionEventInvokeConfigArrayOutputWithContext(context.Background())
}

func (i FunctionEventInvokeConfigArray) ToFunctionEventInvokeConfigArrayOutputWithContext(ctx context.Context) FunctionEventInvokeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventInvokeConfigArrayOutput)
}

// FunctionEventInvokeConfigMapInput is an input type that accepts FunctionEventInvokeConfigMap and FunctionEventInvokeConfigMapOutput values.
// You can construct a concrete instance of `FunctionEventInvokeConfigMapInput` via:
//
//	FunctionEventInvokeConfigMap{ "key": FunctionEventInvokeConfigArgs{...} }
type FunctionEventInvokeConfigMapInput interface {
	pulumi.Input

	ToFunctionEventInvokeConfigMapOutput() FunctionEventInvokeConfigMapOutput
	ToFunctionEventInvokeConfigMapOutputWithContext(context.Context) FunctionEventInvokeConfigMapOutput
}

type FunctionEventInvokeConfigMap map[string]FunctionEventInvokeConfigInput

func (FunctionEventInvokeConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FunctionEventInvokeConfig)(nil)).Elem()
}

func (i FunctionEventInvokeConfigMap) ToFunctionEventInvokeConfigMapOutput() FunctionEventInvokeConfigMapOutput {
	return i.ToFunctionEventInvokeConfigMapOutputWithContext(context.Background())
}

func (i FunctionEventInvokeConfigMap) ToFunctionEventInvokeConfigMapOutputWithContext(ctx context.Context) FunctionEventInvokeConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FunctionEventInvokeConfigMapOutput)
}

type FunctionEventInvokeConfigOutput struct{ *pulumi.OutputState }

func (FunctionEventInvokeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FunctionEventInvokeConfig)(nil)).Elem()
}

func (o FunctionEventInvokeConfigOutput) ToFunctionEventInvokeConfigOutput() FunctionEventInvokeConfigOutput {
	return o
}

func (o FunctionEventInvokeConfigOutput) ToFunctionEventInvokeConfigOutputWithContext(ctx context.Context) FunctionEventInvokeConfigOutput {
	return o
}

// Async retry configuration information.
func (o FunctionEventInvokeConfigOutput) AsyncTriggerConfig() FunctionEventInvokeConfigAsyncTriggerConfigOutput {
	return o.ApplyT(func(v *FunctionEventInvokeConfig) FunctionEventInvokeConfigAsyncTriggerConfigOutput {
		return v.AsyncTriggerConfig
	}).(FunctionEventInvokeConfigAsyncTriggerConfigOutput)
}

// Function name.
func (o FunctionEventInvokeConfigOutput) FunctionName() pulumi.StringOutput {
	return o.ApplyT(func(v *FunctionEventInvokeConfig) pulumi.StringOutput { return v.FunctionName }).(pulumi.StringOutput)
}

// Function namespace. Default value: default.
func (o FunctionEventInvokeConfigOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FunctionEventInvokeConfig) pulumi.StringPtrOutput { return v.Namespace }).(pulumi.StringPtrOutput)
}

type FunctionEventInvokeConfigArrayOutput struct{ *pulumi.OutputState }

func (FunctionEventInvokeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FunctionEventInvokeConfig)(nil)).Elem()
}

func (o FunctionEventInvokeConfigArrayOutput) ToFunctionEventInvokeConfigArrayOutput() FunctionEventInvokeConfigArrayOutput {
	return o
}

func (o FunctionEventInvokeConfigArrayOutput) ToFunctionEventInvokeConfigArrayOutputWithContext(ctx context.Context) FunctionEventInvokeConfigArrayOutput {
	return o
}

func (o FunctionEventInvokeConfigArrayOutput) Index(i pulumi.IntInput) FunctionEventInvokeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FunctionEventInvokeConfig {
		return vs[0].([]*FunctionEventInvokeConfig)[vs[1].(int)]
	}).(FunctionEventInvokeConfigOutput)
}

type FunctionEventInvokeConfigMapOutput struct{ *pulumi.OutputState }

func (FunctionEventInvokeConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FunctionEventInvokeConfig)(nil)).Elem()
}

func (o FunctionEventInvokeConfigMapOutput) ToFunctionEventInvokeConfigMapOutput() FunctionEventInvokeConfigMapOutput {
	return o
}

func (o FunctionEventInvokeConfigMapOutput) ToFunctionEventInvokeConfigMapOutputWithContext(ctx context.Context) FunctionEventInvokeConfigMapOutput {
	return o
}

func (o FunctionEventInvokeConfigMapOutput) MapIndex(k pulumi.StringInput) FunctionEventInvokeConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FunctionEventInvokeConfig {
		return vs[0].(map[string]*FunctionEventInvokeConfig)[vs[1].(string)]
	}).(FunctionEventInvokeConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionEventInvokeConfigInput)(nil)).Elem(), &FunctionEventInvokeConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionEventInvokeConfigArrayInput)(nil)).Elem(), FunctionEventInvokeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FunctionEventInvokeConfigMapInput)(nil)).Elem(), FunctionEventInvokeConfigMap{})
	pulumi.RegisterOutputType(FunctionEventInvokeConfigOutput{})
	pulumi.RegisterOutputType(FunctionEventInvokeConfigArrayOutput{})
	pulumi.RegisterOutputType(FunctionEventInvokeConfigMapOutput{})
}
