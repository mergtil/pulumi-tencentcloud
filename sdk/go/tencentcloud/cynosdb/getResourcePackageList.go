// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cynosdb

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetResourcePackageList(ctx *pulumi.Context, args *GetResourcePackageListArgs, opts ...pulumi.InvokeOption) (*GetResourcePackageListResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetResourcePackageListResult
	err := ctx.Invoke("tencentcloud:Cynosdb/getResourcePackageList:getResourcePackageList", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getResourcePackageList.
type GetResourcePackageListArgs struct {
	OrderBies        []string `pulumi:"orderBies"`
	OrderDirection   *string  `pulumi:"orderDirection"`
	PackageIds       []string `pulumi:"packageIds"`
	PackageNames     []string `pulumi:"packageNames"`
	PackageRegions   []string `pulumi:"packageRegions"`
	PackageTypes     []string `pulumi:"packageTypes"`
	ResultOutputFile *string  `pulumi:"resultOutputFile"`
	Statuses         []string `pulumi:"statuses"`
}

// A collection of values returned by getResourcePackageList.
type GetResourcePackageListResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id                   string                                      `pulumi:"id"`
	OrderBies            []string                                    `pulumi:"orderBies"`
	OrderDirection       *string                                     `pulumi:"orderDirection"`
	PackageIds           []string                                    `pulumi:"packageIds"`
	PackageNames         []string                                    `pulumi:"packageNames"`
	PackageRegions       []string                                    `pulumi:"packageRegions"`
	PackageTypes         []string                                    `pulumi:"packageTypes"`
	ResourcePackageLists []GetResourcePackageListResourcePackageList `pulumi:"resourcePackageLists"`
	ResultOutputFile     *string                                     `pulumi:"resultOutputFile"`
	Statuses             []string                                    `pulumi:"statuses"`
}

func GetResourcePackageListOutput(ctx *pulumi.Context, args GetResourcePackageListOutputArgs, opts ...pulumi.InvokeOption) GetResourcePackageListResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetResourcePackageListResult, error) {
			args := v.(GetResourcePackageListArgs)
			r, err := GetResourcePackageList(ctx, &args, opts...)
			var s GetResourcePackageListResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetResourcePackageListResultOutput)
}

// A collection of arguments for invoking getResourcePackageList.
type GetResourcePackageListOutputArgs struct {
	OrderBies        pulumi.StringArrayInput `pulumi:"orderBies"`
	OrderDirection   pulumi.StringPtrInput   `pulumi:"orderDirection"`
	PackageIds       pulumi.StringArrayInput `pulumi:"packageIds"`
	PackageNames     pulumi.StringArrayInput `pulumi:"packageNames"`
	PackageRegions   pulumi.StringArrayInput `pulumi:"packageRegions"`
	PackageTypes     pulumi.StringArrayInput `pulumi:"packageTypes"`
	ResultOutputFile pulumi.StringPtrInput   `pulumi:"resultOutputFile"`
	Statuses         pulumi.StringArrayInput `pulumi:"statuses"`
}

func (GetResourcePackageListOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourcePackageListArgs)(nil)).Elem()
}

// A collection of values returned by getResourcePackageList.
type GetResourcePackageListResultOutput struct{ *pulumi.OutputState }

func (GetResourcePackageListResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetResourcePackageListResult)(nil)).Elem()
}

func (o GetResourcePackageListResultOutput) ToGetResourcePackageListResultOutput() GetResourcePackageListResultOutput {
	return o
}

func (o GetResourcePackageListResultOutput) ToGetResourcePackageListResultOutputWithContext(ctx context.Context) GetResourcePackageListResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetResourcePackageListResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetResourcePackageListResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetResourcePackageListResultOutput) OrderBies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResourcePackageListResult) []string { return v.OrderBies }).(pulumi.StringArrayOutput)
}

func (o GetResourcePackageListResultOutput) OrderDirection() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetResourcePackageListResult) *string { return v.OrderDirection }).(pulumi.StringPtrOutput)
}

func (o GetResourcePackageListResultOutput) PackageIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResourcePackageListResult) []string { return v.PackageIds }).(pulumi.StringArrayOutput)
}

func (o GetResourcePackageListResultOutput) PackageNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResourcePackageListResult) []string { return v.PackageNames }).(pulumi.StringArrayOutput)
}

func (o GetResourcePackageListResultOutput) PackageRegions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResourcePackageListResult) []string { return v.PackageRegions }).(pulumi.StringArrayOutput)
}

func (o GetResourcePackageListResultOutput) PackageTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResourcePackageListResult) []string { return v.PackageTypes }).(pulumi.StringArrayOutput)
}

func (o GetResourcePackageListResultOutput) ResourcePackageLists() GetResourcePackageListResourcePackageListArrayOutput {
	return o.ApplyT(func(v GetResourcePackageListResult) []GetResourcePackageListResourcePackageList {
		return v.ResourcePackageLists
	}).(GetResourcePackageListResourcePackageListArrayOutput)
}

func (o GetResourcePackageListResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetResourcePackageListResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetResourcePackageListResultOutput) Statuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetResourcePackageListResult) []string { return v.Statuses }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetResourcePackageListResultOutput{})
}
