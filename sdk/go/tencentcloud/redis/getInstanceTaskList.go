// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetInstanceTaskList(ctx *pulumi.Context, args *GetInstanceTaskListArgs, opts ...pulumi.InvokeOption) (*GetInstanceTaskListResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetInstanceTaskListResult
	err := ctx.Invoke("tencentcloud:Redis/getInstanceTaskList:getInstanceTaskList", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstanceTaskList.
type GetInstanceTaskListArgs struct {
	BeginTime        *string  `pulumi:"beginTime"`
	EndTime          *string  `pulumi:"endTime"`
	InstanceId       *string  `pulumi:"instanceId"`
	InstanceName     *string  `pulumi:"instanceName"`
	OperateUins      []string `pulumi:"operateUins"`
	ProjectIds       []int    `pulumi:"projectIds"`
	ResultOutputFile *string  `pulumi:"resultOutputFile"`
	Results          []int    `pulumi:"results"`
	TaskStatuses     []int    `pulumi:"taskStatuses"`
	TaskTypes        []string `pulumi:"taskTypes"`
}

// A collection of values returned by getInstanceTaskList.
type GetInstanceTaskListResult struct {
	BeginTime *string `pulumi:"beginTime"`
	EndTime   *string `pulumi:"endTime"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                    `pulumi:"id"`
	InstanceId       *string                   `pulumi:"instanceId"`
	InstanceName     *string                   `pulumi:"instanceName"`
	OperateUins      []string                  `pulumi:"operateUins"`
	ProjectIds       []int                     `pulumi:"projectIds"`
	ResultOutputFile *string                   `pulumi:"resultOutputFile"`
	Results          []int                     `pulumi:"results"`
	TaskStatuses     []int                     `pulumi:"taskStatuses"`
	TaskTypes        []string                  `pulumi:"taskTypes"`
	Tasks            []GetInstanceTaskListTask `pulumi:"tasks"`
}

func GetInstanceTaskListOutput(ctx *pulumi.Context, args GetInstanceTaskListOutputArgs, opts ...pulumi.InvokeOption) GetInstanceTaskListResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetInstanceTaskListResult, error) {
			args := v.(GetInstanceTaskListArgs)
			r, err := GetInstanceTaskList(ctx, &args, opts...)
			var s GetInstanceTaskListResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetInstanceTaskListResultOutput)
}

// A collection of arguments for invoking getInstanceTaskList.
type GetInstanceTaskListOutputArgs struct {
	BeginTime        pulumi.StringPtrInput   `pulumi:"beginTime"`
	EndTime          pulumi.StringPtrInput   `pulumi:"endTime"`
	InstanceId       pulumi.StringPtrInput   `pulumi:"instanceId"`
	InstanceName     pulumi.StringPtrInput   `pulumi:"instanceName"`
	OperateUins      pulumi.StringArrayInput `pulumi:"operateUins"`
	ProjectIds       pulumi.IntArrayInput    `pulumi:"projectIds"`
	ResultOutputFile pulumi.StringPtrInput   `pulumi:"resultOutputFile"`
	Results          pulumi.IntArrayInput    `pulumi:"results"`
	TaskStatuses     pulumi.IntArrayInput    `pulumi:"taskStatuses"`
	TaskTypes        pulumi.StringArrayInput `pulumi:"taskTypes"`
}

func (GetInstanceTaskListOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTaskListArgs)(nil)).Elem()
}

// A collection of values returned by getInstanceTaskList.
type GetInstanceTaskListResultOutput struct{ *pulumi.OutputState }

func (GetInstanceTaskListResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceTaskListResult)(nil)).Elem()
}

func (o GetInstanceTaskListResultOutput) ToGetInstanceTaskListResultOutput() GetInstanceTaskListResultOutput {
	return o
}

func (o GetInstanceTaskListResultOutput) ToGetInstanceTaskListResultOutputWithContext(ctx context.Context) GetInstanceTaskListResultOutput {
	return o
}

func (o GetInstanceTaskListResultOutput) BeginTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceTaskListResult) *string { return v.BeginTime }).(pulumi.StringPtrOutput)
}

func (o GetInstanceTaskListResultOutput) EndTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceTaskListResult) *string { return v.EndTime }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetInstanceTaskListResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceTaskListResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetInstanceTaskListResultOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceTaskListResult) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

func (o GetInstanceTaskListResultOutput) InstanceName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceTaskListResult) *string { return v.InstanceName }).(pulumi.StringPtrOutput)
}

func (o GetInstanceTaskListResultOutput) OperateUins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceTaskListResult) []string { return v.OperateUins }).(pulumi.StringArrayOutput)
}

func (o GetInstanceTaskListResultOutput) ProjectIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetInstanceTaskListResult) []int { return v.ProjectIds }).(pulumi.IntArrayOutput)
}

func (o GetInstanceTaskListResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceTaskListResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetInstanceTaskListResultOutput) Results() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetInstanceTaskListResult) []int { return v.Results }).(pulumi.IntArrayOutput)
}

func (o GetInstanceTaskListResultOutput) TaskStatuses() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetInstanceTaskListResult) []int { return v.TaskStatuses }).(pulumi.IntArrayOutput)
}

func (o GetInstanceTaskListResultOutput) TaskTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceTaskListResult) []string { return v.TaskTypes }).(pulumi.StringArrayOutput)
}

func (o GetInstanceTaskListResultOutput) Tasks() GetInstanceTaskListTaskArrayOutput {
	return o.ApplyT(func(v GetInstanceTaskListResult) []GetInstanceTaskListTask { return v.Tasks }).(GetInstanceTaskListTaskArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInstanceTaskListResultOutput{})
}
