// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetInstanceZoneInfo(ctx *pulumi.Context, args *GetInstanceZoneInfoArgs, opts ...pulumi.InvokeOption) (*GetInstanceZoneInfoResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetInstanceZoneInfoResult
	err := ctx.Invoke("tencentcloud:Redis/getInstanceZoneInfo:getInstanceZoneInfo", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstanceZoneInfo.
type GetInstanceZoneInfoArgs struct {
	InstanceId       *string `pulumi:"instanceId"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getInstanceZoneInfo.
type GetInstanceZoneInfoResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id               string                            `pulumi:"id"`
	InstanceId       *string                           `pulumi:"instanceId"`
	ReplicaGroups    []GetInstanceZoneInfoReplicaGroup `pulumi:"replicaGroups"`
	ResultOutputFile *string                           `pulumi:"resultOutputFile"`
}

func GetInstanceZoneInfoOutput(ctx *pulumi.Context, args GetInstanceZoneInfoOutputArgs, opts ...pulumi.InvokeOption) GetInstanceZoneInfoResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetInstanceZoneInfoResult, error) {
			args := v.(GetInstanceZoneInfoArgs)
			r, err := GetInstanceZoneInfo(ctx, &args, opts...)
			var s GetInstanceZoneInfoResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetInstanceZoneInfoResultOutput)
}

// A collection of arguments for invoking getInstanceZoneInfo.
type GetInstanceZoneInfoOutputArgs struct {
	InstanceId       pulumi.StringPtrInput `pulumi:"instanceId"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetInstanceZoneInfoOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceZoneInfoArgs)(nil)).Elem()
}

// A collection of values returned by getInstanceZoneInfo.
type GetInstanceZoneInfoResultOutput struct{ *pulumi.OutputState }

func (GetInstanceZoneInfoResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceZoneInfoResult)(nil)).Elem()
}

func (o GetInstanceZoneInfoResultOutput) ToGetInstanceZoneInfoResultOutput() GetInstanceZoneInfoResultOutput {
	return o
}

func (o GetInstanceZoneInfoResultOutput) ToGetInstanceZoneInfoResultOutputWithContext(ctx context.Context) GetInstanceZoneInfoResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetInstanceZoneInfoResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceZoneInfoResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetInstanceZoneInfoResultOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceZoneInfoResult) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

func (o GetInstanceZoneInfoResultOutput) ReplicaGroups() GetInstanceZoneInfoReplicaGroupArrayOutput {
	return o.ApplyT(func(v GetInstanceZoneInfoResult) []GetInstanceZoneInfoReplicaGroup { return v.ReplicaGroups }).(GetInstanceZoneInfoReplicaGroupArrayOutput)
}

func (o GetInstanceZoneInfoResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstanceZoneInfoResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInstanceZoneInfoResultOutput{})
}
