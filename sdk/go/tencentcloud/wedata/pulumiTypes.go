// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package wedata

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GetRuleTemplatesData struct {
	CitationCount        int    `pulumi:"citationCount"`
	CompareType          int    `pulumi:"compareType"`
	Description          string `pulumi:"description"`
	MultiSourceFlag      bool   `pulumi:"multiSourceFlag"`
	Name                 string `pulumi:"name"`
	QualityDim           int    `pulumi:"qualityDim"`
	RuleTemplateId       int    `pulumi:"ruleTemplateId"`
	SourceContent        string `pulumi:"sourceContent"`
	SourceEngineTypes    []int  `pulumi:"sourceEngineTypes"`
	SourceObjectDataType int    `pulumi:"sourceObjectDataType"`
	SourceObjectType     int    `pulumi:"sourceObjectType"`
	SqlExpression        string `pulumi:"sqlExpression"`
	SubQualityDim        int    `pulumi:"subQualityDim"`
	Type                 int    `pulumi:"type"`
	UpdateTime           string `pulumi:"updateTime"`
	UserId               int    `pulumi:"userId"`
	UserName             string `pulumi:"userName"`
	WhereFlag            bool   `pulumi:"whereFlag"`
}

// GetRuleTemplatesDataInput is an input type that accepts GetRuleTemplatesDataArgs and GetRuleTemplatesDataOutput values.
// You can construct a concrete instance of `GetRuleTemplatesDataInput` via:
//
//	GetRuleTemplatesDataArgs{...}
type GetRuleTemplatesDataInput interface {
	pulumi.Input

	ToGetRuleTemplatesDataOutput() GetRuleTemplatesDataOutput
	ToGetRuleTemplatesDataOutputWithContext(context.Context) GetRuleTemplatesDataOutput
}

type GetRuleTemplatesDataArgs struct {
	CitationCount        pulumi.IntInput      `pulumi:"citationCount"`
	CompareType          pulumi.IntInput      `pulumi:"compareType"`
	Description          pulumi.StringInput   `pulumi:"description"`
	MultiSourceFlag      pulumi.BoolInput     `pulumi:"multiSourceFlag"`
	Name                 pulumi.StringInput   `pulumi:"name"`
	QualityDim           pulumi.IntInput      `pulumi:"qualityDim"`
	RuleTemplateId       pulumi.IntInput      `pulumi:"ruleTemplateId"`
	SourceContent        pulumi.StringInput   `pulumi:"sourceContent"`
	SourceEngineTypes    pulumi.IntArrayInput `pulumi:"sourceEngineTypes"`
	SourceObjectDataType pulumi.IntInput      `pulumi:"sourceObjectDataType"`
	SourceObjectType     pulumi.IntInput      `pulumi:"sourceObjectType"`
	SqlExpression        pulumi.StringInput   `pulumi:"sqlExpression"`
	SubQualityDim        pulumi.IntInput      `pulumi:"subQualityDim"`
	Type                 pulumi.IntInput      `pulumi:"type"`
	UpdateTime           pulumi.StringInput   `pulumi:"updateTime"`
	UserId               pulumi.IntInput      `pulumi:"userId"`
	UserName             pulumi.StringInput   `pulumi:"userName"`
	WhereFlag            pulumi.BoolInput     `pulumi:"whereFlag"`
}

func (GetRuleTemplatesDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuleTemplatesData)(nil)).Elem()
}

func (i GetRuleTemplatesDataArgs) ToGetRuleTemplatesDataOutput() GetRuleTemplatesDataOutput {
	return i.ToGetRuleTemplatesDataOutputWithContext(context.Background())
}

func (i GetRuleTemplatesDataArgs) ToGetRuleTemplatesDataOutputWithContext(ctx context.Context) GetRuleTemplatesDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRuleTemplatesDataOutput)
}

// GetRuleTemplatesDataArrayInput is an input type that accepts GetRuleTemplatesDataArray and GetRuleTemplatesDataArrayOutput values.
// You can construct a concrete instance of `GetRuleTemplatesDataArrayInput` via:
//
//	GetRuleTemplatesDataArray{ GetRuleTemplatesDataArgs{...} }
type GetRuleTemplatesDataArrayInput interface {
	pulumi.Input

	ToGetRuleTemplatesDataArrayOutput() GetRuleTemplatesDataArrayOutput
	ToGetRuleTemplatesDataArrayOutputWithContext(context.Context) GetRuleTemplatesDataArrayOutput
}

type GetRuleTemplatesDataArray []GetRuleTemplatesDataInput

func (GetRuleTemplatesDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRuleTemplatesData)(nil)).Elem()
}

func (i GetRuleTemplatesDataArray) ToGetRuleTemplatesDataArrayOutput() GetRuleTemplatesDataArrayOutput {
	return i.ToGetRuleTemplatesDataArrayOutputWithContext(context.Background())
}

func (i GetRuleTemplatesDataArray) ToGetRuleTemplatesDataArrayOutputWithContext(ctx context.Context) GetRuleTemplatesDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRuleTemplatesDataArrayOutput)
}

type GetRuleTemplatesDataOutput struct{ *pulumi.OutputState }

func (GetRuleTemplatesDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuleTemplatesData)(nil)).Elem()
}

func (o GetRuleTemplatesDataOutput) ToGetRuleTemplatesDataOutput() GetRuleTemplatesDataOutput {
	return o
}

func (o GetRuleTemplatesDataOutput) ToGetRuleTemplatesDataOutputWithContext(ctx context.Context) GetRuleTemplatesDataOutput {
	return o
}

func (o GetRuleTemplatesDataOutput) CitationCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) int { return v.CitationCount }).(pulumi.IntOutput)
}

func (o GetRuleTemplatesDataOutput) CompareType() pulumi.IntOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) int { return v.CompareType }).(pulumi.IntOutput)
}

func (o GetRuleTemplatesDataOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetRuleTemplatesDataOutput) MultiSourceFlag() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) bool { return v.MultiSourceFlag }).(pulumi.BoolOutput)
}

func (o GetRuleTemplatesDataOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRuleTemplatesDataOutput) QualityDim() pulumi.IntOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) int { return v.QualityDim }).(pulumi.IntOutput)
}

func (o GetRuleTemplatesDataOutput) RuleTemplateId() pulumi.IntOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) int { return v.RuleTemplateId }).(pulumi.IntOutput)
}

func (o GetRuleTemplatesDataOutput) SourceContent() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) string { return v.SourceContent }).(pulumi.StringOutput)
}

func (o GetRuleTemplatesDataOutput) SourceEngineTypes() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) []int { return v.SourceEngineTypes }).(pulumi.IntArrayOutput)
}

func (o GetRuleTemplatesDataOutput) SourceObjectDataType() pulumi.IntOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) int { return v.SourceObjectDataType }).(pulumi.IntOutput)
}

func (o GetRuleTemplatesDataOutput) SourceObjectType() pulumi.IntOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) int { return v.SourceObjectType }).(pulumi.IntOutput)
}

func (o GetRuleTemplatesDataOutput) SqlExpression() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) string { return v.SqlExpression }).(pulumi.StringOutput)
}

func (o GetRuleTemplatesDataOutput) SubQualityDim() pulumi.IntOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) int { return v.SubQualityDim }).(pulumi.IntOutput)
}

func (o GetRuleTemplatesDataOutput) Type() pulumi.IntOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) int { return v.Type }).(pulumi.IntOutput)
}

func (o GetRuleTemplatesDataOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) string { return v.UpdateTime }).(pulumi.StringOutput)
}

func (o GetRuleTemplatesDataOutput) UserId() pulumi.IntOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) int { return v.UserId }).(pulumi.IntOutput)
}

func (o GetRuleTemplatesDataOutput) UserName() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) string { return v.UserName }).(pulumi.StringOutput)
}

func (o GetRuleTemplatesDataOutput) WhereFlag() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRuleTemplatesData) bool { return v.WhereFlag }).(pulumi.BoolOutput)
}

type GetRuleTemplatesDataArrayOutput struct{ *pulumi.OutputState }

func (GetRuleTemplatesDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRuleTemplatesData)(nil)).Elem()
}

func (o GetRuleTemplatesDataArrayOutput) ToGetRuleTemplatesDataArrayOutput() GetRuleTemplatesDataArrayOutput {
	return o
}

func (o GetRuleTemplatesDataArrayOutput) ToGetRuleTemplatesDataArrayOutputWithContext(ctx context.Context) GetRuleTemplatesDataArrayOutput {
	return o
}

func (o GetRuleTemplatesDataArrayOutput) Index(i pulumi.IntInput) GetRuleTemplatesDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRuleTemplatesData {
		return vs[0].([]GetRuleTemplatesData)[vs[1].(int)]
	}).(GetRuleTemplatesDataOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetRuleTemplatesDataInput)(nil)).Elem(), GetRuleTemplatesDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRuleTemplatesDataArrayInput)(nil)).Elem(), GetRuleTemplatesDataArray{})
	pulumi.RegisterOutputType(GetRuleTemplatesDataOutput{})
	pulumi.RegisterOutputType(GetRuleTemplatesDataArrayOutput{})
}
