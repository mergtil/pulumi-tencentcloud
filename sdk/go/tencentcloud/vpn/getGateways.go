// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vpn

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetGateways(ctx *pulumi.Context, args *GetGatewaysArgs, opts ...pulumi.InvokeOption) (*GetGatewaysResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetGatewaysResult
	err := ctx.Invoke("tencentcloud:Vpn/getGateways:getGateways", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGateways.
type GetGatewaysArgs struct {
	Id               *string                `pulumi:"id"`
	Name             *string                `pulumi:"name"`
	PublicIpAddress  *string                `pulumi:"publicIpAddress"`
	ResultOutputFile *string                `pulumi:"resultOutputFile"`
	Tags             map[string]interface{} `pulumi:"tags"`
	VpcId            *string                `pulumi:"vpcId"`
	Zone             *string                `pulumi:"zone"`
}

// A collection of values returned by getGateways.
type GetGatewaysResult struct {
	GatewayLists     []GetGatewaysGatewayList `pulumi:"gatewayLists"`
	Id               *string                  `pulumi:"id"`
	Name             *string                  `pulumi:"name"`
	PublicIpAddress  *string                  `pulumi:"publicIpAddress"`
	ResultOutputFile *string                  `pulumi:"resultOutputFile"`
	Tags             map[string]interface{}   `pulumi:"tags"`
	VpcId            *string                  `pulumi:"vpcId"`
	Zone             *string                  `pulumi:"zone"`
}

func GetGatewaysOutput(ctx *pulumi.Context, args GetGatewaysOutputArgs, opts ...pulumi.InvokeOption) GetGatewaysResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetGatewaysResult, error) {
			args := v.(GetGatewaysArgs)
			r, err := GetGateways(ctx, &args, opts...)
			var s GetGatewaysResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetGatewaysResultOutput)
}

// A collection of arguments for invoking getGateways.
type GetGatewaysOutputArgs struct {
	Id               pulumi.StringPtrInput `pulumi:"id"`
	Name             pulumi.StringPtrInput `pulumi:"name"`
	PublicIpAddress  pulumi.StringPtrInput `pulumi:"publicIpAddress"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	Tags             pulumi.MapInput       `pulumi:"tags"`
	VpcId            pulumi.StringPtrInput `pulumi:"vpcId"`
	Zone             pulumi.StringPtrInput `pulumi:"zone"`
}

func (GetGatewaysOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewaysArgs)(nil)).Elem()
}

// A collection of values returned by getGateways.
type GetGatewaysResultOutput struct{ *pulumi.OutputState }

func (GetGatewaysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGatewaysResult)(nil)).Elem()
}

func (o GetGatewaysResultOutput) ToGetGatewaysResultOutput() GetGatewaysResultOutput {
	return o
}

func (o GetGatewaysResultOutput) ToGetGatewaysResultOutputWithContext(ctx context.Context) GetGatewaysResultOutput {
	return o
}

func (o GetGatewaysResultOutput) GatewayLists() GetGatewaysGatewayListArrayOutput {
	return o.ApplyT(func(v GetGatewaysResult) []GetGatewaysGatewayList { return v.GatewayLists }).(GetGatewaysGatewayListArrayOutput)
}

func (o GetGatewaysResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGatewaysResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetGatewaysResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGatewaysResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetGatewaysResultOutput) PublicIpAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGatewaysResult) *string { return v.PublicIpAddress }).(pulumi.StringPtrOutput)
}

func (o GetGatewaysResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGatewaysResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetGatewaysResultOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetGatewaysResult) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func (o GetGatewaysResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGatewaysResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

func (o GetGatewaysResultOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGatewaysResult) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetGatewaysResultOutput{})
}
