// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ckafka

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetInstances(ctx *pulumi.Context, args *GetInstancesArgs, opts ...pulumi.InvokeOption) (*GetInstancesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetInstancesResult
	err := ctx.Invoke("tencentcloud:Ckafka/getInstances:getInstances", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getInstances.
type GetInstancesArgs struct {
	Filters          []GetInstancesFilter `pulumi:"filters"`
	InstanceIds      []string             `pulumi:"instanceIds"`
	Limit            *int                 `pulumi:"limit"`
	Offset           *int                 `pulumi:"offset"`
	ResultOutputFile *string              `pulumi:"resultOutputFile"`
	SearchWord       *string              `pulumi:"searchWord"`
	Statuses         []int                `pulumi:"statuses"`
	TagKey           *string              `pulumi:"tagKey"`
}

// A collection of values returned by getInstances.
type GetInstancesResult struct {
	Filters []GetInstancesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                     `pulumi:"id"`
	InstanceIds      []string                   `pulumi:"instanceIds"`
	InstanceLists    []GetInstancesInstanceList `pulumi:"instanceLists"`
	Limit            *int                       `pulumi:"limit"`
	Offset           *int                       `pulumi:"offset"`
	ResultOutputFile *string                    `pulumi:"resultOutputFile"`
	SearchWord       *string                    `pulumi:"searchWord"`
	Statuses         []int                      `pulumi:"statuses"`
	TagKey           *string                    `pulumi:"tagKey"`
}

func GetInstancesOutput(ctx *pulumi.Context, args GetInstancesOutputArgs, opts ...pulumi.InvokeOption) GetInstancesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetInstancesResult, error) {
			args := v.(GetInstancesArgs)
			r, err := GetInstances(ctx, &args, opts...)
			var s GetInstancesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetInstancesResultOutput)
}

// A collection of arguments for invoking getInstances.
type GetInstancesOutputArgs struct {
	Filters          GetInstancesFilterArrayInput `pulumi:"filters"`
	InstanceIds      pulumi.StringArrayInput      `pulumi:"instanceIds"`
	Limit            pulumi.IntPtrInput           `pulumi:"limit"`
	Offset           pulumi.IntPtrInput           `pulumi:"offset"`
	ResultOutputFile pulumi.StringPtrInput        `pulumi:"resultOutputFile"`
	SearchWord       pulumi.StringPtrInput        `pulumi:"searchWord"`
	Statuses         pulumi.IntArrayInput         `pulumi:"statuses"`
	TagKey           pulumi.StringPtrInput        `pulumi:"tagKey"`
}

func (GetInstancesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesArgs)(nil)).Elem()
}

// A collection of values returned by getInstances.
type GetInstancesResultOutput struct{ *pulumi.OutputState }

func (GetInstancesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesResult)(nil)).Elem()
}

func (o GetInstancesResultOutput) ToGetInstancesResultOutput() GetInstancesResultOutput {
	return o
}

func (o GetInstancesResultOutput) ToGetInstancesResultOutputWithContext(ctx context.Context) GetInstancesResultOutput {
	return o
}

func (o GetInstancesResultOutput) Filters() GetInstancesFilterArrayOutput {
	return o.ApplyT(func(v GetInstancesResult) []GetInstancesFilter { return v.Filters }).(GetInstancesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetInstancesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetInstancesResultOutput) InstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesResult) []string { return v.InstanceIds }).(pulumi.StringArrayOutput)
}

func (o GetInstancesResultOutput) InstanceLists() GetInstancesInstanceListArrayOutput {
	return o.ApplyT(func(v GetInstancesResult) []GetInstancesInstanceList { return v.InstanceLists }).(GetInstancesInstanceListArrayOutput)
}

func (o GetInstancesResultOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

func (o GetInstancesResultOutput) Offset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *int { return v.Offset }).(pulumi.IntPtrOutput)
}

func (o GetInstancesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetInstancesResultOutput) SearchWord() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *string { return v.SearchWord }).(pulumi.StringPtrOutput)
}

func (o GetInstancesResultOutput) Statuses() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetInstancesResult) []int { return v.Statuses }).(pulumi.IntArrayOutput)
}

func (o GetInstancesResultOutput) TagKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesResult) *string { return v.TagKey }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetInstancesResultOutput{})
}
