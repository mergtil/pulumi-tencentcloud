// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ckafka

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetGroupOffsets(ctx *pulumi.Context, args *GetGroupOffsetsArgs, opts ...pulumi.InvokeOption) (*GetGroupOffsetsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetGroupOffsetsResult
	err := ctx.Invoke("tencentcloud:Ckafka/getGroupOffsets:getGroupOffsets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGroupOffsets.
type GetGroupOffsetsArgs struct {
	Group            string   `pulumi:"group"`
	InstanceId       string   `pulumi:"instanceId"`
	ResultOutputFile *string  `pulumi:"resultOutputFile"`
	SearchWord       *string  `pulumi:"searchWord"`
	Topics           []string `pulumi:"topics"`
}

// A collection of values returned by getGroupOffsets.
type GetGroupOffsetsResult struct {
	Group string `pulumi:"group"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                     `pulumi:"id"`
	InstanceId       string                     `pulumi:"instanceId"`
	ResultOutputFile *string                    `pulumi:"resultOutputFile"`
	SearchWord       *string                    `pulumi:"searchWord"`
	TopicLists       []GetGroupOffsetsTopicList `pulumi:"topicLists"`
	Topics           []string                   `pulumi:"topics"`
}

func GetGroupOffsetsOutput(ctx *pulumi.Context, args GetGroupOffsetsOutputArgs, opts ...pulumi.InvokeOption) GetGroupOffsetsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetGroupOffsetsResult, error) {
			args := v.(GetGroupOffsetsArgs)
			r, err := GetGroupOffsets(ctx, &args, opts...)
			var s GetGroupOffsetsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetGroupOffsetsResultOutput)
}

// A collection of arguments for invoking getGroupOffsets.
type GetGroupOffsetsOutputArgs struct {
	Group            pulumi.StringInput      `pulumi:"group"`
	InstanceId       pulumi.StringInput      `pulumi:"instanceId"`
	ResultOutputFile pulumi.StringPtrInput   `pulumi:"resultOutputFile"`
	SearchWord       pulumi.StringPtrInput   `pulumi:"searchWord"`
	Topics           pulumi.StringArrayInput `pulumi:"topics"`
}

func (GetGroupOffsetsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupOffsetsArgs)(nil)).Elem()
}

// A collection of values returned by getGroupOffsets.
type GetGroupOffsetsResultOutput struct{ *pulumi.OutputState }

func (GetGroupOffsetsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupOffsetsResult)(nil)).Elem()
}

func (o GetGroupOffsetsResultOutput) ToGetGroupOffsetsResultOutput() GetGroupOffsetsResultOutput {
	return o
}

func (o GetGroupOffsetsResultOutput) ToGetGroupOffsetsResultOutputWithContext(ctx context.Context) GetGroupOffsetsResultOutput {
	return o
}

func (o GetGroupOffsetsResultOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupOffsetsResult) string { return v.Group }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetGroupOffsetsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupOffsetsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetGroupOffsetsResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupOffsetsResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetGroupOffsetsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGroupOffsetsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetGroupOffsetsResultOutput) SearchWord() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGroupOffsetsResult) *string { return v.SearchWord }).(pulumi.StringPtrOutput)
}

func (o GetGroupOffsetsResultOutput) TopicLists() GetGroupOffsetsTopicListArrayOutput {
	return o.ApplyT(func(v GetGroupOffsetsResult) []GetGroupOffsetsTopicList { return v.TopicLists }).(GetGroupOffsetsTopicListArrayOutput)
}

func (o GetGroupOffsetsResultOutput) Topics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGroupOffsetsResult) []string { return v.Topics }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetGroupOffsetsResultOutput{})
}
