// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ckafka

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetTopicSyncReplica(ctx *pulumi.Context, args *GetTopicSyncReplicaArgs, opts ...pulumi.InvokeOption) (*GetTopicSyncReplicaResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetTopicSyncReplicaResult
	err := ctx.Invoke("tencentcloud:Ckafka/getTopicSyncReplica:getTopicSyncReplica", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getTopicSyncReplica.
type GetTopicSyncReplicaArgs struct {
	InstanceId           string  `pulumi:"instanceId"`
	OutOfSyncReplicaOnly *bool   `pulumi:"outOfSyncReplicaOnly"`
	ResultOutputFile     *string `pulumi:"resultOutputFile"`
	TopicName            string  `pulumi:"topicName"`
}

// A collection of values returned by getTopicSyncReplica.
type GetTopicSyncReplicaResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id                      string                                      `pulumi:"id"`
	InstanceId              string                                      `pulumi:"instanceId"`
	OutOfSyncReplicaOnly    *bool                                       `pulumi:"outOfSyncReplicaOnly"`
	ResultOutputFile        *string                                     `pulumi:"resultOutputFile"`
	TopicInSyncReplicaLists []GetTopicSyncReplicaTopicInSyncReplicaList `pulumi:"topicInSyncReplicaLists"`
	TopicName               string                                      `pulumi:"topicName"`
}

func GetTopicSyncReplicaOutput(ctx *pulumi.Context, args GetTopicSyncReplicaOutputArgs, opts ...pulumi.InvokeOption) GetTopicSyncReplicaResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetTopicSyncReplicaResult, error) {
			args := v.(GetTopicSyncReplicaArgs)
			r, err := GetTopicSyncReplica(ctx, &args, opts...)
			var s GetTopicSyncReplicaResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetTopicSyncReplicaResultOutput)
}

// A collection of arguments for invoking getTopicSyncReplica.
type GetTopicSyncReplicaOutputArgs struct {
	InstanceId           pulumi.StringInput    `pulumi:"instanceId"`
	OutOfSyncReplicaOnly pulumi.BoolPtrInput   `pulumi:"outOfSyncReplicaOnly"`
	ResultOutputFile     pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	TopicName            pulumi.StringInput    `pulumi:"topicName"`
}

func (GetTopicSyncReplicaOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicSyncReplicaArgs)(nil)).Elem()
}

// A collection of values returned by getTopicSyncReplica.
type GetTopicSyncReplicaResultOutput struct{ *pulumi.OutputState }

func (GetTopicSyncReplicaResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTopicSyncReplicaResult)(nil)).Elem()
}

func (o GetTopicSyncReplicaResultOutput) ToGetTopicSyncReplicaResultOutput() GetTopicSyncReplicaResultOutput {
	return o
}

func (o GetTopicSyncReplicaResultOutput) ToGetTopicSyncReplicaResultOutputWithContext(ctx context.Context) GetTopicSyncReplicaResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetTopicSyncReplicaResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicSyncReplicaResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetTopicSyncReplicaResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicSyncReplicaResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetTopicSyncReplicaResultOutput) OutOfSyncReplicaOnly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetTopicSyncReplicaResult) *bool { return v.OutOfSyncReplicaOnly }).(pulumi.BoolPtrOutput)
}

func (o GetTopicSyncReplicaResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTopicSyncReplicaResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetTopicSyncReplicaResultOutput) TopicInSyncReplicaLists() GetTopicSyncReplicaTopicInSyncReplicaListArrayOutput {
	return o.ApplyT(func(v GetTopicSyncReplicaResult) []GetTopicSyncReplicaTopicInSyncReplicaList {
		return v.TopicInSyncReplicaLists
	}).(GetTopicSyncReplicaTopicInSyncReplicaListArrayOutput)
}

func (o GetTopicSyncReplicaResultOutput) TopicName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTopicSyncReplicaResult) string { return v.TopicName }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetTopicSyncReplicaResultOutput{})
}
