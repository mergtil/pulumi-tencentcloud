// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ckafka

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "tencentcloud:Ckafka/acl:Acl":
		r = &Acl{}
	case "tencentcloud:Ckafka/aclRule:AclRule":
		r = &AclRule{}
	case "tencentcloud:Ckafka/connectResource:ConnectResource":
		r = &ConnectResource{}
	case "tencentcloud:Ckafka/consumerGroup:ConsumerGroup":
		r = &ConsumerGroup{}
	case "tencentcloud:Ckafka/consumerGroupModifyOffset:ConsumerGroupModifyOffset":
		r = &ConsumerGroupModifyOffset{}
	case "tencentcloud:Ckafka/datahubTask:DatahubTask":
		r = &DatahubTask{}
	case "tencentcloud:Ckafka/datahubTopic:DatahubTopic":
		r = &DatahubTopic{}
	case "tencentcloud:Ckafka/instance:Instance":
		r = &Instance{}
	case "tencentcloud:Ckafka/renewInstance:RenewInstance":
		r = &RenewInstance{}
	case "tencentcloud:Ckafka/route:Route":
		r = &Route{}
	case "tencentcloud:Ckafka/topic:Topic":
		r = &Topic{}
	case "tencentcloud:Ckafka/user:User":
		r = &User{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Ckafka/acl",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Ckafka/aclRule",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Ckafka/connectResource",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Ckafka/consumerGroup",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Ckafka/consumerGroupModifyOffset",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Ckafka/datahubTask",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Ckafka/datahubTopic",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Ckafka/instance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Ckafka/renewInstance",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Ckafka/route",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Ckafka/topic",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Ckafka/user",
		&module{version},
	)
}
