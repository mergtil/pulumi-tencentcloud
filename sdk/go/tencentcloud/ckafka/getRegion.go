// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ckafka

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupRegion(ctx *pulumi.Context, args *LookupRegionArgs, opts ...pulumi.InvokeOption) (*LookupRegionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRegionResult
	err := ctx.Invoke("tencentcloud:Ckafka/getRegion:getRegion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRegion.
type LookupRegionArgs struct {
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getRegion.
type LookupRegionResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id               string            `pulumi:"id"`
	ResultOutputFile *string           `pulumi:"resultOutputFile"`
	Results          []GetRegionResult `pulumi:"results"`
}

func LookupRegionOutput(ctx *pulumi.Context, args LookupRegionOutputArgs, opts ...pulumi.InvokeOption) LookupRegionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRegionResult, error) {
			args := v.(LookupRegionArgs)
			r, err := LookupRegion(ctx, &args, opts...)
			var s LookupRegionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRegionResultOutput)
}

// A collection of arguments for invoking getRegion.
type LookupRegionOutputArgs struct {
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (LookupRegionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegionArgs)(nil)).Elem()
}

// A collection of values returned by getRegion.
type LookupRegionResultOutput struct{ *pulumi.OutputState }

func (LookupRegionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRegionResult)(nil)).Elem()
}

func (o LookupRegionResultOutput) ToLookupRegionResultOutput() LookupRegionResultOutput {
	return o
}

func (o LookupRegionResultOutput) ToLookupRegionResultOutputWithContext(ctx context.Context) LookupRegionResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRegionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRegionResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupRegionResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRegionResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o LookupRegionResultOutput) Results() GetRegionResultArrayOutput {
	return o.ApplyT(func(v LookupRegionResult) []GetRegionResult { return v.Results }).(GetRegionResultArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRegionResultOutput{})
}
