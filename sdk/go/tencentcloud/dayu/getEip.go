// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dayu

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupEip(ctx *pulumi.Context, args *LookupEipArgs, opts ...pulumi.InvokeOption) (*LookupEipResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupEipResult
	err := ctx.Invoke("tencentcloud:Dayu/getEip:getEip", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getEip.
type LookupEipArgs struct {
	BindStatuses     []string `pulumi:"bindStatuses"`
	Limit            *int     `pulumi:"limit"`
	Offset           *int     `pulumi:"offset"`
	ResourceId       string   `pulumi:"resourceId"`
	ResultOutputFile *string  `pulumi:"resultOutputFile"`
}

// A collection of values returned by getEip.
type LookupEipResult struct {
	BindStatuses []string `pulumi:"bindStatuses"`
	// The provider-assigned unique ID for this managed resource.
	Id               string       `pulumi:"id"`
	Limit            *int         `pulumi:"limit"`
	Lists            []GetEipList `pulumi:"lists"`
	Offset           *int         `pulumi:"offset"`
	ResourceId       string       `pulumi:"resourceId"`
	ResultOutputFile *string      `pulumi:"resultOutputFile"`
}

func LookupEipOutput(ctx *pulumi.Context, args LookupEipOutputArgs, opts ...pulumi.InvokeOption) LookupEipResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupEipResult, error) {
			args := v.(LookupEipArgs)
			r, err := LookupEip(ctx, &args, opts...)
			var s LookupEipResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupEipResultOutput)
}

// A collection of arguments for invoking getEip.
type LookupEipOutputArgs struct {
	BindStatuses     pulumi.StringArrayInput `pulumi:"bindStatuses"`
	Limit            pulumi.IntPtrInput      `pulumi:"limit"`
	Offset           pulumi.IntPtrInput      `pulumi:"offset"`
	ResourceId       pulumi.StringInput      `pulumi:"resourceId"`
	ResultOutputFile pulumi.StringPtrInput   `pulumi:"resultOutputFile"`
}

func (LookupEipOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEipArgs)(nil)).Elem()
}

// A collection of values returned by getEip.
type LookupEipResultOutput struct{ *pulumi.OutputState }

func (LookupEipResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupEipResult)(nil)).Elem()
}

func (o LookupEipResultOutput) ToLookupEipResultOutput() LookupEipResultOutput {
	return o
}

func (o LookupEipResultOutput) ToLookupEipResultOutputWithContext(ctx context.Context) LookupEipResultOutput {
	return o
}

func (o LookupEipResultOutput) BindStatuses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupEipResult) []string { return v.BindStatuses }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupEipResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEipResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupEipResultOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupEipResult) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

func (o LookupEipResultOutput) Lists() GetEipListArrayOutput {
	return o.ApplyT(func(v LookupEipResult) []GetEipList { return v.Lists }).(GetEipListArrayOutput)
}

func (o LookupEipResultOutput) Offset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupEipResult) *int { return v.Offset }).(pulumi.IntPtrOutput)
}

func (o LookupEipResultOutput) ResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupEipResult) string { return v.ResourceId }).(pulumi.StringOutput)
}

func (o LookupEipResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupEipResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupEipResultOutput{})
}
