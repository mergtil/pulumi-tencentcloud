// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package gaap

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetHttpRules(ctx *pulumi.Context, args *GetHttpRulesArgs, opts ...pulumi.InvokeOption) (*GetHttpRulesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetHttpRulesResult
	err := ctx.Invoke("tencentcloud:Gaap/getHttpRules:getHttpRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getHttpRules.
type GetHttpRulesArgs struct {
	Domain           *string `pulumi:"domain"`
	ForwardHost      *string `pulumi:"forwardHost"`
	ListenerId       string  `pulumi:"listenerId"`
	Path             *string `pulumi:"path"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getHttpRules.
type GetHttpRulesResult struct {
	Domain      *string `pulumi:"domain"`
	ForwardHost *string `pulumi:"forwardHost"`
	// The provider-assigned unique ID for this managed resource.
	Id               string             `pulumi:"id"`
	ListenerId       string             `pulumi:"listenerId"`
	Path             *string            `pulumi:"path"`
	ResultOutputFile *string            `pulumi:"resultOutputFile"`
	Rules            []GetHttpRulesRule `pulumi:"rules"`
}

func GetHttpRulesOutput(ctx *pulumi.Context, args GetHttpRulesOutputArgs, opts ...pulumi.InvokeOption) GetHttpRulesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetHttpRulesResult, error) {
			args := v.(GetHttpRulesArgs)
			r, err := GetHttpRules(ctx, &args, opts...)
			var s GetHttpRulesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetHttpRulesResultOutput)
}

// A collection of arguments for invoking getHttpRules.
type GetHttpRulesOutputArgs struct {
	Domain           pulumi.StringPtrInput `pulumi:"domain"`
	ForwardHost      pulumi.StringPtrInput `pulumi:"forwardHost"`
	ListenerId       pulumi.StringInput    `pulumi:"listenerId"`
	Path             pulumi.StringPtrInput `pulumi:"path"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetHttpRulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHttpRulesArgs)(nil)).Elem()
}

// A collection of values returned by getHttpRules.
type GetHttpRulesResultOutput struct{ *pulumi.OutputState }

func (GetHttpRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetHttpRulesResult)(nil)).Elem()
}

func (o GetHttpRulesResultOutput) ToGetHttpRulesResultOutput() GetHttpRulesResultOutput {
	return o
}

func (o GetHttpRulesResultOutput) ToGetHttpRulesResultOutputWithContext(ctx context.Context) GetHttpRulesResultOutput {
	return o
}

func (o GetHttpRulesResultOutput) Domain() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHttpRulesResult) *string { return v.Domain }).(pulumi.StringPtrOutput)
}

func (o GetHttpRulesResultOutput) ForwardHost() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHttpRulesResult) *string { return v.ForwardHost }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetHttpRulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetHttpRulesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetHttpRulesResultOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetHttpRulesResult) string { return v.ListenerId }).(pulumi.StringOutput)
}

func (o GetHttpRulesResultOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHttpRulesResult) *string { return v.Path }).(pulumi.StringPtrOutput)
}

func (o GetHttpRulesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetHttpRulesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetHttpRulesResultOutput) Rules() GetHttpRulesRuleArrayOutput {
	return o.ApplyT(func(v GetHttpRulesResult) []GetHttpRulesRule { return v.Rules }).(GetHttpRulesRuleArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetHttpRulesResultOutput{})
}
