// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lighthouse

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetAllScene(ctx *pulumi.Context, args *GetAllSceneArgs, opts ...pulumi.InvokeOption) (*GetAllSceneResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAllSceneResult
	err := ctx.Invoke("tencentcloud:Lighthouse/getAllScene:getAllScene", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAllScene.
type GetAllSceneArgs struct {
	Limit            *int     `pulumi:"limit"`
	Offset           *int     `pulumi:"offset"`
	ResultOutputFile *string  `pulumi:"resultOutputFile"`
	SceneIds         []string `pulumi:"sceneIds"`
}

// A collection of values returned by getAllScene.
type GetAllSceneResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id               string                `pulumi:"id"`
	Limit            *int                  `pulumi:"limit"`
	Offset           *int                  `pulumi:"offset"`
	ResultOutputFile *string               `pulumi:"resultOutputFile"`
	SceneIds         []string              `pulumi:"sceneIds"`
	SceneSets        []GetAllSceneSceneSet `pulumi:"sceneSets"`
}

func GetAllSceneOutput(ctx *pulumi.Context, args GetAllSceneOutputArgs, opts ...pulumi.InvokeOption) GetAllSceneResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAllSceneResult, error) {
			args := v.(GetAllSceneArgs)
			r, err := GetAllScene(ctx, &args, opts...)
			var s GetAllSceneResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetAllSceneResultOutput)
}

// A collection of arguments for invoking getAllScene.
type GetAllSceneOutputArgs struct {
	Limit            pulumi.IntPtrInput      `pulumi:"limit"`
	Offset           pulumi.IntPtrInput      `pulumi:"offset"`
	ResultOutputFile pulumi.StringPtrInput   `pulumi:"resultOutputFile"`
	SceneIds         pulumi.StringArrayInput `pulumi:"sceneIds"`
}

func (GetAllSceneOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAllSceneArgs)(nil)).Elem()
}

// A collection of values returned by getAllScene.
type GetAllSceneResultOutput struct{ *pulumi.OutputState }

func (GetAllSceneResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAllSceneResult)(nil)).Elem()
}

func (o GetAllSceneResultOutput) ToGetAllSceneResultOutput() GetAllSceneResultOutput {
	return o
}

func (o GetAllSceneResultOutput) ToGetAllSceneResultOutputWithContext(ctx context.Context) GetAllSceneResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetAllSceneResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAllSceneResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAllSceneResultOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAllSceneResult) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

func (o GetAllSceneResultOutput) Offset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAllSceneResult) *int { return v.Offset }).(pulumi.IntPtrOutput)
}

func (o GetAllSceneResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAllSceneResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetAllSceneResultOutput) SceneIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAllSceneResult) []string { return v.SceneIds }).(pulumi.StringArrayOutput)
}

func (o GetAllSceneResultOutput) SceneSets() GetAllSceneSceneSetArrayOutput {
	return o.ApplyT(func(v GetAllSceneResult) []GetAllSceneSceneSet { return v.SceneSets }).(GetAllSceneSceneSetArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAllSceneResultOutput{})
}
