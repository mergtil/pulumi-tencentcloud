// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package lighthouse

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetDisks(ctx *pulumi.Context, args *GetDisksArgs, opts ...pulumi.InvokeOption) (*GetDisksResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDisksResult
	err := ctx.Invoke("tencentcloud:Lighthouse/getDisks:getDisks", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDisks.
type GetDisksArgs struct {
	DiskIds          []string         `pulumi:"diskIds"`
	Filters          []GetDisksFilter `pulumi:"filters"`
	ResultOutputFile *string          `pulumi:"resultOutputFile"`
}

// A collection of values returned by getDisks.
type GetDisksResult struct {
	DiskIds   []string           `pulumi:"diskIds"`
	DiskLists []GetDisksDiskList `pulumi:"diskLists"`
	Filters   []GetDisksFilter   `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

func GetDisksOutput(ctx *pulumi.Context, args GetDisksOutputArgs, opts ...pulumi.InvokeOption) GetDisksResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDisksResult, error) {
			args := v.(GetDisksArgs)
			r, err := GetDisks(ctx, &args, opts...)
			var s GetDisksResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDisksResultOutput)
}

// A collection of arguments for invoking getDisks.
type GetDisksOutputArgs struct {
	DiskIds          pulumi.StringArrayInput  `pulumi:"diskIds"`
	Filters          GetDisksFilterArrayInput `pulumi:"filters"`
	ResultOutputFile pulumi.StringPtrInput    `pulumi:"resultOutputFile"`
}

func (GetDisksOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDisksArgs)(nil)).Elem()
}

// A collection of values returned by getDisks.
type GetDisksResultOutput struct{ *pulumi.OutputState }

func (GetDisksResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDisksResult)(nil)).Elem()
}

func (o GetDisksResultOutput) ToGetDisksResultOutput() GetDisksResultOutput {
	return o
}

func (o GetDisksResultOutput) ToGetDisksResultOutputWithContext(ctx context.Context) GetDisksResultOutput {
	return o
}

func (o GetDisksResultOutput) DiskIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDisksResult) []string { return v.DiskIds }).(pulumi.StringArrayOutput)
}

func (o GetDisksResultOutput) DiskLists() GetDisksDiskListArrayOutput {
	return o.ApplyT(func(v GetDisksResult) []GetDisksDiskList { return v.DiskLists }).(GetDisksDiskListArrayOutput)
}

func (o GetDisksResultOutput) Filters() GetDisksFilterArrayOutput {
	return o.ApplyT(func(v GetDisksResult) []GetDisksFilter { return v.Filters }).(GetDisksFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDisksResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDisksResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDisksResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDisksResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDisksResultOutput{})
}
