// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package kms

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetKeys(ctx *pulumi.Context, args *GetKeysArgs, opts ...pulumi.InvokeOption) (*GetKeysResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetKeysResult
	err := ctx.Invoke("tencentcloud:Kms/getKeys:getKeys", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKeys.
type GetKeysArgs struct {
	KeyState         *int                   `pulumi:"keyState"`
	KeyUsage         *string                `pulumi:"keyUsage"`
	OrderType        *int                   `pulumi:"orderType"`
	Origin           *string                `pulumi:"origin"`
	ResultOutputFile *string                `pulumi:"resultOutputFile"`
	Role             *int                   `pulumi:"role"`
	SearchKeyAlias   *string                `pulumi:"searchKeyAlias"`
	Tags             map[string]interface{} `pulumi:"tags"`
}

// A collection of values returned by getKeys.
type GetKeysResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id               string                 `pulumi:"id"`
	KeyLists         []GetKeysKeyList       `pulumi:"keyLists"`
	KeyState         *int                   `pulumi:"keyState"`
	KeyUsage         *string                `pulumi:"keyUsage"`
	OrderType        *int                   `pulumi:"orderType"`
	Origin           *string                `pulumi:"origin"`
	ResultOutputFile *string                `pulumi:"resultOutputFile"`
	Role             *int                   `pulumi:"role"`
	SearchKeyAlias   *string                `pulumi:"searchKeyAlias"`
	Tags             map[string]interface{} `pulumi:"tags"`
}

func GetKeysOutput(ctx *pulumi.Context, args GetKeysOutputArgs, opts ...pulumi.InvokeOption) GetKeysResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetKeysResult, error) {
			args := v.(GetKeysArgs)
			r, err := GetKeys(ctx, &args, opts...)
			var s GetKeysResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetKeysResultOutput)
}

// A collection of arguments for invoking getKeys.
type GetKeysOutputArgs struct {
	KeyState         pulumi.IntPtrInput    `pulumi:"keyState"`
	KeyUsage         pulumi.StringPtrInput `pulumi:"keyUsage"`
	OrderType        pulumi.IntPtrInput    `pulumi:"orderType"`
	Origin           pulumi.StringPtrInput `pulumi:"origin"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	Role             pulumi.IntPtrInput    `pulumi:"role"`
	SearchKeyAlias   pulumi.StringPtrInput `pulumi:"searchKeyAlias"`
	Tags             pulumi.MapInput       `pulumi:"tags"`
}

func (GetKeysOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysArgs)(nil)).Elem()
}

// A collection of values returned by getKeys.
type GetKeysResultOutput struct{ *pulumi.OutputState }

func (GetKeysResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKeysResult)(nil)).Elem()
}

func (o GetKeysResultOutput) ToGetKeysResultOutput() GetKeysResultOutput {
	return o
}

func (o GetKeysResultOutput) ToGetKeysResultOutputWithContext(ctx context.Context) GetKeysResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetKeysResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKeysResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetKeysResultOutput) KeyLists() GetKeysKeyListArrayOutput {
	return o.ApplyT(func(v GetKeysResult) []GetKeysKeyList { return v.KeyLists }).(GetKeysKeyListArrayOutput)
}

func (o GetKeysResultOutput) KeyState() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetKeysResult) *int { return v.KeyState }).(pulumi.IntPtrOutput)
}

func (o GetKeysResultOutput) KeyUsage() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKeysResult) *string { return v.KeyUsage }).(pulumi.StringPtrOutput)
}

func (o GetKeysResultOutput) OrderType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetKeysResult) *int { return v.OrderType }).(pulumi.IntPtrOutput)
}

func (o GetKeysResultOutput) Origin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKeysResult) *string { return v.Origin }).(pulumi.StringPtrOutput)
}

func (o GetKeysResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKeysResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetKeysResultOutput) Role() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetKeysResult) *int { return v.Role }).(pulumi.IntPtrOutput)
}

func (o GetKeysResultOutput) SearchKeyAlias() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetKeysResult) *string { return v.SearchKeyAlias }).(pulumi.StringPtrOutput)
}

func (o GetKeysResultOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetKeysResult) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func init() {
	pulumi.RegisterOutputType(GetKeysResultOutput{})
}
