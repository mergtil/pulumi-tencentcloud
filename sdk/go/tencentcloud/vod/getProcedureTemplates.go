// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vod

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetProcedureTemplates(ctx *pulumi.Context, args *GetProcedureTemplatesArgs, opts ...pulumi.InvokeOption) (*GetProcedureTemplatesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetProcedureTemplatesResult
	err := ctx.Invoke("tencentcloud:Vod/getProcedureTemplates:getProcedureTemplates", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getProcedureTemplates.
type GetProcedureTemplatesArgs struct {
	Name             *string `pulumi:"name"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	SubAppId         *int    `pulumi:"subAppId"`
	Type             *string `pulumi:"type"`
}

// A collection of values returned by getProcedureTemplates.
type GetProcedureTemplatesResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id               string                              `pulumi:"id"`
	Name             *string                             `pulumi:"name"`
	ResultOutputFile *string                             `pulumi:"resultOutputFile"`
	SubAppId         *int                                `pulumi:"subAppId"`
	TemplateLists    []GetProcedureTemplatesTemplateList `pulumi:"templateLists"`
	Type             *string                             `pulumi:"type"`
}

func GetProcedureTemplatesOutput(ctx *pulumi.Context, args GetProcedureTemplatesOutputArgs, opts ...pulumi.InvokeOption) GetProcedureTemplatesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetProcedureTemplatesResult, error) {
			args := v.(GetProcedureTemplatesArgs)
			r, err := GetProcedureTemplates(ctx, &args, opts...)
			var s GetProcedureTemplatesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetProcedureTemplatesResultOutput)
}

// A collection of arguments for invoking getProcedureTemplates.
type GetProcedureTemplatesOutputArgs struct {
	Name             pulumi.StringPtrInput `pulumi:"name"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	SubAppId         pulumi.IntPtrInput    `pulumi:"subAppId"`
	Type             pulumi.StringPtrInput `pulumi:"type"`
}

func (GetProcedureTemplatesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesArgs)(nil)).Elem()
}

// A collection of values returned by getProcedureTemplates.
type GetProcedureTemplatesResultOutput struct{ *pulumi.OutputState }

func (GetProcedureTemplatesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProcedureTemplatesResult)(nil)).Elem()
}

func (o GetProcedureTemplatesResultOutput) ToGetProcedureTemplatesResultOutput() GetProcedureTemplatesResultOutput {
	return o
}

func (o GetProcedureTemplatesResultOutput) ToGetProcedureTemplatesResultOutputWithContext(ctx context.Context) GetProcedureTemplatesResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetProcedureTemplatesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProcedureTemplatesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetProcedureTemplatesResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProcedureTemplatesResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetProcedureTemplatesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProcedureTemplatesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetProcedureTemplatesResultOutput) SubAppId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetProcedureTemplatesResult) *int { return v.SubAppId }).(pulumi.IntPtrOutput)
}

func (o GetProcedureTemplatesResultOutput) TemplateLists() GetProcedureTemplatesTemplateListArrayOutput {
	return o.ApplyT(func(v GetProcedureTemplatesResult) []GetProcedureTemplatesTemplateList { return v.TemplateLists }).(GetProcedureTemplatesTemplateListArrayOutput)
}

func (o GetProcedureTemplatesResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProcedureTemplatesResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetProcedureTemplatesResultOutput{})
}
