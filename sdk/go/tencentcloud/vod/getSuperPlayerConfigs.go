// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vod

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetSuperPlayerConfigs(ctx *pulumi.Context, args *GetSuperPlayerConfigsArgs, opts ...pulumi.InvokeOption) (*GetSuperPlayerConfigsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSuperPlayerConfigsResult
	err := ctx.Invoke("tencentcloud:Vod/getSuperPlayerConfigs:getSuperPlayerConfigs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSuperPlayerConfigs.
type GetSuperPlayerConfigsArgs struct {
	Name             *string `pulumi:"name"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	SubAppId         *int    `pulumi:"subAppId"`
	Type             *string `pulumi:"type"`
}

// A collection of values returned by getSuperPlayerConfigs.
type GetSuperPlayerConfigsResult struct {
	ConfigLists []GetSuperPlayerConfigsConfigList `pulumi:"configLists"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	Name             *string `pulumi:"name"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	SubAppId         *int    `pulumi:"subAppId"`
	Type             *string `pulumi:"type"`
}

func GetSuperPlayerConfigsOutput(ctx *pulumi.Context, args GetSuperPlayerConfigsOutputArgs, opts ...pulumi.InvokeOption) GetSuperPlayerConfigsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSuperPlayerConfigsResult, error) {
			args := v.(GetSuperPlayerConfigsArgs)
			r, err := GetSuperPlayerConfigs(ctx, &args, opts...)
			var s GetSuperPlayerConfigsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSuperPlayerConfigsResultOutput)
}

// A collection of arguments for invoking getSuperPlayerConfigs.
type GetSuperPlayerConfigsOutputArgs struct {
	Name             pulumi.StringPtrInput `pulumi:"name"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	SubAppId         pulumi.IntPtrInput    `pulumi:"subAppId"`
	Type             pulumi.StringPtrInput `pulumi:"type"`
}

func (GetSuperPlayerConfigsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSuperPlayerConfigsArgs)(nil)).Elem()
}

// A collection of values returned by getSuperPlayerConfigs.
type GetSuperPlayerConfigsResultOutput struct{ *pulumi.OutputState }

func (GetSuperPlayerConfigsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSuperPlayerConfigsResult)(nil)).Elem()
}

func (o GetSuperPlayerConfigsResultOutput) ToGetSuperPlayerConfigsResultOutput() GetSuperPlayerConfigsResultOutput {
	return o
}

func (o GetSuperPlayerConfigsResultOutput) ToGetSuperPlayerConfigsResultOutputWithContext(ctx context.Context) GetSuperPlayerConfigsResultOutput {
	return o
}

func (o GetSuperPlayerConfigsResultOutput) ConfigLists() GetSuperPlayerConfigsConfigListArrayOutput {
	return o.ApplyT(func(v GetSuperPlayerConfigsResult) []GetSuperPlayerConfigsConfigList { return v.ConfigLists }).(GetSuperPlayerConfigsConfigListArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSuperPlayerConfigsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSuperPlayerConfigsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSuperPlayerConfigsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSuperPlayerConfigsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetSuperPlayerConfigsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSuperPlayerConfigsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetSuperPlayerConfigsResultOutput) SubAppId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSuperPlayerConfigsResult) *int { return v.SubAppId }).(pulumi.IntPtrOutput)
}

func (o GetSuperPlayerConfigsResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSuperPlayerConfigsResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSuperPlayerConfigsResultOutput{})
}
