// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbbrain

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "tencentcloud:Dbbrain/dbDiagReportTask:DbDiagReportTask":
		r = &DbDiagReportTask{}
	case "tencentcloud:Dbbrain/modifyDiagDbInstanceOperation:ModifyDiagDbInstanceOperation":
		r = &ModifyDiagDbInstanceOperation{}
	case "tencentcloud:Dbbrain/securityAuditLogExportTask:SecurityAuditLogExportTask":
		r = &SecurityAuditLogExportTask{}
	case "tencentcloud:Dbbrain/sqlFilter:SqlFilter":
		r = &SqlFilter{}
	case "tencentcloud:Dbbrain/tdsqlAuditLog:TdsqlAuditLog":
		r = &TdsqlAuditLog{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := internal.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Dbbrain/dbDiagReportTask",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Dbbrain/modifyDiagDbInstanceOperation",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Dbbrain/securityAuditLogExportTask",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Dbbrain/sqlFilter",
		&module{version},
	)
	pulumi.RegisterResourceModule(
		"tencentcloud",
		"Dbbrain/tdsqlAuditLog",
		&module{version},
	)
}
