// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbbrain

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetSlowLogUserSqlAdvice(ctx *pulumi.Context, args *GetSlowLogUserSqlAdviceArgs, opts ...pulumi.InvokeOption) (*GetSlowLogUserSqlAdviceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSlowLogUserSqlAdviceResult
	err := ctx.Invoke("tencentcloud:Dbbrain/getSlowLogUserSqlAdvice:getSlowLogUserSqlAdvice", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSlowLogUserSqlAdvice.
type GetSlowLogUserSqlAdviceArgs struct {
	InstanceId       string  `pulumi:"instanceId"`
	Product          *string `pulumi:"product"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	Schema           *string `pulumi:"schema"`
	SqlText          string  `pulumi:"sqlText"`
}

// A collection of values returned by getSlowLogUserSqlAdvice.
type GetSlowLogUserSqlAdviceResult struct {
	Advices  string `pulumi:"advices"`
	Comments string `pulumi:"comments"`
	Cost     string `pulumi:"cost"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	InstanceId       string  `pulumi:"instanceId"`
	Product          *string `pulumi:"product"`
	RequestId        string  `pulumi:"requestId"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	Schema           string  `pulumi:"schema"`
	SqlPlan          string  `pulumi:"sqlPlan"`
	SqlText          string  `pulumi:"sqlText"`
	Tables           string  `pulumi:"tables"`
}

func GetSlowLogUserSqlAdviceOutput(ctx *pulumi.Context, args GetSlowLogUserSqlAdviceOutputArgs, opts ...pulumi.InvokeOption) GetSlowLogUserSqlAdviceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSlowLogUserSqlAdviceResult, error) {
			args := v.(GetSlowLogUserSqlAdviceArgs)
			r, err := GetSlowLogUserSqlAdvice(ctx, &args, opts...)
			var s GetSlowLogUserSqlAdviceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSlowLogUserSqlAdviceResultOutput)
}

// A collection of arguments for invoking getSlowLogUserSqlAdvice.
type GetSlowLogUserSqlAdviceOutputArgs struct {
	InstanceId       pulumi.StringInput    `pulumi:"instanceId"`
	Product          pulumi.StringPtrInput `pulumi:"product"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	Schema           pulumi.StringPtrInput `pulumi:"schema"`
	SqlText          pulumi.StringInput    `pulumi:"sqlText"`
}

func (GetSlowLogUserSqlAdviceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSlowLogUserSqlAdviceArgs)(nil)).Elem()
}

// A collection of values returned by getSlowLogUserSqlAdvice.
type GetSlowLogUserSqlAdviceResultOutput struct{ *pulumi.OutputState }

func (GetSlowLogUserSqlAdviceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSlowLogUserSqlAdviceResult)(nil)).Elem()
}

func (o GetSlowLogUserSqlAdviceResultOutput) ToGetSlowLogUserSqlAdviceResultOutput() GetSlowLogUserSqlAdviceResultOutput {
	return o
}

func (o GetSlowLogUserSqlAdviceResultOutput) ToGetSlowLogUserSqlAdviceResultOutputWithContext(ctx context.Context) GetSlowLogUserSqlAdviceResultOutput {
	return o
}

func (o GetSlowLogUserSqlAdviceResultOutput) Advices() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlowLogUserSqlAdviceResult) string { return v.Advices }).(pulumi.StringOutput)
}

func (o GetSlowLogUserSqlAdviceResultOutput) Comments() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlowLogUserSqlAdviceResult) string { return v.Comments }).(pulumi.StringOutput)
}

func (o GetSlowLogUserSqlAdviceResultOutput) Cost() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlowLogUserSqlAdviceResult) string { return v.Cost }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSlowLogUserSqlAdviceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlowLogUserSqlAdviceResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSlowLogUserSqlAdviceResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlowLogUserSqlAdviceResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetSlowLogUserSqlAdviceResultOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSlowLogUserSqlAdviceResult) *string { return v.Product }).(pulumi.StringPtrOutput)
}

func (o GetSlowLogUserSqlAdviceResultOutput) RequestId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlowLogUserSqlAdviceResult) string { return v.RequestId }).(pulumi.StringOutput)
}

func (o GetSlowLogUserSqlAdviceResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSlowLogUserSqlAdviceResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetSlowLogUserSqlAdviceResultOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlowLogUserSqlAdviceResult) string { return v.Schema }).(pulumi.StringOutput)
}

func (o GetSlowLogUserSqlAdviceResultOutput) SqlPlan() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlowLogUserSqlAdviceResult) string { return v.SqlPlan }).(pulumi.StringOutput)
}

func (o GetSlowLogUserSqlAdviceResultOutput) SqlText() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlowLogUserSqlAdviceResult) string { return v.SqlText }).(pulumi.StringOutput)
}

func (o GetSlowLogUserSqlAdviceResultOutput) Tables() pulumi.StringOutput {
	return o.ApplyT(func(v GetSlowLogUserSqlAdviceResult) string { return v.Tables }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSlowLogUserSqlAdviceResultOutput{})
}
