// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbbrain

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetDiagEvents(ctx *pulumi.Context, args *GetDiagEventsArgs, opts ...pulumi.InvokeOption) (*GetDiagEventsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDiagEventsResult
	err := ctx.Invoke("tencentcloud:Dbbrain/getDiagEvents:getDiagEvents", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDiagEvents.
type GetDiagEventsArgs struct {
	EndTime          string   `pulumi:"endTime"`
	InstanceIds      []string `pulumi:"instanceIds"`
	ResultOutputFile *string  `pulumi:"resultOutputFile"`
	Severities       []int    `pulumi:"severities"`
	StartTime        string   `pulumi:"startTime"`
}

// A collection of values returned by getDiagEvents.
type GetDiagEventsResult struct {
	EndTime string `pulumi:"endTime"`
	// The provider-assigned unique ID for this managed resource.
	Id               string              `pulumi:"id"`
	InstanceIds      []string            `pulumi:"instanceIds"`
	Lists            []GetDiagEventsList `pulumi:"lists"`
	ResultOutputFile *string             `pulumi:"resultOutputFile"`
	Severities       []int               `pulumi:"severities"`
	StartTime        string              `pulumi:"startTime"`
}

func GetDiagEventsOutput(ctx *pulumi.Context, args GetDiagEventsOutputArgs, opts ...pulumi.InvokeOption) GetDiagEventsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDiagEventsResult, error) {
			args := v.(GetDiagEventsArgs)
			r, err := GetDiagEvents(ctx, &args, opts...)
			var s GetDiagEventsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDiagEventsResultOutput)
}

// A collection of arguments for invoking getDiagEvents.
type GetDiagEventsOutputArgs struct {
	EndTime          pulumi.StringInput      `pulumi:"endTime"`
	InstanceIds      pulumi.StringArrayInput `pulumi:"instanceIds"`
	ResultOutputFile pulumi.StringPtrInput   `pulumi:"resultOutputFile"`
	Severities       pulumi.IntArrayInput    `pulumi:"severities"`
	StartTime        pulumi.StringInput      `pulumi:"startTime"`
}

func (GetDiagEventsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiagEventsArgs)(nil)).Elem()
}

// A collection of values returned by getDiagEvents.
type GetDiagEventsResultOutput struct{ *pulumi.OutputState }

func (GetDiagEventsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiagEventsResult)(nil)).Elem()
}

func (o GetDiagEventsResultOutput) ToGetDiagEventsResultOutput() GetDiagEventsResultOutput {
	return o
}

func (o GetDiagEventsResultOutput) ToGetDiagEventsResultOutputWithContext(ctx context.Context) GetDiagEventsResultOutput {
	return o
}

func (o GetDiagEventsResultOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiagEventsResult) string { return v.EndTime }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDiagEventsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiagEventsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDiagEventsResultOutput) InstanceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDiagEventsResult) []string { return v.InstanceIds }).(pulumi.StringArrayOutput)
}

func (o GetDiagEventsResultOutput) Lists() GetDiagEventsListArrayOutput {
	return o.ApplyT(func(v GetDiagEventsResult) []GetDiagEventsList { return v.Lists }).(GetDiagEventsListArrayOutput)
}

func (o GetDiagEventsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDiagEventsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetDiagEventsResultOutput) Severities() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetDiagEventsResult) []int { return v.Severities }).(pulumi.IntArrayOutput)
}

func (o GetDiagEventsResultOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiagEventsResult) string { return v.StartTime }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDiagEventsResultOutput{})
}
