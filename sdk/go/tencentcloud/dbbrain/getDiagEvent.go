// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbbrain

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetDiagEvent(ctx *pulumi.Context, args *GetDiagEventArgs, opts ...pulumi.InvokeOption) (*GetDiagEventResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDiagEventResult
	err := ctx.Invoke("tencentcloud:Dbbrain/getDiagEvent:getDiagEvent", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDiagEvent.
type GetDiagEventArgs struct {
	EventId          *int    `pulumi:"eventId"`
	InstanceId       string  `pulumi:"instanceId"`
	Product          *string `pulumi:"product"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getDiagEvent.
type GetDiagEventResult struct {
	DiagItem    string `pulumi:"diagItem"`
	DiagType    string `pulumi:"diagType"`
	EndTime     string `pulumi:"endTime"`
	EventId     int    `pulumi:"eventId"`
	Explanation string `pulumi:"explanation"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	InstanceId       string  `pulumi:"instanceId"`
	Metric           string  `pulumi:"metric"`
	Outline          string  `pulumi:"outline"`
	Problem          string  `pulumi:"problem"`
	Product          *string `pulumi:"product"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	Severity         int     `pulumi:"severity"`
	StartTime        string  `pulumi:"startTime"`
	Suggestions      string  `pulumi:"suggestions"`
}

func GetDiagEventOutput(ctx *pulumi.Context, args GetDiagEventOutputArgs, opts ...pulumi.InvokeOption) GetDiagEventResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDiagEventResult, error) {
			args := v.(GetDiagEventArgs)
			r, err := GetDiagEvent(ctx, &args, opts...)
			var s GetDiagEventResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDiagEventResultOutput)
}

// A collection of arguments for invoking getDiagEvent.
type GetDiagEventOutputArgs struct {
	EventId          pulumi.IntPtrInput    `pulumi:"eventId"`
	InstanceId       pulumi.StringInput    `pulumi:"instanceId"`
	Product          pulumi.StringPtrInput `pulumi:"product"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetDiagEventOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiagEventArgs)(nil)).Elem()
}

// A collection of values returned by getDiagEvent.
type GetDiagEventResultOutput struct{ *pulumi.OutputState }

func (GetDiagEventResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDiagEventResult)(nil)).Elem()
}

func (o GetDiagEventResultOutput) ToGetDiagEventResultOutput() GetDiagEventResultOutput {
	return o
}

func (o GetDiagEventResultOutput) ToGetDiagEventResultOutputWithContext(ctx context.Context) GetDiagEventResultOutput {
	return o
}

func (o GetDiagEventResultOutput) DiagItem() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiagEventResult) string { return v.DiagItem }).(pulumi.StringOutput)
}

func (o GetDiagEventResultOutput) DiagType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiagEventResult) string { return v.DiagType }).(pulumi.StringOutput)
}

func (o GetDiagEventResultOutput) EndTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiagEventResult) string { return v.EndTime }).(pulumi.StringOutput)
}

func (o GetDiagEventResultOutput) EventId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDiagEventResult) int { return v.EventId }).(pulumi.IntOutput)
}

func (o GetDiagEventResultOutput) Explanation() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiagEventResult) string { return v.Explanation }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDiagEventResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiagEventResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDiagEventResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiagEventResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetDiagEventResultOutput) Metric() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiagEventResult) string { return v.Metric }).(pulumi.StringOutput)
}

func (o GetDiagEventResultOutput) Outline() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiagEventResult) string { return v.Outline }).(pulumi.StringOutput)
}

func (o GetDiagEventResultOutput) Problem() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiagEventResult) string { return v.Problem }).(pulumi.StringOutput)
}

func (o GetDiagEventResultOutput) Product() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDiagEventResult) *string { return v.Product }).(pulumi.StringPtrOutput)
}

func (o GetDiagEventResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDiagEventResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetDiagEventResultOutput) Severity() pulumi.IntOutput {
	return o.ApplyT(func(v GetDiagEventResult) int { return v.Severity }).(pulumi.IntOutput)
}

func (o GetDiagEventResultOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiagEventResult) string { return v.StartTime }).(pulumi.StringOutput)
}

func (o GetDiagEventResultOutput) Suggestions() pulumi.StringOutput {
	return o.ApplyT(func(v GetDiagEventResult) string { return v.Suggestions }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDiagEventResultOutput{})
}
