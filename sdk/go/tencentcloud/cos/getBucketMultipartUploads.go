// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cos

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetBucketMultipartUploads(ctx *pulumi.Context, args *GetBucketMultipartUploadsArgs, opts ...pulumi.InvokeOption) (*GetBucketMultipartUploadsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetBucketMultipartUploadsResult
	err := ctx.Invoke("tencentcloud:Cos/getBucketMultipartUploads:getBucketMultipartUploads", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getBucketMultipartUploads.
type GetBucketMultipartUploadsArgs struct {
	Bucket           string  `pulumi:"bucket"`
	Delimiter        *string `pulumi:"delimiter"`
	EncodingType     *string `pulumi:"encodingType"`
	Prefix           *string `pulumi:"prefix"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getBucketMultipartUploads.
type GetBucketMultipartUploadsResult struct {
	Bucket       string  `pulumi:"bucket"`
	Delimiter    *string `pulumi:"delimiter"`
	EncodingType *string `pulumi:"encodingType"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                            `pulumi:"id"`
	Prefix           *string                           `pulumi:"prefix"`
	ResultOutputFile *string                           `pulumi:"resultOutputFile"`
	Uploads          []GetBucketMultipartUploadsUpload `pulumi:"uploads"`
}

func GetBucketMultipartUploadsOutput(ctx *pulumi.Context, args GetBucketMultipartUploadsOutputArgs, opts ...pulumi.InvokeOption) GetBucketMultipartUploadsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetBucketMultipartUploadsResult, error) {
			args := v.(GetBucketMultipartUploadsArgs)
			r, err := GetBucketMultipartUploads(ctx, &args, opts...)
			var s GetBucketMultipartUploadsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetBucketMultipartUploadsResultOutput)
}

// A collection of arguments for invoking getBucketMultipartUploads.
type GetBucketMultipartUploadsOutputArgs struct {
	Bucket           pulumi.StringInput    `pulumi:"bucket"`
	Delimiter        pulumi.StringPtrInput `pulumi:"delimiter"`
	EncodingType     pulumi.StringPtrInput `pulumi:"encodingType"`
	Prefix           pulumi.StringPtrInput `pulumi:"prefix"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetBucketMultipartUploadsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketMultipartUploadsArgs)(nil)).Elem()
}

// A collection of values returned by getBucketMultipartUploads.
type GetBucketMultipartUploadsResultOutput struct{ *pulumi.OutputState }

func (GetBucketMultipartUploadsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetBucketMultipartUploadsResult)(nil)).Elem()
}

func (o GetBucketMultipartUploadsResultOutput) ToGetBucketMultipartUploadsResultOutput() GetBucketMultipartUploadsResultOutput {
	return o
}

func (o GetBucketMultipartUploadsResultOutput) ToGetBucketMultipartUploadsResultOutputWithContext(ctx context.Context) GetBucketMultipartUploadsResultOutput {
	return o
}

func (o GetBucketMultipartUploadsResultOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketMultipartUploadsResult) string { return v.Bucket }).(pulumi.StringOutput)
}

func (o GetBucketMultipartUploadsResultOutput) Delimiter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBucketMultipartUploadsResult) *string { return v.Delimiter }).(pulumi.StringPtrOutput)
}

func (o GetBucketMultipartUploadsResultOutput) EncodingType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBucketMultipartUploadsResult) *string { return v.EncodingType }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetBucketMultipartUploadsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetBucketMultipartUploadsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetBucketMultipartUploadsResultOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBucketMultipartUploadsResult) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o GetBucketMultipartUploadsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetBucketMultipartUploadsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetBucketMultipartUploadsResultOutput) Uploads() GetBucketMultipartUploadsUploadArrayOutput {
	return o.ApplyT(func(v GetBucketMultipartUploadsResult) []GetBucketMultipartUploadsUpload { return v.Uploads }).(GetBucketMultipartUploadsUploadArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetBucketMultipartUploadsResultOutput{})
}
