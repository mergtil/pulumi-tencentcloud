// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mariadb

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetDatabaseTable(ctx *pulumi.Context, args *GetDatabaseTableArgs, opts ...pulumi.InvokeOption) (*GetDatabaseTableResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDatabaseTableResult
	err := ctx.Invoke("tencentcloud:Mariadb/getDatabaseTable:getDatabaseTable", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDatabaseTable.
type GetDatabaseTableArgs struct {
	DbName           string  `pulumi:"dbName"`
	InstanceId       string  `pulumi:"instanceId"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	Table            string  `pulumi:"table"`
}

// A collection of values returned by getDatabaseTable.
type GetDatabaseTableResult struct {
	Cols   []GetDatabaseTableCol `pulumi:"cols"`
	DbName string                `pulumi:"dbName"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	InstanceId       string  `pulumi:"instanceId"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	Table            string  `pulumi:"table"`
}

func GetDatabaseTableOutput(ctx *pulumi.Context, args GetDatabaseTableOutputArgs, opts ...pulumi.InvokeOption) GetDatabaseTableResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDatabaseTableResult, error) {
			args := v.(GetDatabaseTableArgs)
			r, err := GetDatabaseTable(ctx, &args, opts...)
			var s GetDatabaseTableResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDatabaseTableResultOutput)
}

// A collection of arguments for invoking getDatabaseTable.
type GetDatabaseTableOutputArgs struct {
	DbName           pulumi.StringInput    `pulumi:"dbName"`
	InstanceId       pulumi.StringInput    `pulumi:"instanceId"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	Table            pulumi.StringInput    `pulumi:"table"`
}

func (GetDatabaseTableOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseTableArgs)(nil)).Elem()
}

// A collection of values returned by getDatabaseTable.
type GetDatabaseTableResultOutput struct{ *pulumi.OutputState }

func (GetDatabaseTableResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseTableResult)(nil)).Elem()
}

func (o GetDatabaseTableResultOutput) ToGetDatabaseTableResultOutput() GetDatabaseTableResultOutput {
	return o
}

func (o GetDatabaseTableResultOutput) ToGetDatabaseTableResultOutputWithContext(ctx context.Context) GetDatabaseTableResultOutput {
	return o
}

func (o GetDatabaseTableResultOutput) Cols() GetDatabaseTableColArrayOutput {
	return o.ApplyT(func(v GetDatabaseTableResult) []GetDatabaseTableCol { return v.Cols }).(GetDatabaseTableColArrayOutput)
}

func (o GetDatabaseTableResultOutput) DbName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseTableResult) string { return v.DbName }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDatabaseTableResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseTableResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDatabaseTableResultOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseTableResult) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetDatabaseTableResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDatabaseTableResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetDatabaseTableResultOutput) Table() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseTableResult) string { return v.Table }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDatabaseTableResultOutput{})
}
