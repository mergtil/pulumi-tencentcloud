// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package teo

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ApplicationProxyIpv6 struct {
	Switch string `pulumi:"switch"`
}

// ApplicationProxyIpv6Input is an input type that accepts ApplicationProxyIpv6Args and ApplicationProxyIpv6Output values.
// You can construct a concrete instance of `ApplicationProxyIpv6Input` via:
//
//	ApplicationProxyIpv6Args{...}
type ApplicationProxyIpv6Input interface {
	pulumi.Input

	ToApplicationProxyIpv6Output() ApplicationProxyIpv6Output
	ToApplicationProxyIpv6OutputWithContext(context.Context) ApplicationProxyIpv6Output
}

type ApplicationProxyIpv6Args struct {
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (ApplicationProxyIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationProxyIpv6)(nil)).Elem()
}

func (i ApplicationProxyIpv6Args) ToApplicationProxyIpv6Output() ApplicationProxyIpv6Output {
	return i.ToApplicationProxyIpv6OutputWithContext(context.Background())
}

func (i ApplicationProxyIpv6Args) ToApplicationProxyIpv6OutputWithContext(ctx context.Context) ApplicationProxyIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationProxyIpv6Output)
}

func (i ApplicationProxyIpv6Args) ToApplicationProxyIpv6PtrOutput() ApplicationProxyIpv6PtrOutput {
	return i.ToApplicationProxyIpv6PtrOutputWithContext(context.Background())
}

func (i ApplicationProxyIpv6Args) ToApplicationProxyIpv6PtrOutputWithContext(ctx context.Context) ApplicationProxyIpv6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationProxyIpv6Output).ToApplicationProxyIpv6PtrOutputWithContext(ctx)
}

// ApplicationProxyIpv6PtrInput is an input type that accepts ApplicationProxyIpv6Args, ApplicationProxyIpv6Ptr and ApplicationProxyIpv6PtrOutput values.
// You can construct a concrete instance of `ApplicationProxyIpv6PtrInput` via:
//
//	        ApplicationProxyIpv6Args{...}
//
//	or:
//
//	        nil
type ApplicationProxyIpv6PtrInput interface {
	pulumi.Input

	ToApplicationProxyIpv6PtrOutput() ApplicationProxyIpv6PtrOutput
	ToApplicationProxyIpv6PtrOutputWithContext(context.Context) ApplicationProxyIpv6PtrOutput
}

type applicationProxyIpv6PtrType ApplicationProxyIpv6Args

func ApplicationProxyIpv6Ptr(v *ApplicationProxyIpv6Args) ApplicationProxyIpv6PtrInput {
	return (*applicationProxyIpv6PtrType)(v)
}

func (*applicationProxyIpv6PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationProxyIpv6)(nil)).Elem()
}

func (i *applicationProxyIpv6PtrType) ToApplicationProxyIpv6PtrOutput() ApplicationProxyIpv6PtrOutput {
	return i.ToApplicationProxyIpv6PtrOutputWithContext(context.Background())
}

func (i *applicationProxyIpv6PtrType) ToApplicationProxyIpv6PtrOutputWithContext(ctx context.Context) ApplicationProxyIpv6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ApplicationProxyIpv6PtrOutput)
}

type ApplicationProxyIpv6Output struct{ *pulumi.OutputState }

func (ApplicationProxyIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ApplicationProxyIpv6)(nil)).Elem()
}

func (o ApplicationProxyIpv6Output) ToApplicationProxyIpv6Output() ApplicationProxyIpv6Output {
	return o
}

func (o ApplicationProxyIpv6Output) ToApplicationProxyIpv6OutputWithContext(ctx context.Context) ApplicationProxyIpv6Output {
	return o
}

func (o ApplicationProxyIpv6Output) ToApplicationProxyIpv6PtrOutput() ApplicationProxyIpv6PtrOutput {
	return o.ToApplicationProxyIpv6PtrOutputWithContext(context.Background())
}

func (o ApplicationProxyIpv6Output) ToApplicationProxyIpv6PtrOutputWithContext(ctx context.Context) ApplicationProxyIpv6PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ApplicationProxyIpv6) *ApplicationProxyIpv6 {
		return &v
	}).(ApplicationProxyIpv6PtrOutput)
}

func (o ApplicationProxyIpv6Output) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v ApplicationProxyIpv6) string { return v.Switch }).(pulumi.StringOutput)
}

type ApplicationProxyIpv6PtrOutput struct{ *pulumi.OutputState }

func (ApplicationProxyIpv6PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ApplicationProxyIpv6)(nil)).Elem()
}

func (o ApplicationProxyIpv6PtrOutput) ToApplicationProxyIpv6PtrOutput() ApplicationProxyIpv6PtrOutput {
	return o
}

func (o ApplicationProxyIpv6PtrOutput) ToApplicationProxyIpv6PtrOutputWithContext(ctx context.Context) ApplicationProxyIpv6PtrOutput {
	return o
}

func (o ApplicationProxyIpv6PtrOutput) Elem() ApplicationProxyIpv6Output {
	return o.ApplyT(func(v *ApplicationProxyIpv6) ApplicationProxyIpv6 {
		if v != nil {
			return *v
		}
		var ret ApplicationProxyIpv6
		return ret
	}).(ApplicationProxyIpv6Output)
}

func (o ApplicationProxyIpv6PtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ApplicationProxyIpv6) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type OriginGroupOriginRecord struct {
	Areas             []string                                  `pulumi:"areas"`
	Port              int                                       `pulumi:"port"`
	Private           *bool                                     `pulumi:"private"`
	PrivateParameters []OriginGroupOriginRecordPrivateParameter `pulumi:"privateParameters"`
	Record            string                                    `pulumi:"record"`
	RecordId          *string                                   `pulumi:"recordId"`
	Weight            *int                                      `pulumi:"weight"`
}

// OriginGroupOriginRecordInput is an input type that accepts OriginGroupOriginRecordArgs and OriginGroupOriginRecordOutput values.
// You can construct a concrete instance of `OriginGroupOriginRecordInput` via:
//
//	OriginGroupOriginRecordArgs{...}
type OriginGroupOriginRecordInput interface {
	pulumi.Input

	ToOriginGroupOriginRecordOutput() OriginGroupOriginRecordOutput
	ToOriginGroupOriginRecordOutputWithContext(context.Context) OriginGroupOriginRecordOutput
}

type OriginGroupOriginRecordArgs struct {
	Areas             pulumi.StringArrayInput                           `pulumi:"areas"`
	Port              pulumi.IntInput                                   `pulumi:"port"`
	Private           pulumi.BoolPtrInput                               `pulumi:"private"`
	PrivateParameters OriginGroupOriginRecordPrivateParameterArrayInput `pulumi:"privateParameters"`
	Record            pulumi.StringInput                                `pulumi:"record"`
	RecordId          pulumi.StringPtrInput                             `pulumi:"recordId"`
	Weight            pulumi.IntPtrInput                                `pulumi:"weight"`
}

func (OriginGroupOriginRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroupOriginRecord)(nil)).Elem()
}

func (i OriginGroupOriginRecordArgs) ToOriginGroupOriginRecordOutput() OriginGroupOriginRecordOutput {
	return i.ToOriginGroupOriginRecordOutputWithContext(context.Background())
}

func (i OriginGroupOriginRecordArgs) ToOriginGroupOriginRecordOutputWithContext(ctx context.Context) OriginGroupOriginRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupOriginRecordOutput)
}

// OriginGroupOriginRecordArrayInput is an input type that accepts OriginGroupOriginRecordArray and OriginGroupOriginRecordArrayOutput values.
// You can construct a concrete instance of `OriginGroupOriginRecordArrayInput` via:
//
//	OriginGroupOriginRecordArray{ OriginGroupOriginRecordArgs{...} }
type OriginGroupOriginRecordArrayInput interface {
	pulumi.Input

	ToOriginGroupOriginRecordArrayOutput() OriginGroupOriginRecordArrayOutput
	ToOriginGroupOriginRecordArrayOutputWithContext(context.Context) OriginGroupOriginRecordArrayOutput
}

type OriginGroupOriginRecordArray []OriginGroupOriginRecordInput

func (OriginGroupOriginRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OriginGroupOriginRecord)(nil)).Elem()
}

func (i OriginGroupOriginRecordArray) ToOriginGroupOriginRecordArrayOutput() OriginGroupOriginRecordArrayOutput {
	return i.ToOriginGroupOriginRecordArrayOutputWithContext(context.Background())
}

func (i OriginGroupOriginRecordArray) ToOriginGroupOriginRecordArrayOutputWithContext(ctx context.Context) OriginGroupOriginRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupOriginRecordArrayOutput)
}

type OriginGroupOriginRecordOutput struct{ *pulumi.OutputState }

func (OriginGroupOriginRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroupOriginRecord)(nil)).Elem()
}

func (o OriginGroupOriginRecordOutput) ToOriginGroupOriginRecordOutput() OriginGroupOriginRecordOutput {
	return o
}

func (o OriginGroupOriginRecordOutput) ToOriginGroupOriginRecordOutputWithContext(ctx context.Context) OriginGroupOriginRecordOutput {
	return o
}

func (o OriginGroupOriginRecordOutput) Areas() pulumi.StringArrayOutput {
	return o.ApplyT(func(v OriginGroupOriginRecord) []string { return v.Areas }).(pulumi.StringArrayOutput)
}

func (o OriginGroupOriginRecordOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v OriginGroupOriginRecord) int { return v.Port }).(pulumi.IntOutput)
}

func (o OriginGroupOriginRecordOutput) Private() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v OriginGroupOriginRecord) *bool { return v.Private }).(pulumi.BoolPtrOutput)
}

func (o OriginGroupOriginRecordOutput) PrivateParameters() OriginGroupOriginRecordPrivateParameterArrayOutput {
	return o.ApplyT(func(v OriginGroupOriginRecord) []OriginGroupOriginRecordPrivateParameter { return v.PrivateParameters }).(OriginGroupOriginRecordPrivateParameterArrayOutput)
}

func (o OriginGroupOriginRecordOutput) Record() pulumi.StringOutput {
	return o.ApplyT(func(v OriginGroupOriginRecord) string { return v.Record }).(pulumi.StringOutput)
}

func (o OriginGroupOriginRecordOutput) RecordId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OriginGroupOriginRecord) *string { return v.RecordId }).(pulumi.StringPtrOutput)
}

func (o OriginGroupOriginRecordOutput) Weight() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OriginGroupOriginRecord) *int { return v.Weight }).(pulumi.IntPtrOutput)
}

type OriginGroupOriginRecordArrayOutput struct{ *pulumi.OutputState }

func (OriginGroupOriginRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OriginGroupOriginRecord)(nil)).Elem()
}

func (o OriginGroupOriginRecordArrayOutput) ToOriginGroupOriginRecordArrayOutput() OriginGroupOriginRecordArrayOutput {
	return o
}

func (o OriginGroupOriginRecordArrayOutput) ToOriginGroupOriginRecordArrayOutputWithContext(ctx context.Context) OriginGroupOriginRecordArrayOutput {
	return o
}

func (o OriginGroupOriginRecordArrayOutput) Index(i pulumi.IntInput) OriginGroupOriginRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OriginGroupOriginRecord {
		return vs[0].([]OriginGroupOriginRecord)[vs[1].(int)]
	}).(OriginGroupOriginRecordOutput)
}

type OriginGroupOriginRecordPrivateParameter struct {
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// OriginGroupOriginRecordPrivateParameterInput is an input type that accepts OriginGroupOriginRecordPrivateParameterArgs and OriginGroupOriginRecordPrivateParameterOutput values.
// You can construct a concrete instance of `OriginGroupOriginRecordPrivateParameterInput` via:
//
//	OriginGroupOriginRecordPrivateParameterArgs{...}
type OriginGroupOriginRecordPrivateParameterInput interface {
	pulumi.Input

	ToOriginGroupOriginRecordPrivateParameterOutput() OriginGroupOriginRecordPrivateParameterOutput
	ToOriginGroupOriginRecordPrivateParameterOutputWithContext(context.Context) OriginGroupOriginRecordPrivateParameterOutput
}

type OriginGroupOriginRecordPrivateParameterArgs struct {
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (OriginGroupOriginRecordPrivateParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroupOriginRecordPrivateParameter)(nil)).Elem()
}

func (i OriginGroupOriginRecordPrivateParameterArgs) ToOriginGroupOriginRecordPrivateParameterOutput() OriginGroupOriginRecordPrivateParameterOutput {
	return i.ToOriginGroupOriginRecordPrivateParameterOutputWithContext(context.Background())
}

func (i OriginGroupOriginRecordPrivateParameterArgs) ToOriginGroupOriginRecordPrivateParameterOutputWithContext(ctx context.Context) OriginGroupOriginRecordPrivateParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupOriginRecordPrivateParameterOutput)
}

// OriginGroupOriginRecordPrivateParameterArrayInput is an input type that accepts OriginGroupOriginRecordPrivateParameterArray and OriginGroupOriginRecordPrivateParameterArrayOutput values.
// You can construct a concrete instance of `OriginGroupOriginRecordPrivateParameterArrayInput` via:
//
//	OriginGroupOriginRecordPrivateParameterArray{ OriginGroupOriginRecordPrivateParameterArgs{...} }
type OriginGroupOriginRecordPrivateParameterArrayInput interface {
	pulumi.Input

	ToOriginGroupOriginRecordPrivateParameterArrayOutput() OriginGroupOriginRecordPrivateParameterArrayOutput
	ToOriginGroupOriginRecordPrivateParameterArrayOutputWithContext(context.Context) OriginGroupOriginRecordPrivateParameterArrayOutput
}

type OriginGroupOriginRecordPrivateParameterArray []OriginGroupOriginRecordPrivateParameterInput

func (OriginGroupOriginRecordPrivateParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OriginGroupOriginRecordPrivateParameter)(nil)).Elem()
}

func (i OriginGroupOriginRecordPrivateParameterArray) ToOriginGroupOriginRecordPrivateParameterArrayOutput() OriginGroupOriginRecordPrivateParameterArrayOutput {
	return i.ToOriginGroupOriginRecordPrivateParameterArrayOutputWithContext(context.Background())
}

func (i OriginGroupOriginRecordPrivateParameterArray) ToOriginGroupOriginRecordPrivateParameterArrayOutputWithContext(ctx context.Context) OriginGroupOriginRecordPrivateParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupOriginRecordPrivateParameterArrayOutput)
}

type OriginGroupOriginRecordPrivateParameterOutput struct{ *pulumi.OutputState }

func (OriginGroupOriginRecordPrivateParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OriginGroupOriginRecordPrivateParameter)(nil)).Elem()
}

func (o OriginGroupOriginRecordPrivateParameterOutput) ToOriginGroupOriginRecordPrivateParameterOutput() OriginGroupOriginRecordPrivateParameterOutput {
	return o
}

func (o OriginGroupOriginRecordPrivateParameterOutput) ToOriginGroupOriginRecordPrivateParameterOutputWithContext(ctx context.Context) OriginGroupOriginRecordPrivateParameterOutput {
	return o
}

func (o OriginGroupOriginRecordPrivateParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v OriginGroupOriginRecordPrivateParameter) string { return v.Name }).(pulumi.StringOutput)
}

func (o OriginGroupOriginRecordPrivateParameterOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v OriginGroupOriginRecordPrivateParameter) string { return v.Value }).(pulumi.StringOutput)
}

type OriginGroupOriginRecordPrivateParameterArrayOutput struct{ *pulumi.OutputState }

func (OriginGroupOriginRecordPrivateParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OriginGroupOriginRecordPrivateParameter)(nil)).Elem()
}

func (o OriginGroupOriginRecordPrivateParameterArrayOutput) ToOriginGroupOriginRecordPrivateParameterArrayOutput() OriginGroupOriginRecordPrivateParameterArrayOutput {
	return o
}

func (o OriginGroupOriginRecordPrivateParameterArrayOutput) ToOriginGroupOriginRecordPrivateParameterArrayOutputWithContext(ctx context.Context) OriginGroupOriginRecordPrivateParameterArrayOutput {
	return o
}

func (o OriginGroupOriginRecordPrivateParameterArrayOutput) Index(i pulumi.IntInput) OriginGroupOriginRecordPrivateParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OriginGroupOriginRecordPrivateParameter {
		return vs[0].([]OriginGroupOriginRecordPrivateParameter)[vs[1].(int)]
	}).(OriginGroupOriginRecordPrivateParameterOutput)
}

type RuleEngineRule struct {
	Actions  []RuleEngineRuleAction  `pulumi:"actions"`
	Ors      []RuleEngineRuleOr      `pulumi:"ors"`
	SubRules []RuleEngineRuleSubRule `pulumi:"subRules"`
}

// RuleEngineRuleInput is an input type that accepts RuleEngineRuleArgs and RuleEngineRuleOutput values.
// You can construct a concrete instance of `RuleEngineRuleInput` via:
//
//	RuleEngineRuleArgs{...}
type RuleEngineRuleInput interface {
	pulumi.Input

	ToRuleEngineRuleOutput() RuleEngineRuleOutput
	ToRuleEngineRuleOutputWithContext(context.Context) RuleEngineRuleOutput
}

type RuleEngineRuleArgs struct {
	Actions  RuleEngineRuleActionArrayInput  `pulumi:"actions"`
	Ors      RuleEngineRuleOrArrayInput      `pulumi:"ors"`
	SubRules RuleEngineRuleSubRuleArrayInput `pulumi:"subRules"`
}

func (RuleEngineRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRule)(nil)).Elem()
}

func (i RuleEngineRuleArgs) ToRuleEngineRuleOutput() RuleEngineRuleOutput {
	return i.ToRuleEngineRuleOutputWithContext(context.Background())
}

func (i RuleEngineRuleArgs) ToRuleEngineRuleOutputWithContext(ctx context.Context) RuleEngineRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleOutput)
}

// RuleEngineRuleArrayInput is an input type that accepts RuleEngineRuleArray and RuleEngineRuleArrayOutput values.
// You can construct a concrete instance of `RuleEngineRuleArrayInput` via:
//
//	RuleEngineRuleArray{ RuleEngineRuleArgs{...} }
type RuleEngineRuleArrayInput interface {
	pulumi.Input

	ToRuleEngineRuleArrayOutput() RuleEngineRuleArrayOutput
	ToRuleEngineRuleArrayOutputWithContext(context.Context) RuleEngineRuleArrayOutput
}

type RuleEngineRuleArray []RuleEngineRuleInput

func (RuleEngineRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRule)(nil)).Elem()
}

func (i RuleEngineRuleArray) ToRuleEngineRuleArrayOutput() RuleEngineRuleArrayOutput {
	return i.ToRuleEngineRuleArrayOutputWithContext(context.Background())
}

func (i RuleEngineRuleArray) ToRuleEngineRuleArrayOutputWithContext(ctx context.Context) RuleEngineRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleArrayOutput)
}

type RuleEngineRuleOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRule)(nil)).Elem()
}

func (o RuleEngineRuleOutput) ToRuleEngineRuleOutput() RuleEngineRuleOutput {
	return o
}

func (o RuleEngineRuleOutput) ToRuleEngineRuleOutputWithContext(ctx context.Context) RuleEngineRuleOutput {
	return o
}

func (o RuleEngineRuleOutput) Actions() RuleEngineRuleActionArrayOutput {
	return o.ApplyT(func(v RuleEngineRule) []RuleEngineRuleAction { return v.Actions }).(RuleEngineRuleActionArrayOutput)
}

func (o RuleEngineRuleOutput) Ors() RuleEngineRuleOrArrayOutput {
	return o.ApplyT(func(v RuleEngineRule) []RuleEngineRuleOr { return v.Ors }).(RuleEngineRuleOrArrayOutput)
}

func (o RuleEngineRuleOutput) SubRules() RuleEngineRuleSubRuleArrayOutput {
	return o.ApplyT(func(v RuleEngineRule) []RuleEngineRuleSubRule { return v.SubRules }).(RuleEngineRuleSubRuleArrayOutput)
}

type RuleEngineRuleArrayOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRule)(nil)).Elem()
}

func (o RuleEngineRuleArrayOutput) ToRuleEngineRuleArrayOutput() RuleEngineRuleArrayOutput {
	return o
}

func (o RuleEngineRuleArrayOutput) ToRuleEngineRuleArrayOutputWithContext(ctx context.Context) RuleEngineRuleArrayOutput {
	return o
}

func (o RuleEngineRuleArrayOutput) Index(i pulumi.IntInput) RuleEngineRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEngineRule {
		return vs[0].([]RuleEngineRule)[vs[1].(int)]
	}).(RuleEngineRuleOutput)
}

type RuleEngineRuleAction struct {
	CodeAction    *RuleEngineRuleActionCodeAction    `pulumi:"codeAction"`
	NormalAction  *RuleEngineRuleActionNormalAction  `pulumi:"normalAction"`
	RewriteAction *RuleEngineRuleActionRewriteAction `pulumi:"rewriteAction"`
}

// RuleEngineRuleActionInput is an input type that accepts RuleEngineRuleActionArgs and RuleEngineRuleActionOutput values.
// You can construct a concrete instance of `RuleEngineRuleActionInput` via:
//
//	RuleEngineRuleActionArgs{...}
type RuleEngineRuleActionInput interface {
	pulumi.Input

	ToRuleEngineRuleActionOutput() RuleEngineRuleActionOutput
	ToRuleEngineRuleActionOutputWithContext(context.Context) RuleEngineRuleActionOutput
}

type RuleEngineRuleActionArgs struct {
	CodeAction    RuleEngineRuleActionCodeActionPtrInput    `pulumi:"codeAction"`
	NormalAction  RuleEngineRuleActionNormalActionPtrInput  `pulumi:"normalAction"`
	RewriteAction RuleEngineRuleActionRewriteActionPtrInput `pulumi:"rewriteAction"`
}

func (RuleEngineRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleAction)(nil)).Elem()
}

func (i RuleEngineRuleActionArgs) ToRuleEngineRuleActionOutput() RuleEngineRuleActionOutput {
	return i.ToRuleEngineRuleActionOutputWithContext(context.Background())
}

func (i RuleEngineRuleActionArgs) ToRuleEngineRuleActionOutputWithContext(ctx context.Context) RuleEngineRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionOutput)
}

// RuleEngineRuleActionArrayInput is an input type that accepts RuleEngineRuleActionArray and RuleEngineRuleActionArrayOutput values.
// You can construct a concrete instance of `RuleEngineRuleActionArrayInput` via:
//
//	RuleEngineRuleActionArray{ RuleEngineRuleActionArgs{...} }
type RuleEngineRuleActionArrayInput interface {
	pulumi.Input

	ToRuleEngineRuleActionArrayOutput() RuleEngineRuleActionArrayOutput
	ToRuleEngineRuleActionArrayOutputWithContext(context.Context) RuleEngineRuleActionArrayOutput
}

type RuleEngineRuleActionArray []RuleEngineRuleActionInput

func (RuleEngineRuleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleAction)(nil)).Elem()
}

func (i RuleEngineRuleActionArray) ToRuleEngineRuleActionArrayOutput() RuleEngineRuleActionArrayOutput {
	return i.ToRuleEngineRuleActionArrayOutputWithContext(context.Background())
}

func (i RuleEngineRuleActionArray) ToRuleEngineRuleActionArrayOutputWithContext(ctx context.Context) RuleEngineRuleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionArrayOutput)
}

type RuleEngineRuleActionOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleAction)(nil)).Elem()
}

func (o RuleEngineRuleActionOutput) ToRuleEngineRuleActionOutput() RuleEngineRuleActionOutput {
	return o
}

func (o RuleEngineRuleActionOutput) ToRuleEngineRuleActionOutputWithContext(ctx context.Context) RuleEngineRuleActionOutput {
	return o
}

func (o RuleEngineRuleActionOutput) CodeAction() RuleEngineRuleActionCodeActionPtrOutput {
	return o.ApplyT(func(v RuleEngineRuleAction) *RuleEngineRuleActionCodeAction { return v.CodeAction }).(RuleEngineRuleActionCodeActionPtrOutput)
}

func (o RuleEngineRuleActionOutput) NormalAction() RuleEngineRuleActionNormalActionPtrOutput {
	return o.ApplyT(func(v RuleEngineRuleAction) *RuleEngineRuleActionNormalAction { return v.NormalAction }).(RuleEngineRuleActionNormalActionPtrOutput)
}

func (o RuleEngineRuleActionOutput) RewriteAction() RuleEngineRuleActionRewriteActionPtrOutput {
	return o.ApplyT(func(v RuleEngineRuleAction) *RuleEngineRuleActionRewriteAction { return v.RewriteAction }).(RuleEngineRuleActionRewriteActionPtrOutput)
}

type RuleEngineRuleActionArrayOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleAction)(nil)).Elem()
}

func (o RuleEngineRuleActionArrayOutput) ToRuleEngineRuleActionArrayOutput() RuleEngineRuleActionArrayOutput {
	return o
}

func (o RuleEngineRuleActionArrayOutput) ToRuleEngineRuleActionArrayOutputWithContext(ctx context.Context) RuleEngineRuleActionArrayOutput {
	return o
}

func (o RuleEngineRuleActionArrayOutput) Index(i pulumi.IntInput) RuleEngineRuleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEngineRuleAction {
		return vs[0].([]RuleEngineRuleAction)[vs[1].(int)]
	}).(RuleEngineRuleActionOutput)
}

type RuleEngineRuleActionCodeAction struct {
	Action     string                                    `pulumi:"action"`
	Parameters []RuleEngineRuleActionCodeActionParameter `pulumi:"parameters"`
}

// RuleEngineRuleActionCodeActionInput is an input type that accepts RuleEngineRuleActionCodeActionArgs and RuleEngineRuleActionCodeActionOutput values.
// You can construct a concrete instance of `RuleEngineRuleActionCodeActionInput` via:
//
//	RuleEngineRuleActionCodeActionArgs{...}
type RuleEngineRuleActionCodeActionInput interface {
	pulumi.Input

	ToRuleEngineRuleActionCodeActionOutput() RuleEngineRuleActionCodeActionOutput
	ToRuleEngineRuleActionCodeActionOutputWithContext(context.Context) RuleEngineRuleActionCodeActionOutput
}

type RuleEngineRuleActionCodeActionArgs struct {
	Action     pulumi.StringInput                                `pulumi:"action"`
	Parameters RuleEngineRuleActionCodeActionParameterArrayInput `pulumi:"parameters"`
}

func (RuleEngineRuleActionCodeActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleActionCodeAction)(nil)).Elem()
}

func (i RuleEngineRuleActionCodeActionArgs) ToRuleEngineRuleActionCodeActionOutput() RuleEngineRuleActionCodeActionOutput {
	return i.ToRuleEngineRuleActionCodeActionOutputWithContext(context.Background())
}

func (i RuleEngineRuleActionCodeActionArgs) ToRuleEngineRuleActionCodeActionOutputWithContext(ctx context.Context) RuleEngineRuleActionCodeActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionCodeActionOutput)
}

func (i RuleEngineRuleActionCodeActionArgs) ToRuleEngineRuleActionCodeActionPtrOutput() RuleEngineRuleActionCodeActionPtrOutput {
	return i.ToRuleEngineRuleActionCodeActionPtrOutputWithContext(context.Background())
}

func (i RuleEngineRuleActionCodeActionArgs) ToRuleEngineRuleActionCodeActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleActionCodeActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionCodeActionOutput).ToRuleEngineRuleActionCodeActionPtrOutputWithContext(ctx)
}

// RuleEngineRuleActionCodeActionPtrInput is an input type that accepts RuleEngineRuleActionCodeActionArgs, RuleEngineRuleActionCodeActionPtr and RuleEngineRuleActionCodeActionPtrOutput values.
// You can construct a concrete instance of `RuleEngineRuleActionCodeActionPtrInput` via:
//
//	        RuleEngineRuleActionCodeActionArgs{...}
//
//	or:
//
//	        nil
type RuleEngineRuleActionCodeActionPtrInput interface {
	pulumi.Input

	ToRuleEngineRuleActionCodeActionPtrOutput() RuleEngineRuleActionCodeActionPtrOutput
	ToRuleEngineRuleActionCodeActionPtrOutputWithContext(context.Context) RuleEngineRuleActionCodeActionPtrOutput
}

type ruleEngineRuleActionCodeActionPtrType RuleEngineRuleActionCodeActionArgs

func RuleEngineRuleActionCodeActionPtr(v *RuleEngineRuleActionCodeActionArgs) RuleEngineRuleActionCodeActionPtrInput {
	return (*ruleEngineRuleActionCodeActionPtrType)(v)
}

func (*ruleEngineRuleActionCodeActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleEngineRuleActionCodeAction)(nil)).Elem()
}

func (i *ruleEngineRuleActionCodeActionPtrType) ToRuleEngineRuleActionCodeActionPtrOutput() RuleEngineRuleActionCodeActionPtrOutput {
	return i.ToRuleEngineRuleActionCodeActionPtrOutputWithContext(context.Background())
}

func (i *ruleEngineRuleActionCodeActionPtrType) ToRuleEngineRuleActionCodeActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleActionCodeActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionCodeActionPtrOutput)
}

type RuleEngineRuleActionCodeActionOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleActionCodeActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleActionCodeAction)(nil)).Elem()
}

func (o RuleEngineRuleActionCodeActionOutput) ToRuleEngineRuleActionCodeActionOutput() RuleEngineRuleActionCodeActionOutput {
	return o
}

func (o RuleEngineRuleActionCodeActionOutput) ToRuleEngineRuleActionCodeActionOutputWithContext(ctx context.Context) RuleEngineRuleActionCodeActionOutput {
	return o
}

func (o RuleEngineRuleActionCodeActionOutput) ToRuleEngineRuleActionCodeActionPtrOutput() RuleEngineRuleActionCodeActionPtrOutput {
	return o.ToRuleEngineRuleActionCodeActionPtrOutputWithContext(context.Background())
}

func (o RuleEngineRuleActionCodeActionOutput) ToRuleEngineRuleActionCodeActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleActionCodeActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleEngineRuleActionCodeAction) *RuleEngineRuleActionCodeAction {
		return &v
	}).(RuleEngineRuleActionCodeActionPtrOutput)
}

func (o RuleEngineRuleActionCodeActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleActionCodeAction) string { return v.Action }).(pulumi.StringOutput)
}

func (o RuleEngineRuleActionCodeActionOutput) Parameters() RuleEngineRuleActionCodeActionParameterArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleActionCodeAction) []RuleEngineRuleActionCodeActionParameter { return v.Parameters }).(RuleEngineRuleActionCodeActionParameterArrayOutput)
}

type RuleEngineRuleActionCodeActionPtrOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleActionCodeActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleEngineRuleActionCodeAction)(nil)).Elem()
}

func (o RuleEngineRuleActionCodeActionPtrOutput) ToRuleEngineRuleActionCodeActionPtrOutput() RuleEngineRuleActionCodeActionPtrOutput {
	return o
}

func (o RuleEngineRuleActionCodeActionPtrOutput) ToRuleEngineRuleActionCodeActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleActionCodeActionPtrOutput {
	return o
}

func (o RuleEngineRuleActionCodeActionPtrOutput) Elem() RuleEngineRuleActionCodeActionOutput {
	return o.ApplyT(func(v *RuleEngineRuleActionCodeAction) RuleEngineRuleActionCodeAction {
		if v != nil {
			return *v
		}
		var ret RuleEngineRuleActionCodeAction
		return ret
	}).(RuleEngineRuleActionCodeActionOutput)
}

func (o RuleEngineRuleActionCodeActionPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleEngineRuleActionCodeAction) *string {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(pulumi.StringPtrOutput)
}

func (o RuleEngineRuleActionCodeActionPtrOutput) Parameters() RuleEngineRuleActionCodeActionParameterArrayOutput {
	return o.ApplyT(func(v *RuleEngineRuleActionCodeAction) []RuleEngineRuleActionCodeActionParameter {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(RuleEngineRuleActionCodeActionParameterArrayOutput)
}

type RuleEngineRuleActionCodeActionParameter struct {
	Name       string   `pulumi:"name"`
	StatusCode int      `pulumi:"statusCode"`
	Values     []string `pulumi:"values"`
}

// RuleEngineRuleActionCodeActionParameterInput is an input type that accepts RuleEngineRuleActionCodeActionParameterArgs and RuleEngineRuleActionCodeActionParameterOutput values.
// You can construct a concrete instance of `RuleEngineRuleActionCodeActionParameterInput` via:
//
//	RuleEngineRuleActionCodeActionParameterArgs{...}
type RuleEngineRuleActionCodeActionParameterInput interface {
	pulumi.Input

	ToRuleEngineRuleActionCodeActionParameterOutput() RuleEngineRuleActionCodeActionParameterOutput
	ToRuleEngineRuleActionCodeActionParameterOutputWithContext(context.Context) RuleEngineRuleActionCodeActionParameterOutput
}

type RuleEngineRuleActionCodeActionParameterArgs struct {
	Name       pulumi.StringInput      `pulumi:"name"`
	StatusCode pulumi.IntInput         `pulumi:"statusCode"`
	Values     pulumi.StringArrayInput `pulumi:"values"`
}

func (RuleEngineRuleActionCodeActionParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleActionCodeActionParameter)(nil)).Elem()
}

func (i RuleEngineRuleActionCodeActionParameterArgs) ToRuleEngineRuleActionCodeActionParameterOutput() RuleEngineRuleActionCodeActionParameterOutput {
	return i.ToRuleEngineRuleActionCodeActionParameterOutputWithContext(context.Background())
}

func (i RuleEngineRuleActionCodeActionParameterArgs) ToRuleEngineRuleActionCodeActionParameterOutputWithContext(ctx context.Context) RuleEngineRuleActionCodeActionParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionCodeActionParameterOutput)
}

// RuleEngineRuleActionCodeActionParameterArrayInput is an input type that accepts RuleEngineRuleActionCodeActionParameterArray and RuleEngineRuleActionCodeActionParameterArrayOutput values.
// You can construct a concrete instance of `RuleEngineRuleActionCodeActionParameterArrayInput` via:
//
//	RuleEngineRuleActionCodeActionParameterArray{ RuleEngineRuleActionCodeActionParameterArgs{...} }
type RuleEngineRuleActionCodeActionParameterArrayInput interface {
	pulumi.Input

	ToRuleEngineRuleActionCodeActionParameterArrayOutput() RuleEngineRuleActionCodeActionParameterArrayOutput
	ToRuleEngineRuleActionCodeActionParameterArrayOutputWithContext(context.Context) RuleEngineRuleActionCodeActionParameterArrayOutput
}

type RuleEngineRuleActionCodeActionParameterArray []RuleEngineRuleActionCodeActionParameterInput

func (RuleEngineRuleActionCodeActionParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleActionCodeActionParameter)(nil)).Elem()
}

func (i RuleEngineRuleActionCodeActionParameterArray) ToRuleEngineRuleActionCodeActionParameterArrayOutput() RuleEngineRuleActionCodeActionParameterArrayOutput {
	return i.ToRuleEngineRuleActionCodeActionParameterArrayOutputWithContext(context.Background())
}

func (i RuleEngineRuleActionCodeActionParameterArray) ToRuleEngineRuleActionCodeActionParameterArrayOutputWithContext(ctx context.Context) RuleEngineRuleActionCodeActionParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionCodeActionParameterArrayOutput)
}

type RuleEngineRuleActionCodeActionParameterOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleActionCodeActionParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleActionCodeActionParameter)(nil)).Elem()
}

func (o RuleEngineRuleActionCodeActionParameterOutput) ToRuleEngineRuleActionCodeActionParameterOutput() RuleEngineRuleActionCodeActionParameterOutput {
	return o
}

func (o RuleEngineRuleActionCodeActionParameterOutput) ToRuleEngineRuleActionCodeActionParameterOutputWithContext(ctx context.Context) RuleEngineRuleActionCodeActionParameterOutput {
	return o
}

func (o RuleEngineRuleActionCodeActionParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleActionCodeActionParameter) string { return v.Name }).(pulumi.StringOutput)
}

func (o RuleEngineRuleActionCodeActionParameterOutput) StatusCode() pulumi.IntOutput {
	return o.ApplyT(func(v RuleEngineRuleActionCodeActionParameter) int { return v.StatusCode }).(pulumi.IntOutput)
}

func (o RuleEngineRuleActionCodeActionParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleActionCodeActionParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RuleEngineRuleActionCodeActionParameterArrayOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleActionCodeActionParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleActionCodeActionParameter)(nil)).Elem()
}

func (o RuleEngineRuleActionCodeActionParameterArrayOutput) ToRuleEngineRuleActionCodeActionParameterArrayOutput() RuleEngineRuleActionCodeActionParameterArrayOutput {
	return o
}

func (o RuleEngineRuleActionCodeActionParameterArrayOutput) ToRuleEngineRuleActionCodeActionParameterArrayOutputWithContext(ctx context.Context) RuleEngineRuleActionCodeActionParameterArrayOutput {
	return o
}

func (o RuleEngineRuleActionCodeActionParameterArrayOutput) Index(i pulumi.IntInput) RuleEngineRuleActionCodeActionParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEngineRuleActionCodeActionParameter {
		return vs[0].([]RuleEngineRuleActionCodeActionParameter)[vs[1].(int)]
	}).(RuleEngineRuleActionCodeActionParameterOutput)
}

type RuleEngineRuleActionNormalAction struct {
	Action     string                                      `pulumi:"action"`
	Parameters []RuleEngineRuleActionNormalActionParameter `pulumi:"parameters"`
}

// RuleEngineRuleActionNormalActionInput is an input type that accepts RuleEngineRuleActionNormalActionArgs and RuleEngineRuleActionNormalActionOutput values.
// You can construct a concrete instance of `RuleEngineRuleActionNormalActionInput` via:
//
//	RuleEngineRuleActionNormalActionArgs{...}
type RuleEngineRuleActionNormalActionInput interface {
	pulumi.Input

	ToRuleEngineRuleActionNormalActionOutput() RuleEngineRuleActionNormalActionOutput
	ToRuleEngineRuleActionNormalActionOutputWithContext(context.Context) RuleEngineRuleActionNormalActionOutput
}

type RuleEngineRuleActionNormalActionArgs struct {
	Action     pulumi.StringInput                                  `pulumi:"action"`
	Parameters RuleEngineRuleActionNormalActionParameterArrayInput `pulumi:"parameters"`
}

func (RuleEngineRuleActionNormalActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleActionNormalAction)(nil)).Elem()
}

func (i RuleEngineRuleActionNormalActionArgs) ToRuleEngineRuleActionNormalActionOutput() RuleEngineRuleActionNormalActionOutput {
	return i.ToRuleEngineRuleActionNormalActionOutputWithContext(context.Background())
}

func (i RuleEngineRuleActionNormalActionArgs) ToRuleEngineRuleActionNormalActionOutputWithContext(ctx context.Context) RuleEngineRuleActionNormalActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionNormalActionOutput)
}

func (i RuleEngineRuleActionNormalActionArgs) ToRuleEngineRuleActionNormalActionPtrOutput() RuleEngineRuleActionNormalActionPtrOutput {
	return i.ToRuleEngineRuleActionNormalActionPtrOutputWithContext(context.Background())
}

func (i RuleEngineRuleActionNormalActionArgs) ToRuleEngineRuleActionNormalActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleActionNormalActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionNormalActionOutput).ToRuleEngineRuleActionNormalActionPtrOutputWithContext(ctx)
}

// RuleEngineRuleActionNormalActionPtrInput is an input type that accepts RuleEngineRuleActionNormalActionArgs, RuleEngineRuleActionNormalActionPtr and RuleEngineRuleActionNormalActionPtrOutput values.
// You can construct a concrete instance of `RuleEngineRuleActionNormalActionPtrInput` via:
//
//	        RuleEngineRuleActionNormalActionArgs{...}
//
//	or:
//
//	        nil
type RuleEngineRuleActionNormalActionPtrInput interface {
	pulumi.Input

	ToRuleEngineRuleActionNormalActionPtrOutput() RuleEngineRuleActionNormalActionPtrOutput
	ToRuleEngineRuleActionNormalActionPtrOutputWithContext(context.Context) RuleEngineRuleActionNormalActionPtrOutput
}

type ruleEngineRuleActionNormalActionPtrType RuleEngineRuleActionNormalActionArgs

func RuleEngineRuleActionNormalActionPtr(v *RuleEngineRuleActionNormalActionArgs) RuleEngineRuleActionNormalActionPtrInput {
	return (*ruleEngineRuleActionNormalActionPtrType)(v)
}

func (*ruleEngineRuleActionNormalActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleEngineRuleActionNormalAction)(nil)).Elem()
}

func (i *ruleEngineRuleActionNormalActionPtrType) ToRuleEngineRuleActionNormalActionPtrOutput() RuleEngineRuleActionNormalActionPtrOutput {
	return i.ToRuleEngineRuleActionNormalActionPtrOutputWithContext(context.Background())
}

func (i *ruleEngineRuleActionNormalActionPtrType) ToRuleEngineRuleActionNormalActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleActionNormalActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionNormalActionPtrOutput)
}

type RuleEngineRuleActionNormalActionOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleActionNormalActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleActionNormalAction)(nil)).Elem()
}

func (o RuleEngineRuleActionNormalActionOutput) ToRuleEngineRuleActionNormalActionOutput() RuleEngineRuleActionNormalActionOutput {
	return o
}

func (o RuleEngineRuleActionNormalActionOutput) ToRuleEngineRuleActionNormalActionOutputWithContext(ctx context.Context) RuleEngineRuleActionNormalActionOutput {
	return o
}

func (o RuleEngineRuleActionNormalActionOutput) ToRuleEngineRuleActionNormalActionPtrOutput() RuleEngineRuleActionNormalActionPtrOutput {
	return o.ToRuleEngineRuleActionNormalActionPtrOutputWithContext(context.Background())
}

func (o RuleEngineRuleActionNormalActionOutput) ToRuleEngineRuleActionNormalActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleActionNormalActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleEngineRuleActionNormalAction) *RuleEngineRuleActionNormalAction {
		return &v
	}).(RuleEngineRuleActionNormalActionPtrOutput)
}

func (o RuleEngineRuleActionNormalActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleActionNormalAction) string { return v.Action }).(pulumi.StringOutput)
}

func (o RuleEngineRuleActionNormalActionOutput) Parameters() RuleEngineRuleActionNormalActionParameterArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleActionNormalAction) []RuleEngineRuleActionNormalActionParameter {
		return v.Parameters
	}).(RuleEngineRuleActionNormalActionParameterArrayOutput)
}

type RuleEngineRuleActionNormalActionPtrOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleActionNormalActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleEngineRuleActionNormalAction)(nil)).Elem()
}

func (o RuleEngineRuleActionNormalActionPtrOutput) ToRuleEngineRuleActionNormalActionPtrOutput() RuleEngineRuleActionNormalActionPtrOutput {
	return o
}

func (o RuleEngineRuleActionNormalActionPtrOutput) ToRuleEngineRuleActionNormalActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleActionNormalActionPtrOutput {
	return o
}

func (o RuleEngineRuleActionNormalActionPtrOutput) Elem() RuleEngineRuleActionNormalActionOutput {
	return o.ApplyT(func(v *RuleEngineRuleActionNormalAction) RuleEngineRuleActionNormalAction {
		if v != nil {
			return *v
		}
		var ret RuleEngineRuleActionNormalAction
		return ret
	}).(RuleEngineRuleActionNormalActionOutput)
}

func (o RuleEngineRuleActionNormalActionPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleEngineRuleActionNormalAction) *string {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(pulumi.StringPtrOutput)
}

func (o RuleEngineRuleActionNormalActionPtrOutput) Parameters() RuleEngineRuleActionNormalActionParameterArrayOutput {
	return o.ApplyT(func(v *RuleEngineRuleActionNormalAction) []RuleEngineRuleActionNormalActionParameter {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(RuleEngineRuleActionNormalActionParameterArrayOutput)
}

type RuleEngineRuleActionNormalActionParameter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// RuleEngineRuleActionNormalActionParameterInput is an input type that accepts RuleEngineRuleActionNormalActionParameterArgs and RuleEngineRuleActionNormalActionParameterOutput values.
// You can construct a concrete instance of `RuleEngineRuleActionNormalActionParameterInput` via:
//
//	RuleEngineRuleActionNormalActionParameterArgs{...}
type RuleEngineRuleActionNormalActionParameterInput interface {
	pulumi.Input

	ToRuleEngineRuleActionNormalActionParameterOutput() RuleEngineRuleActionNormalActionParameterOutput
	ToRuleEngineRuleActionNormalActionParameterOutputWithContext(context.Context) RuleEngineRuleActionNormalActionParameterOutput
}

type RuleEngineRuleActionNormalActionParameterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (RuleEngineRuleActionNormalActionParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleActionNormalActionParameter)(nil)).Elem()
}

func (i RuleEngineRuleActionNormalActionParameterArgs) ToRuleEngineRuleActionNormalActionParameterOutput() RuleEngineRuleActionNormalActionParameterOutput {
	return i.ToRuleEngineRuleActionNormalActionParameterOutputWithContext(context.Background())
}

func (i RuleEngineRuleActionNormalActionParameterArgs) ToRuleEngineRuleActionNormalActionParameterOutputWithContext(ctx context.Context) RuleEngineRuleActionNormalActionParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionNormalActionParameterOutput)
}

// RuleEngineRuleActionNormalActionParameterArrayInput is an input type that accepts RuleEngineRuleActionNormalActionParameterArray and RuleEngineRuleActionNormalActionParameterArrayOutput values.
// You can construct a concrete instance of `RuleEngineRuleActionNormalActionParameterArrayInput` via:
//
//	RuleEngineRuleActionNormalActionParameterArray{ RuleEngineRuleActionNormalActionParameterArgs{...} }
type RuleEngineRuleActionNormalActionParameterArrayInput interface {
	pulumi.Input

	ToRuleEngineRuleActionNormalActionParameterArrayOutput() RuleEngineRuleActionNormalActionParameterArrayOutput
	ToRuleEngineRuleActionNormalActionParameterArrayOutputWithContext(context.Context) RuleEngineRuleActionNormalActionParameterArrayOutput
}

type RuleEngineRuleActionNormalActionParameterArray []RuleEngineRuleActionNormalActionParameterInput

func (RuleEngineRuleActionNormalActionParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleActionNormalActionParameter)(nil)).Elem()
}

func (i RuleEngineRuleActionNormalActionParameterArray) ToRuleEngineRuleActionNormalActionParameterArrayOutput() RuleEngineRuleActionNormalActionParameterArrayOutput {
	return i.ToRuleEngineRuleActionNormalActionParameterArrayOutputWithContext(context.Background())
}

func (i RuleEngineRuleActionNormalActionParameterArray) ToRuleEngineRuleActionNormalActionParameterArrayOutputWithContext(ctx context.Context) RuleEngineRuleActionNormalActionParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionNormalActionParameterArrayOutput)
}

type RuleEngineRuleActionNormalActionParameterOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleActionNormalActionParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleActionNormalActionParameter)(nil)).Elem()
}

func (o RuleEngineRuleActionNormalActionParameterOutput) ToRuleEngineRuleActionNormalActionParameterOutput() RuleEngineRuleActionNormalActionParameterOutput {
	return o
}

func (o RuleEngineRuleActionNormalActionParameterOutput) ToRuleEngineRuleActionNormalActionParameterOutputWithContext(ctx context.Context) RuleEngineRuleActionNormalActionParameterOutput {
	return o
}

func (o RuleEngineRuleActionNormalActionParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleActionNormalActionParameter) string { return v.Name }).(pulumi.StringOutput)
}

func (o RuleEngineRuleActionNormalActionParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleActionNormalActionParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RuleEngineRuleActionNormalActionParameterArrayOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleActionNormalActionParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleActionNormalActionParameter)(nil)).Elem()
}

func (o RuleEngineRuleActionNormalActionParameterArrayOutput) ToRuleEngineRuleActionNormalActionParameterArrayOutput() RuleEngineRuleActionNormalActionParameterArrayOutput {
	return o
}

func (o RuleEngineRuleActionNormalActionParameterArrayOutput) ToRuleEngineRuleActionNormalActionParameterArrayOutputWithContext(ctx context.Context) RuleEngineRuleActionNormalActionParameterArrayOutput {
	return o
}

func (o RuleEngineRuleActionNormalActionParameterArrayOutput) Index(i pulumi.IntInput) RuleEngineRuleActionNormalActionParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEngineRuleActionNormalActionParameter {
		return vs[0].([]RuleEngineRuleActionNormalActionParameter)[vs[1].(int)]
	}).(RuleEngineRuleActionNormalActionParameterOutput)
}

type RuleEngineRuleActionRewriteAction struct {
	Action     string                                       `pulumi:"action"`
	Parameters []RuleEngineRuleActionRewriteActionParameter `pulumi:"parameters"`
}

// RuleEngineRuleActionRewriteActionInput is an input type that accepts RuleEngineRuleActionRewriteActionArgs and RuleEngineRuleActionRewriteActionOutput values.
// You can construct a concrete instance of `RuleEngineRuleActionRewriteActionInput` via:
//
//	RuleEngineRuleActionRewriteActionArgs{...}
type RuleEngineRuleActionRewriteActionInput interface {
	pulumi.Input

	ToRuleEngineRuleActionRewriteActionOutput() RuleEngineRuleActionRewriteActionOutput
	ToRuleEngineRuleActionRewriteActionOutputWithContext(context.Context) RuleEngineRuleActionRewriteActionOutput
}

type RuleEngineRuleActionRewriteActionArgs struct {
	Action     pulumi.StringInput                                   `pulumi:"action"`
	Parameters RuleEngineRuleActionRewriteActionParameterArrayInput `pulumi:"parameters"`
}

func (RuleEngineRuleActionRewriteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleActionRewriteAction)(nil)).Elem()
}

func (i RuleEngineRuleActionRewriteActionArgs) ToRuleEngineRuleActionRewriteActionOutput() RuleEngineRuleActionRewriteActionOutput {
	return i.ToRuleEngineRuleActionRewriteActionOutputWithContext(context.Background())
}

func (i RuleEngineRuleActionRewriteActionArgs) ToRuleEngineRuleActionRewriteActionOutputWithContext(ctx context.Context) RuleEngineRuleActionRewriteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionRewriteActionOutput)
}

func (i RuleEngineRuleActionRewriteActionArgs) ToRuleEngineRuleActionRewriteActionPtrOutput() RuleEngineRuleActionRewriteActionPtrOutput {
	return i.ToRuleEngineRuleActionRewriteActionPtrOutputWithContext(context.Background())
}

func (i RuleEngineRuleActionRewriteActionArgs) ToRuleEngineRuleActionRewriteActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleActionRewriteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionRewriteActionOutput).ToRuleEngineRuleActionRewriteActionPtrOutputWithContext(ctx)
}

// RuleEngineRuleActionRewriteActionPtrInput is an input type that accepts RuleEngineRuleActionRewriteActionArgs, RuleEngineRuleActionRewriteActionPtr and RuleEngineRuleActionRewriteActionPtrOutput values.
// You can construct a concrete instance of `RuleEngineRuleActionRewriteActionPtrInput` via:
//
//	        RuleEngineRuleActionRewriteActionArgs{...}
//
//	or:
//
//	        nil
type RuleEngineRuleActionRewriteActionPtrInput interface {
	pulumi.Input

	ToRuleEngineRuleActionRewriteActionPtrOutput() RuleEngineRuleActionRewriteActionPtrOutput
	ToRuleEngineRuleActionRewriteActionPtrOutputWithContext(context.Context) RuleEngineRuleActionRewriteActionPtrOutput
}

type ruleEngineRuleActionRewriteActionPtrType RuleEngineRuleActionRewriteActionArgs

func RuleEngineRuleActionRewriteActionPtr(v *RuleEngineRuleActionRewriteActionArgs) RuleEngineRuleActionRewriteActionPtrInput {
	return (*ruleEngineRuleActionRewriteActionPtrType)(v)
}

func (*ruleEngineRuleActionRewriteActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleEngineRuleActionRewriteAction)(nil)).Elem()
}

func (i *ruleEngineRuleActionRewriteActionPtrType) ToRuleEngineRuleActionRewriteActionPtrOutput() RuleEngineRuleActionRewriteActionPtrOutput {
	return i.ToRuleEngineRuleActionRewriteActionPtrOutputWithContext(context.Background())
}

func (i *ruleEngineRuleActionRewriteActionPtrType) ToRuleEngineRuleActionRewriteActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleActionRewriteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionRewriteActionPtrOutput)
}

type RuleEngineRuleActionRewriteActionOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleActionRewriteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleActionRewriteAction)(nil)).Elem()
}

func (o RuleEngineRuleActionRewriteActionOutput) ToRuleEngineRuleActionRewriteActionOutput() RuleEngineRuleActionRewriteActionOutput {
	return o
}

func (o RuleEngineRuleActionRewriteActionOutput) ToRuleEngineRuleActionRewriteActionOutputWithContext(ctx context.Context) RuleEngineRuleActionRewriteActionOutput {
	return o
}

func (o RuleEngineRuleActionRewriteActionOutput) ToRuleEngineRuleActionRewriteActionPtrOutput() RuleEngineRuleActionRewriteActionPtrOutput {
	return o.ToRuleEngineRuleActionRewriteActionPtrOutputWithContext(context.Background())
}

func (o RuleEngineRuleActionRewriteActionOutput) ToRuleEngineRuleActionRewriteActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleActionRewriteActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleEngineRuleActionRewriteAction) *RuleEngineRuleActionRewriteAction {
		return &v
	}).(RuleEngineRuleActionRewriteActionPtrOutput)
}

func (o RuleEngineRuleActionRewriteActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleActionRewriteAction) string { return v.Action }).(pulumi.StringOutput)
}

func (o RuleEngineRuleActionRewriteActionOutput) Parameters() RuleEngineRuleActionRewriteActionParameterArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleActionRewriteAction) []RuleEngineRuleActionRewriteActionParameter {
		return v.Parameters
	}).(RuleEngineRuleActionRewriteActionParameterArrayOutput)
}

type RuleEngineRuleActionRewriteActionPtrOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleActionRewriteActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleEngineRuleActionRewriteAction)(nil)).Elem()
}

func (o RuleEngineRuleActionRewriteActionPtrOutput) ToRuleEngineRuleActionRewriteActionPtrOutput() RuleEngineRuleActionRewriteActionPtrOutput {
	return o
}

func (o RuleEngineRuleActionRewriteActionPtrOutput) ToRuleEngineRuleActionRewriteActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleActionRewriteActionPtrOutput {
	return o
}

func (o RuleEngineRuleActionRewriteActionPtrOutput) Elem() RuleEngineRuleActionRewriteActionOutput {
	return o.ApplyT(func(v *RuleEngineRuleActionRewriteAction) RuleEngineRuleActionRewriteAction {
		if v != nil {
			return *v
		}
		var ret RuleEngineRuleActionRewriteAction
		return ret
	}).(RuleEngineRuleActionRewriteActionOutput)
}

func (o RuleEngineRuleActionRewriteActionPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleEngineRuleActionRewriteAction) *string {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(pulumi.StringPtrOutput)
}

func (o RuleEngineRuleActionRewriteActionPtrOutput) Parameters() RuleEngineRuleActionRewriteActionParameterArrayOutput {
	return o.ApplyT(func(v *RuleEngineRuleActionRewriteAction) []RuleEngineRuleActionRewriteActionParameter {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(RuleEngineRuleActionRewriteActionParameterArrayOutput)
}

type RuleEngineRuleActionRewriteActionParameter struct {
	Action string   `pulumi:"action"`
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// RuleEngineRuleActionRewriteActionParameterInput is an input type that accepts RuleEngineRuleActionRewriteActionParameterArgs and RuleEngineRuleActionRewriteActionParameterOutput values.
// You can construct a concrete instance of `RuleEngineRuleActionRewriteActionParameterInput` via:
//
//	RuleEngineRuleActionRewriteActionParameterArgs{...}
type RuleEngineRuleActionRewriteActionParameterInput interface {
	pulumi.Input

	ToRuleEngineRuleActionRewriteActionParameterOutput() RuleEngineRuleActionRewriteActionParameterOutput
	ToRuleEngineRuleActionRewriteActionParameterOutputWithContext(context.Context) RuleEngineRuleActionRewriteActionParameterOutput
}

type RuleEngineRuleActionRewriteActionParameterArgs struct {
	Action pulumi.StringInput      `pulumi:"action"`
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (RuleEngineRuleActionRewriteActionParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleActionRewriteActionParameter)(nil)).Elem()
}

func (i RuleEngineRuleActionRewriteActionParameterArgs) ToRuleEngineRuleActionRewriteActionParameterOutput() RuleEngineRuleActionRewriteActionParameterOutput {
	return i.ToRuleEngineRuleActionRewriteActionParameterOutputWithContext(context.Background())
}

func (i RuleEngineRuleActionRewriteActionParameterArgs) ToRuleEngineRuleActionRewriteActionParameterOutputWithContext(ctx context.Context) RuleEngineRuleActionRewriteActionParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionRewriteActionParameterOutput)
}

// RuleEngineRuleActionRewriteActionParameterArrayInput is an input type that accepts RuleEngineRuleActionRewriteActionParameterArray and RuleEngineRuleActionRewriteActionParameterArrayOutput values.
// You can construct a concrete instance of `RuleEngineRuleActionRewriteActionParameterArrayInput` via:
//
//	RuleEngineRuleActionRewriteActionParameterArray{ RuleEngineRuleActionRewriteActionParameterArgs{...} }
type RuleEngineRuleActionRewriteActionParameterArrayInput interface {
	pulumi.Input

	ToRuleEngineRuleActionRewriteActionParameterArrayOutput() RuleEngineRuleActionRewriteActionParameterArrayOutput
	ToRuleEngineRuleActionRewriteActionParameterArrayOutputWithContext(context.Context) RuleEngineRuleActionRewriteActionParameterArrayOutput
}

type RuleEngineRuleActionRewriteActionParameterArray []RuleEngineRuleActionRewriteActionParameterInput

func (RuleEngineRuleActionRewriteActionParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleActionRewriteActionParameter)(nil)).Elem()
}

func (i RuleEngineRuleActionRewriteActionParameterArray) ToRuleEngineRuleActionRewriteActionParameterArrayOutput() RuleEngineRuleActionRewriteActionParameterArrayOutput {
	return i.ToRuleEngineRuleActionRewriteActionParameterArrayOutputWithContext(context.Background())
}

func (i RuleEngineRuleActionRewriteActionParameterArray) ToRuleEngineRuleActionRewriteActionParameterArrayOutputWithContext(ctx context.Context) RuleEngineRuleActionRewriteActionParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleActionRewriteActionParameterArrayOutput)
}

type RuleEngineRuleActionRewriteActionParameterOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleActionRewriteActionParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleActionRewriteActionParameter)(nil)).Elem()
}

func (o RuleEngineRuleActionRewriteActionParameterOutput) ToRuleEngineRuleActionRewriteActionParameterOutput() RuleEngineRuleActionRewriteActionParameterOutput {
	return o
}

func (o RuleEngineRuleActionRewriteActionParameterOutput) ToRuleEngineRuleActionRewriteActionParameterOutputWithContext(ctx context.Context) RuleEngineRuleActionRewriteActionParameterOutput {
	return o
}

func (o RuleEngineRuleActionRewriteActionParameterOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleActionRewriteActionParameter) string { return v.Action }).(pulumi.StringOutput)
}

func (o RuleEngineRuleActionRewriteActionParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleActionRewriteActionParameter) string { return v.Name }).(pulumi.StringOutput)
}

func (o RuleEngineRuleActionRewriteActionParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleActionRewriteActionParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RuleEngineRuleActionRewriteActionParameterArrayOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleActionRewriteActionParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleActionRewriteActionParameter)(nil)).Elem()
}

func (o RuleEngineRuleActionRewriteActionParameterArrayOutput) ToRuleEngineRuleActionRewriteActionParameterArrayOutput() RuleEngineRuleActionRewriteActionParameterArrayOutput {
	return o
}

func (o RuleEngineRuleActionRewriteActionParameterArrayOutput) ToRuleEngineRuleActionRewriteActionParameterArrayOutputWithContext(ctx context.Context) RuleEngineRuleActionRewriteActionParameterArrayOutput {
	return o
}

func (o RuleEngineRuleActionRewriteActionParameterArrayOutput) Index(i pulumi.IntInput) RuleEngineRuleActionRewriteActionParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEngineRuleActionRewriteActionParameter {
		return vs[0].([]RuleEngineRuleActionRewriteActionParameter)[vs[1].(int)]
	}).(RuleEngineRuleActionRewriteActionParameterOutput)
}

type RuleEngineRuleOr struct {
	Ands []RuleEngineRuleOrAnd `pulumi:"ands"`
}

// RuleEngineRuleOrInput is an input type that accepts RuleEngineRuleOrArgs and RuleEngineRuleOrOutput values.
// You can construct a concrete instance of `RuleEngineRuleOrInput` via:
//
//	RuleEngineRuleOrArgs{...}
type RuleEngineRuleOrInput interface {
	pulumi.Input

	ToRuleEngineRuleOrOutput() RuleEngineRuleOrOutput
	ToRuleEngineRuleOrOutputWithContext(context.Context) RuleEngineRuleOrOutput
}

type RuleEngineRuleOrArgs struct {
	Ands RuleEngineRuleOrAndArrayInput `pulumi:"ands"`
}

func (RuleEngineRuleOrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleOr)(nil)).Elem()
}

func (i RuleEngineRuleOrArgs) ToRuleEngineRuleOrOutput() RuleEngineRuleOrOutput {
	return i.ToRuleEngineRuleOrOutputWithContext(context.Background())
}

func (i RuleEngineRuleOrArgs) ToRuleEngineRuleOrOutputWithContext(ctx context.Context) RuleEngineRuleOrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleOrOutput)
}

// RuleEngineRuleOrArrayInput is an input type that accepts RuleEngineRuleOrArray and RuleEngineRuleOrArrayOutput values.
// You can construct a concrete instance of `RuleEngineRuleOrArrayInput` via:
//
//	RuleEngineRuleOrArray{ RuleEngineRuleOrArgs{...} }
type RuleEngineRuleOrArrayInput interface {
	pulumi.Input

	ToRuleEngineRuleOrArrayOutput() RuleEngineRuleOrArrayOutput
	ToRuleEngineRuleOrArrayOutputWithContext(context.Context) RuleEngineRuleOrArrayOutput
}

type RuleEngineRuleOrArray []RuleEngineRuleOrInput

func (RuleEngineRuleOrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleOr)(nil)).Elem()
}

func (i RuleEngineRuleOrArray) ToRuleEngineRuleOrArrayOutput() RuleEngineRuleOrArrayOutput {
	return i.ToRuleEngineRuleOrArrayOutputWithContext(context.Background())
}

func (i RuleEngineRuleOrArray) ToRuleEngineRuleOrArrayOutputWithContext(ctx context.Context) RuleEngineRuleOrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleOrArrayOutput)
}

type RuleEngineRuleOrOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleOrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleOr)(nil)).Elem()
}

func (o RuleEngineRuleOrOutput) ToRuleEngineRuleOrOutput() RuleEngineRuleOrOutput {
	return o
}

func (o RuleEngineRuleOrOutput) ToRuleEngineRuleOrOutputWithContext(ctx context.Context) RuleEngineRuleOrOutput {
	return o
}

func (o RuleEngineRuleOrOutput) Ands() RuleEngineRuleOrAndArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleOr) []RuleEngineRuleOrAnd { return v.Ands }).(RuleEngineRuleOrAndArrayOutput)
}

type RuleEngineRuleOrArrayOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleOrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleOr)(nil)).Elem()
}

func (o RuleEngineRuleOrArrayOutput) ToRuleEngineRuleOrArrayOutput() RuleEngineRuleOrArrayOutput {
	return o
}

func (o RuleEngineRuleOrArrayOutput) ToRuleEngineRuleOrArrayOutputWithContext(ctx context.Context) RuleEngineRuleOrArrayOutput {
	return o
}

func (o RuleEngineRuleOrArrayOutput) Index(i pulumi.IntInput) RuleEngineRuleOrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEngineRuleOr {
		return vs[0].([]RuleEngineRuleOr)[vs[1].(int)]
	}).(RuleEngineRuleOrOutput)
}

type RuleEngineRuleOrAnd struct {
	IgnoreCase *bool    `pulumi:"ignoreCase"`
	Name       *string  `pulumi:"name"`
	Operator   string   `pulumi:"operator"`
	Target     string   `pulumi:"target"`
	Values     []string `pulumi:"values"`
}

// RuleEngineRuleOrAndInput is an input type that accepts RuleEngineRuleOrAndArgs and RuleEngineRuleOrAndOutput values.
// You can construct a concrete instance of `RuleEngineRuleOrAndInput` via:
//
//	RuleEngineRuleOrAndArgs{...}
type RuleEngineRuleOrAndInput interface {
	pulumi.Input

	ToRuleEngineRuleOrAndOutput() RuleEngineRuleOrAndOutput
	ToRuleEngineRuleOrAndOutputWithContext(context.Context) RuleEngineRuleOrAndOutput
}

type RuleEngineRuleOrAndArgs struct {
	IgnoreCase pulumi.BoolPtrInput     `pulumi:"ignoreCase"`
	Name       pulumi.StringPtrInput   `pulumi:"name"`
	Operator   pulumi.StringInput      `pulumi:"operator"`
	Target     pulumi.StringInput      `pulumi:"target"`
	Values     pulumi.StringArrayInput `pulumi:"values"`
}

func (RuleEngineRuleOrAndArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleOrAnd)(nil)).Elem()
}

func (i RuleEngineRuleOrAndArgs) ToRuleEngineRuleOrAndOutput() RuleEngineRuleOrAndOutput {
	return i.ToRuleEngineRuleOrAndOutputWithContext(context.Background())
}

func (i RuleEngineRuleOrAndArgs) ToRuleEngineRuleOrAndOutputWithContext(ctx context.Context) RuleEngineRuleOrAndOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleOrAndOutput)
}

// RuleEngineRuleOrAndArrayInput is an input type that accepts RuleEngineRuleOrAndArray and RuleEngineRuleOrAndArrayOutput values.
// You can construct a concrete instance of `RuleEngineRuleOrAndArrayInput` via:
//
//	RuleEngineRuleOrAndArray{ RuleEngineRuleOrAndArgs{...} }
type RuleEngineRuleOrAndArrayInput interface {
	pulumi.Input

	ToRuleEngineRuleOrAndArrayOutput() RuleEngineRuleOrAndArrayOutput
	ToRuleEngineRuleOrAndArrayOutputWithContext(context.Context) RuleEngineRuleOrAndArrayOutput
}

type RuleEngineRuleOrAndArray []RuleEngineRuleOrAndInput

func (RuleEngineRuleOrAndArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleOrAnd)(nil)).Elem()
}

func (i RuleEngineRuleOrAndArray) ToRuleEngineRuleOrAndArrayOutput() RuleEngineRuleOrAndArrayOutput {
	return i.ToRuleEngineRuleOrAndArrayOutputWithContext(context.Background())
}

func (i RuleEngineRuleOrAndArray) ToRuleEngineRuleOrAndArrayOutputWithContext(ctx context.Context) RuleEngineRuleOrAndArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleOrAndArrayOutput)
}

type RuleEngineRuleOrAndOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleOrAndOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleOrAnd)(nil)).Elem()
}

func (o RuleEngineRuleOrAndOutput) ToRuleEngineRuleOrAndOutput() RuleEngineRuleOrAndOutput {
	return o
}

func (o RuleEngineRuleOrAndOutput) ToRuleEngineRuleOrAndOutputWithContext(ctx context.Context) RuleEngineRuleOrAndOutput {
	return o
}

func (o RuleEngineRuleOrAndOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RuleEngineRuleOrAnd) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

func (o RuleEngineRuleOrAndOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleEngineRuleOrAnd) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o RuleEngineRuleOrAndOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleOrAnd) string { return v.Operator }).(pulumi.StringOutput)
}

func (o RuleEngineRuleOrAndOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleOrAnd) string { return v.Target }).(pulumi.StringOutput)
}

func (o RuleEngineRuleOrAndOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleOrAnd) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RuleEngineRuleOrAndArrayOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleOrAndArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleOrAnd)(nil)).Elem()
}

func (o RuleEngineRuleOrAndArrayOutput) ToRuleEngineRuleOrAndArrayOutput() RuleEngineRuleOrAndArrayOutput {
	return o
}

func (o RuleEngineRuleOrAndArrayOutput) ToRuleEngineRuleOrAndArrayOutputWithContext(ctx context.Context) RuleEngineRuleOrAndArrayOutput {
	return o
}

func (o RuleEngineRuleOrAndArrayOutput) Index(i pulumi.IntInput) RuleEngineRuleOrAndOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEngineRuleOrAnd {
		return vs[0].([]RuleEngineRuleOrAnd)[vs[1].(int)]
	}).(RuleEngineRuleOrAndOutput)
}

type RuleEngineRuleSubRule struct {
	Rules []RuleEngineRuleSubRuleRule `pulumi:"rules"`
	Tags  []string                    `pulumi:"tags"`
}

// RuleEngineRuleSubRuleInput is an input type that accepts RuleEngineRuleSubRuleArgs and RuleEngineRuleSubRuleOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleInput` via:
//
//	RuleEngineRuleSubRuleArgs{...}
type RuleEngineRuleSubRuleInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleOutput() RuleEngineRuleSubRuleOutput
	ToRuleEngineRuleSubRuleOutputWithContext(context.Context) RuleEngineRuleSubRuleOutput
}

type RuleEngineRuleSubRuleArgs struct {
	Rules RuleEngineRuleSubRuleRuleArrayInput `pulumi:"rules"`
	Tags  pulumi.StringArrayInput             `pulumi:"tags"`
}

func (RuleEngineRuleSubRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRule)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleArgs) ToRuleEngineRuleSubRuleOutput() RuleEngineRuleSubRuleOutput {
	return i.ToRuleEngineRuleSubRuleOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleArgs) ToRuleEngineRuleSubRuleOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleOutput)
}

// RuleEngineRuleSubRuleArrayInput is an input type that accepts RuleEngineRuleSubRuleArray and RuleEngineRuleSubRuleArrayOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleArrayInput` via:
//
//	RuleEngineRuleSubRuleArray{ RuleEngineRuleSubRuleArgs{...} }
type RuleEngineRuleSubRuleArrayInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleArrayOutput() RuleEngineRuleSubRuleArrayOutput
	ToRuleEngineRuleSubRuleArrayOutputWithContext(context.Context) RuleEngineRuleSubRuleArrayOutput
}

type RuleEngineRuleSubRuleArray []RuleEngineRuleSubRuleInput

func (RuleEngineRuleSubRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRule)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleArray) ToRuleEngineRuleSubRuleArrayOutput() RuleEngineRuleSubRuleArrayOutput {
	return i.ToRuleEngineRuleSubRuleArrayOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleArray) ToRuleEngineRuleSubRuleArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleArrayOutput)
}

type RuleEngineRuleSubRuleOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRule)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleOutput) ToRuleEngineRuleSubRuleOutput() RuleEngineRuleSubRuleOutput {
	return o
}

func (o RuleEngineRuleSubRuleOutput) ToRuleEngineRuleSubRuleOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleOutput {
	return o
}

func (o RuleEngineRuleSubRuleOutput) Rules() RuleEngineRuleSubRuleRuleArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRule) []RuleEngineRuleSubRuleRule { return v.Rules }).(RuleEngineRuleSubRuleRuleArrayOutput)
}

func (o RuleEngineRuleSubRuleOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRule) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type RuleEngineRuleSubRuleArrayOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRule)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleArrayOutput) ToRuleEngineRuleSubRuleArrayOutput() RuleEngineRuleSubRuleArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleArrayOutput) ToRuleEngineRuleSubRuleArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleArrayOutput) Index(i pulumi.IntInput) RuleEngineRuleSubRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEngineRuleSubRule {
		return vs[0].([]RuleEngineRuleSubRule)[vs[1].(int)]
	}).(RuleEngineRuleSubRuleOutput)
}

type RuleEngineRuleSubRuleRule struct {
	Actions []RuleEngineRuleSubRuleRuleAction `pulumi:"actions"`
	Ors     []RuleEngineRuleSubRuleRuleOr     `pulumi:"ors"`
}

// RuleEngineRuleSubRuleRuleInput is an input type that accepts RuleEngineRuleSubRuleRuleArgs and RuleEngineRuleSubRuleRuleOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleInput` via:
//
//	RuleEngineRuleSubRuleRuleArgs{...}
type RuleEngineRuleSubRuleRuleInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleOutput() RuleEngineRuleSubRuleRuleOutput
	ToRuleEngineRuleSubRuleRuleOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleOutput
}

type RuleEngineRuleSubRuleRuleArgs struct {
	Actions RuleEngineRuleSubRuleRuleActionArrayInput `pulumi:"actions"`
	Ors     RuleEngineRuleSubRuleRuleOrArrayInput     `pulumi:"ors"`
}

func (RuleEngineRuleSubRuleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRule)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleArgs) ToRuleEngineRuleSubRuleRuleOutput() RuleEngineRuleSubRuleRuleOutput {
	return i.ToRuleEngineRuleSubRuleRuleOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleArgs) ToRuleEngineRuleSubRuleRuleOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleOutput)
}

// RuleEngineRuleSubRuleRuleArrayInput is an input type that accepts RuleEngineRuleSubRuleRuleArray and RuleEngineRuleSubRuleRuleArrayOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleArrayInput` via:
//
//	RuleEngineRuleSubRuleRuleArray{ RuleEngineRuleSubRuleRuleArgs{...} }
type RuleEngineRuleSubRuleRuleArrayInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleArrayOutput() RuleEngineRuleSubRuleRuleArrayOutput
	ToRuleEngineRuleSubRuleRuleArrayOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleArrayOutput
}

type RuleEngineRuleSubRuleRuleArray []RuleEngineRuleSubRuleRuleInput

func (RuleEngineRuleSubRuleRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRuleRule)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleArray) ToRuleEngineRuleSubRuleRuleArrayOutput() RuleEngineRuleSubRuleRuleArrayOutput {
	return i.ToRuleEngineRuleSubRuleRuleArrayOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleArray) ToRuleEngineRuleSubRuleRuleArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleArrayOutput)
}

type RuleEngineRuleSubRuleRuleOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRule)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleOutput) ToRuleEngineRuleSubRuleRuleOutput() RuleEngineRuleSubRuleRuleOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleOutput) ToRuleEngineRuleSubRuleRuleOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleOutput) Actions() RuleEngineRuleSubRuleRuleActionArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRule) []RuleEngineRuleSubRuleRuleAction { return v.Actions }).(RuleEngineRuleSubRuleRuleActionArrayOutput)
}

func (o RuleEngineRuleSubRuleRuleOutput) Ors() RuleEngineRuleSubRuleRuleOrArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRule) []RuleEngineRuleSubRuleRuleOr { return v.Ors }).(RuleEngineRuleSubRuleRuleOrArrayOutput)
}

type RuleEngineRuleSubRuleRuleArrayOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRuleRule)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleArrayOutput) ToRuleEngineRuleSubRuleRuleArrayOutput() RuleEngineRuleSubRuleRuleArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleArrayOutput) ToRuleEngineRuleSubRuleRuleArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleArrayOutput) Index(i pulumi.IntInput) RuleEngineRuleSubRuleRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEngineRuleSubRuleRule {
		return vs[0].([]RuleEngineRuleSubRuleRule)[vs[1].(int)]
	}).(RuleEngineRuleSubRuleRuleOutput)
}

type RuleEngineRuleSubRuleRuleAction struct {
	CodeAction    *RuleEngineRuleSubRuleRuleActionCodeAction    `pulumi:"codeAction"`
	NormalAction  *RuleEngineRuleSubRuleRuleActionNormalAction  `pulumi:"normalAction"`
	RewriteAction *RuleEngineRuleSubRuleRuleActionRewriteAction `pulumi:"rewriteAction"`
}

// RuleEngineRuleSubRuleRuleActionInput is an input type that accepts RuleEngineRuleSubRuleRuleActionArgs and RuleEngineRuleSubRuleRuleActionOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleActionInput` via:
//
//	RuleEngineRuleSubRuleRuleActionArgs{...}
type RuleEngineRuleSubRuleRuleActionInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleActionOutput() RuleEngineRuleSubRuleRuleActionOutput
	ToRuleEngineRuleSubRuleRuleActionOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleActionOutput
}

type RuleEngineRuleSubRuleRuleActionArgs struct {
	CodeAction    RuleEngineRuleSubRuleRuleActionCodeActionPtrInput    `pulumi:"codeAction"`
	NormalAction  RuleEngineRuleSubRuleRuleActionNormalActionPtrInput  `pulumi:"normalAction"`
	RewriteAction RuleEngineRuleSubRuleRuleActionRewriteActionPtrInput `pulumi:"rewriteAction"`
}

func (RuleEngineRuleSubRuleRuleActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleAction)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleActionArgs) ToRuleEngineRuleSubRuleRuleActionOutput() RuleEngineRuleSubRuleRuleActionOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleActionArgs) ToRuleEngineRuleSubRuleRuleActionOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionOutput)
}

// RuleEngineRuleSubRuleRuleActionArrayInput is an input type that accepts RuleEngineRuleSubRuleRuleActionArray and RuleEngineRuleSubRuleRuleActionArrayOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleActionArrayInput` via:
//
//	RuleEngineRuleSubRuleRuleActionArray{ RuleEngineRuleSubRuleRuleActionArgs{...} }
type RuleEngineRuleSubRuleRuleActionArrayInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleActionArrayOutput() RuleEngineRuleSubRuleRuleActionArrayOutput
	ToRuleEngineRuleSubRuleRuleActionArrayOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleActionArrayOutput
}

type RuleEngineRuleSubRuleRuleActionArray []RuleEngineRuleSubRuleRuleActionInput

func (RuleEngineRuleSubRuleRuleActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRuleRuleAction)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleActionArray) ToRuleEngineRuleSubRuleRuleActionArrayOutput() RuleEngineRuleSubRuleRuleActionArrayOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionArrayOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleActionArray) ToRuleEngineRuleSubRuleRuleActionArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionArrayOutput)
}

type RuleEngineRuleSubRuleRuleActionOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleAction)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleActionOutput) ToRuleEngineRuleSubRuleRuleActionOutput() RuleEngineRuleSubRuleRuleActionOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionOutput) ToRuleEngineRuleSubRuleRuleActionOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionOutput) CodeAction() RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleAction) *RuleEngineRuleSubRuleRuleActionCodeAction {
		return v.CodeAction
	}).(RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput)
}

func (o RuleEngineRuleSubRuleRuleActionOutput) NormalAction() RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleAction) *RuleEngineRuleSubRuleRuleActionNormalAction {
		return v.NormalAction
	}).(RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput)
}

func (o RuleEngineRuleSubRuleRuleActionOutput) RewriteAction() RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleAction) *RuleEngineRuleSubRuleRuleActionRewriteAction {
		return v.RewriteAction
	}).(RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput)
}

type RuleEngineRuleSubRuleRuleActionArrayOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRuleRuleAction)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleActionArrayOutput) ToRuleEngineRuleSubRuleRuleActionArrayOutput() RuleEngineRuleSubRuleRuleActionArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionArrayOutput) ToRuleEngineRuleSubRuleRuleActionArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionArrayOutput) Index(i pulumi.IntInput) RuleEngineRuleSubRuleRuleActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEngineRuleSubRuleRuleAction {
		return vs[0].([]RuleEngineRuleSubRuleRuleAction)[vs[1].(int)]
	}).(RuleEngineRuleSubRuleRuleActionOutput)
}

type RuleEngineRuleSubRuleRuleActionCodeAction struct {
	Action     string                                               `pulumi:"action"`
	Parameters []RuleEngineRuleSubRuleRuleActionCodeActionParameter `pulumi:"parameters"`
}

// RuleEngineRuleSubRuleRuleActionCodeActionInput is an input type that accepts RuleEngineRuleSubRuleRuleActionCodeActionArgs and RuleEngineRuleSubRuleRuleActionCodeActionOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleActionCodeActionInput` via:
//
//	RuleEngineRuleSubRuleRuleActionCodeActionArgs{...}
type RuleEngineRuleSubRuleRuleActionCodeActionInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleActionCodeActionOutput() RuleEngineRuleSubRuleRuleActionCodeActionOutput
	ToRuleEngineRuleSubRuleRuleActionCodeActionOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleActionCodeActionOutput
}

type RuleEngineRuleSubRuleRuleActionCodeActionArgs struct {
	Action     pulumi.StringInput                                           `pulumi:"action"`
	Parameters RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayInput `pulumi:"parameters"`
}

func (RuleEngineRuleSubRuleRuleActionCodeActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionCodeAction)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleActionCodeActionArgs) ToRuleEngineRuleSubRuleRuleActionCodeActionOutput() RuleEngineRuleSubRuleRuleActionCodeActionOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionCodeActionOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleActionCodeActionArgs) ToRuleEngineRuleSubRuleRuleActionCodeActionOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionCodeActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionCodeActionOutput)
}

func (i RuleEngineRuleSubRuleRuleActionCodeActionArgs) ToRuleEngineRuleSubRuleRuleActionCodeActionPtrOutput() RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionCodeActionPtrOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleActionCodeActionArgs) ToRuleEngineRuleSubRuleRuleActionCodeActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionCodeActionOutput).ToRuleEngineRuleSubRuleRuleActionCodeActionPtrOutputWithContext(ctx)
}

// RuleEngineRuleSubRuleRuleActionCodeActionPtrInput is an input type that accepts RuleEngineRuleSubRuleRuleActionCodeActionArgs, RuleEngineRuleSubRuleRuleActionCodeActionPtr and RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleActionCodeActionPtrInput` via:
//
//	        RuleEngineRuleSubRuleRuleActionCodeActionArgs{...}
//
//	or:
//
//	        nil
type RuleEngineRuleSubRuleRuleActionCodeActionPtrInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleActionCodeActionPtrOutput() RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput
	ToRuleEngineRuleSubRuleRuleActionCodeActionPtrOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput
}

type ruleEngineRuleSubRuleRuleActionCodeActionPtrType RuleEngineRuleSubRuleRuleActionCodeActionArgs

func RuleEngineRuleSubRuleRuleActionCodeActionPtr(v *RuleEngineRuleSubRuleRuleActionCodeActionArgs) RuleEngineRuleSubRuleRuleActionCodeActionPtrInput {
	return (*ruleEngineRuleSubRuleRuleActionCodeActionPtrType)(v)
}

func (*ruleEngineRuleSubRuleRuleActionCodeActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleEngineRuleSubRuleRuleActionCodeAction)(nil)).Elem()
}

func (i *ruleEngineRuleSubRuleRuleActionCodeActionPtrType) ToRuleEngineRuleSubRuleRuleActionCodeActionPtrOutput() RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionCodeActionPtrOutputWithContext(context.Background())
}

func (i *ruleEngineRuleSubRuleRuleActionCodeActionPtrType) ToRuleEngineRuleSubRuleRuleActionCodeActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput)
}

type RuleEngineRuleSubRuleRuleActionCodeActionOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleActionCodeActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionCodeAction)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionOutput) ToRuleEngineRuleSubRuleRuleActionCodeActionOutput() RuleEngineRuleSubRuleRuleActionCodeActionOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionOutput) ToRuleEngineRuleSubRuleRuleActionCodeActionOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionCodeActionOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionOutput) ToRuleEngineRuleSubRuleRuleActionCodeActionPtrOutput() RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput {
	return o.ToRuleEngineRuleSubRuleRuleActionCodeActionPtrOutputWithContext(context.Background())
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionOutput) ToRuleEngineRuleSubRuleRuleActionCodeActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleEngineRuleSubRuleRuleActionCodeAction) *RuleEngineRuleSubRuleRuleActionCodeAction {
		return &v
	}).(RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput)
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleActionCodeAction) string { return v.Action }).(pulumi.StringOutput)
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionOutput) Parameters() RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleActionCodeAction) []RuleEngineRuleSubRuleRuleActionCodeActionParameter {
		return v.Parameters
	}).(RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput)
}

type RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleEngineRuleSubRuleRuleActionCodeAction)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput) ToRuleEngineRuleSubRuleRuleActionCodeActionPtrOutput() RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput) ToRuleEngineRuleSubRuleRuleActionCodeActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput) Elem() RuleEngineRuleSubRuleRuleActionCodeActionOutput {
	return o.ApplyT(func(v *RuleEngineRuleSubRuleRuleActionCodeAction) RuleEngineRuleSubRuleRuleActionCodeAction {
		if v != nil {
			return *v
		}
		var ret RuleEngineRuleSubRuleRuleActionCodeAction
		return ret
	}).(RuleEngineRuleSubRuleRuleActionCodeActionOutput)
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleEngineRuleSubRuleRuleActionCodeAction) *string {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(pulumi.StringPtrOutput)
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput) Parameters() RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput {
	return o.ApplyT(func(v *RuleEngineRuleSubRuleRuleActionCodeAction) []RuleEngineRuleSubRuleRuleActionCodeActionParameter {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput)
}

type RuleEngineRuleSubRuleRuleActionCodeActionParameter struct {
	Name       string   `pulumi:"name"`
	StatusCode int      `pulumi:"statusCode"`
	Values     []string `pulumi:"values"`
}

// RuleEngineRuleSubRuleRuleActionCodeActionParameterInput is an input type that accepts RuleEngineRuleSubRuleRuleActionCodeActionParameterArgs and RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleActionCodeActionParameterInput` via:
//
//	RuleEngineRuleSubRuleRuleActionCodeActionParameterArgs{...}
type RuleEngineRuleSubRuleRuleActionCodeActionParameterInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleActionCodeActionParameterOutput() RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput
	ToRuleEngineRuleSubRuleRuleActionCodeActionParameterOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput
}

type RuleEngineRuleSubRuleRuleActionCodeActionParameterArgs struct {
	Name       pulumi.StringInput      `pulumi:"name"`
	StatusCode pulumi.IntInput         `pulumi:"statusCode"`
	Values     pulumi.StringArrayInput `pulumi:"values"`
}

func (RuleEngineRuleSubRuleRuleActionCodeActionParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionCodeActionParameter)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleActionCodeActionParameterArgs) ToRuleEngineRuleSubRuleRuleActionCodeActionParameterOutput() RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionCodeActionParameterOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleActionCodeActionParameterArgs) ToRuleEngineRuleSubRuleRuleActionCodeActionParameterOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput)
}

// RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayInput is an input type that accepts RuleEngineRuleSubRuleRuleActionCodeActionParameterArray and RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayInput` via:
//
//	RuleEngineRuleSubRuleRuleActionCodeActionParameterArray{ RuleEngineRuleSubRuleRuleActionCodeActionParameterArgs{...} }
type RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput() RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput
	ToRuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput
}

type RuleEngineRuleSubRuleRuleActionCodeActionParameterArray []RuleEngineRuleSubRuleRuleActionCodeActionParameterInput

func (RuleEngineRuleSubRuleRuleActionCodeActionParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRuleRuleActionCodeActionParameter)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleActionCodeActionParameterArray) ToRuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput() RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleActionCodeActionParameterArray) ToRuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput)
}

type RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionCodeActionParameter)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput) ToRuleEngineRuleSubRuleRuleActionCodeActionParameterOutput() RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput) ToRuleEngineRuleSubRuleRuleActionCodeActionParameterOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleActionCodeActionParameter) string { return v.Name }).(pulumi.StringOutput)
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput) StatusCode() pulumi.IntOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleActionCodeActionParameter) int { return v.StatusCode }).(pulumi.IntOutput)
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleActionCodeActionParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRuleRuleActionCodeActionParameter)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput) ToRuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput() RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput) ToRuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput) Index(i pulumi.IntInput) RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEngineRuleSubRuleRuleActionCodeActionParameter {
		return vs[0].([]RuleEngineRuleSubRuleRuleActionCodeActionParameter)[vs[1].(int)]
	}).(RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput)
}

type RuleEngineRuleSubRuleRuleActionNormalAction struct {
	Action     string                                                 `pulumi:"action"`
	Parameters []RuleEngineRuleSubRuleRuleActionNormalActionParameter `pulumi:"parameters"`
}

// RuleEngineRuleSubRuleRuleActionNormalActionInput is an input type that accepts RuleEngineRuleSubRuleRuleActionNormalActionArgs and RuleEngineRuleSubRuleRuleActionNormalActionOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleActionNormalActionInput` via:
//
//	RuleEngineRuleSubRuleRuleActionNormalActionArgs{...}
type RuleEngineRuleSubRuleRuleActionNormalActionInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleActionNormalActionOutput() RuleEngineRuleSubRuleRuleActionNormalActionOutput
	ToRuleEngineRuleSubRuleRuleActionNormalActionOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleActionNormalActionOutput
}

type RuleEngineRuleSubRuleRuleActionNormalActionArgs struct {
	Action     pulumi.StringInput                                             `pulumi:"action"`
	Parameters RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayInput `pulumi:"parameters"`
}

func (RuleEngineRuleSubRuleRuleActionNormalActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionNormalAction)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleActionNormalActionArgs) ToRuleEngineRuleSubRuleRuleActionNormalActionOutput() RuleEngineRuleSubRuleRuleActionNormalActionOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionNormalActionOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleActionNormalActionArgs) ToRuleEngineRuleSubRuleRuleActionNormalActionOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionNormalActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionNormalActionOutput)
}

func (i RuleEngineRuleSubRuleRuleActionNormalActionArgs) ToRuleEngineRuleSubRuleRuleActionNormalActionPtrOutput() RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionNormalActionPtrOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleActionNormalActionArgs) ToRuleEngineRuleSubRuleRuleActionNormalActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionNormalActionOutput).ToRuleEngineRuleSubRuleRuleActionNormalActionPtrOutputWithContext(ctx)
}

// RuleEngineRuleSubRuleRuleActionNormalActionPtrInput is an input type that accepts RuleEngineRuleSubRuleRuleActionNormalActionArgs, RuleEngineRuleSubRuleRuleActionNormalActionPtr and RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleActionNormalActionPtrInput` via:
//
//	        RuleEngineRuleSubRuleRuleActionNormalActionArgs{...}
//
//	or:
//
//	        nil
type RuleEngineRuleSubRuleRuleActionNormalActionPtrInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleActionNormalActionPtrOutput() RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput
	ToRuleEngineRuleSubRuleRuleActionNormalActionPtrOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput
}

type ruleEngineRuleSubRuleRuleActionNormalActionPtrType RuleEngineRuleSubRuleRuleActionNormalActionArgs

func RuleEngineRuleSubRuleRuleActionNormalActionPtr(v *RuleEngineRuleSubRuleRuleActionNormalActionArgs) RuleEngineRuleSubRuleRuleActionNormalActionPtrInput {
	return (*ruleEngineRuleSubRuleRuleActionNormalActionPtrType)(v)
}

func (*ruleEngineRuleSubRuleRuleActionNormalActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleEngineRuleSubRuleRuleActionNormalAction)(nil)).Elem()
}

func (i *ruleEngineRuleSubRuleRuleActionNormalActionPtrType) ToRuleEngineRuleSubRuleRuleActionNormalActionPtrOutput() RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionNormalActionPtrOutputWithContext(context.Background())
}

func (i *ruleEngineRuleSubRuleRuleActionNormalActionPtrType) ToRuleEngineRuleSubRuleRuleActionNormalActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput)
}

type RuleEngineRuleSubRuleRuleActionNormalActionOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleActionNormalActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionNormalAction)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleActionNormalActionOutput) ToRuleEngineRuleSubRuleRuleActionNormalActionOutput() RuleEngineRuleSubRuleRuleActionNormalActionOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionNormalActionOutput) ToRuleEngineRuleSubRuleRuleActionNormalActionOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionNormalActionOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionNormalActionOutput) ToRuleEngineRuleSubRuleRuleActionNormalActionPtrOutput() RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput {
	return o.ToRuleEngineRuleSubRuleRuleActionNormalActionPtrOutputWithContext(context.Background())
}

func (o RuleEngineRuleSubRuleRuleActionNormalActionOutput) ToRuleEngineRuleSubRuleRuleActionNormalActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleEngineRuleSubRuleRuleActionNormalAction) *RuleEngineRuleSubRuleRuleActionNormalAction {
		return &v
	}).(RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput)
}

func (o RuleEngineRuleSubRuleRuleActionNormalActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleActionNormalAction) string { return v.Action }).(pulumi.StringOutput)
}

func (o RuleEngineRuleSubRuleRuleActionNormalActionOutput) Parameters() RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleActionNormalAction) []RuleEngineRuleSubRuleRuleActionNormalActionParameter {
		return v.Parameters
	}).(RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput)
}

type RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleEngineRuleSubRuleRuleActionNormalAction)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput) ToRuleEngineRuleSubRuleRuleActionNormalActionPtrOutput() RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput) ToRuleEngineRuleSubRuleRuleActionNormalActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput) Elem() RuleEngineRuleSubRuleRuleActionNormalActionOutput {
	return o.ApplyT(func(v *RuleEngineRuleSubRuleRuleActionNormalAction) RuleEngineRuleSubRuleRuleActionNormalAction {
		if v != nil {
			return *v
		}
		var ret RuleEngineRuleSubRuleRuleActionNormalAction
		return ret
	}).(RuleEngineRuleSubRuleRuleActionNormalActionOutput)
}

func (o RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleEngineRuleSubRuleRuleActionNormalAction) *string {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(pulumi.StringPtrOutput)
}

func (o RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput) Parameters() RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput {
	return o.ApplyT(func(v *RuleEngineRuleSubRuleRuleActionNormalAction) []RuleEngineRuleSubRuleRuleActionNormalActionParameter {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput)
}

type RuleEngineRuleSubRuleRuleActionNormalActionParameter struct {
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// RuleEngineRuleSubRuleRuleActionNormalActionParameterInput is an input type that accepts RuleEngineRuleSubRuleRuleActionNormalActionParameterArgs and RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleActionNormalActionParameterInput` via:
//
//	RuleEngineRuleSubRuleRuleActionNormalActionParameterArgs{...}
type RuleEngineRuleSubRuleRuleActionNormalActionParameterInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleActionNormalActionParameterOutput() RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput
	ToRuleEngineRuleSubRuleRuleActionNormalActionParameterOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput
}

type RuleEngineRuleSubRuleRuleActionNormalActionParameterArgs struct {
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (RuleEngineRuleSubRuleRuleActionNormalActionParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionNormalActionParameter)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleActionNormalActionParameterArgs) ToRuleEngineRuleSubRuleRuleActionNormalActionParameterOutput() RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionNormalActionParameterOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleActionNormalActionParameterArgs) ToRuleEngineRuleSubRuleRuleActionNormalActionParameterOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput)
}

// RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayInput is an input type that accepts RuleEngineRuleSubRuleRuleActionNormalActionParameterArray and RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayInput` via:
//
//	RuleEngineRuleSubRuleRuleActionNormalActionParameterArray{ RuleEngineRuleSubRuleRuleActionNormalActionParameterArgs{...} }
type RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput() RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput
	ToRuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput
}

type RuleEngineRuleSubRuleRuleActionNormalActionParameterArray []RuleEngineRuleSubRuleRuleActionNormalActionParameterInput

func (RuleEngineRuleSubRuleRuleActionNormalActionParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRuleRuleActionNormalActionParameter)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleActionNormalActionParameterArray) ToRuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput() RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleActionNormalActionParameterArray) ToRuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput)
}

type RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionNormalActionParameter)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput) ToRuleEngineRuleSubRuleRuleActionNormalActionParameterOutput() RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput) ToRuleEngineRuleSubRuleRuleActionNormalActionParameterOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleActionNormalActionParameter) string { return v.Name }).(pulumi.StringOutput)
}

func (o RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleActionNormalActionParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRuleRuleActionNormalActionParameter)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput) ToRuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput() RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput) ToRuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput) Index(i pulumi.IntInput) RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEngineRuleSubRuleRuleActionNormalActionParameter {
		return vs[0].([]RuleEngineRuleSubRuleRuleActionNormalActionParameter)[vs[1].(int)]
	}).(RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput)
}

type RuleEngineRuleSubRuleRuleActionRewriteAction struct {
	Action     string                                                  `pulumi:"action"`
	Parameters []RuleEngineRuleSubRuleRuleActionRewriteActionParameter `pulumi:"parameters"`
}

// RuleEngineRuleSubRuleRuleActionRewriteActionInput is an input type that accepts RuleEngineRuleSubRuleRuleActionRewriteActionArgs and RuleEngineRuleSubRuleRuleActionRewriteActionOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleActionRewriteActionInput` via:
//
//	RuleEngineRuleSubRuleRuleActionRewriteActionArgs{...}
type RuleEngineRuleSubRuleRuleActionRewriteActionInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleActionRewriteActionOutput() RuleEngineRuleSubRuleRuleActionRewriteActionOutput
	ToRuleEngineRuleSubRuleRuleActionRewriteActionOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleActionRewriteActionOutput
}

type RuleEngineRuleSubRuleRuleActionRewriteActionArgs struct {
	Action     pulumi.StringInput                                              `pulumi:"action"`
	Parameters RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayInput `pulumi:"parameters"`
}

func (RuleEngineRuleSubRuleRuleActionRewriteActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionRewriteAction)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleActionRewriteActionArgs) ToRuleEngineRuleSubRuleRuleActionRewriteActionOutput() RuleEngineRuleSubRuleRuleActionRewriteActionOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionRewriteActionOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleActionRewriteActionArgs) ToRuleEngineRuleSubRuleRuleActionRewriteActionOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionRewriteActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionRewriteActionOutput)
}

func (i RuleEngineRuleSubRuleRuleActionRewriteActionArgs) ToRuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput() RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionRewriteActionPtrOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleActionRewriteActionArgs) ToRuleEngineRuleSubRuleRuleActionRewriteActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionRewriteActionOutput).ToRuleEngineRuleSubRuleRuleActionRewriteActionPtrOutputWithContext(ctx)
}

// RuleEngineRuleSubRuleRuleActionRewriteActionPtrInput is an input type that accepts RuleEngineRuleSubRuleRuleActionRewriteActionArgs, RuleEngineRuleSubRuleRuleActionRewriteActionPtr and RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleActionRewriteActionPtrInput` via:
//
//	        RuleEngineRuleSubRuleRuleActionRewriteActionArgs{...}
//
//	or:
//
//	        nil
type RuleEngineRuleSubRuleRuleActionRewriteActionPtrInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput() RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput
	ToRuleEngineRuleSubRuleRuleActionRewriteActionPtrOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput
}

type ruleEngineRuleSubRuleRuleActionRewriteActionPtrType RuleEngineRuleSubRuleRuleActionRewriteActionArgs

func RuleEngineRuleSubRuleRuleActionRewriteActionPtr(v *RuleEngineRuleSubRuleRuleActionRewriteActionArgs) RuleEngineRuleSubRuleRuleActionRewriteActionPtrInput {
	return (*ruleEngineRuleSubRuleRuleActionRewriteActionPtrType)(v)
}

func (*ruleEngineRuleSubRuleRuleActionRewriteActionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleEngineRuleSubRuleRuleActionRewriteAction)(nil)).Elem()
}

func (i *ruleEngineRuleSubRuleRuleActionRewriteActionPtrType) ToRuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput() RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionRewriteActionPtrOutputWithContext(context.Background())
}

func (i *ruleEngineRuleSubRuleRuleActionRewriteActionPtrType) ToRuleEngineRuleSubRuleRuleActionRewriteActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput)
}

type RuleEngineRuleSubRuleRuleActionRewriteActionOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleActionRewriteActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionRewriteAction)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionOutput) ToRuleEngineRuleSubRuleRuleActionRewriteActionOutput() RuleEngineRuleSubRuleRuleActionRewriteActionOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionOutput) ToRuleEngineRuleSubRuleRuleActionRewriteActionOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionRewriteActionOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionOutput) ToRuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput() RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput {
	return o.ToRuleEngineRuleSubRuleRuleActionRewriteActionPtrOutputWithContext(context.Background())
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionOutput) ToRuleEngineRuleSubRuleRuleActionRewriteActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v RuleEngineRuleSubRuleRuleActionRewriteAction) *RuleEngineRuleSubRuleRuleActionRewriteAction {
		return &v
	}).(RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput)
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleActionRewriteAction) string { return v.Action }).(pulumi.StringOutput)
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionOutput) Parameters() RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleActionRewriteAction) []RuleEngineRuleSubRuleRuleActionRewriteActionParameter {
		return v.Parameters
	}).(RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput)
}

type RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**RuleEngineRuleSubRuleRuleActionRewriteAction)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput) ToRuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput() RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput) ToRuleEngineRuleSubRuleRuleActionRewriteActionPtrOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput) Elem() RuleEngineRuleSubRuleRuleActionRewriteActionOutput {
	return o.ApplyT(func(v *RuleEngineRuleSubRuleRuleActionRewriteAction) RuleEngineRuleSubRuleRuleActionRewriteAction {
		if v != nil {
			return *v
		}
		var ret RuleEngineRuleSubRuleRuleActionRewriteAction
		return ret
	}).(RuleEngineRuleSubRuleRuleActionRewriteActionOutput)
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *RuleEngineRuleSubRuleRuleActionRewriteAction) *string {
		if v == nil {
			return nil
		}
		return &v.Action
	}).(pulumi.StringPtrOutput)
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput) Parameters() RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput {
	return o.ApplyT(func(v *RuleEngineRuleSubRuleRuleActionRewriteAction) []RuleEngineRuleSubRuleRuleActionRewriteActionParameter {
		if v == nil {
			return nil
		}
		return v.Parameters
	}).(RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput)
}

type RuleEngineRuleSubRuleRuleActionRewriteActionParameter struct {
	Action string   `pulumi:"action"`
	Name   string   `pulumi:"name"`
	Values []string `pulumi:"values"`
}

// RuleEngineRuleSubRuleRuleActionRewriteActionParameterInput is an input type that accepts RuleEngineRuleSubRuleRuleActionRewriteActionParameterArgs and RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleActionRewriteActionParameterInput` via:
//
//	RuleEngineRuleSubRuleRuleActionRewriteActionParameterArgs{...}
type RuleEngineRuleSubRuleRuleActionRewriteActionParameterInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput() RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput
	ToRuleEngineRuleSubRuleRuleActionRewriteActionParameterOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput
}

type RuleEngineRuleSubRuleRuleActionRewriteActionParameterArgs struct {
	Action pulumi.StringInput      `pulumi:"action"`
	Name   pulumi.StringInput      `pulumi:"name"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (RuleEngineRuleSubRuleRuleActionRewriteActionParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionRewriteActionParameter)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleActionRewriteActionParameterArgs) ToRuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput() RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionRewriteActionParameterOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleActionRewriteActionParameterArgs) ToRuleEngineRuleSubRuleRuleActionRewriteActionParameterOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput)
}

// RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayInput is an input type that accepts RuleEngineRuleSubRuleRuleActionRewriteActionParameterArray and RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayInput` via:
//
//	RuleEngineRuleSubRuleRuleActionRewriteActionParameterArray{ RuleEngineRuleSubRuleRuleActionRewriteActionParameterArgs{...} }
type RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput() RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput
	ToRuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput
}

type RuleEngineRuleSubRuleRuleActionRewriteActionParameterArray []RuleEngineRuleSubRuleRuleActionRewriteActionParameterInput

func (RuleEngineRuleSubRuleRuleActionRewriteActionParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRuleRuleActionRewriteActionParameter)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleActionRewriteActionParameterArray) ToRuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput() RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput {
	return i.ToRuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleActionRewriteActionParameterArray) ToRuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput)
}

type RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionRewriteActionParameter)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput) ToRuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput() RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput) ToRuleEngineRuleSubRuleRuleActionRewriteActionParameterOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleActionRewriteActionParameter) string { return v.Action }).(pulumi.StringOutput)
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleActionRewriteActionParameter) string { return v.Name }).(pulumi.StringOutput)
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleActionRewriteActionParameter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRuleRuleActionRewriteActionParameter)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput) ToRuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput() RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput) ToRuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput) Index(i pulumi.IntInput) RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEngineRuleSubRuleRuleActionRewriteActionParameter {
		return vs[0].([]RuleEngineRuleSubRuleRuleActionRewriteActionParameter)[vs[1].(int)]
	}).(RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput)
}

type RuleEngineRuleSubRuleRuleOr struct {
	Ands []RuleEngineRuleSubRuleRuleOrAnd `pulumi:"ands"`
}

// RuleEngineRuleSubRuleRuleOrInput is an input type that accepts RuleEngineRuleSubRuleRuleOrArgs and RuleEngineRuleSubRuleRuleOrOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleOrInput` via:
//
//	RuleEngineRuleSubRuleRuleOrArgs{...}
type RuleEngineRuleSubRuleRuleOrInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleOrOutput() RuleEngineRuleSubRuleRuleOrOutput
	ToRuleEngineRuleSubRuleRuleOrOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleOrOutput
}

type RuleEngineRuleSubRuleRuleOrArgs struct {
	Ands RuleEngineRuleSubRuleRuleOrAndArrayInput `pulumi:"ands"`
}

func (RuleEngineRuleSubRuleRuleOrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleOr)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleOrArgs) ToRuleEngineRuleSubRuleRuleOrOutput() RuleEngineRuleSubRuleRuleOrOutput {
	return i.ToRuleEngineRuleSubRuleRuleOrOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleOrArgs) ToRuleEngineRuleSubRuleRuleOrOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleOrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleOrOutput)
}

// RuleEngineRuleSubRuleRuleOrArrayInput is an input type that accepts RuleEngineRuleSubRuleRuleOrArray and RuleEngineRuleSubRuleRuleOrArrayOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleOrArrayInput` via:
//
//	RuleEngineRuleSubRuleRuleOrArray{ RuleEngineRuleSubRuleRuleOrArgs{...} }
type RuleEngineRuleSubRuleRuleOrArrayInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleOrArrayOutput() RuleEngineRuleSubRuleRuleOrArrayOutput
	ToRuleEngineRuleSubRuleRuleOrArrayOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleOrArrayOutput
}

type RuleEngineRuleSubRuleRuleOrArray []RuleEngineRuleSubRuleRuleOrInput

func (RuleEngineRuleSubRuleRuleOrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRuleRuleOr)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleOrArray) ToRuleEngineRuleSubRuleRuleOrArrayOutput() RuleEngineRuleSubRuleRuleOrArrayOutput {
	return i.ToRuleEngineRuleSubRuleRuleOrArrayOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleOrArray) ToRuleEngineRuleSubRuleRuleOrArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleOrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleOrArrayOutput)
}

type RuleEngineRuleSubRuleRuleOrOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleOrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleOr)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleOrOutput) ToRuleEngineRuleSubRuleRuleOrOutput() RuleEngineRuleSubRuleRuleOrOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleOrOutput) ToRuleEngineRuleSubRuleRuleOrOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleOrOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleOrOutput) Ands() RuleEngineRuleSubRuleRuleOrAndArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleOr) []RuleEngineRuleSubRuleRuleOrAnd { return v.Ands }).(RuleEngineRuleSubRuleRuleOrAndArrayOutput)
}

type RuleEngineRuleSubRuleRuleOrArrayOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleOrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRuleRuleOr)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleOrArrayOutput) ToRuleEngineRuleSubRuleRuleOrArrayOutput() RuleEngineRuleSubRuleRuleOrArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleOrArrayOutput) ToRuleEngineRuleSubRuleRuleOrArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleOrArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleOrArrayOutput) Index(i pulumi.IntInput) RuleEngineRuleSubRuleRuleOrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEngineRuleSubRuleRuleOr {
		return vs[0].([]RuleEngineRuleSubRuleRuleOr)[vs[1].(int)]
	}).(RuleEngineRuleSubRuleRuleOrOutput)
}

type RuleEngineRuleSubRuleRuleOrAnd struct {
	IgnoreCase *bool    `pulumi:"ignoreCase"`
	Name       *string  `pulumi:"name"`
	Operator   string   `pulumi:"operator"`
	Target     string   `pulumi:"target"`
	Values     []string `pulumi:"values"`
}

// RuleEngineRuleSubRuleRuleOrAndInput is an input type that accepts RuleEngineRuleSubRuleRuleOrAndArgs and RuleEngineRuleSubRuleRuleOrAndOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleOrAndInput` via:
//
//	RuleEngineRuleSubRuleRuleOrAndArgs{...}
type RuleEngineRuleSubRuleRuleOrAndInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleOrAndOutput() RuleEngineRuleSubRuleRuleOrAndOutput
	ToRuleEngineRuleSubRuleRuleOrAndOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleOrAndOutput
}

type RuleEngineRuleSubRuleRuleOrAndArgs struct {
	IgnoreCase pulumi.BoolPtrInput     `pulumi:"ignoreCase"`
	Name       pulumi.StringPtrInput   `pulumi:"name"`
	Operator   pulumi.StringInput      `pulumi:"operator"`
	Target     pulumi.StringInput      `pulumi:"target"`
	Values     pulumi.StringArrayInput `pulumi:"values"`
}

func (RuleEngineRuleSubRuleRuleOrAndArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleOrAnd)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleOrAndArgs) ToRuleEngineRuleSubRuleRuleOrAndOutput() RuleEngineRuleSubRuleRuleOrAndOutput {
	return i.ToRuleEngineRuleSubRuleRuleOrAndOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleOrAndArgs) ToRuleEngineRuleSubRuleRuleOrAndOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleOrAndOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleOrAndOutput)
}

// RuleEngineRuleSubRuleRuleOrAndArrayInput is an input type that accepts RuleEngineRuleSubRuleRuleOrAndArray and RuleEngineRuleSubRuleRuleOrAndArrayOutput values.
// You can construct a concrete instance of `RuleEngineRuleSubRuleRuleOrAndArrayInput` via:
//
//	RuleEngineRuleSubRuleRuleOrAndArray{ RuleEngineRuleSubRuleRuleOrAndArgs{...} }
type RuleEngineRuleSubRuleRuleOrAndArrayInput interface {
	pulumi.Input

	ToRuleEngineRuleSubRuleRuleOrAndArrayOutput() RuleEngineRuleSubRuleRuleOrAndArrayOutput
	ToRuleEngineRuleSubRuleRuleOrAndArrayOutputWithContext(context.Context) RuleEngineRuleSubRuleRuleOrAndArrayOutput
}

type RuleEngineRuleSubRuleRuleOrAndArray []RuleEngineRuleSubRuleRuleOrAndInput

func (RuleEngineRuleSubRuleRuleOrAndArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRuleRuleOrAnd)(nil)).Elem()
}

func (i RuleEngineRuleSubRuleRuleOrAndArray) ToRuleEngineRuleSubRuleRuleOrAndArrayOutput() RuleEngineRuleSubRuleRuleOrAndArrayOutput {
	return i.ToRuleEngineRuleSubRuleRuleOrAndArrayOutputWithContext(context.Background())
}

func (i RuleEngineRuleSubRuleRuleOrAndArray) ToRuleEngineRuleSubRuleRuleOrAndArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleOrAndArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RuleEngineRuleSubRuleRuleOrAndArrayOutput)
}

type RuleEngineRuleSubRuleRuleOrAndOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleOrAndOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RuleEngineRuleSubRuleRuleOrAnd)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleOrAndOutput) ToRuleEngineRuleSubRuleRuleOrAndOutput() RuleEngineRuleSubRuleRuleOrAndOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleOrAndOutput) ToRuleEngineRuleSubRuleRuleOrAndOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleOrAndOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleOrAndOutput) IgnoreCase() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleOrAnd) *bool { return v.IgnoreCase }).(pulumi.BoolPtrOutput)
}

func (o RuleEngineRuleSubRuleRuleOrAndOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleOrAnd) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o RuleEngineRuleSubRuleRuleOrAndOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleOrAnd) string { return v.Operator }).(pulumi.StringOutput)
}

func (o RuleEngineRuleSubRuleRuleOrAndOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleOrAnd) string { return v.Target }).(pulumi.StringOutput)
}

func (o RuleEngineRuleSubRuleRuleOrAndOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v RuleEngineRuleSubRuleRuleOrAnd) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type RuleEngineRuleSubRuleRuleOrAndArrayOutput struct{ *pulumi.OutputState }

func (RuleEngineRuleSubRuleRuleOrAndArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RuleEngineRuleSubRuleRuleOrAnd)(nil)).Elem()
}

func (o RuleEngineRuleSubRuleRuleOrAndArrayOutput) ToRuleEngineRuleSubRuleRuleOrAndArrayOutput() RuleEngineRuleSubRuleRuleOrAndArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleOrAndArrayOutput) ToRuleEngineRuleSubRuleRuleOrAndArrayOutputWithContext(ctx context.Context) RuleEngineRuleSubRuleRuleOrAndArrayOutput {
	return o
}

func (o RuleEngineRuleSubRuleRuleOrAndArrayOutput) Index(i pulumi.IntInput) RuleEngineRuleSubRuleRuleOrAndOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RuleEngineRuleSubRuleRuleOrAnd {
		return vs[0].([]RuleEngineRuleSubRuleRuleOrAnd)[vs[1].(int)]
	}).(RuleEngineRuleSubRuleRuleOrAndOutput)
}

type ZoneResource struct {
	Area          *string          `pulumi:"area"`
	AutoRenewFlag *int             `pulumi:"autoRenewFlag"`
	CreateTime    *string          `pulumi:"createTime"`
	EnableTime    *string          `pulumi:"enableTime"`
	ExpireTime    *string          `pulumi:"expireTime"`
	Id            *string          `pulumi:"id"`
	PayMode       *int             `pulumi:"payMode"`
	PlanId        *string          `pulumi:"planId"`
	Status        *string          `pulumi:"status"`
	Svs           []ZoneResourceSv `pulumi:"svs"`
}

// ZoneResourceInput is an input type that accepts ZoneResourceArgs and ZoneResourceOutput values.
// You can construct a concrete instance of `ZoneResourceInput` via:
//
//	ZoneResourceArgs{...}
type ZoneResourceInput interface {
	pulumi.Input

	ToZoneResourceOutput() ZoneResourceOutput
	ToZoneResourceOutputWithContext(context.Context) ZoneResourceOutput
}

type ZoneResourceArgs struct {
	Area          pulumi.StringPtrInput    `pulumi:"area"`
	AutoRenewFlag pulumi.IntPtrInput       `pulumi:"autoRenewFlag"`
	CreateTime    pulumi.StringPtrInput    `pulumi:"createTime"`
	EnableTime    pulumi.StringPtrInput    `pulumi:"enableTime"`
	ExpireTime    pulumi.StringPtrInput    `pulumi:"expireTime"`
	Id            pulumi.StringPtrInput    `pulumi:"id"`
	PayMode       pulumi.IntPtrInput       `pulumi:"payMode"`
	PlanId        pulumi.StringPtrInput    `pulumi:"planId"`
	Status        pulumi.StringPtrInput    `pulumi:"status"`
	Svs           ZoneResourceSvArrayInput `pulumi:"svs"`
}

func (ZoneResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneResource)(nil)).Elem()
}

func (i ZoneResourceArgs) ToZoneResourceOutput() ZoneResourceOutput {
	return i.ToZoneResourceOutputWithContext(context.Background())
}

func (i ZoneResourceArgs) ToZoneResourceOutputWithContext(ctx context.Context) ZoneResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneResourceOutput)
}

// ZoneResourceArrayInput is an input type that accepts ZoneResourceArray and ZoneResourceArrayOutput values.
// You can construct a concrete instance of `ZoneResourceArrayInput` via:
//
//	ZoneResourceArray{ ZoneResourceArgs{...} }
type ZoneResourceArrayInput interface {
	pulumi.Input

	ToZoneResourceArrayOutput() ZoneResourceArrayOutput
	ToZoneResourceArrayOutputWithContext(context.Context) ZoneResourceArrayOutput
}

type ZoneResourceArray []ZoneResourceInput

func (ZoneResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneResource)(nil)).Elem()
}

func (i ZoneResourceArray) ToZoneResourceArrayOutput() ZoneResourceArrayOutput {
	return i.ToZoneResourceArrayOutputWithContext(context.Background())
}

func (i ZoneResourceArray) ToZoneResourceArrayOutputWithContext(ctx context.Context) ZoneResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneResourceArrayOutput)
}

type ZoneResourceOutput struct{ *pulumi.OutputState }

func (ZoneResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneResource)(nil)).Elem()
}

func (o ZoneResourceOutput) ToZoneResourceOutput() ZoneResourceOutput {
	return o
}

func (o ZoneResourceOutput) ToZoneResourceOutputWithContext(ctx context.Context) ZoneResourceOutput {
	return o
}

func (o ZoneResourceOutput) Area() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneResource) *string { return v.Area }).(pulumi.StringPtrOutput)
}

func (o ZoneResourceOutput) AutoRenewFlag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneResource) *int { return v.AutoRenewFlag }).(pulumi.IntPtrOutput)
}

func (o ZoneResourceOutput) CreateTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneResource) *string { return v.CreateTime }).(pulumi.StringPtrOutput)
}

func (o ZoneResourceOutput) EnableTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneResource) *string { return v.EnableTime }).(pulumi.StringPtrOutput)
}

func (o ZoneResourceOutput) ExpireTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneResource) *string { return v.ExpireTime }).(pulumi.StringPtrOutput)
}

func (o ZoneResourceOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneResource) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ZoneResourceOutput) PayMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneResource) *int { return v.PayMode }).(pulumi.IntPtrOutput)
}

func (o ZoneResourceOutput) PlanId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneResource) *string { return v.PlanId }).(pulumi.StringPtrOutput)
}

func (o ZoneResourceOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneResource) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o ZoneResourceOutput) Svs() ZoneResourceSvArrayOutput {
	return o.ApplyT(func(v ZoneResource) []ZoneResourceSv { return v.Svs }).(ZoneResourceSvArrayOutput)
}

type ZoneResourceArrayOutput struct{ *pulumi.OutputState }

func (ZoneResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneResource)(nil)).Elem()
}

func (o ZoneResourceArrayOutput) ToZoneResourceArrayOutput() ZoneResourceArrayOutput {
	return o
}

func (o ZoneResourceArrayOutput) ToZoneResourceArrayOutputWithContext(ctx context.Context) ZoneResourceArrayOutput {
	return o
}

func (o ZoneResourceArrayOutput) Index(i pulumi.IntInput) ZoneResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZoneResource {
		return vs[0].([]ZoneResource)[vs[1].(int)]
	}).(ZoneResourceOutput)
}

type ZoneResourceSv struct {
	Key   *string `pulumi:"key"`
	Value *string `pulumi:"value"`
}

// ZoneResourceSvInput is an input type that accepts ZoneResourceSvArgs and ZoneResourceSvOutput values.
// You can construct a concrete instance of `ZoneResourceSvInput` via:
//
//	ZoneResourceSvArgs{...}
type ZoneResourceSvInput interface {
	pulumi.Input

	ToZoneResourceSvOutput() ZoneResourceSvOutput
	ToZoneResourceSvOutputWithContext(context.Context) ZoneResourceSvOutput
}

type ZoneResourceSvArgs struct {
	Key   pulumi.StringPtrInput `pulumi:"key"`
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ZoneResourceSvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneResourceSv)(nil)).Elem()
}

func (i ZoneResourceSvArgs) ToZoneResourceSvOutput() ZoneResourceSvOutput {
	return i.ToZoneResourceSvOutputWithContext(context.Background())
}

func (i ZoneResourceSvArgs) ToZoneResourceSvOutputWithContext(ctx context.Context) ZoneResourceSvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneResourceSvOutput)
}

// ZoneResourceSvArrayInput is an input type that accepts ZoneResourceSvArray and ZoneResourceSvArrayOutput values.
// You can construct a concrete instance of `ZoneResourceSvArrayInput` via:
//
//	ZoneResourceSvArray{ ZoneResourceSvArgs{...} }
type ZoneResourceSvArrayInput interface {
	pulumi.Input

	ToZoneResourceSvArrayOutput() ZoneResourceSvArrayOutput
	ToZoneResourceSvArrayOutputWithContext(context.Context) ZoneResourceSvArrayOutput
}

type ZoneResourceSvArray []ZoneResourceSvInput

func (ZoneResourceSvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneResourceSv)(nil)).Elem()
}

func (i ZoneResourceSvArray) ToZoneResourceSvArrayOutput() ZoneResourceSvArrayOutput {
	return i.ToZoneResourceSvArrayOutputWithContext(context.Background())
}

func (i ZoneResourceSvArray) ToZoneResourceSvArrayOutputWithContext(ctx context.Context) ZoneResourceSvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneResourceSvArrayOutput)
}

type ZoneResourceSvOutput struct{ *pulumi.OutputState }

func (ZoneResourceSvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneResourceSv)(nil)).Elem()
}

func (o ZoneResourceSvOutput) ToZoneResourceSvOutput() ZoneResourceSvOutput {
	return o
}

func (o ZoneResourceSvOutput) ToZoneResourceSvOutputWithContext(ctx context.Context) ZoneResourceSvOutput {
	return o
}

func (o ZoneResourceSvOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneResourceSv) *string { return v.Key }).(pulumi.StringPtrOutput)
}

func (o ZoneResourceSvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneResourceSv) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ZoneResourceSvArrayOutput struct{ *pulumi.OutputState }

func (ZoneResourceSvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneResourceSv)(nil)).Elem()
}

func (o ZoneResourceSvArrayOutput) ToZoneResourceSvArrayOutput() ZoneResourceSvArrayOutput {
	return o
}

func (o ZoneResourceSvArrayOutput) ToZoneResourceSvArrayOutputWithContext(ctx context.Context) ZoneResourceSvArrayOutput {
	return o
}

func (o ZoneResourceSvArrayOutput) Index(i pulumi.IntInput) ZoneResourceSvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZoneResourceSv {
		return vs[0].([]ZoneResourceSv)[vs[1].(int)]
	}).(ZoneResourceSvOutput)
}

type ZoneSettingCache struct {
	Cache        *ZoneSettingCacheCache        `pulumi:"cache"`
	FollowOrigin *ZoneSettingCacheFollowOrigin `pulumi:"followOrigin"`
	NoCache      *ZoneSettingCacheNoCache      `pulumi:"noCache"`
}

// ZoneSettingCacheInput is an input type that accepts ZoneSettingCacheArgs and ZoneSettingCacheOutput values.
// You can construct a concrete instance of `ZoneSettingCacheInput` via:
//
//	ZoneSettingCacheArgs{...}
type ZoneSettingCacheInput interface {
	pulumi.Input

	ToZoneSettingCacheOutput() ZoneSettingCacheOutput
	ToZoneSettingCacheOutputWithContext(context.Context) ZoneSettingCacheOutput
}

type ZoneSettingCacheArgs struct {
	Cache        ZoneSettingCacheCachePtrInput        `pulumi:"cache"`
	FollowOrigin ZoneSettingCacheFollowOriginPtrInput `pulumi:"followOrigin"`
	NoCache      ZoneSettingCacheNoCachePtrInput      `pulumi:"noCache"`
}

func (ZoneSettingCacheArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCache)(nil)).Elem()
}

func (i ZoneSettingCacheArgs) ToZoneSettingCacheOutput() ZoneSettingCacheOutput {
	return i.ToZoneSettingCacheOutputWithContext(context.Background())
}

func (i ZoneSettingCacheArgs) ToZoneSettingCacheOutputWithContext(ctx context.Context) ZoneSettingCacheOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheOutput)
}

func (i ZoneSettingCacheArgs) ToZoneSettingCachePtrOutput() ZoneSettingCachePtrOutput {
	return i.ToZoneSettingCachePtrOutputWithContext(context.Background())
}

func (i ZoneSettingCacheArgs) ToZoneSettingCachePtrOutputWithContext(ctx context.Context) ZoneSettingCachePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheOutput).ToZoneSettingCachePtrOutputWithContext(ctx)
}

// ZoneSettingCachePtrInput is an input type that accepts ZoneSettingCacheArgs, ZoneSettingCachePtr and ZoneSettingCachePtrOutput values.
// You can construct a concrete instance of `ZoneSettingCachePtrInput` via:
//
//	        ZoneSettingCacheArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingCachePtrInput interface {
	pulumi.Input

	ToZoneSettingCachePtrOutput() ZoneSettingCachePtrOutput
	ToZoneSettingCachePtrOutputWithContext(context.Context) ZoneSettingCachePtrOutput
}

type zoneSettingCachePtrType ZoneSettingCacheArgs

func ZoneSettingCachePtr(v *ZoneSettingCacheArgs) ZoneSettingCachePtrInput {
	return (*zoneSettingCachePtrType)(v)
}

func (*zoneSettingCachePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCache)(nil)).Elem()
}

func (i *zoneSettingCachePtrType) ToZoneSettingCachePtrOutput() ZoneSettingCachePtrOutput {
	return i.ToZoneSettingCachePtrOutputWithContext(context.Background())
}

func (i *zoneSettingCachePtrType) ToZoneSettingCachePtrOutputWithContext(ctx context.Context) ZoneSettingCachePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCachePtrOutput)
}

type ZoneSettingCacheOutput struct{ *pulumi.OutputState }

func (ZoneSettingCacheOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCache)(nil)).Elem()
}

func (o ZoneSettingCacheOutput) ToZoneSettingCacheOutput() ZoneSettingCacheOutput {
	return o
}

func (o ZoneSettingCacheOutput) ToZoneSettingCacheOutputWithContext(ctx context.Context) ZoneSettingCacheOutput {
	return o
}

func (o ZoneSettingCacheOutput) ToZoneSettingCachePtrOutput() ZoneSettingCachePtrOutput {
	return o.ToZoneSettingCachePtrOutputWithContext(context.Background())
}

func (o ZoneSettingCacheOutput) ToZoneSettingCachePtrOutputWithContext(ctx context.Context) ZoneSettingCachePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingCache) *ZoneSettingCache {
		return &v
	}).(ZoneSettingCachePtrOutput)
}

func (o ZoneSettingCacheOutput) Cache() ZoneSettingCacheCachePtrOutput {
	return o.ApplyT(func(v ZoneSettingCache) *ZoneSettingCacheCache { return v.Cache }).(ZoneSettingCacheCachePtrOutput)
}

func (o ZoneSettingCacheOutput) FollowOrigin() ZoneSettingCacheFollowOriginPtrOutput {
	return o.ApplyT(func(v ZoneSettingCache) *ZoneSettingCacheFollowOrigin { return v.FollowOrigin }).(ZoneSettingCacheFollowOriginPtrOutput)
}

func (o ZoneSettingCacheOutput) NoCache() ZoneSettingCacheNoCachePtrOutput {
	return o.ApplyT(func(v ZoneSettingCache) *ZoneSettingCacheNoCache { return v.NoCache }).(ZoneSettingCacheNoCachePtrOutput)
}

type ZoneSettingCachePtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingCachePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCache)(nil)).Elem()
}

func (o ZoneSettingCachePtrOutput) ToZoneSettingCachePtrOutput() ZoneSettingCachePtrOutput {
	return o
}

func (o ZoneSettingCachePtrOutput) ToZoneSettingCachePtrOutputWithContext(ctx context.Context) ZoneSettingCachePtrOutput {
	return o
}

func (o ZoneSettingCachePtrOutput) Elem() ZoneSettingCacheOutput {
	return o.ApplyT(func(v *ZoneSettingCache) ZoneSettingCache {
		if v != nil {
			return *v
		}
		var ret ZoneSettingCache
		return ret
	}).(ZoneSettingCacheOutput)
}

func (o ZoneSettingCachePtrOutput) Cache() ZoneSettingCacheCachePtrOutput {
	return o.ApplyT(func(v *ZoneSettingCache) *ZoneSettingCacheCache {
		if v == nil {
			return nil
		}
		return v.Cache
	}).(ZoneSettingCacheCachePtrOutput)
}

func (o ZoneSettingCachePtrOutput) FollowOrigin() ZoneSettingCacheFollowOriginPtrOutput {
	return o.ApplyT(func(v *ZoneSettingCache) *ZoneSettingCacheFollowOrigin {
		if v == nil {
			return nil
		}
		return v.FollowOrigin
	}).(ZoneSettingCacheFollowOriginPtrOutput)
}

func (o ZoneSettingCachePtrOutput) NoCache() ZoneSettingCacheNoCachePtrOutput {
	return o.ApplyT(func(v *ZoneSettingCache) *ZoneSettingCacheNoCache {
		if v == nil {
			return nil
		}
		return v.NoCache
	}).(ZoneSettingCacheNoCachePtrOutput)
}

type ZoneSettingCacheCache struct {
	CacheTime          *int    `pulumi:"cacheTime"`
	IgnoreCacheControl *string `pulumi:"ignoreCacheControl"`
	Switch             *string `pulumi:"switch"`
}

// ZoneSettingCacheCacheInput is an input type that accepts ZoneSettingCacheCacheArgs and ZoneSettingCacheCacheOutput values.
// You can construct a concrete instance of `ZoneSettingCacheCacheInput` via:
//
//	ZoneSettingCacheCacheArgs{...}
type ZoneSettingCacheCacheInput interface {
	pulumi.Input

	ToZoneSettingCacheCacheOutput() ZoneSettingCacheCacheOutput
	ToZoneSettingCacheCacheOutputWithContext(context.Context) ZoneSettingCacheCacheOutput
}

type ZoneSettingCacheCacheArgs struct {
	CacheTime          pulumi.IntPtrInput    `pulumi:"cacheTime"`
	IgnoreCacheControl pulumi.StringPtrInput `pulumi:"ignoreCacheControl"`
	Switch             pulumi.StringPtrInput `pulumi:"switch"`
}

func (ZoneSettingCacheCacheArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCacheCache)(nil)).Elem()
}

func (i ZoneSettingCacheCacheArgs) ToZoneSettingCacheCacheOutput() ZoneSettingCacheCacheOutput {
	return i.ToZoneSettingCacheCacheOutputWithContext(context.Background())
}

func (i ZoneSettingCacheCacheArgs) ToZoneSettingCacheCacheOutputWithContext(ctx context.Context) ZoneSettingCacheCacheOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheCacheOutput)
}

func (i ZoneSettingCacheCacheArgs) ToZoneSettingCacheCachePtrOutput() ZoneSettingCacheCachePtrOutput {
	return i.ToZoneSettingCacheCachePtrOutputWithContext(context.Background())
}

func (i ZoneSettingCacheCacheArgs) ToZoneSettingCacheCachePtrOutputWithContext(ctx context.Context) ZoneSettingCacheCachePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheCacheOutput).ToZoneSettingCacheCachePtrOutputWithContext(ctx)
}

// ZoneSettingCacheCachePtrInput is an input type that accepts ZoneSettingCacheCacheArgs, ZoneSettingCacheCachePtr and ZoneSettingCacheCachePtrOutput values.
// You can construct a concrete instance of `ZoneSettingCacheCachePtrInput` via:
//
//	        ZoneSettingCacheCacheArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingCacheCachePtrInput interface {
	pulumi.Input

	ToZoneSettingCacheCachePtrOutput() ZoneSettingCacheCachePtrOutput
	ToZoneSettingCacheCachePtrOutputWithContext(context.Context) ZoneSettingCacheCachePtrOutput
}

type zoneSettingCacheCachePtrType ZoneSettingCacheCacheArgs

func ZoneSettingCacheCachePtr(v *ZoneSettingCacheCacheArgs) ZoneSettingCacheCachePtrInput {
	return (*zoneSettingCacheCachePtrType)(v)
}

func (*zoneSettingCacheCachePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCacheCache)(nil)).Elem()
}

func (i *zoneSettingCacheCachePtrType) ToZoneSettingCacheCachePtrOutput() ZoneSettingCacheCachePtrOutput {
	return i.ToZoneSettingCacheCachePtrOutputWithContext(context.Background())
}

func (i *zoneSettingCacheCachePtrType) ToZoneSettingCacheCachePtrOutputWithContext(ctx context.Context) ZoneSettingCacheCachePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheCachePtrOutput)
}

type ZoneSettingCacheCacheOutput struct{ *pulumi.OutputState }

func (ZoneSettingCacheCacheOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCacheCache)(nil)).Elem()
}

func (o ZoneSettingCacheCacheOutput) ToZoneSettingCacheCacheOutput() ZoneSettingCacheCacheOutput {
	return o
}

func (o ZoneSettingCacheCacheOutput) ToZoneSettingCacheCacheOutputWithContext(ctx context.Context) ZoneSettingCacheCacheOutput {
	return o
}

func (o ZoneSettingCacheCacheOutput) ToZoneSettingCacheCachePtrOutput() ZoneSettingCacheCachePtrOutput {
	return o.ToZoneSettingCacheCachePtrOutputWithContext(context.Background())
}

func (o ZoneSettingCacheCacheOutput) ToZoneSettingCacheCachePtrOutputWithContext(ctx context.Context) ZoneSettingCacheCachePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingCacheCache) *ZoneSettingCacheCache {
		return &v
	}).(ZoneSettingCacheCachePtrOutput)
}

func (o ZoneSettingCacheCacheOutput) CacheTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneSettingCacheCache) *int { return v.CacheTime }).(pulumi.IntPtrOutput)
}

func (o ZoneSettingCacheCacheOutput) IgnoreCacheControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingCacheCache) *string { return v.IgnoreCacheControl }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingCacheCacheOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingCacheCache) *string { return v.Switch }).(pulumi.StringPtrOutput)
}

type ZoneSettingCacheCachePtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingCacheCachePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCacheCache)(nil)).Elem()
}

func (o ZoneSettingCacheCachePtrOutput) ToZoneSettingCacheCachePtrOutput() ZoneSettingCacheCachePtrOutput {
	return o
}

func (o ZoneSettingCacheCachePtrOutput) ToZoneSettingCacheCachePtrOutputWithContext(ctx context.Context) ZoneSettingCacheCachePtrOutput {
	return o
}

func (o ZoneSettingCacheCachePtrOutput) Elem() ZoneSettingCacheCacheOutput {
	return o.ApplyT(func(v *ZoneSettingCacheCache) ZoneSettingCacheCache {
		if v != nil {
			return *v
		}
		var ret ZoneSettingCacheCache
		return ret
	}).(ZoneSettingCacheCacheOutput)
}

func (o ZoneSettingCacheCachePtrOutput) CacheTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZoneSettingCacheCache) *int {
		if v == nil {
			return nil
		}
		return v.CacheTime
	}).(pulumi.IntPtrOutput)
}

func (o ZoneSettingCacheCachePtrOutput) IgnoreCacheControl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingCacheCache) *string {
		if v == nil {
			return nil
		}
		return v.IgnoreCacheControl
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingCacheCachePtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingCacheCache) *string {
		if v == nil {
			return nil
		}
		return v.Switch
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingCacheFollowOrigin struct {
	Switch *string `pulumi:"switch"`
}

// ZoneSettingCacheFollowOriginInput is an input type that accepts ZoneSettingCacheFollowOriginArgs and ZoneSettingCacheFollowOriginOutput values.
// You can construct a concrete instance of `ZoneSettingCacheFollowOriginInput` via:
//
//	ZoneSettingCacheFollowOriginArgs{...}
type ZoneSettingCacheFollowOriginInput interface {
	pulumi.Input

	ToZoneSettingCacheFollowOriginOutput() ZoneSettingCacheFollowOriginOutput
	ToZoneSettingCacheFollowOriginOutputWithContext(context.Context) ZoneSettingCacheFollowOriginOutput
}

type ZoneSettingCacheFollowOriginArgs struct {
	Switch pulumi.StringPtrInput `pulumi:"switch"`
}

func (ZoneSettingCacheFollowOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCacheFollowOrigin)(nil)).Elem()
}

func (i ZoneSettingCacheFollowOriginArgs) ToZoneSettingCacheFollowOriginOutput() ZoneSettingCacheFollowOriginOutput {
	return i.ToZoneSettingCacheFollowOriginOutputWithContext(context.Background())
}

func (i ZoneSettingCacheFollowOriginArgs) ToZoneSettingCacheFollowOriginOutputWithContext(ctx context.Context) ZoneSettingCacheFollowOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheFollowOriginOutput)
}

func (i ZoneSettingCacheFollowOriginArgs) ToZoneSettingCacheFollowOriginPtrOutput() ZoneSettingCacheFollowOriginPtrOutput {
	return i.ToZoneSettingCacheFollowOriginPtrOutputWithContext(context.Background())
}

func (i ZoneSettingCacheFollowOriginArgs) ToZoneSettingCacheFollowOriginPtrOutputWithContext(ctx context.Context) ZoneSettingCacheFollowOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheFollowOriginOutput).ToZoneSettingCacheFollowOriginPtrOutputWithContext(ctx)
}

// ZoneSettingCacheFollowOriginPtrInput is an input type that accepts ZoneSettingCacheFollowOriginArgs, ZoneSettingCacheFollowOriginPtr and ZoneSettingCacheFollowOriginPtrOutput values.
// You can construct a concrete instance of `ZoneSettingCacheFollowOriginPtrInput` via:
//
//	        ZoneSettingCacheFollowOriginArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingCacheFollowOriginPtrInput interface {
	pulumi.Input

	ToZoneSettingCacheFollowOriginPtrOutput() ZoneSettingCacheFollowOriginPtrOutput
	ToZoneSettingCacheFollowOriginPtrOutputWithContext(context.Context) ZoneSettingCacheFollowOriginPtrOutput
}

type zoneSettingCacheFollowOriginPtrType ZoneSettingCacheFollowOriginArgs

func ZoneSettingCacheFollowOriginPtr(v *ZoneSettingCacheFollowOriginArgs) ZoneSettingCacheFollowOriginPtrInput {
	return (*zoneSettingCacheFollowOriginPtrType)(v)
}

func (*zoneSettingCacheFollowOriginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCacheFollowOrigin)(nil)).Elem()
}

func (i *zoneSettingCacheFollowOriginPtrType) ToZoneSettingCacheFollowOriginPtrOutput() ZoneSettingCacheFollowOriginPtrOutput {
	return i.ToZoneSettingCacheFollowOriginPtrOutputWithContext(context.Background())
}

func (i *zoneSettingCacheFollowOriginPtrType) ToZoneSettingCacheFollowOriginPtrOutputWithContext(ctx context.Context) ZoneSettingCacheFollowOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheFollowOriginPtrOutput)
}

type ZoneSettingCacheFollowOriginOutput struct{ *pulumi.OutputState }

func (ZoneSettingCacheFollowOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCacheFollowOrigin)(nil)).Elem()
}

func (o ZoneSettingCacheFollowOriginOutput) ToZoneSettingCacheFollowOriginOutput() ZoneSettingCacheFollowOriginOutput {
	return o
}

func (o ZoneSettingCacheFollowOriginOutput) ToZoneSettingCacheFollowOriginOutputWithContext(ctx context.Context) ZoneSettingCacheFollowOriginOutput {
	return o
}

func (o ZoneSettingCacheFollowOriginOutput) ToZoneSettingCacheFollowOriginPtrOutput() ZoneSettingCacheFollowOriginPtrOutput {
	return o.ToZoneSettingCacheFollowOriginPtrOutputWithContext(context.Background())
}

func (o ZoneSettingCacheFollowOriginOutput) ToZoneSettingCacheFollowOriginPtrOutputWithContext(ctx context.Context) ZoneSettingCacheFollowOriginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingCacheFollowOrigin) *ZoneSettingCacheFollowOrigin {
		return &v
	}).(ZoneSettingCacheFollowOriginPtrOutput)
}

func (o ZoneSettingCacheFollowOriginOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingCacheFollowOrigin) *string { return v.Switch }).(pulumi.StringPtrOutput)
}

type ZoneSettingCacheFollowOriginPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingCacheFollowOriginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCacheFollowOrigin)(nil)).Elem()
}

func (o ZoneSettingCacheFollowOriginPtrOutput) ToZoneSettingCacheFollowOriginPtrOutput() ZoneSettingCacheFollowOriginPtrOutput {
	return o
}

func (o ZoneSettingCacheFollowOriginPtrOutput) ToZoneSettingCacheFollowOriginPtrOutputWithContext(ctx context.Context) ZoneSettingCacheFollowOriginPtrOutput {
	return o
}

func (o ZoneSettingCacheFollowOriginPtrOutput) Elem() ZoneSettingCacheFollowOriginOutput {
	return o.ApplyT(func(v *ZoneSettingCacheFollowOrigin) ZoneSettingCacheFollowOrigin {
		if v != nil {
			return *v
		}
		var ret ZoneSettingCacheFollowOrigin
		return ret
	}).(ZoneSettingCacheFollowOriginOutput)
}

func (o ZoneSettingCacheFollowOriginPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingCacheFollowOrigin) *string {
		if v == nil {
			return nil
		}
		return v.Switch
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingCacheKey struct {
	FullUrlCache *string                         `pulumi:"fullUrlCache"`
	IgnoreCase   *string                         `pulumi:"ignoreCase"`
	QueryString  *ZoneSettingCacheKeyQueryString `pulumi:"queryString"`
}

// ZoneSettingCacheKeyInput is an input type that accepts ZoneSettingCacheKeyArgs and ZoneSettingCacheKeyOutput values.
// You can construct a concrete instance of `ZoneSettingCacheKeyInput` via:
//
//	ZoneSettingCacheKeyArgs{...}
type ZoneSettingCacheKeyInput interface {
	pulumi.Input

	ToZoneSettingCacheKeyOutput() ZoneSettingCacheKeyOutput
	ToZoneSettingCacheKeyOutputWithContext(context.Context) ZoneSettingCacheKeyOutput
}

type ZoneSettingCacheKeyArgs struct {
	FullUrlCache pulumi.StringPtrInput                  `pulumi:"fullUrlCache"`
	IgnoreCase   pulumi.StringPtrInput                  `pulumi:"ignoreCase"`
	QueryString  ZoneSettingCacheKeyQueryStringPtrInput `pulumi:"queryString"`
}

func (ZoneSettingCacheKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCacheKey)(nil)).Elem()
}

func (i ZoneSettingCacheKeyArgs) ToZoneSettingCacheKeyOutput() ZoneSettingCacheKeyOutput {
	return i.ToZoneSettingCacheKeyOutputWithContext(context.Background())
}

func (i ZoneSettingCacheKeyArgs) ToZoneSettingCacheKeyOutputWithContext(ctx context.Context) ZoneSettingCacheKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheKeyOutput)
}

func (i ZoneSettingCacheKeyArgs) ToZoneSettingCacheKeyPtrOutput() ZoneSettingCacheKeyPtrOutput {
	return i.ToZoneSettingCacheKeyPtrOutputWithContext(context.Background())
}

func (i ZoneSettingCacheKeyArgs) ToZoneSettingCacheKeyPtrOutputWithContext(ctx context.Context) ZoneSettingCacheKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheKeyOutput).ToZoneSettingCacheKeyPtrOutputWithContext(ctx)
}

// ZoneSettingCacheKeyPtrInput is an input type that accepts ZoneSettingCacheKeyArgs, ZoneSettingCacheKeyPtr and ZoneSettingCacheKeyPtrOutput values.
// You can construct a concrete instance of `ZoneSettingCacheKeyPtrInput` via:
//
//	        ZoneSettingCacheKeyArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingCacheKeyPtrInput interface {
	pulumi.Input

	ToZoneSettingCacheKeyPtrOutput() ZoneSettingCacheKeyPtrOutput
	ToZoneSettingCacheKeyPtrOutputWithContext(context.Context) ZoneSettingCacheKeyPtrOutput
}

type zoneSettingCacheKeyPtrType ZoneSettingCacheKeyArgs

func ZoneSettingCacheKeyPtr(v *ZoneSettingCacheKeyArgs) ZoneSettingCacheKeyPtrInput {
	return (*zoneSettingCacheKeyPtrType)(v)
}

func (*zoneSettingCacheKeyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCacheKey)(nil)).Elem()
}

func (i *zoneSettingCacheKeyPtrType) ToZoneSettingCacheKeyPtrOutput() ZoneSettingCacheKeyPtrOutput {
	return i.ToZoneSettingCacheKeyPtrOutputWithContext(context.Background())
}

func (i *zoneSettingCacheKeyPtrType) ToZoneSettingCacheKeyPtrOutputWithContext(ctx context.Context) ZoneSettingCacheKeyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheKeyPtrOutput)
}

type ZoneSettingCacheKeyOutput struct{ *pulumi.OutputState }

func (ZoneSettingCacheKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCacheKey)(nil)).Elem()
}

func (o ZoneSettingCacheKeyOutput) ToZoneSettingCacheKeyOutput() ZoneSettingCacheKeyOutput {
	return o
}

func (o ZoneSettingCacheKeyOutput) ToZoneSettingCacheKeyOutputWithContext(ctx context.Context) ZoneSettingCacheKeyOutput {
	return o
}

func (o ZoneSettingCacheKeyOutput) ToZoneSettingCacheKeyPtrOutput() ZoneSettingCacheKeyPtrOutput {
	return o.ToZoneSettingCacheKeyPtrOutputWithContext(context.Background())
}

func (o ZoneSettingCacheKeyOutput) ToZoneSettingCacheKeyPtrOutputWithContext(ctx context.Context) ZoneSettingCacheKeyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingCacheKey) *ZoneSettingCacheKey {
		return &v
	}).(ZoneSettingCacheKeyPtrOutput)
}

func (o ZoneSettingCacheKeyOutput) FullUrlCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingCacheKey) *string { return v.FullUrlCache }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingCacheKeyOutput) IgnoreCase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingCacheKey) *string { return v.IgnoreCase }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingCacheKeyOutput) QueryString() ZoneSettingCacheKeyQueryStringPtrOutput {
	return o.ApplyT(func(v ZoneSettingCacheKey) *ZoneSettingCacheKeyQueryString { return v.QueryString }).(ZoneSettingCacheKeyQueryStringPtrOutput)
}

type ZoneSettingCacheKeyPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingCacheKeyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCacheKey)(nil)).Elem()
}

func (o ZoneSettingCacheKeyPtrOutput) ToZoneSettingCacheKeyPtrOutput() ZoneSettingCacheKeyPtrOutput {
	return o
}

func (o ZoneSettingCacheKeyPtrOutput) ToZoneSettingCacheKeyPtrOutputWithContext(ctx context.Context) ZoneSettingCacheKeyPtrOutput {
	return o
}

func (o ZoneSettingCacheKeyPtrOutput) Elem() ZoneSettingCacheKeyOutput {
	return o.ApplyT(func(v *ZoneSettingCacheKey) ZoneSettingCacheKey {
		if v != nil {
			return *v
		}
		var ret ZoneSettingCacheKey
		return ret
	}).(ZoneSettingCacheKeyOutput)
}

func (o ZoneSettingCacheKeyPtrOutput) FullUrlCache() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingCacheKey) *string {
		if v == nil {
			return nil
		}
		return v.FullUrlCache
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingCacheKeyPtrOutput) IgnoreCase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingCacheKey) *string {
		if v == nil {
			return nil
		}
		return v.IgnoreCase
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingCacheKeyPtrOutput) QueryString() ZoneSettingCacheKeyQueryStringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingCacheKey) *ZoneSettingCacheKeyQueryString {
		if v == nil {
			return nil
		}
		return v.QueryString
	}).(ZoneSettingCacheKeyQueryStringPtrOutput)
}

type ZoneSettingCacheKeyQueryString struct {
	Action *string  `pulumi:"action"`
	Switch string   `pulumi:"switch"`
	Values []string `pulumi:"values"`
}

// ZoneSettingCacheKeyQueryStringInput is an input type that accepts ZoneSettingCacheKeyQueryStringArgs and ZoneSettingCacheKeyQueryStringOutput values.
// You can construct a concrete instance of `ZoneSettingCacheKeyQueryStringInput` via:
//
//	ZoneSettingCacheKeyQueryStringArgs{...}
type ZoneSettingCacheKeyQueryStringInput interface {
	pulumi.Input

	ToZoneSettingCacheKeyQueryStringOutput() ZoneSettingCacheKeyQueryStringOutput
	ToZoneSettingCacheKeyQueryStringOutputWithContext(context.Context) ZoneSettingCacheKeyQueryStringOutput
}

type ZoneSettingCacheKeyQueryStringArgs struct {
	Action pulumi.StringPtrInput   `pulumi:"action"`
	Switch pulumi.StringInput      `pulumi:"switch"`
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ZoneSettingCacheKeyQueryStringArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCacheKeyQueryString)(nil)).Elem()
}

func (i ZoneSettingCacheKeyQueryStringArgs) ToZoneSettingCacheKeyQueryStringOutput() ZoneSettingCacheKeyQueryStringOutput {
	return i.ToZoneSettingCacheKeyQueryStringOutputWithContext(context.Background())
}

func (i ZoneSettingCacheKeyQueryStringArgs) ToZoneSettingCacheKeyQueryStringOutputWithContext(ctx context.Context) ZoneSettingCacheKeyQueryStringOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheKeyQueryStringOutput)
}

func (i ZoneSettingCacheKeyQueryStringArgs) ToZoneSettingCacheKeyQueryStringPtrOutput() ZoneSettingCacheKeyQueryStringPtrOutput {
	return i.ToZoneSettingCacheKeyQueryStringPtrOutputWithContext(context.Background())
}

func (i ZoneSettingCacheKeyQueryStringArgs) ToZoneSettingCacheKeyQueryStringPtrOutputWithContext(ctx context.Context) ZoneSettingCacheKeyQueryStringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheKeyQueryStringOutput).ToZoneSettingCacheKeyQueryStringPtrOutputWithContext(ctx)
}

// ZoneSettingCacheKeyQueryStringPtrInput is an input type that accepts ZoneSettingCacheKeyQueryStringArgs, ZoneSettingCacheKeyQueryStringPtr and ZoneSettingCacheKeyQueryStringPtrOutput values.
// You can construct a concrete instance of `ZoneSettingCacheKeyQueryStringPtrInput` via:
//
//	        ZoneSettingCacheKeyQueryStringArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingCacheKeyQueryStringPtrInput interface {
	pulumi.Input

	ToZoneSettingCacheKeyQueryStringPtrOutput() ZoneSettingCacheKeyQueryStringPtrOutput
	ToZoneSettingCacheKeyQueryStringPtrOutputWithContext(context.Context) ZoneSettingCacheKeyQueryStringPtrOutput
}

type zoneSettingCacheKeyQueryStringPtrType ZoneSettingCacheKeyQueryStringArgs

func ZoneSettingCacheKeyQueryStringPtr(v *ZoneSettingCacheKeyQueryStringArgs) ZoneSettingCacheKeyQueryStringPtrInput {
	return (*zoneSettingCacheKeyQueryStringPtrType)(v)
}

func (*zoneSettingCacheKeyQueryStringPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCacheKeyQueryString)(nil)).Elem()
}

func (i *zoneSettingCacheKeyQueryStringPtrType) ToZoneSettingCacheKeyQueryStringPtrOutput() ZoneSettingCacheKeyQueryStringPtrOutput {
	return i.ToZoneSettingCacheKeyQueryStringPtrOutputWithContext(context.Background())
}

func (i *zoneSettingCacheKeyQueryStringPtrType) ToZoneSettingCacheKeyQueryStringPtrOutputWithContext(ctx context.Context) ZoneSettingCacheKeyQueryStringPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheKeyQueryStringPtrOutput)
}

type ZoneSettingCacheKeyQueryStringOutput struct{ *pulumi.OutputState }

func (ZoneSettingCacheKeyQueryStringOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCacheKeyQueryString)(nil)).Elem()
}

func (o ZoneSettingCacheKeyQueryStringOutput) ToZoneSettingCacheKeyQueryStringOutput() ZoneSettingCacheKeyQueryStringOutput {
	return o
}

func (o ZoneSettingCacheKeyQueryStringOutput) ToZoneSettingCacheKeyQueryStringOutputWithContext(ctx context.Context) ZoneSettingCacheKeyQueryStringOutput {
	return o
}

func (o ZoneSettingCacheKeyQueryStringOutput) ToZoneSettingCacheKeyQueryStringPtrOutput() ZoneSettingCacheKeyQueryStringPtrOutput {
	return o.ToZoneSettingCacheKeyQueryStringPtrOutputWithContext(context.Background())
}

func (o ZoneSettingCacheKeyQueryStringOutput) ToZoneSettingCacheKeyQueryStringPtrOutputWithContext(ctx context.Context) ZoneSettingCacheKeyQueryStringPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingCacheKeyQueryString) *ZoneSettingCacheKeyQueryString {
		return &v
	}).(ZoneSettingCacheKeyQueryStringPtrOutput)
}

func (o ZoneSettingCacheKeyQueryStringOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingCacheKeyQueryString) *string { return v.Action }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingCacheKeyQueryStringOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingCacheKeyQueryString) string { return v.Switch }).(pulumi.StringOutput)
}

func (o ZoneSettingCacheKeyQueryStringOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZoneSettingCacheKeyQueryString) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ZoneSettingCacheKeyQueryStringPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingCacheKeyQueryStringPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCacheKeyQueryString)(nil)).Elem()
}

func (o ZoneSettingCacheKeyQueryStringPtrOutput) ToZoneSettingCacheKeyQueryStringPtrOutput() ZoneSettingCacheKeyQueryStringPtrOutput {
	return o
}

func (o ZoneSettingCacheKeyQueryStringPtrOutput) ToZoneSettingCacheKeyQueryStringPtrOutputWithContext(ctx context.Context) ZoneSettingCacheKeyQueryStringPtrOutput {
	return o
}

func (o ZoneSettingCacheKeyQueryStringPtrOutput) Elem() ZoneSettingCacheKeyQueryStringOutput {
	return o.ApplyT(func(v *ZoneSettingCacheKeyQueryString) ZoneSettingCacheKeyQueryString {
		if v != nil {
			return *v
		}
		var ret ZoneSettingCacheKeyQueryString
		return ret
	}).(ZoneSettingCacheKeyQueryStringOutput)
}

func (o ZoneSettingCacheKeyQueryStringPtrOutput) Action() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingCacheKeyQueryString) *string {
		if v == nil {
			return nil
		}
		return v.Action
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingCacheKeyQueryStringPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingCacheKeyQueryString) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingCacheKeyQueryStringPtrOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ZoneSettingCacheKeyQueryString) []string {
		if v == nil {
			return nil
		}
		return v.Values
	}).(pulumi.StringArrayOutput)
}

type ZoneSettingCacheNoCache struct {
	Switch *string `pulumi:"switch"`
}

// ZoneSettingCacheNoCacheInput is an input type that accepts ZoneSettingCacheNoCacheArgs and ZoneSettingCacheNoCacheOutput values.
// You can construct a concrete instance of `ZoneSettingCacheNoCacheInput` via:
//
//	ZoneSettingCacheNoCacheArgs{...}
type ZoneSettingCacheNoCacheInput interface {
	pulumi.Input

	ToZoneSettingCacheNoCacheOutput() ZoneSettingCacheNoCacheOutput
	ToZoneSettingCacheNoCacheOutputWithContext(context.Context) ZoneSettingCacheNoCacheOutput
}

type ZoneSettingCacheNoCacheArgs struct {
	Switch pulumi.StringPtrInput `pulumi:"switch"`
}

func (ZoneSettingCacheNoCacheArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCacheNoCache)(nil)).Elem()
}

func (i ZoneSettingCacheNoCacheArgs) ToZoneSettingCacheNoCacheOutput() ZoneSettingCacheNoCacheOutput {
	return i.ToZoneSettingCacheNoCacheOutputWithContext(context.Background())
}

func (i ZoneSettingCacheNoCacheArgs) ToZoneSettingCacheNoCacheOutputWithContext(ctx context.Context) ZoneSettingCacheNoCacheOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheNoCacheOutput)
}

func (i ZoneSettingCacheNoCacheArgs) ToZoneSettingCacheNoCachePtrOutput() ZoneSettingCacheNoCachePtrOutput {
	return i.ToZoneSettingCacheNoCachePtrOutputWithContext(context.Background())
}

func (i ZoneSettingCacheNoCacheArgs) ToZoneSettingCacheNoCachePtrOutputWithContext(ctx context.Context) ZoneSettingCacheNoCachePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheNoCacheOutput).ToZoneSettingCacheNoCachePtrOutputWithContext(ctx)
}

// ZoneSettingCacheNoCachePtrInput is an input type that accepts ZoneSettingCacheNoCacheArgs, ZoneSettingCacheNoCachePtr and ZoneSettingCacheNoCachePtrOutput values.
// You can construct a concrete instance of `ZoneSettingCacheNoCachePtrInput` via:
//
//	        ZoneSettingCacheNoCacheArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingCacheNoCachePtrInput interface {
	pulumi.Input

	ToZoneSettingCacheNoCachePtrOutput() ZoneSettingCacheNoCachePtrOutput
	ToZoneSettingCacheNoCachePtrOutputWithContext(context.Context) ZoneSettingCacheNoCachePtrOutput
}

type zoneSettingCacheNoCachePtrType ZoneSettingCacheNoCacheArgs

func ZoneSettingCacheNoCachePtr(v *ZoneSettingCacheNoCacheArgs) ZoneSettingCacheNoCachePtrInput {
	return (*zoneSettingCacheNoCachePtrType)(v)
}

func (*zoneSettingCacheNoCachePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCacheNoCache)(nil)).Elem()
}

func (i *zoneSettingCacheNoCachePtrType) ToZoneSettingCacheNoCachePtrOutput() ZoneSettingCacheNoCachePtrOutput {
	return i.ToZoneSettingCacheNoCachePtrOutputWithContext(context.Background())
}

func (i *zoneSettingCacheNoCachePtrType) ToZoneSettingCacheNoCachePtrOutputWithContext(ctx context.Context) ZoneSettingCacheNoCachePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCacheNoCachePtrOutput)
}

type ZoneSettingCacheNoCacheOutput struct{ *pulumi.OutputState }

func (ZoneSettingCacheNoCacheOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCacheNoCache)(nil)).Elem()
}

func (o ZoneSettingCacheNoCacheOutput) ToZoneSettingCacheNoCacheOutput() ZoneSettingCacheNoCacheOutput {
	return o
}

func (o ZoneSettingCacheNoCacheOutput) ToZoneSettingCacheNoCacheOutputWithContext(ctx context.Context) ZoneSettingCacheNoCacheOutput {
	return o
}

func (o ZoneSettingCacheNoCacheOutput) ToZoneSettingCacheNoCachePtrOutput() ZoneSettingCacheNoCachePtrOutput {
	return o.ToZoneSettingCacheNoCachePtrOutputWithContext(context.Background())
}

func (o ZoneSettingCacheNoCacheOutput) ToZoneSettingCacheNoCachePtrOutputWithContext(ctx context.Context) ZoneSettingCacheNoCachePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingCacheNoCache) *ZoneSettingCacheNoCache {
		return &v
	}).(ZoneSettingCacheNoCachePtrOutput)
}

func (o ZoneSettingCacheNoCacheOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingCacheNoCache) *string { return v.Switch }).(pulumi.StringPtrOutput)
}

type ZoneSettingCacheNoCachePtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingCacheNoCachePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCacheNoCache)(nil)).Elem()
}

func (o ZoneSettingCacheNoCachePtrOutput) ToZoneSettingCacheNoCachePtrOutput() ZoneSettingCacheNoCachePtrOutput {
	return o
}

func (o ZoneSettingCacheNoCachePtrOutput) ToZoneSettingCacheNoCachePtrOutputWithContext(ctx context.Context) ZoneSettingCacheNoCachePtrOutput {
	return o
}

func (o ZoneSettingCacheNoCachePtrOutput) Elem() ZoneSettingCacheNoCacheOutput {
	return o.ApplyT(func(v *ZoneSettingCacheNoCache) ZoneSettingCacheNoCache {
		if v != nil {
			return *v
		}
		var ret ZoneSettingCacheNoCache
		return ret
	}).(ZoneSettingCacheNoCacheOutput)
}

func (o ZoneSettingCacheNoCachePtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingCacheNoCache) *string {
		if v == nil {
			return nil
		}
		return v.Switch
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingCachePrefresh struct {
	Percent *int   `pulumi:"percent"`
	Switch  string `pulumi:"switch"`
}

// ZoneSettingCachePrefreshInput is an input type that accepts ZoneSettingCachePrefreshArgs and ZoneSettingCachePrefreshOutput values.
// You can construct a concrete instance of `ZoneSettingCachePrefreshInput` via:
//
//	ZoneSettingCachePrefreshArgs{...}
type ZoneSettingCachePrefreshInput interface {
	pulumi.Input

	ToZoneSettingCachePrefreshOutput() ZoneSettingCachePrefreshOutput
	ToZoneSettingCachePrefreshOutputWithContext(context.Context) ZoneSettingCachePrefreshOutput
}

type ZoneSettingCachePrefreshArgs struct {
	Percent pulumi.IntPtrInput `pulumi:"percent"`
	Switch  pulumi.StringInput `pulumi:"switch"`
}

func (ZoneSettingCachePrefreshArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCachePrefresh)(nil)).Elem()
}

func (i ZoneSettingCachePrefreshArgs) ToZoneSettingCachePrefreshOutput() ZoneSettingCachePrefreshOutput {
	return i.ToZoneSettingCachePrefreshOutputWithContext(context.Background())
}

func (i ZoneSettingCachePrefreshArgs) ToZoneSettingCachePrefreshOutputWithContext(ctx context.Context) ZoneSettingCachePrefreshOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCachePrefreshOutput)
}

func (i ZoneSettingCachePrefreshArgs) ToZoneSettingCachePrefreshPtrOutput() ZoneSettingCachePrefreshPtrOutput {
	return i.ToZoneSettingCachePrefreshPtrOutputWithContext(context.Background())
}

func (i ZoneSettingCachePrefreshArgs) ToZoneSettingCachePrefreshPtrOutputWithContext(ctx context.Context) ZoneSettingCachePrefreshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCachePrefreshOutput).ToZoneSettingCachePrefreshPtrOutputWithContext(ctx)
}

// ZoneSettingCachePrefreshPtrInput is an input type that accepts ZoneSettingCachePrefreshArgs, ZoneSettingCachePrefreshPtr and ZoneSettingCachePrefreshPtrOutput values.
// You can construct a concrete instance of `ZoneSettingCachePrefreshPtrInput` via:
//
//	        ZoneSettingCachePrefreshArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingCachePrefreshPtrInput interface {
	pulumi.Input

	ToZoneSettingCachePrefreshPtrOutput() ZoneSettingCachePrefreshPtrOutput
	ToZoneSettingCachePrefreshPtrOutputWithContext(context.Context) ZoneSettingCachePrefreshPtrOutput
}

type zoneSettingCachePrefreshPtrType ZoneSettingCachePrefreshArgs

func ZoneSettingCachePrefreshPtr(v *ZoneSettingCachePrefreshArgs) ZoneSettingCachePrefreshPtrInput {
	return (*zoneSettingCachePrefreshPtrType)(v)
}

func (*zoneSettingCachePrefreshPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCachePrefresh)(nil)).Elem()
}

func (i *zoneSettingCachePrefreshPtrType) ToZoneSettingCachePrefreshPtrOutput() ZoneSettingCachePrefreshPtrOutput {
	return i.ToZoneSettingCachePrefreshPtrOutputWithContext(context.Background())
}

func (i *zoneSettingCachePrefreshPtrType) ToZoneSettingCachePrefreshPtrOutputWithContext(ctx context.Context) ZoneSettingCachePrefreshPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCachePrefreshPtrOutput)
}

type ZoneSettingCachePrefreshOutput struct{ *pulumi.OutputState }

func (ZoneSettingCachePrefreshOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCachePrefresh)(nil)).Elem()
}

func (o ZoneSettingCachePrefreshOutput) ToZoneSettingCachePrefreshOutput() ZoneSettingCachePrefreshOutput {
	return o
}

func (o ZoneSettingCachePrefreshOutput) ToZoneSettingCachePrefreshOutputWithContext(ctx context.Context) ZoneSettingCachePrefreshOutput {
	return o
}

func (o ZoneSettingCachePrefreshOutput) ToZoneSettingCachePrefreshPtrOutput() ZoneSettingCachePrefreshPtrOutput {
	return o.ToZoneSettingCachePrefreshPtrOutputWithContext(context.Background())
}

func (o ZoneSettingCachePrefreshOutput) ToZoneSettingCachePrefreshPtrOutputWithContext(ctx context.Context) ZoneSettingCachePrefreshPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingCachePrefresh) *ZoneSettingCachePrefresh {
		return &v
	}).(ZoneSettingCachePrefreshPtrOutput)
}

func (o ZoneSettingCachePrefreshOutput) Percent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneSettingCachePrefresh) *int { return v.Percent }).(pulumi.IntPtrOutput)
}

func (o ZoneSettingCachePrefreshOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingCachePrefresh) string { return v.Switch }).(pulumi.StringOutput)
}

type ZoneSettingCachePrefreshPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingCachePrefreshPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCachePrefresh)(nil)).Elem()
}

func (o ZoneSettingCachePrefreshPtrOutput) ToZoneSettingCachePrefreshPtrOutput() ZoneSettingCachePrefreshPtrOutput {
	return o
}

func (o ZoneSettingCachePrefreshPtrOutput) ToZoneSettingCachePrefreshPtrOutputWithContext(ctx context.Context) ZoneSettingCachePrefreshPtrOutput {
	return o
}

func (o ZoneSettingCachePrefreshPtrOutput) Elem() ZoneSettingCachePrefreshOutput {
	return o.ApplyT(func(v *ZoneSettingCachePrefresh) ZoneSettingCachePrefresh {
		if v != nil {
			return *v
		}
		var ret ZoneSettingCachePrefresh
		return ret
	}).(ZoneSettingCachePrefreshOutput)
}

func (o ZoneSettingCachePrefreshPtrOutput) Percent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZoneSettingCachePrefresh) *int {
		if v == nil {
			return nil
		}
		return v.Percent
	}).(pulumi.IntPtrOutput)
}

func (o ZoneSettingCachePrefreshPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingCachePrefresh) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingClientIpHeader struct {
	HeaderName *string `pulumi:"headerName"`
	Switch     string  `pulumi:"switch"`
}

// ZoneSettingClientIpHeaderInput is an input type that accepts ZoneSettingClientIpHeaderArgs and ZoneSettingClientIpHeaderOutput values.
// You can construct a concrete instance of `ZoneSettingClientIpHeaderInput` via:
//
//	ZoneSettingClientIpHeaderArgs{...}
type ZoneSettingClientIpHeaderInput interface {
	pulumi.Input

	ToZoneSettingClientIpHeaderOutput() ZoneSettingClientIpHeaderOutput
	ToZoneSettingClientIpHeaderOutputWithContext(context.Context) ZoneSettingClientIpHeaderOutput
}

type ZoneSettingClientIpHeaderArgs struct {
	HeaderName pulumi.StringPtrInput `pulumi:"headerName"`
	Switch     pulumi.StringInput    `pulumi:"switch"`
}

func (ZoneSettingClientIpHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingClientIpHeader)(nil)).Elem()
}

func (i ZoneSettingClientIpHeaderArgs) ToZoneSettingClientIpHeaderOutput() ZoneSettingClientIpHeaderOutput {
	return i.ToZoneSettingClientIpHeaderOutputWithContext(context.Background())
}

func (i ZoneSettingClientIpHeaderArgs) ToZoneSettingClientIpHeaderOutputWithContext(ctx context.Context) ZoneSettingClientIpHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingClientIpHeaderOutput)
}

func (i ZoneSettingClientIpHeaderArgs) ToZoneSettingClientIpHeaderPtrOutput() ZoneSettingClientIpHeaderPtrOutput {
	return i.ToZoneSettingClientIpHeaderPtrOutputWithContext(context.Background())
}

func (i ZoneSettingClientIpHeaderArgs) ToZoneSettingClientIpHeaderPtrOutputWithContext(ctx context.Context) ZoneSettingClientIpHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingClientIpHeaderOutput).ToZoneSettingClientIpHeaderPtrOutputWithContext(ctx)
}

// ZoneSettingClientIpHeaderPtrInput is an input type that accepts ZoneSettingClientIpHeaderArgs, ZoneSettingClientIpHeaderPtr and ZoneSettingClientIpHeaderPtrOutput values.
// You can construct a concrete instance of `ZoneSettingClientIpHeaderPtrInput` via:
//
//	        ZoneSettingClientIpHeaderArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingClientIpHeaderPtrInput interface {
	pulumi.Input

	ToZoneSettingClientIpHeaderPtrOutput() ZoneSettingClientIpHeaderPtrOutput
	ToZoneSettingClientIpHeaderPtrOutputWithContext(context.Context) ZoneSettingClientIpHeaderPtrOutput
}

type zoneSettingClientIpHeaderPtrType ZoneSettingClientIpHeaderArgs

func ZoneSettingClientIpHeaderPtr(v *ZoneSettingClientIpHeaderArgs) ZoneSettingClientIpHeaderPtrInput {
	return (*zoneSettingClientIpHeaderPtrType)(v)
}

func (*zoneSettingClientIpHeaderPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingClientIpHeader)(nil)).Elem()
}

func (i *zoneSettingClientIpHeaderPtrType) ToZoneSettingClientIpHeaderPtrOutput() ZoneSettingClientIpHeaderPtrOutput {
	return i.ToZoneSettingClientIpHeaderPtrOutputWithContext(context.Background())
}

func (i *zoneSettingClientIpHeaderPtrType) ToZoneSettingClientIpHeaderPtrOutputWithContext(ctx context.Context) ZoneSettingClientIpHeaderPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingClientIpHeaderPtrOutput)
}

type ZoneSettingClientIpHeaderOutput struct{ *pulumi.OutputState }

func (ZoneSettingClientIpHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingClientIpHeader)(nil)).Elem()
}

func (o ZoneSettingClientIpHeaderOutput) ToZoneSettingClientIpHeaderOutput() ZoneSettingClientIpHeaderOutput {
	return o
}

func (o ZoneSettingClientIpHeaderOutput) ToZoneSettingClientIpHeaderOutputWithContext(ctx context.Context) ZoneSettingClientIpHeaderOutput {
	return o
}

func (o ZoneSettingClientIpHeaderOutput) ToZoneSettingClientIpHeaderPtrOutput() ZoneSettingClientIpHeaderPtrOutput {
	return o.ToZoneSettingClientIpHeaderPtrOutputWithContext(context.Background())
}

func (o ZoneSettingClientIpHeaderOutput) ToZoneSettingClientIpHeaderPtrOutputWithContext(ctx context.Context) ZoneSettingClientIpHeaderPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingClientIpHeader) *ZoneSettingClientIpHeader {
		return &v
	}).(ZoneSettingClientIpHeaderPtrOutput)
}

func (o ZoneSettingClientIpHeaderOutput) HeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingClientIpHeader) *string { return v.HeaderName }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingClientIpHeaderOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingClientIpHeader) string { return v.Switch }).(pulumi.StringOutput)
}

type ZoneSettingClientIpHeaderPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingClientIpHeaderPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingClientIpHeader)(nil)).Elem()
}

func (o ZoneSettingClientIpHeaderPtrOutput) ToZoneSettingClientIpHeaderPtrOutput() ZoneSettingClientIpHeaderPtrOutput {
	return o
}

func (o ZoneSettingClientIpHeaderPtrOutput) ToZoneSettingClientIpHeaderPtrOutputWithContext(ctx context.Context) ZoneSettingClientIpHeaderPtrOutput {
	return o
}

func (o ZoneSettingClientIpHeaderPtrOutput) Elem() ZoneSettingClientIpHeaderOutput {
	return o.ApplyT(func(v *ZoneSettingClientIpHeader) ZoneSettingClientIpHeader {
		if v != nil {
			return *v
		}
		var ret ZoneSettingClientIpHeader
		return ret
	}).(ZoneSettingClientIpHeaderOutput)
}

func (o ZoneSettingClientIpHeaderPtrOutput) HeaderName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingClientIpHeader) *string {
		if v == nil {
			return nil
		}
		return v.HeaderName
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingClientIpHeaderPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingClientIpHeader) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingCompression struct {
	Algorithms []string `pulumi:"algorithms"`
	Switch     string   `pulumi:"switch"`
}

// ZoneSettingCompressionInput is an input type that accepts ZoneSettingCompressionArgs and ZoneSettingCompressionOutput values.
// You can construct a concrete instance of `ZoneSettingCompressionInput` via:
//
//	ZoneSettingCompressionArgs{...}
type ZoneSettingCompressionInput interface {
	pulumi.Input

	ToZoneSettingCompressionOutput() ZoneSettingCompressionOutput
	ToZoneSettingCompressionOutputWithContext(context.Context) ZoneSettingCompressionOutput
}

type ZoneSettingCompressionArgs struct {
	Algorithms pulumi.StringArrayInput `pulumi:"algorithms"`
	Switch     pulumi.StringInput      `pulumi:"switch"`
}

func (ZoneSettingCompressionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCompression)(nil)).Elem()
}

func (i ZoneSettingCompressionArgs) ToZoneSettingCompressionOutput() ZoneSettingCompressionOutput {
	return i.ToZoneSettingCompressionOutputWithContext(context.Background())
}

func (i ZoneSettingCompressionArgs) ToZoneSettingCompressionOutputWithContext(ctx context.Context) ZoneSettingCompressionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCompressionOutput)
}

func (i ZoneSettingCompressionArgs) ToZoneSettingCompressionPtrOutput() ZoneSettingCompressionPtrOutput {
	return i.ToZoneSettingCompressionPtrOutputWithContext(context.Background())
}

func (i ZoneSettingCompressionArgs) ToZoneSettingCompressionPtrOutputWithContext(ctx context.Context) ZoneSettingCompressionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCompressionOutput).ToZoneSettingCompressionPtrOutputWithContext(ctx)
}

// ZoneSettingCompressionPtrInput is an input type that accepts ZoneSettingCompressionArgs, ZoneSettingCompressionPtr and ZoneSettingCompressionPtrOutput values.
// You can construct a concrete instance of `ZoneSettingCompressionPtrInput` via:
//
//	        ZoneSettingCompressionArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingCompressionPtrInput interface {
	pulumi.Input

	ToZoneSettingCompressionPtrOutput() ZoneSettingCompressionPtrOutput
	ToZoneSettingCompressionPtrOutputWithContext(context.Context) ZoneSettingCompressionPtrOutput
}

type zoneSettingCompressionPtrType ZoneSettingCompressionArgs

func ZoneSettingCompressionPtr(v *ZoneSettingCompressionArgs) ZoneSettingCompressionPtrInput {
	return (*zoneSettingCompressionPtrType)(v)
}

func (*zoneSettingCompressionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCompression)(nil)).Elem()
}

func (i *zoneSettingCompressionPtrType) ToZoneSettingCompressionPtrOutput() ZoneSettingCompressionPtrOutput {
	return i.ToZoneSettingCompressionPtrOutputWithContext(context.Background())
}

func (i *zoneSettingCompressionPtrType) ToZoneSettingCompressionPtrOutputWithContext(ctx context.Context) ZoneSettingCompressionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingCompressionPtrOutput)
}

type ZoneSettingCompressionOutput struct{ *pulumi.OutputState }

func (ZoneSettingCompressionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingCompression)(nil)).Elem()
}

func (o ZoneSettingCompressionOutput) ToZoneSettingCompressionOutput() ZoneSettingCompressionOutput {
	return o
}

func (o ZoneSettingCompressionOutput) ToZoneSettingCompressionOutputWithContext(ctx context.Context) ZoneSettingCompressionOutput {
	return o
}

func (o ZoneSettingCompressionOutput) ToZoneSettingCompressionPtrOutput() ZoneSettingCompressionPtrOutput {
	return o.ToZoneSettingCompressionPtrOutputWithContext(context.Background())
}

func (o ZoneSettingCompressionOutput) ToZoneSettingCompressionPtrOutputWithContext(ctx context.Context) ZoneSettingCompressionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingCompression) *ZoneSettingCompression {
		return &v
	}).(ZoneSettingCompressionPtrOutput)
}

func (o ZoneSettingCompressionOutput) Algorithms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZoneSettingCompression) []string { return v.Algorithms }).(pulumi.StringArrayOutput)
}

func (o ZoneSettingCompressionOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingCompression) string { return v.Switch }).(pulumi.StringOutput)
}

type ZoneSettingCompressionPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingCompressionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingCompression)(nil)).Elem()
}

func (o ZoneSettingCompressionPtrOutput) ToZoneSettingCompressionPtrOutput() ZoneSettingCompressionPtrOutput {
	return o
}

func (o ZoneSettingCompressionPtrOutput) ToZoneSettingCompressionPtrOutputWithContext(ctx context.Context) ZoneSettingCompressionPtrOutput {
	return o
}

func (o ZoneSettingCompressionPtrOutput) Elem() ZoneSettingCompressionOutput {
	return o.ApplyT(func(v *ZoneSettingCompression) ZoneSettingCompression {
		if v != nil {
			return *v
		}
		var ret ZoneSettingCompression
		return ret
	}).(ZoneSettingCompressionOutput)
}

func (o ZoneSettingCompressionPtrOutput) Algorithms() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ZoneSettingCompression) []string {
		if v == nil {
			return nil
		}
		return v.Algorithms
	}).(pulumi.StringArrayOutput)
}

func (o ZoneSettingCompressionPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingCompression) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingForceRedirect struct {
	RedirectStatusCode *int   `pulumi:"redirectStatusCode"`
	Switch             string `pulumi:"switch"`
}

// ZoneSettingForceRedirectInput is an input type that accepts ZoneSettingForceRedirectArgs and ZoneSettingForceRedirectOutput values.
// You can construct a concrete instance of `ZoneSettingForceRedirectInput` via:
//
//	ZoneSettingForceRedirectArgs{...}
type ZoneSettingForceRedirectInput interface {
	pulumi.Input

	ToZoneSettingForceRedirectOutput() ZoneSettingForceRedirectOutput
	ToZoneSettingForceRedirectOutputWithContext(context.Context) ZoneSettingForceRedirectOutput
}

type ZoneSettingForceRedirectArgs struct {
	RedirectStatusCode pulumi.IntPtrInput `pulumi:"redirectStatusCode"`
	Switch             pulumi.StringInput `pulumi:"switch"`
}

func (ZoneSettingForceRedirectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingForceRedirect)(nil)).Elem()
}

func (i ZoneSettingForceRedirectArgs) ToZoneSettingForceRedirectOutput() ZoneSettingForceRedirectOutput {
	return i.ToZoneSettingForceRedirectOutputWithContext(context.Background())
}

func (i ZoneSettingForceRedirectArgs) ToZoneSettingForceRedirectOutputWithContext(ctx context.Context) ZoneSettingForceRedirectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingForceRedirectOutput)
}

func (i ZoneSettingForceRedirectArgs) ToZoneSettingForceRedirectPtrOutput() ZoneSettingForceRedirectPtrOutput {
	return i.ToZoneSettingForceRedirectPtrOutputWithContext(context.Background())
}

func (i ZoneSettingForceRedirectArgs) ToZoneSettingForceRedirectPtrOutputWithContext(ctx context.Context) ZoneSettingForceRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingForceRedirectOutput).ToZoneSettingForceRedirectPtrOutputWithContext(ctx)
}

// ZoneSettingForceRedirectPtrInput is an input type that accepts ZoneSettingForceRedirectArgs, ZoneSettingForceRedirectPtr and ZoneSettingForceRedirectPtrOutput values.
// You can construct a concrete instance of `ZoneSettingForceRedirectPtrInput` via:
//
//	        ZoneSettingForceRedirectArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingForceRedirectPtrInput interface {
	pulumi.Input

	ToZoneSettingForceRedirectPtrOutput() ZoneSettingForceRedirectPtrOutput
	ToZoneSettingForceRedirectPtrOutputWithContext(context.Context) ZoneSettingForceRedirectPtrOutput
}

type zoneSettingForceRedirectPtrType ZoneSettingForceRedirectArgs

func ZoneSettingForceRedirectPtr(v *ZoneSettingForceRedirectArgs) ZoneSettingForceRedirectPtrInput {
	return (*zoneSettingForceRedirectPtrType)(v)
}

func (*zoneSettingForceRedirectPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingForceRedirect)(nil)).Elem()
}

func (i *zoneSettingForceRedirectPtrType) ToZoneSettingForceRedirectPtrOutput() ZoneSettingForceRedirectPtrOutput {
	return i.ToZoneSettingForceRedirectPtrOutputWithContext(context.Background())
}

func (i *zoneSettingForceRedirectPtrType) ToZoneSettingForceRedirectPtrOutputWithContext(ctx context.Context) ZoneSettingForceRedirectPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingForceRedirectPtrOutput)
}

type ZoneSettingForceRedirectOutput struct{ *pulumi.OutputState }

func (ZoneSettingForceRedirectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingForceRedirect)(nil)).Elem()
}

func (o ZoneSettingForceRedirectOutput) ToZoneSettingForceRedirectOutput() ZoneSettingForceRedirectOutput {
	return o
}

func (o ZoneSettingForceRedirectOutput) ToZoneSettingForceRedirectOutputWithContext(ctx context.Context) ZoneSettingForceRedirectOutput {
	return o
}

func (o ZoneSettingForceRedirectOutput) ToZoneSettingForceRedirectPtrOutput() ZoneSettingForceRedirectPtrOutput {
	return o.ToZoneSettingForceRedirectPtrOutputWithContext(context.Background())
}

func (o ZoneSettingForceRedirectOutput) ToZoneSettingForceRedirectPtrOutputWithContext(ctx context.Context) ZoneSettingForceRedirectPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingForceRedirect) *ZoneSettingForceRedirect {
		return &v
	}).(ZoneSettingForceRedirectPtrOutput)
}

func (o ZoneSettingForceRedirectOutput) RedirectStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneSettingForceRedirect) *int { return v.RedirectStatusCode }).(pulumi.IntPtrOutput)
}

func (o ZoneSettingForceRedirectOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingForceRedirect) string { return v.Switch }).(pulumi.StringOutput)
}

type ZoneSettingForceRedirectPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingForceRedirectPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingForceRedirect)(nil)).Elem()
}

func (o ZoneSettingForceRedirectPtrOutput) ToZoneSettingForceRedirectPtrOutput() ZoneSettingForceRedirectPtrOutput {
	return o
}

func (o ZoneSettingForceRedirectPtrOutput) ToZoneSettingForceRedirectPtrOutputWithContext(ctx context.Context) ZoneSettingForceRedirectPtrOutput {
	return o
}

func (o ZoneSettingForceRedirectPtrOutput) Elem() ZoneSettingForceRedirectOutput {
	return o.ApplyT(func(v *ZoneSettingForceRedirect) ZoneSettingForceRedirect {
		if v != nil {
			return *v
		}
		var ret ZoneSettingForceRedirect
		return ret
	}).(ZoneSettingForceRedirectOutput)
}

func (o ZoneSettingForceRedirectPtrOutput) RedirectStatusCode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZoneSettingForceRedirect) *int {
		if v == nil {
			return nil
		}
		return v.RedirectStatusCode
	}).(pulumi.IntPtrOutput)
}

func (o ZoneSettingForceRedirectPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingForceRedirect) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingHttps struct {
	Hsts         *ZoneSettingHttpsHsts `pulumi:"hsts"`
	Http2        *string               `pulumi:"http2"`
	OcspStapling *string               `pulumi:"ocspStapling"`
	TlsVersions  []string              `pulumi:"tlsVersions"`
}

// ZoneSettingHttpsInput is an input type that accepts ZoneSettingHttpsArgs and ZoneSettingHttpsOutput values.
// You can construct a concrete instance of `ZoneSettingHttpsInput` via:
//
//	ZoneSettingHttpsArgs{...}
type ZoneSettingHttpsInput interface {
	pulumi.Input

	ToZoneSettingHttpsOutput() ZoneSettingHttpsOutput
	ToZoneSettingHttpsOutputWithContext(context.Context) ZoneSettingHttpsOutput
}

type ZoneSettingHttpsArgs struct {
	Hsts         ZoneSettingHttpsHstsPtrInput `pulumi:"hsts"`
	Http2        pulumi.StringPtrInput        `pulumi:"http2"`
	OcspStapling pulumi.StringPtrInput        `pulumi:"ocspStapling"`
	TlsVersions  pulumi.StringArrayInput      `pulumi:"tlsVersions"`
}

func (ZoneSettingHttpsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingHttps)(nil)).Elem()
}

func (i ZoneSettingHttpsArgs) ToZoneSettingHttpsOutput() ZoneSettingHttpsOutput {
	return i.ToZoneSettingHttpsOutputWithContext(context.Background())
}

func (i ZoneSettingHttpsArgs) ToZoneSettingHttpsOutputWithContext(ctx context.Context) ZoneSettingHttpsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingHttpsOutput)
}

func (i ZoneSettingHttpsArgs) ToZoneSettingHttpsPtrOutput() ZoneSettingHttpsPtrOutput {
	return i.ToZoneSettingHttpsPtrOutputWithContext(context.Background())
}

func (i ZoneSettingHttpsArgs) ToZoneSettingHttpsPtrOutputWithContext(ctx context.Context) ZoneSettingHttpsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingHttpsOutput).ToZoneSettingHttpsPtrOutputWithContext(ctx)
}

// ZoneSettingHttpsPtrInput is an input type that accepts ZoneSettingHttpsArgs, ZoneSettingHttpsPtr and ZoneSettingHttpsPtrOutput values.
// You can construct a concrete instance of `ZoneSettingHttpsPtrInput` via:
//
//	        ZoneSettingHttpsArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingHttpsPtrInput interface {
	pulumi.Input

	ToZoneSettingHttpsPtrOutput() ZoneSettingHttpsPtrOutput
	ToZoneSettingHttpsPtrOutputWithContext(context.Context) ZoneSettingHttpsPtrOutput
}

type zoneSettingHttpsPtrType ZoneSettingHttpsArgs

func ZoneSettingHttpsPtr(v *ZoneSettingHttpsArgs) ZoneSettingHttpsPtrInput {
	return (*zoneSettingHttpsPtrType)(v)
}

func (*zoneSettingHttpsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingHttps)(nil)).Elem()
}

func (i *zoneSettingHttpsPtrType) ToZoneSettingHttpsPtrOutput() ZoneSettingHttpsPtrOutput {
	return i.ToZoneSettingHttpsPtrOutputWithContext(context.Background())
}

func (i *zoneSettingHttpsPtrType) ToZoneSettingHttpsPtrOutputWithContext(ctx context.Context) ZoneSettingHttpsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingHttpsPtrOutput)
}

type ZoneSettingHttpsOutput struct{ *pulumi.OutputState }

func (ZoneSettingHttpsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingHttps)(nil)).Elem()
}

func (o ZoneSettingHttpsOutput) ToZoneSettingHttpsOutput() ZoneSettingHttpsOutput {
	return o
}

func (o ZoneSettingHttpsOutput) ToZoneSettingHttpsOutputWithContext(ctx context.Context) ZoneSettingHttpsOutput {
	return o
}

func (o ZoneSettingHttpsOutput) ToZoneSettingHttpsPtrOutput() ZoneSettingHttpsPtrOutput {
	return o.ToZoneSettingHttpsPtrOutputWithContext(context.Background())
}

func (o ZoneSettingHttpsOutput) ToZoneSettingHttpsPtrOutputWithContext(ctx context.Context) ZoneSettingHttpsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingHttps) *ZoneSettingHttps {
		return &v
	}).(ZoneSettingHttpsPtrOutput)
}

func (o ZoneSettingHttpsOutput) Hsts() ZoneSettingHttpsHstsPtrOutput {
	return o.ApplyT(func(v ZoneSettingHttps) *ZoneSettingHttpsHsts { return v.Hsts }).(ZoneSettingHttpsHstsPtrOutput)
}

func (o ZoneSettingHttpsOutput) Http2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingHttps) *string { return v.Http2 }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingHttpsOutput) OcspStapling() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingHttps) *string { return v.OcspStapling }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingHttpsOutput) TlsVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZoneSettingHttps) []string { return v.TlsVersions }).(pulumi.StringArrayOutput)
}

type ZoneSettingHttpsPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingHttpsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingHttps)(nil)).Elem()
}

func (o ZoneSettingHttpsPtrOutput) ToZoneSettingHttpsPtrOutput() ZoneSettingHttpsPtrOutput {
	return o
}

func (o ZoneSettingHttpsPtrOutput) ToZoneSettingHttpsPtrOutputWithContext(ctx context.Context) ZoneSettingHttpsPtrOutput {
	return o
}

func (o ZoneSettingHttpsPtrOutput) Elem() ZoneSettingHttpsOutput {
	return o.ApplyT(func(v *ZoneSettingHttps) ZoneSettingHttps {
		if v != nil {
			return *v
		}
		var ret ZoneSettingHttps
		return ret
	}).(ZoneSettingHttpsOutput)
}

func (o ZoneSettingHttpsPtrOutput) Hsts() ZoneSettingHttpsHstsPtrOutput {
	return o.ApplyT(func(v *ZoneSettingHttps) *ZoneSettingHttpsHsts {
		if v == nil {
			return nil
		}
		return v.Hsts
	}).(ZoneSettingHttpsHstsPtrOutput)
}

func (o ZoneSettingHttpsPtrOutput) Http2() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingHttps) *string {
		if v == nil {
			return nil
		}
		return v.Http2
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingHttpsPtrOutput) OcspStapling() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingHttps) *string {
		if v == nil {
			return nil
		}
		return v.OcspStapling
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingHttpsPtrOutput) TlsVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ZoneSettingHttps) []string {
		if v == nil {
			return nil
		}
		return v.TlsVersions
	}).(pulumi.StringArrayOutput)
}

type ZoneSettingHttpsHsts struct {
	IncludeSubDomains *string `pulumi:"includeSubDomains"`
	MaxAge            *int    `pulumi:"maxAge"`
	Preload           *string `pulumi:"preload"`
	Switch            string  `pulumi:"switch"`
}

// ZoneSettingHttpsHstsInput is an input type that accepts ZoneSettingHttpsHstsArgs and ZoneSettingHttpsHstsOutput values.
// You can construct a concrete instance of `ZoneSettingHttpsHstsInput` via:
//
//	ZoneSettingHttpsHstsArgs{...}
type ZoneSettingHttpsHstsInput interface {
	pulumi.Input

	ToZoneSettingHttpsHstsOutput() ZoneSettingHttpsHstsOutput
	ToZoneSettingHttpsHstsOutputWithContext(context.Context) ZoneSettingHttpsHstsOutput
}

type ZoneSettingHttpsHstsArgs struct {
	IncludeSubDomains pulumi.StringPtrInput `pulumi:"includeSubDomains"`
	MaxAge            pulumi.IntPtrInput    `pulumi:"maxAge"`
	Preload           pulumi.StringPtrInput `pulumi:"preload"`
	Switch            pulumi.StringInput    `pulumi:"switch"`
}

func (ZoneSettingHttpsHstsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingHttpsHsts)(nil)).Elem()
}

func (i ZoneSettingHttpsHstsArgs) ToZoneSettingHttpsHstsOutput() ZoneSettingHttpsHstsOutput {
	return i.ToZoneSettingHttpsHstsOutputWithContext(context.Background())
}

func (i ZoneSettingHttpsHstsArgs) ToZoneSettingHttpsHstsOutputWithContext(ctx context.Context) ZoneSettingHttpsHstsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingHttpsHstsOutput)
}

func (i ZoneSettingHttpsHstsArgs) ToZoneSettingHttpsHstsPtrOutput() ZoneSettingHttpsHstsPtrOutput {
	return i.ToZoneSettingHttpsHstsPtrOutputWithContext(context.Background())
}

func (i ZoneSettingHttpsHstsArgs) ToZoneSettingHttpsHstsPtrOutputWithContext(ctx context.Context) ZoneSettingHttpsHstsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingHttpsHstsOutput).ToZoneSettingHttpsHstsPtrOutputWithContext(ctx)
}

// ZoneSettingHttpsHstsPtrInput is an input type that accepts ZoneSettingHttpsHstsArgs, ZoneSettingHttpsHstsPtr and ZoneSettingHttpsHstsPtrOutput values.
// You can construct a concrete instance of `ZoneSettingHttpsHstsPtrInput` via:
//
//	        ZoneSettingHttpsHstsArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingHttpsHstsPtrInput interface {
	pulumi.Input

	ToZoneSettingHttpsHstsPtrOutput() ZoneSettingHttpsHstsPtrOutput
	ToZoneSettingHttpsHstsPtrOutputWithContext(context.Context) ZoneSettingHttpsHstsPtrOutput
}

type zoneSettingHttpsHstsPtrType ZoneSettingHttpsHstsArgs

func ZoneSettingHttpsHstsPtr(v *ZoneSettingHttpsHstsArgs) ZoneSettingHttpsHstsPtrInput {
	return (*zoneSettingHttpsHstsPtrType)(v)
}

func (*zoneSettingHttpsHstsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingHttpsHsts)(nil)).Elem()
}

func (i *zoneSettingHttpsHstsPtrType) ToZoneSettingHttpsHstsPtrOutput() ZoneSettingHttpsHstsPtrOutput {
	return i.ToZoneSettingHttpsHstsPtrOutputWithContext(context.Background())
}

func (i *zoneSettingHttpsHstsPtrType) ToZoneSettingHttpsHstsPtrOutputWithContext(ctx context.Context) ZoneSettingHttpsHstsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingHttpsHstsPtrOutput)
}

type ZoneSettingHttpsHstsOutput struct{ *pulumi.OutputState }

func (ZoneSettingHttpsHstsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingHttpsHsts)(nil)).Elem()
}

func (o ZoneSettingHttpsHstsOutput) ToZoneSettingHttpsHstsOutput() ZoneSettingHttpsHstsOutput {
	return o
}

func (o ZoneSettingHttpsHstsOutput) ToZoneSettingHttpsHstsOutputWithContext(ctx context.Context) ZoneSettingHttpsHstsOutput {
	return o
}

func (o ZoneSettingHttpsHstsOutput) ToZoneSettingHttpsHstsPtrOutput() ZoneSettingHttpsHstsPtrOutput {
	return o.ToZoneSettingHttpsHstsPtrOutputWithContext(context.Background())
}

func (o ZoneSettingHttpsHstsOutput) ToZoneSettingHttpsHstsPtrOutputWithContext(ctx context.Context) ZoneSettingHttpsHstsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingHttpsHsts) *ZoneSettingHttpsHsts {
		return &v
	}).(ZoneSettingHttpsHstsPtrOutput)
}

func (o ZoneSettingHttpsHstsOutput) IncludeSubDomains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingHttpsHsts) *string { return v.IncludeSubDomains }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingHttpsHstsOutput) MaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneSettingHttpsHsts) *int { return v.MaxAge }).(pulumi.IntPtrOutput)
}

func (o ZoneSettingHttpsHstsOutput) Preload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingHttpsHsts) *string { return v.Preload }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingHttpsHstsOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingHttpsHsts) string { return v.Switch }).(pulumi.StringOutput)
}

type ZoneSettingHttpsHstsPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingHttpsHstsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingHttpsHsts)(nil)).Elem()
}

func (o ZoneSettingHttpsHstsPtrOutput) ToZoneSettingHttpsHstsPtrOutput() ZoneSettingHttpsHstsPtrOutput {
	return o
}

func (o ZoneSettingHttpsHstsPtrOutput) ToZoneSettingHttpsHstsPtrOutputWithContext(ctx context.Context) ZoneSettingHttpsHstsPtrOutput {
	return o
}

func (o ZoneSettingHttpsHstsPtrOutput) Elem() ZoneSettingHttpsHstsOutput {
	return o.ApplyT(func(v *ZoneSettingHttpsHsts) ZoneSettingHttpsHsts {
		if v != nil {
			return *v
		}
		var ret ZoneSettingHttpsHsts
		return ret
	}).(ZoneSettingHttpsHstsOutput)
}

func (o ZoneSettingHttpsHstsPtrOutput) IncludeSubDomains() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingHttpsHsts) *string {
		if v == nil {
			return nil
		}
		return v.IncludeSubDomains
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingHttpsHstsPtrOutput) MaxAge() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZoneSettingHttpsHsts) *int {
		if v == nil {
			return nil
		}
		return v.MaxAge
	}).(pulumi.IntPtrOutput)
}

func (o ZoneSettingHttpsHstsPtrOutput) Preload() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingHttpsHsts) *string {
		if v == nil {
			return nil
		}
		return v.Preload
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingHttpsHstsPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingHttpsHsts) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingIpv6 struct {
	Switch string `pulumi:"switch"`
}

// ZoneSettingIpv6Input is an input type that accepts ZoneSettingIpv6Args and ZoneSettingIpv6Output values.
// You can construct a concrete instance of `ZoneSettingIpv6Input` via:
//
//	ZoneSettingIpv6Args{...}
type ZoneSettingIpv6Input interface {
	pulumi.Input

	ToZoneSettingIpv6Output() ZoneSettingIpv6Output
	ToZoneSettingIpv6OutputWithContext(context.Context) ZoneSettingIpv6Output
}

type ZoneSettingIpv6Args struct {
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (ZoneSettingIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingIpv6)(nil)).Elem()
}

func (i ZoneSettingIpv6Args) ToZoneSettingIpv6Output() ZoneSettingIpv6Output {
	return i.ToZoneSettingIpv6OutputWithContext(context.Background())
}

func (i ZoneSettingIpv6Args) ToZoneSettingIpv6OutputWithContext(ctx context.Context) ZoneSettingIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingIpv6Output)
}

func (i ZoneSettingIpv6Args) ToZoneSettingIpv6PtrOutput() ZoneSettingIpv6PtrOutput {
	return i.ToZoneSettingIpv6PtrOutputWithContext(context.Background())
}

func (i ZoneSettingIpv6Args) ToZoneSettingIpv6PtrOutputWithContext(ctx context.Context) ZoneSettingIpv6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingIpv6Output).ToZoneSettingIpv6PtrOutputWithContext(ctx)
}

// ZoneSettingIpv6PtrInput is an input type that accepts ZoneSettingIpv6Args, ZoneSettingIpv6Ptr and ZoneSettingIpv6PtrOutput values.
// You can construct a concrete instance of `ZoneSettingIpv6PtrInput` via:
//
//	        ZoneSettingIpv6Args{...}
//
//	or:
//
//	        nil
type ZoneSettingIpv6PtrInput interface {
	pulumi.Input

	ToZoneSettingIpv6PtrOutput() ZoneSettingIpv6PtrOutput
	ToZoneSettingIpv6PtrOutputWithContext(context.Context) ZoneSettingIpv6PtrOutput
}

type zoneSettingIpv6PtrType ZoneSettingIpv6Args

func ZoneSettingIpv6Ptr(v *ZoneSettingIpv6Args) ZoneSettingIpv6PtrInput {
	return (*zoneSettingIpv6PtrType)(v)
}

func (*zoneSettingIpv6PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingIpv6)(nil)).Elem()
}

func (i *zoneSettingIpv6PtrType) ToZoneSettingIpv6PtrOutput() ZoneSettingIpv6PtrOutput {
	return i.ToZoneSettingIpv6PtrOutputWithContext(context.Background())
}

func (i *zoneSettingIpv6PtrType) ToZoneSettingIpv6PtrOutputWithContext(ctx context.Context) ZoneSettingIpv6PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingIpv6PtrOutput)
}

type ZoneSettingIpv6Output struct{ *pulumi.OutputState }

func (ZoneSettingIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingIpv6)(nil)).Elem()
}

func (o ZoneSettingIpv6Output) ToZoneSettingIpv6Output() ZoneSettingIpv6Output {
	return o
}

func (o ZoneSettingIpv6Output) ToZoneSettingIpv6OutputWithContext(ctx context.Context) ZoneSettingIpv6Output {
	return o
}

func (o ZoneSettingIpv6Output) ToZoneSettingIpv6PtrOutput() ZoneSettingIpv6PtrOutput {
	return o.ToZoneSettingIpv6PtrOutputWithContext(context.Background())
}

func (o ZoneSettingIpv6Output) ToZoneSettingIpv6PtrOutputWithContext(ctx context.Context) ZoneSettingIpv6PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingIpv6) *ZoneSettingIpv6 {
		return &v
	}).(ZoneSettingIpv6PtrOutput)
}

func (o ZoneSettingIpv6Output) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingIpv6) string { return v.Switch }).(pulumi.StringOutput)
}

type ZoneSettingIpv6PtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingIpv6PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingIpv6)(nil)).Elem()
}

func (o ZoneSettingIpv6PtrOutput) ToZoneSettingIpv6PtrOutput() ZoneSettingIpv6PtrOutput {
	return o
}

func (o ZoneSettingIpv6PtrOutput) ToZoneSettingIpv6PtrOutputWithContext(ctx context.Context) ZoneSettingIpv6PtrOutput {
	return o
}

func (o ZoneSettingIpv6PtrOutput) Elem() ZoneSettingIpv6Output {
	return o.ApplyT(func(v *ZoneSettingIpv6) ZoneSettingIpv6 {
		if v != nil {
			return *v
		}
		var ret ZoneSettingIpv6
		return ret
	}).(ZoneSettingIpv6Output)
}

func (o ZoneSettingIpv6PtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingIpv6) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingMaxAge struct {
	FollowOrigin *string `pulumi:"followOrigin"`
	MaxAgeTime   *int    `pulumi:"maxAgeTime"`
}

// ZoneSettingMaxAgeInput is an input type that accepts ZoneSettingMaxAgeArgs and ZoneSettingMaxAgeOutput values.
// You can construct a concrete instance of `ZoneSettingMaxAgeInput` via:
//
//	ZoneSettingMaxAgeArgs{...}
type ZoneSettingMaxAgeInput interface {
	pulumi.Input

	ToZoneSettingMaxAgeOutput() ZoneSettingMaxAgeOutput
	ToZoneSettingMaxAgeOutputWithContext(context.Context) ZoneSettingMaxAgeOutput
}

type ZoneSettingMaxAgeArgs struct {
	FollowOrigin pulumi.StringPtrInput `pulumi:"followOrigin"`
	MaxAgeTime   pulumi.IntPtrInput    `pulumi:"maxAgeTime"`
}

func (ZoneSettingMaxAgeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingMaxAge)(nil)).Elem()
}

func (i ZoneSettingMaxAgeArgs) ToZoneSettingMaxAgeOutput() ZoneSettingMaxAgeOutput {
	return i.ToZoneSettingMaxAgeOutputWithContext(context.Background())
}

func (i ZoneSettingMaxAgeArgs) ToZoneSettingMaxAgeOutputWithContext(ctx context.Context) ZoneSettingMaxAgeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingMaxAgeOutput)
}

func (i ZoneSettingMaxAgeArgs) ToZoneSettingMaxAgePtrOutput() ZoneSettingMaxAgePtrOutput {
	return i.ToZoneSettingMaxAgePtrOutputWithContext(context.Background())
}

func (i ZoneSettingMaxAgeArgs) ToZoneSettingMaxAgePtrOutputWithContext(ctx context.Context) ZoneSettingMaxAgePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingMaxAgeOutput).ToZoneSettingMaxAgePtrOutputWithContext(ctx)
}

// ZoneSettingMaxAgePtrInput is an input type that accepts ZoneSettingMaxAgeArgs, ZoneSettingMaxAgePtr and ZoneSettingMaxAgePtrOutput values.
// You can construct a concrete instance of `ZoneSettingMaxAgePtrInput` via:
//
//	        ZoneSettingMaxAgeArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingMaxAgePtrInput interface {
	pulumi.Input

	ToZoneSettingMaxAgePtrOutput() ZoneSettingMaxAgePtrOutput
	ToZoneSettingMaxAgePtrOutputWithContext(context.Context) ZoneSettingMaxAgePtrOutput
}

type zoneSettingMaxAgePtrType ZoneSettingMaxAgeArgs

func ZoneSettingMaxAgePtr(v *ZoneSettingMaxAgeArgs) ZoneSettingMaxAgePtrInput {
	return (*zoneSettingMaxAgePtrType)(v)
}

func (*zoneSettingMaxAgePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingMaxAge)(nil)).Elem()
}

func (i *zoneSettingMaxAgePtrType) ToZoneSettingMaxAgePtrOutput() ZoneSettingMaxAgePtrOutput {
	return i.ToZoneSettingMaxAgePtrOutputWithContext(context.Background())
}

func (i *zoneSettingMaxAgePtrType) ToZoneSettingMaxAgePtrOutputWithContext(ctx context.Context) ZoneSettingMaxAgePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingMaxAgePtrOutput)
}

type ZoneSettingMaxAgeOutput struct{ *pulumi.OutputState }

func (ZoneSettingMaxAgeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingMaxAge)(nil)).Elem()
}

func (o ZoneSettingMaxAgeOutput) ToZoneSettingMaxAgeOutput() ZoneSettingMaxAgeOutput {
	return o
}

func (o ZoneSettingMaxAgeOutput) ToZoneSettingMaxAgeOutputWithContext(ctx context.Context) ZoneSettingMaxAgeOutput {
	return o
}

func (o ZoneSettingMaxAgeOutput) ToZoneSettingMaxAgePtrOutput() ZoneSettingMaxAgePtrOutput {
	return o.ToZoneSettingMaxAgePtrOutputWithContext(context.Background())
}

func (o ZoneSettingMaxAgeOutput) ToZoneSettingMaxAgePtrOutputWithContext(ctx context.Context) ZoneSettingMaxAgePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingMaxAge) *ZoneSettingMaxAge {
		return &v
	}).(ZoneSettingMaxAgePtrOutput)
}

func (o ZoneSettingMaxAgeOutput) FollowOrigin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingMaxAge) *string { return v.FollowOrigin }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingMaxAgeOutput) MaxAgeTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneSettingMaxAge) *int { return v.MaxAgeTime }).(pulumi.IntPtrOutput)
}

type ZoneSettingMaxAgePtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingMaxAgePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingMaxAge)(nil)).Elem()
}

func (o ZoneSettingMaxAgePtrOutput) ToZoneSettingMaxAgePtrOutput() ZoneSettingMaxAgePtrOutput {
	return o
}

func (o ZoneSettingMaxAgePtrOutput) ToZoneSettingMaxAgePtrOutputWithContext(ctx context.Context) ZoneSettingMaxAgePtrOutput {
	return o
}

func (o ZoneSettingMaxAgePtrOutput) Elem() ZoneSettingMaxAgeOutput {
	return o.ApplyT(func(v *ZoneSettingMaxAge) ZoneSettingMaxAge {
		if v != nil {
			return *v
		}
		var ret ZoneSettingMaxAge
		return ret
	}).(ZoneSettingMaxAgeOutput)
}

func (o ZoneSettingMaxAgePtrOutput) FollowOrigin() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingMaxAge) *string {
		if v == nil {
			return nil
		}
		return v.FollowOrigin
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingMaxAgePtrOutput) MaxAgeTime() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZoneSettingMaxAge) *int {
		if v == nil {
			return nil
		}
		return v.MaxAgeTime
	}).(pulumi.IntPtrOutput)
}

type ZoneSettingOfflineCache struct {
	Switch string `pulumi:"switch"`
}

// ZoneSettingOfflineCacheInput is an input type that accepts ZoneSettingOfflineCacheArgs and ZoneSettingOfflineCacheOutput values.
// You can construct a concrete instance of `ZoneSettingOfflineCacheInput` via:
//
//	ZoneSettingOfflineCacheArgs{...}
type ZoneSettingOfflineCacheInput interface {
	pulumi.Input

	ToZoneSettingOfflineCacheOutput() ZoneSettingOfflineCacheOutput
	ToZoneSettingOfflineCacheOutputWithContext(context.Context) ZoneSettingOfflineCacheOutput
}

type ZoneSettingOfflineCacheArgs struct {
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (ZoneSettingOfflineCacheArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingOfflineCache)(nil)).Elem()
}

func (i ZoneSettingOfflineCacheArgs) ToZoneSettingOfflineCacheOutput() ZoneSettingOfflineCacheOutput {
	return i.ToZoneSettingOfflineCacheOutputWithContext(context.Background())
}

func (i ZoneSettingOfflineCacheArgs) ToZoneSettingOfflineCacheOutputWithContext(ctx context.Context) ZoneSettingOfflineCacheOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingOfflineCacheOutput)
}

func (i ZoneSettingOfflineCacheArgs) ToZoneSettingOfflineCachePtrOutput() ZoneSettingOfflineCachePtrOutput {
	return i.ToZoneSettingOfflineCachePtrOutputWithContext(context.Background())
}

func (i ZoneSettingOfflineCacheArgs) ToZoneSettingOfflineCachePtrOutputWithContext(ctx context.Context) ZoneSettingOfflineCachePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingOfflineCacheOutput).ToZoneSettingOfflineCachePtrOutputWithContext(ctx)
}

// ZoneSettingOfflineCachePtrInput is an input type that accepts ZoneSettingOfflineCacheArgs, ZoneSettingOfflineCachePtr and ZoneSettingOfflineCachePtrOutput values.
// You can construct a concrete instance of `ZoneSettingOfflineCachePtrInput` via:
//
//	        ZoneSettingOfflineCacheArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingOfflineCachePtrInput interface {
	pulumi.Input

	ToZoneSettingOfflineCachePtrOutput() ZoneSettingOfflineCachePtrOutput
	ToZoneSettingOfflineCachePtrOutputWithContext(context.Context) ZoneSettingOfflineCachePtrOutput
}

type zoneSettingOfflineCachePtrType ZoneSettingOfflineCacheArgs

func ZoneSettingOfflineCachePtr(v *ZoneSettingOfflineCacheArgs) ZoneSettingOfflineCachePtrInput {
	return (*zoneSettingOfflineCachePtrType)(v)
}

func (*zoneSettingOfflineCachePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingOfflineCache)(nil)).Elem()
}

func (i *zoneSettingOfflineCachePtrType) ToZoneSettingOfflineCachePtrOutput() ZoneSettingOfflineCachePtrOutput {
	return i.ToZoneSettingOfflineCachePtrOutputWithContext(context.Background())
}

func (i *zoneSettingOfflineCachePtrType) ToZoneSettingOfflineCachePtrOutputWithContext(ctx context.Context) ZoneSettingOfflineCachePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingOfflineCachePtrOutput)
}

type ZoneSettingOfflineCacheOutput struct{ *pulumi.OutputState }

func (ZoneSettingOfflineCacheOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingOfflineCache)(nil)).Elem()
}

func (o ZoneSettingOfflineCacheOutput) ToZoneSettingOfflineCacheOutput() ZoneSettingOfflineCacheOutput {
	return o
}

func (o ZoneSettingOfflineCacheOutput) ToZoneSettingOfflineCacheOutputWithContext(ctx context.Context) ZoneSettingOfflineCacheOutput {
	return o
}

func (o ZoneSettingOfflineCacheOutput) ToZoneSettingOfflineCachePtrOutput() ZoneSettingOfflineCachePtrOutput {
	return o.ToZoneSettingOfflineCachePtrOutputWithContext(context.Background())
}

func (o ZoneSettingOfflineCacheOutput) ToZoneSettingOfflineCachePtrOutputWithContext(ctx context.Context) ZoneSettingOfflineCachePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingOfflineCache) *ZoneSettingOfflineCache {
		return &v
	}).(ZoneSettingOfflineCachePtrOutput)
}

func (o ZoneSettingOfflineCacheOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingOfflineCache) string { return v.Switch }).(pulumi.StringOutput)
}

type ZoneSettingOfflineCachePtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingOfflineCachePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingOfflineCache)(nil)).Elem()
}

func (o ZoneSettingOfflineCachePtrOutput) ToZoneSettingOfflineCachePtrOutput() ZoneSettingOfflineCachePtrOutput {
	return o
}

func (o ZoneSettingOfflineCachePtrOutput) ToZoneSettingOfflineCachePtrOutputWithContext(ctx context.Context) ZoneSettingOfflineCachePtrOutput {
	return o
}

func (o ZoneSettingOfflineCachePtrOutput) Elem() ZoneSettingOfflineCacheOutput {
	return o.ApplyT(func(v *ZoneSettingOfflineCache) ZoneSettingOfflineCache {
		if v != nil {
			return *v
		}
		var ret ZoneSettingOfflineCache
		return ret
	}).(ZoneSettingOfflineCacheOutput)
}

func (o ZoneSettingOfflineCachePtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingOfflineCache) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingOrigin struct {
	BackupOrigins      []string `pulumi:"backupOrigins"`
	CosPrivateAccess   *string  `pulumi:"cosPrivateAccess"`
	OriginPullProtocol *string  `pulumi:"originPullProtocol"`
	Origins            []string `pulumi:"origins"`
}

// ZoneSettingOriginInput is an input type that accepts ZoneSettingOriginArgs and ZoneSettingOriginOutput values.
// You can construct a concrete instance of `ZoneSettingOriginInput` via:
//
//	ZoneSettingOriginArgs{...}
type ZoneSettingOriginInput interface {
	pulumi.Input

	ToZoneSettingOriginOutput() ZoneSettingOriginOutput
	ToZoneSettingOriginOutputWithContext(context.Context) ZoneSettingOriginOutput
}

type ZoneSettingOriginArgs struct {
	BackupOrigins      pulumi.StringArrayInput `pulumi:"backupOrigins"`
	CosPrivateAccess   pulumi.StringPtrInput   `pulumi:"cosPrivateAccess"`
	OriginPullProtocol pulumi.StringPtrInput   `pulumi:"originPullProtocol"`
	Origins            pulumi.StringArrayInput `pulumi:"origins"`
}

func (ZoneSettingOriginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingOrigin)(nil)).Elem()
}

func (i ZoneSettingOriginArgs) ToZoneSettingOriginOutput() ZoneSettingOriginOutput {
	return i.ToZoneSettingOriginOutputWithContext(context.Background())
}

func (i ZoneSettingOriginArgs) ToZoneSettingOriginOutputWithContext(ctx context.Context) ZoneSettingOriginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingOriginOutput)
}

func (i ZoneSettingOriginArgs) ToZoneSettingOriginPtrOutput() ZoneSettingOriginPtrOutput {
	return i.ToZoneSettingOriginPtrOutputWithContext(context.Background())
}

func (i ZoneSettingOriginArgs) ToZoneSettingOriginPtrOutputWithContext(ctx context.Context) ZoneSettingOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingOriginOutput).ToZoneSettingOriginPtrOutputWithContext(ctx)
}

// ZoneSettingOriginPtrInput is an input type that accepts ZoneSettingOriginArgs, ZoneSettingOriginPtr and ZoneSettingOriginPtrOutput values.
// You can construct a concrete instance of `ZoneSettingOriginPtrInput` via:
//
//	        ZoneSettingOriginArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingOriginPtrInput interface {
	pulumi.Input

	ToZoneSettingOriginPtrOutput() ZoneSettingOriginPtrOutput
	ToZoneSettingOriginPtrOutputWithContext(context.Context) ZoneSettingOriginPtrOutput
}

type zoneSettingOriginPtrType ZoneSettingOriginArgs

func ZoneSettingOriginPtr(v *ZoneSettingOriginArgs) ZoneSettingOriginPtrInput {
	return (*zoneSettingOriginPtrType)(v)
}

func (*zoneSettingOriginPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingOrigin)(nil)).Elem()
}

func (i *zoneSettingOriginPtrType) ToZoneSettingOriginPtrOutput() ZoneSettingOriginPtrOutput {
	return i.ToZoneSettingOriginPtrOutputWithContext(context.Background())
}

func (i *zoneSettingOriginPtrType) ToZoneSettingOriginPtrOutputWithContext(ctx context.Context) ZoneSettingOriginPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingOriginPtrOutput)
}

type ZoneSettingOriginOutput struct{ *pulumi.OutputState }

func (ZoneSettingOriginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingOrigin)(nil)).Elem()
}

func (o ZoneSettingOriginOutput) ToZoneSettingOriginOutput() ZoneSettingOriginOutput {
	return o
}

func (o ZoneSettingOriginOutput) ToZoneSettingOriginOutputWithContext(ctx context.Context) ZoneSettingOriginOutput {
	return o
}

func (o ZoneSettingOriginOutput) ToZoneSettingOriginPtrOutput() ZoneSettingOriginPtrOutput {
	return o.ToZoneSettingOriginPtrOutputWithContext(context.Background())
}

func (o ZoneSettingOriginOutput) ToZoneSettingOriginPtrOutputWithContext(ctx context.Context) ZoneSettingOriginPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingOrigin) *ZoneSettingOrigin {
		return &v
	}).(ZoneSettingOriginPtrOutput)
}

func (o ZoneSettingOriginOutput) BackupOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZoneSettingOrigin) []string { return v.BackupOrigins }).(pulumi.StringArrayOutput)
}

func (o ZoneSettingOriginOutput) CosPrivateAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingOrigin) *string { return v.CosPrivateAccess }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingOriginOutput) OriginPullProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneSettingOrigin) *string { return v.OriginPullProtocol }).(pulumi.StringPtrOutput)
}

func (o ZoneSettingOriginOutput) Origins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZoneSettingOrigin) []string { return v.Origins }).(pulumi.StringArrayOutput)
}

type ZoneSettingOriginPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingOriginPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingOrigin)(nil)).Elem()
}

func (o ZoneSettingOriginPtrOutput) ToZoneSettingOriginPtrOutput() ZoneSettingOriginPtrOutput {
	return o
}

func (o ZoneSettingOriginPtrOutput) ToZoneSettingOriginPtrOutputWithContext(ctx context.Context) ZoneSettingOriginPtrOutput {
	return o
}

func (o ZoneSettingOriginPtrOutput) Elem() ZoneSettingOriginOutput {
	return o.ApplyT(func(v *ZoneSettingOrigin) ZoneSettingOrigin {
		if v != nil {
			return *v
		}
		var ret ZoneSettingOrigin
		return ret
	}).(ZoneSettingOriginOutput)
}

func (o ZoneSettingOriginPtrOutput) BackupOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ZoneSettingOrigin) []string {
		if v == nil {
			return nil
		}
		return v.BackupOrigins
	}).(pulumi.StringArrayOutput)
}

func (o ZoneSettingOriginPtrOutput) CosPrivateAccess() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingOrigin) *string {
		if v == nil {
			return nil
		}
		return v.CosPrivateAccess
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingOriginPtrOutput) OriginPullProtocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingOrigin) *string {
		if v == nil {
			return nil
		}
		return v.OriginPullProtocol
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingOriginPtrOutput) Origins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ZoneSettingOrigin) []string {
		if v == nil {
			return nil
		}
		return v.Origins
	}).(pulumi.StringArrayOutput)
}

type ZoneSettingPostMaxSize struct {
	MaxSize *int   `pulumi:"maxSize"`
	Switch  string `pulumi:"switch"`
}

// ZoneSettingPostMaxSizeInput is an input type that accepts ZoneSettingPostMaxSizeArgs and ZoneSettingPostMaxSizeOutput values.
// You can construct a concrete instance of `ZoneSettingPostMaxSizeInput` via:
//
//	ZoneSettingPostMaxSizeArgs{...}
type ZoneSettingPostMaxSizeInput interface {
	pulumi.Input

	ToZoneSettingPostMaxSizeOutput() ZoneSettingPostMaxSizeOutput
	ToZoneSettingPostMaxSizeOutputWithContext(context.Context) ZoneSettingPostMaxSizeOutput
}

type ZoneSettingPostMaxSizeArgs struct {
	MaxSize pulumi.IntPtrInput `pulumi:"maxSize"`
	Switch  pulumi.StringInput `pulumi:"switch"`
}

func (ZoneSettingPostMaxSizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingPostMaxSize)(nil)).Elem()
}

func (i ZoneSettingPostMaxSizeArgs) ToZoneSettingPostMaxSizeOutput() ZoneSettingPostMaxSizeOutput {
	return i.ToZoneSettingPostMaxSizeOutputWithContext(context.Background())
}

func (i ZoneSettingPostMaxSizeArgs) ToZoneSettingPostMaxSizeOutputWithContext(ctx context.Context) ZoneSettingPostMaxSizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingPostMaxSizeOutput)
}

func (i ZoneSettingPostMaxSizeArgs) ToZoneSettingPostMaxSizePtrOutput() ZoneSettingPostMaxSizePtrOutput {
	return i.ToZoneSettingPostMaxSizePtrOutputWithContext(context.Background())
}

func (i ZoneSettingPostMaxSizeArgs) ToZoneSettingPostMaxSizePtrOutputWithContext(ctx context.Context) ZoneSettingPostMaxSizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingPostMaxSizeOutput).ToZoneSettingPostMaxSizePtrOutputWithContext(ctx)
}

// ZoneSettingPostMaxSizePtrInput is an input type that accepts ZoneSettingPostMaxSizeArgs, ZoneSettingPostMaxSizePtr and ZoneSettingPostMaxSizePtrOutput values.
// You can construct a concrete instance of `ZoneSettingPostMaxSizePtrInput` via:
//
//	        ZoneSettingPostMaxSizeArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingPostMaxSizePtrInput interface {
	pulumi.Input

	ToZoneSettingPostMaxSizePtrOutput() ZoneSettingPostMaxSizePtrOutput
	ToZoneSettingPostMaxSizePtrOutputWithContext(context.Context) ZoneSettingPostMaxSizePtrOutput
}

type zoneSettingPostMaxSizePtrType ZoneSettingPostMaxSizeArgs

func ZoneSettingPostMaxSizePtr(v *ZoneSettingPostMaxSizeArgs) ZoneSettingPostMaxSizePtrInput {
	return (*zoneSettingPostMaxSizePtrType)(v)
}

func (*zoneSettingPostMaxSizePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingPostMaxSize)(nil)).Elem()
}

func (i *zoneSettingPostMaxSizePtrType) ToZoneSettingPostMaxSizePtrOutput() ZoneSettingPostMaxSizePtrOutput {
	return i.ToZoneSettingPostMaxSizePtrOutputWithContext(context.Background())
}

func (i *zoneSettingPostMaxSizePtrType) ToZoneSettingPostMaxSizePtrOutputWithContext(ctx context.Context) ZoneSettingPostMaxSizePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingPostMaxSizePtrOutput)
}

type ZoneSettingPostMaxSizeOutput struct{ *pulumi.OutputState }

func (ZoneSettingPostMaxSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingPostMaxSize)(nil)).Elem()
}

func (o ZoneSettingPostMaxSizeOutput) ToZoneSettingPostMaxSizeOutput() ZoneSettingPostMaxSizeOutput {
	return o
}

func (o ZoneSettingPostMaxSizeOutput) ToZoneSettingPostMaxSizeOutputWithContext(ctx context.Context) ZoneSettingPostMaxSizeOutput {
	return o
}

func (o ZoneSettingPostMaxSizeOutput) ToZoneSettingPostMaxSizePtrOutput() ZoneSettingPostMaxSizePtrOutput {
	return o.ToZoneSettingPostMaxSizePtrOutputWithContext(context.Background())
}

func (o ZoneSettingPostMaxSizeOutput) ToZoneSettingPostMaxSizePtrOutputWithContext(ctx context.Context) ZoneSettingPostMaxSizePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingPostMaxSize) *ZoneSettingPostMaxSize {
		return &v
	}).(ZoneSettingPostMaxSizePtrOutput)
}

func (o ZoneSettingPostMaxSizeOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneSettingPostMaxSize) *int { return v.MaxSize }).(pulumi.IntPtrOutput)
}

func (o ZoneSettingPostMaxSizeOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingPostMaxSize) string { return v.Switch }).(pulumi.StringOutput)
}

type ZoneSettingPostMaxSizePtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingPostMaxSizePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingPostMaxSize)(nil)).Elem()
}

func (o ZoneSettingPostMaxSizePtrOutput) ToZoneSettingPostMaxSizePtrOutput() ZoneSettingPostMaxSizePtrOutput {
	return o
}

func (o ZoneSettingPostMaxSizePtrOutput) ToZoneSettingPostMaxSizePtrOutputWithContext(ctx context.Context) ZoneSettingPostMaxSizePtrOutput {
	return o
}

func (o ZoneSettingPostMaxSizePtrOutput) Elem() ZoneSettingPostMaxSizeOutput {
	return o.ApplyT(func(v *ZoneSettingPostMaxSize) ZoneSettingPostMaxSize {
		if v != nil {
			return *v
		}
		var ret ZoneSettingPostMaxSize
		return ret
	}).(ZoneSettingPostMaxSizeOutput)
}

func (o ZoneSettingPostMaxSizePtrOutput) MaxSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZoneSettingPostMaxSize) *int {
		if v == nil {
			return nil
		}
		return v.MaxSize
	}).(pulumi.IntPtrOutput)
}

func (o ZoneSettingPostMaxSizePtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingPostMaxSize) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingQuic struct {
	Switch string `pulumi:"switch"`
}

// ZoneSettingQuicInput is an input type that accepts ZoneSettingQuicArgs and ZoneSettingQuicOutput values.
// You can construct a concrete instance of `ZoneSettingQuicInput` via:
//
//	ZoneSettingQuicArgs{...}
type ZoneSettingQuicInput interface {
	pulumi.Input

	ToZoneSettingQuicOutput() ZoneSettingQuicOutput
	ToZoneSettingQuicOutputWithContext(context.Context) ZoneSettingQuicOutput
}

type ZoneSettingQuicArgs struct {
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (ZoneSettingQuicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingQuic)(nil)).Elem()
}

func (i ZoneSettingQuicArgs) ToZoneSettingQuicOutput() ZoneSettingQuicOutput {
	return i.ToZoneSettingQuicOutputWithContext(context.Background())
}

func (i ZoneSettingQuicArgs) ToZoneSettingQuicOutputWithContext(ctx context.Context) ZoneSettingQuicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingQuicOutput)
}

func (i ZoneSettingQuicArgs) ToZoneSettingQuicPtrOutput() ZoneSettingQuicPtrOutput {
	return i.ToZoneSettingQuicPtrOutputWithContext(context.Background())
}

func (i ZoneSettingQuicArgs) ToZoneSettingQuicPtrOutputWithContext(ctx context.Context) ZoneSettingQuicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingQuicOutput).ToZoneSettingQuicPtrOutputWithContext(ctx)
}

// ZoneSettingQuicPtrInput is an input type that accepts ZoneSettingQuicArgs, ZoneSettingQuicPtr and ZoneSettingQuicPtrOutput values.
// You can construct a concrete instance of `ZoneSettingQuicPtrInput` via:
//
//	        ZoneSettingQuicArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingQuicPtrInput interface {
	pulumi.Input

	ToZoneSettingQuicPtrOutput() ZoneSettingQuicPtrOutput
	ToZoneSettingQuicPtrOutputWithContext(context.Context) ZoneSettingQuicPtrOutput
}

type zoneSettingQuicPtrType ZoneSettingQuicArgs

func ZoneSettingQuicPtr(v *ZoneSettingQuicArgs) ZoneSettingQuicPtrInput {
	return (*zoneSettingQuicPtrType)(v)
}

func (*zoneSettingQuicPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingQuic)(nil)).Elem()
}

func (i *zoneSettingQuicPtrType) ToZoneSettingQuicPtrOutput() ZoneSettingQuicPtrOutput {
	return i.ToZoneSettingQuicPtrOutputWithContext(context.Background())
}

func (i *zoneSettingQuicPtrType) ToZoneSettingQuicPtrOutputWithContext(ctx context.Context) ZoneSettingQuicPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingQuicPtrOutput)
}

type ZoneSettingQuicOutput struct{ *pulumi.OutputState }

func (ZoneSettingQuicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingQuic)(nil)).Elem()
}

func (o ZoneSettingQuicOutput) ToZoneSettingQuicOutput() ZoneSettingQuicOutput {
	return o
}

func (o ZoneSettingQuicOutput) ToZoneSettingQuicOutputWithContext(ctx context.Context) ZoneSettingQuicOutput {
	return o
}

func (o ZoneSettingQuicOutput) ToZoneSettingQuicPtrOutput() ZoneSettingQuicPtrOutput {
	return o.ToZoneSettingQuicPtrOutputWithContext(context.Background())
}

func (o ZoneSettingQuicOutput) ToZoneSettingQuicPtrOutputWithContext(ctx context.Context) ZoneSettingQuicPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingQuic) *ZoneSettingQuic {
		return &v
	}).(ZoneSettingQuicPtrOutput)
}

func (o ZoneSettingQuicOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingQuic) string { return v.Switch }).(pulumi.StringOutput)
}

type ZoneSettingQuicPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingQuicPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingQuic)(nil)).Elem()
}

func (o ZoneSettingQuicPtrOutput) ToZoneSettingQuicPtrOutput() ZoneSettingQuicPtrOutput {
	return o
}

func (o ZoneSettingQuicPtrOutput) ToZoneSettingQuicPtrOutputWithContext(ctx context.Context) ZoneSettingQuicPtrOutput {
	return o
}

func (o ZoneSettingQuicPtrOutput) Elem() ZoneSettingQuicOutput {
	return o.ApplyT(func(v *ZoneSettingQuic) ZoneSettingQuic {
		if v != nil {
			return *v
		}
		var ret ZoneSettingQuic
		return ret
	}).(ZoneSettingQuicOutput)
}

func (o ZoneSettingQuicPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingQuic) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingSmartRouting struct {
	Switch string `pulumi:"switch"`
}

// ZoneSettingSmartRoutingInput is an input type that accepts ZoneSettingSmartRoutingArgs and ZoneSettingSmartRoutingOutput values.
// You can construct a concrete instance of `ZoneSettingSmartRoutingInput` via:
//
//	ZoneSettingSmartRoutingArgs{...}
type ZoneSettingSmartRoutingInput interface {
	pulumi.Input

	ToZoneSettingSmartRoutingOutput() ZoneSettingSmartRoutingOutput
	ToZoneSettingSmartRoutingOutputWithContext(context.Context) ZoneSettingSmartRoutingOutput
}

type ZoneSettingSmartRoutingArgs struct {
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (ZoneSettingSmartRoutingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingSmartRouting)(nil)).Elem()
}

func (i ZoneSettingSmartRoutingArgs) ToZoneSettingSmartRoutingOutput() ZoneSettingSmartRoutingOutput {
	return i.ToZoneSettingSmartRoutingOutputWithContext(context.Background())
}

func (i ZoneSettingSmartRoutingArgs) ToZoneSettingSmartRoutingOutputWithContext(ctx context.Context) ZoneSettingSmartRoutingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingSmartRoutingOutput)
}

func (i ZoneSettingSmartRoutingArgs) ToZoneSettingSmartRoutingPtrOutput() ZoneSettingSmartRoutingPtrOutput {
	return i.ToZoneSettingSmartRoutingPtrOutputWithContext(context.Background())
}

func (i ZoneSettingSmartRoutingArgs) ToZoneSettingSmartRoutingPtrOutputWithContext(ctx context.Context) ZoneSettingSmartRoutingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingSmartRoutingOutput).ToZoneSettingSmartRoutingPtrOutputWithContext(ctx)
}

// ZoneSettingSmartRoutingPtrInput is an input type that accepts ZoneSettingSmartRoutingArgs, ZoneSettingSmartRoutingPtr and ZoneSettingSmartRoutingPtrOutput values.
// You can construct a concrete instance of `ZoneSettingSmartRoutingPtrInput` via:
//
//	        ZoneSettingSmartRoutingArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingSmartRoutingPtrInput interface {
	pulumi.Input

	ToZoneSettingSmartRoutingPtrOutput() ZoneSettingSmartRoutingPtrOutput
	ToZoneSettingSmartRoutingPtrOutputWithContext(context.Context) ZoneSettingSmartRoutingPtrOutput
}

type zoneSettingSmartRoutingPtrType ZoneSettingSmartRoutingArgs

func ZoneSettingSmartRoutingPtr(v *ZoneSettingSmartRoutingArgs) ZoneSettingSmartRoutingPtrInput {
	return (*zoneSettingSmartRoutingPtrType)(v)
}

func (*zoneSettingSmartRoutingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingSmartRouting)(nil)).Elem()
}

func (i *zoneSettingSmartRoutingPtrType) ToZoneSettingSmartRoutingPtrOutput() ZoneSettingSmartRoutingPtrOutput {
	return i.ToZoneSettingSmartRoutingPtrOutputWithContext(context.Background())
}

func (i *zoneSettingSmartRoutingPtrType) ToZoneSettingSmartRoutingPtrOutputWithContext(ctx context.Context) ZoneSettingSmartRoutingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingSmartRoutingPtrOutput)
}

type ZoneSettingSmartRoutingOutput struct{ *pulumi.OutputState }

func (ZoneSettingSmartRoutingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingSmartRouting)(nil)).Elem()
}

func (o ZoneSettingSmartRoutingOutput) ToZoneSettingSmartRoutingOutput() ZoneSettingSmartRoutingOutput {
	return o
}

func (o ZoneSettingSmartRoutingOutput) ToZoneSettingSmartRoutingOutputWithContext(ctx context.Context) ZoneSettingSmartRoutingOutput {
	return o
}

func (o ZoneSettingSmartRoutingOutput) ToZoneSettingSmartRoutingPtrOutput() ZoneSettingSmartRoutingPtrOutput {
	return o.ToZoneSettingSmartRoutingPtrOutputWithContext(context.Background())
}

func (o ZoneSettingSmartRoutingOutput) ToZoneSettingSmartRoutingPtrOutputWithContext(ctx context.Context) ZoneSettingSmartRoutingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingSmartRouting) *ZoneSettingSmartRouting {
		return &v
	}).(ZoneSettingSmartRoutingPtrOutput)
}

func (o ZoneSettingSmartRoutingOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingSmartRouting) string { return v.Switch }).(pulumi.StringOutput)
}

type ZoneSettingSmartRoutingPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingSmartRoutingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingSmartRouting)(nil)).Elem()
}

func (o ZoneSettingSmartRoutingPtrOutput) ToZoneSettingSmartRoutingPtrOutput() ZoneSettingSmartRoutingPtrOutput {
	return o
}

func (o ZoneSettingSmartRoutingPtrOutput) ToZoneSettingSmartRoutingPtrOutputWithContext(ctx context.Context) ZoneSettingSmartRoutingPtrOutput {
	return o
}

func (o ZoneSettingSmartRoutingPtrOutput) Elem() ZoneSettingSmartRoutingOutput {
	return o.ApplyT(func(v *ZoneSettingSmartRouting) ZoneSettingSmartRouting {
		if v != nil {
			return *v
		}
		var ret ZoneSettingSmartRouting
		return ret
	}).(ZoneSettingSmartRoutingOutput)
}

func (o ZoneSettingSmartRoutingPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingSmartRouting) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingUpstreamHttp2 struct {
	Switch string `pulumi:"switch"`
}

// ZoneSettingUpstreamHttp2Input is an input type that accepts ZoneSettingUpstreamHttp2Args and ZoneSettingUpstreamHttp2Output values.
// You can construct a concrete instance of `ZoneSettingUpstreamHttp2Input` via:
//
//	ZoneSettingUpstreamHttp2Args{...}
type ZoneSettingUpstreamHttp2Input interface {
	pulumi.Input

	ToZoneSettingUpstreamHttp2Output() ZoneSettingUpstreamHttp2Output
	ToZoneSettingUpstreamHttp2OutputWithContext(context.Context) ZoneSettingUpstreamHttp2Output
}

type ZoneSettingUpstreamHttp2Args struct {
	Switch pulumi.StringInput `pulumi:"switch"`
}

func (ZoneSettingUpstreamHttp2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingUpstreamHttp2)(nil)).Elem()
}

func (i ZoneSettingUpstreamHttp2Args) ToZoneSettingUpstreamHttp2Output() ZoneSettingUpstreamHttp2Output {
	return i.ToZoneSettingUpstreamHttp2OutputWithContext(context.Background())
}

func (i ZoneSettingUpstreamHttp2Args) ToZoneSettingUpstreamHttp2OutputWithContext(ctx context.Context) ZoneSettingUpstreamHttp2Output {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingUpstreamHttp2Output)
}

func (i ZoneSettingUpstreamHttp2Args) ToZoneSettingUpstreamHttp2PtrOutput() ZoneSettingUpstreamHttp2PtrOutput {
	return i.ToZoneSettingUpstreamHttp2PtrOutputWithContext(context.Background())
}

func (i ZoneSettingUpstreamHttp2Args) ToZoneSettingUpstreamHttp2PtrOutputWithContext(ctx context.Context) ZoneSettingUpstreamHttp2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingUpstreamHttp2Output).ToZoneSettingUpstreamHttp2PtrOutputWithContext(ctx)
}

// ZoneSettingUpstreamHttp2PtrInput is an input type that accepts ZoneSettingUpstreamHttp2Args, ZoneSettingUpstreamHttp2Ptr and ZoneSettingUpstreamHttp2PtrOutput values.
// You can construct a concrete instance of `ZoneSettingUpstreamHttp2PtrInput` via:
//
//	        ZoneSettingUpstreamHttp2Args{...}
//
//	or:
//
//	        nil
type ZoneSettingUpstreamHttp2PtrInput interface {
	pulumi.Input

	ToZoneSettingUpstreamHttp2PtrOutput() ZoneSettingUpstreamHttp2PtrOutput
	ToZoneSettingUpstreamHttp2PtrOutputWithContext(context.Context) ZoneSettingUpstreamHttp2PtrOutput
}

type zoneSettingUpstreamHttp2PtrType ZoneSettingUpstreamHttp2Args

func ZoneSettingUpstreamHttp2Ptr(v *ZoneSettingUpstreamHttp2Args) ZoneSettingUpstreamHttp2PtrInput {
	return (*zoneSettingUpstreamHttp2PtrType)(v)
}

func (*zoneSettingUpstreamHttp2PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingUpstreamHttp2)(nil)).Elem()
}

func (i *zoneSettingUpstreamHttp2PtrType) ToZoneSettingUpstreamHttp2PtrOutput() ZoneSettingUpstreamHttp2PtrOutput {
	return i.ToZoneSettingUpstreamHttp2PtrOutputWithContext(context.Background())
}

func (i *zoneSettingUpstreamHttp2PtrType) ToZoneSettingUpstreamHttp2PtrOutputWithContext(ctx context.Context) ZoneSettingUpstreamHttp2PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingUpstreamHttp2PtrOutput)
}

type ZoneSettingUpstreamHttp2Output struct{ *pulumi.OutputState }

func (ZoneSettingUpstreamHttp2Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingUpstreamHttp2)(nil)).Elem()
}

func (o ZoneSettingUpstreamHttp2Output) ToZoneSettingUpstreamHttp2Output() ZoneSettingUpstreamHttp2Output {
	return o
}

func (o ZoneSettingUpstreamHttp2Output) ToZoneSettingUpstreamHttp2OutputWithContext(ctx context.Context) ZoneSettingUpstreamHttp2Output {
	return o
}

func (o ZoneSettingUpstreamHttp2Output) ToZoneSettingUpstreamHttp2PtrOutput() ZoneSettingUpstreamHttp2PtrOutput {
	return o.ToZoneSettingUpstreamHttp2PtrOutputWithContext(context.Background())
}

func (o ZoneSettingUpstreamHttp2Output) ToZoneSettingUpstreamHttp2PtrOutputWithContext(ctx context.Context) ZoneSettingUpstreamHttp2PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingUpstreamHttp2) *ZoneSettingUpstreamHttp2 {
		return &v
	}).(ZoneSettingUpstreamHttp2PtrOutput)
}

func (o ZoneSettingUpstreamHttp2Output) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingUpstreamHttp2) string { return v.Switch }).(pulumi.StringOutput)
}

type ZoneSettingUpstreamHttp2PtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingUpstreamHttp2PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingUpstreamHttp2)(nil)).Elem()
}

func (o ZoneSettingUpstreamHttp2PtrOutput) ToZoneSettingUpstreamHttp2PtrOutput() ZoneSettingUpstreamHttp2PtrOutput {
	return o
}

func (o ZoneSettingUpstreamHttp2PtrOutput) ToZoneSettingUpstreamHttp2PtrOutputWithContext(ctx context.Context) ZoneSettingUpstreamHttp2PtrOutput {
	return o
}

func (o ZoneSettingUpstreamHttp2PtrOutput) Elem() ZoneSettingUpstreamHttp2Output {
	return o.ApplyT(func(v *ZoneSettingUpstreamHttp2) ZoneSettingUpstreamHttp2 {
		if v != nil {
			return *v
		}
		var ret ZoneSettingUpstreamHttp2
		return ret
	}).(ZoneSettingUpstreamHttp2Output)
}

func (o ZoneSettingUpstreamHttp2PtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingUpstreamHttp2) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type ZoneSettingWebSocket struct {
	Switch  string `pulumi:"switch"`
	Timeout *int   `pulumi:"timeout"`
}

// ZoneSettingWebSocketInput is an input type that accepts ZoneSettingWebSocketArgs and ZoneSettingWebSocketOutput values.
// You can construct a concrete instance of `ZoneSettingWebSocketInput` via:
//
//	ZoneSettingWebSocketArgs{...}
type ZoneSettingWebSocketInput interface {
	pulumi.Input

	ToZoneSettingWebSocketOutput() ZoneSettingWebSocketOutput
	ToZoneSettingWebSocketOutputWithContext(context.Context) ZoneSettingWebSocketOutput
}

type ZoneSettingWebSocketArgs struct {
	Switch  pulumi.StringInput `pulumi:"switch"`
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
}

func (ZoneSettingWebSocketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingWebSocket)(nil)).Elem()
}

func (i ZoneSettingWebSocketArgs) ToZoneSettingWebSocketOutput() ZoneSettingWebSocketOutput {
	return i.ToZoneSettingWebSocketOutputWithContext(context.Background())
}

func (i ZoneSettingWebSocketArgs) ToZoneSettingWebSocketOutputWithContext(ctx context.Context) ZoneSettingWebSocketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingWebSocketOutput)
}

func (i ZoneSettingWebSocketArgs) ToZoneSettingWebSocketPtrOutput() ZoneSettingWebSocketPtrOutput {
	return i.ToZoneSettingWebSocketPtrOutputWithContext(context.Background())
}

func (i ZoneSettingWebSocketArgs) ToZoneSettingWebSocketPtrOutputWithContext(ctx context.Context) ZoneSettingWebSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingWebSocketOutput).ToZoneSettingWebSocketPtrOutputWithContext(ctx)
}

// ZoneSettingWebSocketPtrInput is an input type that accepts ZoneSettingWebSocketArgs, ZoneSettingWebSocketPtr and ZoneSettingWebSocketPtrOutput values.
// You can construct a concrete instance of `ZoneSettingWebSocketPtrInput` via:
//
//	        ZoneSettingWebSocketArgs{...}
//
//	or:
//
//	        nil
type ZoneSettingWebSocketPtrInput interface {
	pulumi.Input

	ToZoneSettingWebSocketPtrOutput() ZoneSettingWebSocketPtrOutput
	ToZoneSettingWebSocketPtrOutputWithContext(context.Context) ZoneSettingWebSocketPtrOutput
}

type zoneSettingWebSocketPtrType ZoneSettingWebSocketArgs

func ZoneSettingWebSocketPtr(v *ZoneSettingWebSocketArgs) ZoneSettingWebSocketPtrInput {
	return (*zoneSettingWebSocketPtrType)(v)
}

func (*zoneSettingWebSocketPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingWebSocket)(nil)).Elem()
}

func (i *zoneSettingWebSocketPtrType) ToZoneSettingWebSocketPtrOutput() ZoneSettingWebSocketPtrOutput {
	return i.ToZoneSettingWebSocketPtrOutputWithContext(context.Background())
}

func (i *zoneSettingWebSocketPtrType) ToZoneSettingWebSocketPtrOutputWithContext(ctx context.Context) ZoneSettingWebSocketPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneSettingWebSocketPtrOutput)
}

type ZoneSettingWebSocketOutput struct{ *pulumi.OutputState }

func (ZoneSettingWebSocketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneSettingWebSocket)(nil)).Elem()
}

func (o ZoneSettingWebSocketOutput) ToZoneSettingWebSocketOutput() ZoneSettingWebSocketOutput {
	return o
}

func (o ZoneSettingWebSocketOutput) ToZoneSettingWebSocketOutputWithContext(ctx context.Context) ZoneSettingWebSocketOutput {
	return o
}

func (o ZoneSettingWebSocketOutput) ToZoneSettingWebSocketPtrOutput() ZoneSettingWebSocketPtrOutput {
	return o.ToZoneSettingWebSocketPtrOutputWithContext(context.Background())
}

func (o ZoneSettingWebSocketOutput) ToZoneSettingWebSocketPtrOutputWithContext(ctx context.Context) ZoneSettingWebSocketPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneSettingWebSocket) *ZoneSettingWebSocket {
		return &v
	}).(ZoneSettingWebSocketPtrOutput)
}

func (o ZoneSettingWebSocketOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneSettingWebSocket) string { return v.Switch }).(pulumi.StringOutput)
}

func (o ZoneSettingWebSocketOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ZoneSettingWebSocket) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

type ZoneSettingWebSocketPtrOutput struct{ *pulumi.OutputState }

func (ZoneSettingWebSocketPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneSettingWebSocket)(nil)).Elem()
}

func (o ZoneSettingWebSocketPtrOutput) ToZoneSettingWebSocketPtrOutput() ZoneSettingWebSocketPtrOutput {
	return o
}

func (o ZoneSettingWebSocketPtrOutput) ToZoneSettingWebSocketPtrOutputWithContext(ctx context.Context) ZoneSettingWebSocketPtrOutput {
	return o
}

func (o ZoneSettingWebSocketPtrOutput) Elem() ZoneSettingWebSocketOutput {
	return o.ApplyT(func(v *ZoneSettingWebSocket) ZoneSettingWebSocket {
		if v != nil {
			return *v
		}
		var ret ZoneSettingWebSocket
		return ret
	}).(ZoneSettingWebSocketOutput)
}

func (o ZoneSettingWebSocketPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneSettingWebSocket) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

func (o ZoneSettingWebSocketPtrOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ZoneSettingWebSocket) *int {
		if v == nil {
			return nil
		}
		return v.Timeout
	}).(pulumi.IntPtrOutput)
}

type ZoneVanityNameServers struct {
	Servers []string `pulumi:"servers"`
	Switch  string   `pulumi:"switch"`
}

// ZoneVanityNameServersInput is an input type that accepts ZoneVanityNameServersArgs and ZoneVanityNameServersOutput values.
// You can construct a concrete instance of `ZoneVanityNameServersInput` via:
//
//	ZoneVanityNameServersArgs{...}
type ZoneVanityNameServersInput interface {
	pulumi.Input

	ToZoneVanityNameServersOutput() ZoneVanityNameServersOutput
	ToZoneVanityNameServersOutputWithContext(context.Context) ZoneVanityNameServersOutput
}

type ZoneVanityNameServersArgs struct {
	Servers pulumi.StringArrayInput `pulumi:"servers"`
	Switch  pulumi.StringInput      `pulumi:"switch"`
}

func (ZoneVanityNameServersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneVanityNameServers)(nil)).Elem()
}

func (i ZoneVanityNameServersArgs) ToZoneVanityNameServersOutput() ZoneVanityNameServersOutput {
	return i.ToZoneVanityNameServersOutputWithContext(context.Background())
}

func (i ZoneVanityNameServersArgs) ToZoneVanityNameServersOutputWithContext(ctx context.Context) ZoneVanityNameServersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneVanityNameServersOutput)
}

func (i ZoneVanityNameServersArgs) ToZoneVanityNameServersPtrOutput() ZoneVanityNameServersPtrOutput {
	return i.ToZoneVanityNameServersPtrOutputWithContext(context.Background())
}

func (i ZoneVanityNameServersArgs) ToZoneVanityNameServersPtrOutputWithContext(ctx context.Context) ZoneVanityNameServersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneVanityNameServersOutput).ToZoneVanityNameServersPtrOutputWithContext(ctx)
}

// ZoneVanityNameServersPtrInput is an input type that accepts ZoneVanityNameServersArgs, ZoneVanityNameServersPtr and ZoneVanityNameServersPtrOutput values.
// You can construct a concrete instance of `ZoneVanityNameServersPtrInput` via:
//
//	        ZoneVanityNameServersArgs{...}
//
//	or:
//
//	        nil
type ZoneVanityNameServersPtrInput interface {
	pulumi.Input

	ToZoneVanityNameServersPtrOutput() ZoneVanityNameServersPtrOutput
	ToZoneVanityNameServersPtrOutputWithContext(context.Context) ZoneVanityNameServersPtrOutput
}

type zoneVanityNameServersPtrType ZoneVanityNameServersArgs

func ZoneVanityNameServersPtr(v *ZoneVanityNameServersArgs) ZoneVanityNameServersPtrInput {
	return (*zoneVanityNameServersPtrType)(v)
}

func (*zoneVanityNameServersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneVanityNameServers)(nil)).Elem()
}

func (i *zoneVanityNameServersPtrType) ToZoneVanityNameServersPtrOutput() ZoneVanityNameServersPtrOutput {
	return i.ToZoneVanityNameServersPtrOutputWithContext(context.Background())
}

func (i *zoneVanityNameServersPtrType) ToZoneVanityNameServersPtrOutputWithContext(ctx context.Context) ZoneVanityNameServersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneVanityNameServersPtrOutput)
}

type ZoneVanityNameServersOutput struct{ *pulumi.OutputState }

func (ZoneVanityNameServersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneVanityNameServers)(nil)).Elem()
}

func (o ZoneVanityNameServersOutput) ToZoneVanityNameServersOutput() ZoneVanityNameServersOutput {
	return o
}

func (o ZoneVanityNameServersOutput) ToZoneVanityNameServersOutputWithContext(ctx context.Context) ZoneVanityNameServersOutput {
	return o
}

func (o ZoneVanityNameServersOutput) ToZoneVanityNameServersPtrOutput() ZoneVanityNameServersPtrOutput {
	return o.ToZoneVanityNameServersPtrOutputWithContext(context.Background())
}

func (o ZoneVanityNameServersOutput) ToZoneVanityNameServersPtrOutputWithContext(ctx context.Context) ZoneVanityNameServersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ZoneVanityNameServers) *ZoneVanityNameServers {
		return &v
	}).(ZoneVanityNameServersPtrOutput)
}

func (o ZoneVanityNameServersOutput) Servers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ZoneVanityNameServers) []string { return v.Servers }).(pulumi.StringArrayOutput)
}

func (o ZoneVanityNameServersOutput) Switch() pulumi.StringOutput {
	return o.ApplyT(func(v ZoneVanityNameServers) string { return v.Switch }).(pulumi.StringOutput)
}

type ZoneVanityNameServersPtrOutput struct{ *pulumi.OutputState }

func (ZoneVanityNameServersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ZoneVanityNameServers)(nil)).Elem()
}

func (o ZoneVanityNameServersPtrOutput) ToZoneVanityNameServersPtrOutput() ZoneVanityNameServersPtrOutput {
	return o
}

func (o ZoneVanityNameServersPtrOutput) ToZoneVanityNameServersPtrOutputWithContext(ctx context.Context) ZoneVanityNameServersPtrOutput {
	return o
}

func (o ZoneVanityNameServersPtrOutput) Elem() ZoneVanityNameServersOutput {
	return o.ApplyT(func(v *ZoneVanityNameServers) ZoneVanityNameServers {
		if v != nil {
			return *v
		}
		var ret ZoneVanityNameServers
		return ret
	}).(ZoneVanityNameServersOutput)
}

func (o ZoneVanityNameServersPtrOutput) Servers() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ZoneVanityNameServers) []string {
		if v == nil {
			return nil
		}
		return v.Servers
	}).(pulumi.StringArrayOutput)
}

func (o ZoneVanityNameServersPtrOutput) Switch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ZoneVanityNameServers) *string {
		if v == nil {
			return nil
		}
		return &v.Switch
	}).(pulumi.StringPtrOutput)
}

type ZoneVanityNameServersIp struct {
	Ipv4 *string `pulumi:"ipv4"`
	Name *string `pulumi:"name"`
}

// ZoneVanityNameServersIpInput is an input type that accepts ZoneVanityNameServersIpArgs and ZoneVanityNameServersIpOutput values.
// You can construct a concrete instance of `ZoneVanityNameServersIpInput` via:
//
//	ZoneVanityNameServersIpArgs{...}
type ZoneVanityNameServersIpInput interface {
	pulumi.Input

	ToZoneVanityNameServersIpOutput() ZoneVanityNameServersIpOutput
	ToZoneVanityNameServersIpOutputWithContext(context.Context) ZoneVanityNameServersIpOutput
}

type ZoneVanityNameServersIpArgs struct {
	Ipv4 pulumi.StringPtrInput `pulumi:"ipv4"`
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (ZoneVanityNameServersIpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneVanityNameServersIp)(nil)).Elem()
}

func (i ZoneVanityNameServersIpArgs) ToZoneVanityNameServersIpOutput() ZoneVanityNameServersIpOutput {
	return i.ToZoneVanityNameServersIpOutputWithContext(context.Background())
}

func (i ZoneVanityNameServersIpArgs) ToZoneVanityNameServersIpOutputWithContext(ctx context.Context) ZoneVanityNameServersIpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneVanityNameServersIpOutput)
}

// ZoneVanityNameServersIpArrayInput is an input type that accepts ZoneVanityNameServersIpArray and ZoneVanityNameServersIpArrayOutput values.
// You can construct a concrete instance of `ZoneVanityNameServersIpArrayInput` via:
//
//	ZoneVanityNameServersIpArray{ ZoneVanityNameServersIpArgs{...} }
type ZoneVanityNameServersIpArrayInput interface {
	pulumi.Input

	ToZoneVanityNameServersIpArrayOutput() ZoneVanityNameServersIpArrayOutput
	ToZoneVanityNameServersIpArrayOutputWithContext(context.Context) ZoneVanityNameServersIpArrayOutput
}

type ZoneVanityNameServersIpArray []ZoneVanityNameServersIpInput

func (ZoneVanityNameServersIpArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneVanityNameServersIp)(nil)).Elem()
}

func (i ZoneVanityNameServersIpArray) ToZoneVanityNameServersIpArrayOutput() ZoneVanityNameServersIpArrayOutput {
	return i.ToZoneVanityNameServersIpArrayOutputWithContext(context.Background())
}

func (i ZoneVanityNameServersIpArray) ToZoneVanityNameServersIpArrayOutputWithContext(ctx context.Context) ZoneVanityNameServersIpArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ZoneVanityNameServersIpArrayOutput)
}

type ZoneVanityNameServersIpOutput struct{ *pulumi.OutputState }

func (ZoneVanityNameServersIpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ZoneVanityNameServersIp)(nil)).Elem()
}

func (o ZoneVanityNameServersIpOutput) ToZoneVanityNameServersIpOutput() ZoneVanityNameServersIpOutput {
	return o
}

func (o ZoneVanityNameServersIpOutput) ToZoneVanityNameServersIpOutputWithContext(ctx context.Context) ZoneVanityNameServersIpOutput {
	return o
}

func (o ZoneVanityNameServersIpOutput) Ipv4() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneVanityNameServersIp) *string { return v.Ipv4 }).(pulumi.StringPtrOutput)
}

func (o ZoneVanityNameServersIpOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ZoneVanityNameServersIp) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type ZoneVanityNameServersIpArrayOutput struct{ *pulumi.OutputState }

func (ZoneVanityNameServersIpArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ZoneVanityNameServersIp)(nil)).Elem()
}

func (o ZoneVanityNameServersIpArrayOutput) ToZoneVanityNameServersIpArrayOutput() ZoneVanityNameServersIpArrayOutput {
	return o
}

func (o ZoneVanityNameServersIpArrayOutput) ToZoneVanityNameServersIpArrayOutputWithContext(ctx context.Context) ZoneVanityNameServersIpArrayOutput {
	return o
}

func (o ZoneVanityNameServersIpArrayOutput) Index(i pulumi.IntInput) ZoneVanityNameServersIpOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ZoneVanityNameServersIp {
		return vs[0].([]ZoneVanityNameServersIp)[vs[1].(int)]
	}).(ZoneVanityNameServersIpOutput)
}

type GetRuleEngineSettingsAction struct {
	Action     string                                `pulumi:"action"`
	Properties []GetRuleEngineSettingsActionProperty `pulumi:"properties"`
}

// GetRuleEngineSettingsActionInput is an input type that accepts GetRuleEngineSettingsActionArgs and GetRuleEngineSettingsActionOutput values.
// You can construct a concrete instance of `GetRuleEngineSettingsActionInput` via:
//
//	GetRuleEngineSettingsActionArgs{...}
type GetRuleEngineSettingsActionInput interface {
	pulumi.Input

	ToGetRuleEngineSettingsActionOutput() GetRuleEngineSettingsActionOutput
	ToGetRuleEngineSettingsActionOutputWithContext(context.Context) GetRuleEngineSettingsActionOutput
}

type GetRuleEngineSettingsActionArgs struct {
	Action     pulumi.StringInput                            `pulumi:"action"`
	Properties GetRuleEngineSettingsActionPropertyArrayInput `pulumi:"properties"`
}

func (GetRuleEngineSettingsActionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuleEngineSettingsAction)(nil)).Elem()
}

func (i GetRuleEngineSettingsActionArgs) ToGetRuleEngineSettingsActionOutput() GetRuleEngineSettingsActionOutput {
	return i.ToGetRuleEngineSettingsActionOutputWithContext(context.Background())
}

func (i GetRuleEngineSettingsActionArgs) ToGetRuleEngineSettingsActionOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRuleEngineSettingsActionOutput)
}

// GetRuleEngineSettingsActionArrayInput is an input type that accepts GetRuleEngineSettingsActionArray and GetRuleEngineSettingsActionArrayOutput values.
// You can construct a concrete instance of `GetRuleEngineSettingsActionArrayInput` via:
//
//	GetRuleEngineSettingsActionArray{ GetRuleEngineSettingsActionArgs{...} }
type GetRuleEngineSettingsActionArrayInput interface {
	pulumi.Input

	ToGetRuleEngineSettingsActionArrayOutput() GetRuleEngineSettingsActionArrayOutput
	ToGetRuleEngineSettingsActionArrayOutputWithContext(context.Context) GetRuleEngineSettingsActionArrayOutput
}

type GetRuleEngineSettingsActionArray []GetRuleEngineSettingsActionInput

func (GetRuleEngineSettingsActionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRuleEngineSettingsAction)(nil)).Elem()
}

func (i GetRuleEngineSettingsActionArray) ToGetRuleEngineSettingsActionArrayOutput() GetRuleEngineSettingsActionArrayOutput {
	return i.ToGetRuleEngineSettingsActionArrayOutputWithContext(context.Background())
}

func (i GetRuleEngineSettingsActionArray) ToGetRuleEngineSettingsActionArrayOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRuleEngineSettingsActionArrayOutput)
}

type GetRuleEngineSettingsActionOutput struct{ *pulumi.OutputState }

func (GetRuleEngineSettingsActionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuleEngineSettingsAction)(nil)).Elem()
}

func (o GetRuleEngineSettingsActionOutput) ToGetRuleEngineSettingsActionOutput() GetRuleEngineSettingsActionOutput {
	return o
}

func (o GetRuleEngineSettingsActionOutput) ToGetRuleEngineSettingsActionOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionOutput {
	return o
}

func (o GetRuleEngineSettingsActionOutput) Action() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsAction) string { return v.Action }).(pulumi.StringOutput)
}

func (o GetRuleEngineSettingsActionOutput) Properties() GetRuleEngineSettingsActionPropertyArrayOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsAction) []GetRuleEngineSettingsActionProperty { return v.Properties }).(GetRuleEngineSettingsActionPropertyArrayOutput)
}

type GetRuleEngineSettingsActionArrayOutput struct{ *pulumi.OutputState }

func (GetRuleEngineSettingsActionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRuleEngineSettingsAction)(nil)).Elem()
}

func (o GetRuleEngineSettingsActionArrayOutput) ToGetRuleEngineSettingsActionArrayOutput() GetRuleEngineSettingsActionArrayOutput {
	return o
}

func (o GetRuleEngineSettingsActionArrayOutput) ToGetRuleEngineSettingsActionArrayOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionArrayOutput {
	return o
}

func (o GetRuleEngineSettingsActionArrayOutput) Index(i pulumi.IntInput) GetRuleEngineSettingsActionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRuleEngineSettingsAction {
		return vs[0].([]GetRuleEngineSettingsAction)[vs[1].(int)]
	}).(GetRuleEngineSettingsActionOutput)
}

type GetRuleEngineSettingsActionProperty struct {
	ChoiceProperties []GetRuleEngineSettingsActionPropertyChoiceProperty `pulumi:"choiceProperties"`
	ChoicesValues    []string                                            `pulumi:"choicesValues"`
	ExtraParameters  []GetRuleEngineSettingsActionPropertyExtraParameter `pulumi:"extraParameters"`
	IsAllowEmpty     bool                                                `pulumi:"isAllowEmpty"`
	IsMultiple       bool                                                `pulumi:"isMultiple"`
	Max              int                                                 `pulumi:"max"`
	Min              int                                                 `pulumi:"min"`
	Name             string                                              `pulumi:"name"`
	Type             string                                              `pulumi:"type"`
}

// GetRuleEngineSettingsActionPropertyInput is an input type that accepts GetRuleEngineSettingsActionPropertyArgs and GetRuleEngineSettingsActionPropertyOutput values.
// You can construct a concrete instance of `GetRuleEngineSettingsActionPropertyInput` via:
//
//	GetRuleEngineSettingsActionPropertyArgs{...}
type GetRuleEngineSettingsActionPropertyInput interface {
	pulumi.Input

	ToGetRuleEngineSettingsActionPropertyOutput() GetRuleEngineSettingsActionPropertyOutput
	ToGetRuleEngineSettingsActionPropertyOutputWithContext(context.Context) GetRuleEngineSettingsActionPropertyOutput
}

type GetRuleEngineSettingsActionPropertyArgs struct {
	ChoiceProperties GetRuleEngineSettingsActionPropertyChoicePropertyArrayInput `pulumi:"choiceProperties"`
	ChoicesValues    pulumi.StringArrayInput                                     `pulumi:"choicesValues"`
	ExtraParameters  GetRuleEngineSettingsActionPropertyExtraParameterArrayInput `pulumi:"extraParameters"`
	IsAllowEmpty     pulumi.BoolInput                                            `pulumi:"isAllowEmpty"`
	IsMultiple       pulumi.BoolInput                                            `pulumi:"isMultiple"`
	Max              pulumi.IntInput                                             `pulumi:"max"`
	Min              pulumi.IntInput                                             `pulumi:"min"`
	Name             pulumi.StringInput                                          `pulumi:"name"`
	Type             pulumi.StringInput                                          `pulumi:"type"`
}

func (GetRuleEngineSettingsActionPropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuleEngineSettingsActionProperty)(nil)).Elem()
}

func (i GetRuleEngineSettingsActionPropertyArgs) ToGetRuleEngineSettingsActionPropertyOutput() GetRuleEngineSettingsActionPropertyOutput {
	return i.ToGetRuleEngineSettingsActionPropertyOutputWithContext(context.Background())
}

func (i GetRuleEngineSettingsActionPropertyArgs) ToGetRuleEngineSettingsActionPropertyOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRuleEngineSettingsActionPropertyOutput)
}

// GetRuleEngineSettingsActionPropertyArrayInput is an input type that accepts GetRuleEngineSettingsActionPropertyArray and GetRuleEngineSettingsActionPropertyArrayOutput values.
// You can construct a concrete instance of `GetRuleEngineSettingsActionPropertyArrayInput` via:
//
//	GetRuleEngineSettingsActionPropertyArray{ GetRuleEngineSettingsActionPropertyArgs{...} }
type GetRuleEngineSettingsActionPropertyArrayInput interface {
	pulumi.Input

	ToGetRuleEngineSettingsActionPropertyArrayOutput() GetRuleEngineSettingsActionPropertyArrayOutput
	ToGetRuleEngineSettingsActionPropertyArrayOutputWithContext(context.Context) GetRuleEngineSettingsActionPropertyArrayOutput
}

type GetRuleEngineSettingsActionPropertyArray []GetRuleEngineSettingsActionPropertyInput

func (GetRuleEngineSettingsActionPropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRuleEngineSettingsActionProperty)(nil)).Elem()
}

func (i GetRuleEngineSettingsActionPropertyArray) ToGetRuleEngineSettingsActionPropertyArrayOutput() GetRuleEngineSettingsActionPropertyArrayOutput {
	return i.ToGetRuleEngineSettingsActionPropertyArrayOutputWithContext(context.Background())
}

func (i GetRuleEngineSettingsActionPropertyArray) ToGetRuleEngineSettingsActionPropertyArrayOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRuleEngineSettingsActionPropertyArrayOutput)
}

type GetRuleEngineSettingsActionPropertyOutput struct{ *pulumi.OutputState }

func (GetRuleEngineSettingsActionPropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuleEngineSettingsActionProperty)(nil)).Elem()
}

func (o GetRuleEngineSettingsActionPropertyOutput) ToGetRuleEngineSettingsActionPropertyOutput() GetRuleEngineSettingsActionPropertyOutput {
	return o
}

func (o GetRuleEngineSettingsActionPropertyOutput) ToGetRuleEngineSettingsActionPropertyOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyOutput {
	return o
}

func (o GetRuleEngineSettingsActionPropertyOutput) ChoiceProperties() GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionProperty) []GetRuleEngineSettingsActionPropertyChoiceProperty {
		return v.ChoiceProperties
	}).(GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput)
}

func (o GetRuleEngineSettingsActionPropertyOutput) ChoicesValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionProperty) []string { return v.ChoicesValues }).(pulumi.StringArrayOutput)
}

func (o GetRuleEngineSettingsActionPropertyOutput) ExtraParameters() GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionProperty) []GetRuleEngineSettingsActionPropertyExtraParameter {
		return v.ExtraParameters
	}).(GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput)
}

func (o GetRuleEngineSettingsActionPropertyOutput) IsAllowEmpty() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionProperty) bool { return v.IsAllowEmpty }).(pulumi.BoolOutput)
}

func (o GetRuleEngineSettingsActionPropertyOutput) IsMultiple() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionProperty) bool { return v.IsMultiple }).(pulumi.BoolOutput)
}

func (o GetRuleEngineSettingsActionPropertyOutput) Max() pulumi.IntOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionProperty) int { return v.Max }).(pulumi.IntOutput)
}

func (o GetRuleEngineSettingsActionPropertyOutput) Min() pulumi.IntOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionProperty) int { return v.Min }).(pulumi.IntOutput)
}

func (o GetRuleEngineSettingsActionPropertyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionProperty) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRuleEngineSettingsActionPropertyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionProperty) string { return v.Type }).(pulumi.StringOutput)
}

type GetRuleEngineSettingsActionPropertyArrayOutput struct{ *pulumi.OutputState }

func (GetRuleEngineSettingsActionPropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRuleEngineSettingsActionProperty)(nil)).Elem()
}

func (o GetRuleEngineSettingsActionPropertyArrayOutput) ToGetRuleEngineSettingsActionPropertyArrayOutput() GetRuleEngineSettingsActionPropertyArrayOutput {
	return o
}

func (o GetRuleEngineSettingsActionPropertyArrayOutput) ToGetRuleEngineSettingsActionPropertyArrayOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyArrayOutput {
	return o
}

func (o GetRuleEngineSettingsActionPropertyArrayOutput) Index(i pulumi.IntInput) GetRuleEngineSettingsActionPropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRuleEngineSettingsActionProperty {
		return vs[0].([]GetRuleEngineSettingsActionProperty)[vs[1].(int)]
	}).(GetRuleEngineSettingsActionPropertyOutput)
}

type GetRuleEngineSettingsActionPropertyChoiceProperty struct {
	ChoicesValues   []string                                                          `pulumi:"choicesValues"`
	ExtraParameters []GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameter `pulumi:"extraParameters"`
	IsAllowEmpty    bool                                                              `pulumi:"isAllowEmpty"`
	IsMultiple      bool                                                              `pulumi:"isMultiple"`
	Max             int                                                               `pulumi:"max"`
	Min             int                                                               `pulumi:"min"`
	Name            string                                                            `pulumi:"name"`
	Type            string                                                            `pulumi:"type"`
}

// GetRuleEngineSettingsActionPropertyChoicePropertyInput is an input type that accepts GetRuleEngineSettingsActionPropertyChoicePropertyArgs and GetRuleEngineSettingsActionPropertyChoicePropertyOutput values.
// You can construct a concrete instance of `GetRuleEngineSettingsActionPropertyChoicePropertyInput` via:
//
//	GetRuleEngineSettingsActionPropertyChoicePropertyArgs{...}
type GetRuleEngineSettingsActionPropertyChoicePropertyInput interface {
	pulumi.Input

	ToGetRuleEngineSettingsActionPropertyChoicePropertyOutput() GetRuleEngineSettingsActionPropertyChoicePropertyOutput
	ToGetRuleEngineSettingsActionPropertyChoicePropertyOutputWithContext(context.Context) GetRuleEngineSettingsActionPropertyChoicePropertyOutput
}

type GetRuleEngineSettingsActionPropertyChoicePropertyArgs struct {
	ChoicesValues   pulumi.StringArrayInput                                                   `pulumi:"choicesValues"`
	ExtraParameters GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayInput `pulumi:"extraParameters"`
	IsAllowEmpty    pulumi.BoolInput                                                          `pulumi:"isAllowEmpty"`
	IsMultiple      pulumi.BoolInput                                                          `pulumi:"isMultiple"`
	Max             pulumi.IntInput                                                           `pulumi:"max"`
	Min             pulumi.IntInput                                                           `pulumi:"min"`
	Name            pulumi.StringInput                                                        `pulumi:"name"`
	Type            pulumi.StringInput                                                        `pulumi:"type"`
}

func (GetRuleEngineSettingsActionPropertyChoicePropertyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuleEngineSettingsActionPropertyChoiceProperty)(nil)).Elem()
}

func (i GetRuleEngineSettingsActionPropertyChoicePropertyArgs) ToGetRuleEngineSettingsActionPropertyChoicePropertyOutput() GetRuleEngineSettingsActionPropertyChoicePropertyOutput {
	return i.ToGetRuleEngineSettingsActionPropertyChoicePropertyOutputWithContext(context.Background())
}

func (i GetRuleEngineSettingsActionPropertyChoicePropertyArgs) ToGetRuleEngineSettingsActionPropertyChoicePropertyOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyChoicePropertyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRuleEngineSettingsActionPropertyChoicePropertyOutput)
}

// GetRuleEngineSettingsActionPropertyChoicePropertyArrayInput is an input type that accepts GetRuleEngineSettingsActionPropertyChoicePropertyArray and GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput values.
// You can construct a concrete instance of `GetRuleEngineSettingsActionPropertyChoicePropertyArrayInput` via:
//
//	GetRuleEngineSettingsActionPropertyChoicePropertyArray{ GetRuleEngineSettingsActionPropertyChoicePropertyArgs{...} }
type GetRuleEngineSettingsActionPropertyChoicePropertyArrayInput interface {
	pulumi.Input

	ToGetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput() GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput
	ToGetRuleEngineSettingsActionPropertyChoicePropertyArrayOutputWithContext(context.Context) GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput
}

type GetRuleEngineSettingsActionPropertyChoicePropertyArray []GetRuleEngineSettingsActionPropertyChoicePropertyInput

func (GetRuleEngineSettingsActionPropertyChoicePropertyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRuleEngineSettingsActionPropertyChoiceProperty)(nil)).Elem()
}

func (i GetRuleEngineSettingsActionPropertyChoicePropertyArray) ToGetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput() GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput {
	return i.ToGetRuleEngineSettingsActionPropertyChoicePropertyArrayOutputWithContext(context.Background())
}

func (i GetRuleEngineSettingsActionPropertyChoicePropertyArray) ToGetRuleEngineSettingsActionPropertyChoicePropertyArrayOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput)
}

type GetRuleEngineSettingsActionPropertyChoicePropertyOutput struct{ *pulumi.OutputState }

func (GetRuleEngineSettingsActionPropertyChoicePropertyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuleEngineSettingsActionPropertyChoiceProperty)(nil)).Elem()
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyOutput) ToGetRuleEngineSettingsActionPropertyChoicePropertyOutput() GetRuleEngineSettingsActionPropertyChoicePropertyOutput {
	return o
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyOutput) ToGetRuleEngineSettingsActionPropertyChoicePropertyOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyChoicePropertyOutput {
	return o
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyOutput) ChoicesValues() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionPropertyChoiceProperty) []string { return v.ChoicesValues }).(pulumi.StringArrayOutput)
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyOutput) ExtraParameters() GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionPropertyChoiceProperty) []GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameter {
		return v.ExtraParameters
	}).(GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput)
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyOutput) IsAllowEmpty() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionPropertyChoiceProperty) bool { return v.IsAllowEmpty }).(pulumi.BoolOutput)
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyOutput) IsMultiple() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionPropertyChoiceProperty) bool { return v.IsMultiple }).(pulumi.BoolOutput)
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyOutput) Max() pulumi.IntOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionPropertyChoiceProperty) int { return v.Max }).(pulumi.IntOutput)
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyOutput) Min() pulumi.IntOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionPropertyChoiceProperty) int { return v.Min }).(pulumi.IntOutput)
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionPropertyChoiceProperty) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionPropertyChoiceProperty) string { return v.Type }).(pulumi.StringOutput)
}

type GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput struct{ *pulumi.OutputState }

func (GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRuleEngineSettingsActionPropertyChoiceProperty)(nil)).Elem()
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput) ToGetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput() GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput {
	return o
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput) ToGetRuleEngineSettingsActionPropertyChoicePropertyArrayOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput {
	return o
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput) Index(i pulumi.IntInput) GetRuleEngineSettingsActionPropertyChoicePropertyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRuleEngineSettingsActionPropertyChoiceProperty {
		return vs[0].([]GetRuleEngineSettingsActionPropertyChoiceProperty)[vs[1].(int)]
	}).(GetRuleEngineSettingsActionPropertyChoicePropertyOutput)
}

type GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameter struct {
	Choices []string `pulumi:"choices"`
	Id      string   `pulumi:"id"`
	Type    string   `pulumi:"type"`
}

// GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterInput is an input type that accepts GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArgs and GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput values.
// You can construct a concrete instance of `GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterInput` via:
//
//	GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArgs{...}
type GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterInput interface {
	pulumi.Input

	ToGetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput() GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput
	ToGetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutputWithContext(context.Context) GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput
}

type GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArgs struct {
	Choices pulumi.StringArrayInput `pulumi:"choices"`
	Id      pulumi.StringInput      `pulumi:"id"`
	Type    pulumi.StringInput      `pulumi:"type"`
}

func (GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameter)(nil)).Elem()
}

func (i GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArgs) ToGetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput() GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput {
	return i.ToGetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutputWithContext(context.Background())
}

func (i GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArgs) ToGetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput)
}

// GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayInput is an input type that accepts GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArray and GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput values.
// You can construct a concrete instance of `GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayInput` via:
//
//	GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArray{ GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArgs{...} }
type GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayInput interface {
	pulumi.Input

	ToGetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput() GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput
	ToGetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutputWithContext(context.Context) GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput
}

type GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArray []GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterInput

func (GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameter)(nil)).Elem()
}

func (i GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArray) ToGetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput() GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput {
	return i.ToGetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutputWithContext(context.Background())
}

func (i GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArray) ToGetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput)
}

type GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput struct{ *pulumi.OutputState }

func (GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameter)(nil)).Elem()
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput) ToGetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput() GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput {
	return o
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput) ToGetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput {
	return o
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput) Choices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameter) []string { return v.Choices }).(pulumi.StringArrayOutput)
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameter) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameter) string { return v.Type }).(pulumi.StringOutput)
}

type GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput struct{ *pulumi.OutputState }

func (GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameter)(nil)).Elem()
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput) ToGetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput() GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput {
	return o
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput) ToGetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput {
	return o
}

func (o GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput) Index(i pulumi.IntInput) GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameter {
		return vs[0].([]GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameter)[vs[1].(int)]
	}).(GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput)
}

type GetRuleEngineSettingsActionPropertyExtraParameter struct {
	Choices []string `pulumi:"choices"`
	Id      string   `pulumi:"id"`
	Type    string   `pulumi:"type"`
}

// GetRuleEngineSettingsActionPropertyExtraParameterInput is an input type that accepts GetRuleEngineSettingsActionPropertyExtraParameterArgs and GetRuleEngineSettingsActionPropertyExtraParameterOutput values.
// You can construct a concrete instance of `GetRuleEngineSettingsActionPropertyExtraParameterInput` via:
//
//	GetRuleEngineSettingsActionPropertyExtraParameterArgs{...}
type GetRuleEngineSettingsActionPropertyExtraParameterInput interface {
	pulumi.Input

	ToGetRuleEngineSettingsActionPropertyExtraParameterOutput() GetRuleEngineSettingsActionPropertyExtraParameterOutput
	ToGetRuleEngineSettingsActionPropertyExtraParameterOutputWithContext(context.Context) GetRuleEngineSettingsActionPropertyExtraParameterOutput
}

type GetRuleEngineSettingsActionPropertyExtraParameterArgs struct {
	Choices pulumi.StringArrayInput `pulumi:"choices"`
	Id      pulumi.StringInput      `pulumi:"id"`
	Type    pulumi.StringInput      `pulumi:"type"`
}

func (GetRuleEngineSettingsActionPropertyExtraParameterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuleEngineSettingsActionPropertyExtraParameter)(nil)).Elem()
}

func (i GetRuleEngineSettingsActionPropertyExtraParameterArgs) ToGetRuleEngineSettingsActionPropertyExtraParameterOutput() GetRuleEngineSettingsActionPropertyExtraParameterOutput {
	return i.ToGetRuleEngineSettingsActionPropertyExtraParameterOutputWithContext(context.Background())
}

func (i GetRuleEngineSettingsActionPropertyExtraParameterArgs) ToGetRuleEngineSettingsActionPropertyExtraParameterOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyExtraParameterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRuleEngineSettingsActionPropertyExtraParameterOutput)
}

// GetRuleEngineSettingsActionPropertyExtraParameterArrayInput is an input type that accepts GetRuleEngineSettingsActionPropertyExtraParameterArray and GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput values.
// You can construct a concrete instance of `GetRuleEngineSettingsActionPropertyExtraParameterArrayInput` via:
//
//	GetRuleEngineSettingsActionPropertyExtraParameterArray{ GetRuleEngineSettingsActionPropertyExtraParameterArgs{...} }
type GetRuleEngineSettingsActionPropertyExtraParameterArrayInput interface {
	pulumi.Input

	ToGetRuleEngineSettingsActionPropertyExtraParameterArrayOutput() GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput
	ToGetRuleEngineSettingsActionPropertyExtraParameterArrayOutputWithContext(context.Context) GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput
}

type GetRuleEngineSettingsActionPropertyExtraParameterArray []GetRuleEngineSettingsActionPropertyExtraParameterInput

func (GetRuleEngineSettingsActionPropertyExtraParameterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRuleEngineSettingsActionPropertyExtraParameter)(nil)).Elem()
}

func (i GetRuleEngineSettingsActionPropertyExtraParameterArray) ToGetRuleEngineSettingsActionPropertyExtraParameterArrayOutput() GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput {
	return i.ToGetRuleEngineSettingsActionPropertyExtraParameterArrayOutputWithContext(context.Background())
}

func (i GetRuleEngineSettingsActionPropertyExtraParameterArray) ToGetRuleEngineSettingsActionPropertyExtraParameterArrayOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput)
}

type GetRuleEngineSettingsActionPropertyExtraParameterOutput struct{ *pulumi.OutputState }

func (GetRuleEngineSettingsActionPropertyExtraParameterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRuleEngineSettingsActionPropertyExtraParameter)(nil)).Elem()
}

func (o GetRuleEngineSettingsActionPropertyExtraParameterOutput) ToGetRuleEngineSettingsActionPropertyExtraParameterOutput() GetRuleEngineSettingsActionPropertyExtraParameterOutput {
	return o
}

func (o GetRuleEngineSettingsActionPropertyExtraParameterOutput) ToGetRuleEngineSettingsActionPropertyExtraParameterOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyExtraParameterOutput {
	return o
}

func (o GetRuleEngineSettingsActionPropertyExtraParameterOutput) Choices() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionPropertyExtraParameter) []string { return v.Choices }).(pulumi.StringArrayOutput)
}

func (o GetRuleEngineSettingsActionPropertyExtraParameterOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionPropertyExtraParameter) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRuleEngineSettingsActionPropertyExtraParameterOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetRuleEngineSettingsActionPropertyExtraParameter) string { return v.Type }).(pulumi.StringOutput)
}

type GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput struct{ *pulumi.OutputState }

func (GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRuleEngineSettingsActionPropertyExtraParameter)(nil)).Elem()
}

func (o GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput) ToGetRuleEngineSettingsActionPropertyExtraParameterArrayOutput() GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput {
	return o
}

func (o GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput) ToGetRuleEngineSettingsActionPropertyExtraParameterArrayOutputWithContext(ctx context.Context) GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput {
	return o
}

func (o GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput) Index(i pulumi.IntInput) GetRuleEngineSettingsActionPropertyExtraParameterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRuleEngineSettingsActionPropertyExtraParameter {
		return vs[0].([]GetRuleEngineSettingsActionPropertyExtraParameter)[vs[1].(int)]
	}).(GetRuleEngineSettingsActionPropertyExtraParameterOutput)
}

type GetZoneAvailablePlansPlanInfoList struct {
	Area       string `pulumi:"area"`
	Currency   string `pulumi:"currency"`
	Flux       int    `pulumi:"flux"`
	Frequency  string `pulumi:"frequency"`
	PlanType   string `pulumi:"planType"`
	Price      int    `pulumi:"price"`
	Request    int    `pulumi:"request"`
	SiteNumber int    `pulumi:"siteNumber"`
}

// GetZoneAvailablePlansPlanInfoListInput is an input type that accepts GetZoneAvailablePlansPlanInfoListArgs and GetZoneAvailablePlansPlanInfoListOutput values.
// You can construct a concrete instance of `GetZoneAvailablePlansPlanInfoListInput` via:
//
//	GetZoneAvailablePlansPlanInfoListArgs{...}
type GetZoneAvailablePlansPlanInfoListInput interface {
	pulumi.Input

	ToGetZoneAvailablePlansPlanInfoListOutput() GetZoneAvailablePlansPlanInfoListOutput
	ToGetZoneAvailablePlansPlanInfoListOutputWithContext(context.Context) GetZoneAvailablePlansPlanInfoListOutput
}

type GetZoneAvailablePlansPlanInfoListArgs struct {
	Area       pulumi.StringInput `pulumi:"area"`
	Currency   pulumi.StringInput `pulumi:"currency"`
	Flux       pulumi.IntInput    `pulumi:"flux"`
	Frequency  pulumi.StringInput `pulumi:"frequency"`
	PlanType   pulumi.StringInput `pulumi:"planType"`
	Price      pulumi.IntInput    `pulumi:"price"`
	Request    pulumi.IntInput    `pulumi:"request"`
	SiteNumber pulumi.IntInput    `pulumi:"siteNumber"`
}

func (GetZoneAvailablePlansPlanInfoListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneAvailablePlansPlanInfoList)(nil)).Elem()
}

func (i GetZoneAvailablePlansPlanInfoListArgs) ToGetZoneAvailablePlansPlanInfoListOutput() GetZoneAvailablePlansPlanInfoListOutput {
	return i.ToGetZoneAvailablePlansPlanInfoListOutputWithContext(context.Background())
}

func (i GetZoneAvailablePlansPlanInfoListArgs) ToGetZoneAvailablePlansPlanInfoListOutputWithContext(ctx context.Context) GetZoneAvailablePlansPlanInfoListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneAvailablePlansPlanInfoListOutput)
}

// GetZoneAvailablePlansPlanInfoListArrayInput is an input type that accepts GetZoneAvailablePlansPlanInfoListArray and GetZoneAvailablePlansPlanInfoListArrayOutput values.
// You can construct a concrete instance of `GetZoneAvailablePlansPlanInfoListArrayInput` via:
//
//	GetZoneAvailablePlansPlanInfoListArray{ GetZoneAvailablePlansPlanInfoListArgs{...} }
type GetZoneAvailablePlansPlanInfoListArrayInput interface {
	pulumi.Input

	ToGetZoneAvailablePlansPlanInfoListArrayOutput() GetZoneAvailablePlansPlanInfoListArrayOutput
	ToGetZoneAvailablePlansPlanInfoListArrayOutputWithContext(context.Context) GetZoneAvailablePlansPlanInfoListArrayOutput
}

type GetZoneAvailablePlansPlanInfoListArray []GetZoneAvailablePlansPlanInfoListInput

func (GetZoneAvailablePlansPlanInfoListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneAvailablePlansPlanInfoList)(nil)).Elem()
}

func (i GetZoneAvailablePlansPlanInfoListArray) ToGetZoneAvailablePlansPlanInfoListArrayOutput() GetZoneAvailablePlansPlanInfoListArrayOutput {
	return i.ToGetZoneAvailablePlansPlanInfoListArrayOutputWithContext(context.Background())
}

func (i GetZoneAvailablePlansPlanInfoListArray) ToGetZoneAvailablePlansPlanInfoListArrayOutputWithContext(ctx context.Context) GetZoneAvailablePlansPlanInfoListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetZoneAvailablePlansPlanInfoListArrayOutput)
}

type GetZoneAvailablePlansPlanInfoListOutput struct{ *pulumi.OutputState }

func (GetZoneAvailablePlansPlanInfoListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetZoneAvailablePlansPlanInfoList)(nil)).Elem()
}

func (o GetZoneAvailablePlansPlanInfoListOutput) ToGetZoneAvailablePlansPlanInfoListOutput() GetZoneAvailablePlansPlanInfoListOutput {
	return o
}

func (o GetZoneAvailablePlansPlanInfoListOutput) ToGetZoneAvailablePlansPlanInfoListOutputWithContext(ctx context.Context) GetZoneAvailablePlansPlanInfoListOutput {
	return o
}

func (o GetZoneAvailablePlansPlanInfoListOutput) Area() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneAvailablePlansPlanInfoList) string { return v.Area }).(pulumi.StringOutput)
}

func (o GetZoneAvailablePlansPlanInfoListOutput) Currency() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneAvailablePlansPlanInfoList) string { return v.Currency }).(pulumi.StringOutput)
}

func (o GetZoneAvailablePlansPlanInfoListOutput) Flux() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneAvailablePlansPlanInfoList) int { return v.Flux }).(pulumi.IntOutput)
}

func (o GetZoneAvailablePlansPlanInfoListOutput) Frequency() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneAvailablePlansPlanInfoList) string { return v.Frequency }).(pulumi.StringOutput)
}

func (o GetZoneAvailablePlansPlanInfoListOutput) PlanType() pulumi.StringOutput {
	return o.ApplyT(func(v GetZoneAvailablePlansPlanInfoList) string { return v.PlanType }).(pulumi.StringOutput)
}

func (o GetZoneAvailablePlansPlanInfoListOutput) Price() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneAvailablePlansPlanInfoList) int { return v.Price }).(pulumi.IntOutput)
}

func (o GetZoneAvailablePlansPlanInfoListOutput) Request() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneAvailablePlansPlanInfoList) int { return v.Request }).(pulumi.IntOutput)
}

func (o GetZoneAvailablePlansPlanInfoListOutput) SiteNumber() pulumi.IntOutput {
	return o.ApplyT(func(v GetZoneAvailablePlansPlanInfoList) int { return v.SiteNumber }).(pulumi.IntOutput)
}

type GetZoneAvailablePlansPlanInfoListArrayOutput struct{ *pulumi.OutputState }

func (GetZoneAvailablePlansPlanInfoListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetZoneAvailablePlansPlanInfoList)(nil)).Elem()
}

func (o GetZoneAvailablePlansPlanInfoListArrayOutput) ToGetZoneAvailablePlansPlanInfoListArrayOutput() GetZoneAvailablePlansPlanInfoListArrayOutput {
	return o
}

func (o GetZoneAvailablePlansPlanInfoListArrayOutput) ToGetZoneAvailablePlansPlanInfoListArrayOutputWithContext(ctx context.Context) GetZoneAvailablePlansPlanInfoListArrayOutput {
	return o
}

func (o GetZoneAvailablePlansPlanInfoListArrayOutput) Index(i pulumi.IntInput) GetZoneAvailablePlansPlanInfoListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetZoneAvailablePlansPlanInfoList {
		return vs[0].([]GetZoneAvailablePlansPlanInfoList)[vs[1].(int)]
	}).(GetZoneAvailablePlansPlanInfoListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationProxyIpv6Input)(nil)).Elem(), ApplicationProxyIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ApplicationProxyIpv6PtrInput)(nil)).Elem(), ApplicationProxyIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*OriginGroupOriginRecordInput)(nil)).Elem(), OriginGroupOriginRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OriginGroupOriginRecordArrayInput)(nil)).Elem(), OriginGroupOriginRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OriginGroupOriginRecordPrivateParameterInput)(nil)).Elem(), OriginGroupOriginRecordPrivateParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OriginGroupOriginRecordPrivateParameterArrayInput)(nil)).Elem(), OriginGroupOriginRecordPrivateParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleInput)(nil)).Elem(), RuleEngineRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleArrayInput)(nil)).Elem(), RuleEngineRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleActionInput)(nil)).Elem(), RuleEngineRuleActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleActionArrayInput)(nil)).Elem(), RuleEngineRuleActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleActionCodeActionInput)(nil)).Elem(), RuleEngineRuleActionCodeActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleActionCodeActionPtrInput)(nil)).Elem(), RuleEngineRuleActionCodeActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleActionCodeActionParameterInput)(nil)).Elem(), RuleEngineRuleActionCodeActionParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleActionCodeActionParameterArrayInput)(nil)).Elem(), RuleEngineRuleActionCodeActionParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleActionNormalActionInput)(nil)).Elem(), RuleEngineRuleActionNormalActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleActionNormalActionPtrInput)(nil)).Elem(), RuleEngineRuleActionNormalActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleActionNormalActionParameterInput)(nil)).Elem(), RuleEngineRuleActionNormalActionParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleActionNormalActionParameterArrayInput)(nil)).Elem(), RuleEngineRuleActionNormalActionParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleActionRewriteActionInput)(nil)).Elem(), RuleEngineRuleActionRewriteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleActionRewriteActionPtrInput)(nil)).Elem(), RuleEngineRuleActionRewriteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleActionRewriteActionParameterInput)(nil)).Elem(), RuleEngineRuleActionRewriteActionParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleActionRewriteActionParameterArrayInput)(nil)).Elem(), RuleEngineRuleActionRewriteActionParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleOrInput)(nil)).Elem(), RuleEngineRuleOrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleOrArrayInput)(nil)).Elem(), RuleEngineRuleOrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleOrAndInput)(nil)).Elem(), RuleEngineRuleOrAndArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleOrAndArrayInput)(nil)).Elem(), RuleEngineRuleOrAndArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleInput)(nil)).Elem(), RuleEngineRuleSubRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleArrayInput)(nil)).Elem(), RuleEngineRuleSubRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleArrayInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionArrayInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionCodeActionInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleActionCodeActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionCodeActionPtrInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleActionCodeActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionCodeActionParameterInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleActionCodeActionParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleActionCodeActionParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionNormalActionInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleActionNormalActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionNormalActionPtrInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleActionNormalActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionNormalActionParameterInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleActionNormalActionParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleActionNormalActionParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionRewriteActionInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleActionRewriteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionRewriteActionPtrInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleActionRewriteActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionRewriteActionParameterInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleActionRewriteActionParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleActionRewriteActionParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleOrInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleOrArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleOrArrayInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleOrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleOrAndInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleOrAndArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RuleEngineRuleSubRuleRuleOrAndArrayInput)(nil)).Elem(), RuleEngineRuleSubRuleRuleOrAndArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneResourceInput)(nil)).Elem(), ZoneResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneResourceArrayInput)(nil)).Elem(), ZoneResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneResourceSvInput)(nil)).Elem(), ZoneResourceSvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneResourceSvArrayInput)(nil)).Elem(), ZoneResourceSvArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCacheInput)(nil)).Elem(), ZoneSettingCacheArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCachePtrInput)(nil)).Elem(), ZoneSettingCacheArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCacheCacheInput)(nil)).Elem(), ZoneSettingCacheCacheArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCacheCachePtrInput)(nil)).Elem(), ZoneSettingCacheCacheArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCacheFollowOriginInput)(nil)).Elem(), ZoneSettingCacheFollowOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCacheFollowOriginPtrInput)(nil)).Elem(), ZoneSettingCacheFollowOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCacheKeyInput)(nil)).Elem(), ZoneSettingCacheKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCacheKeyPtrInput)(nil)).Elem(), ZoneSettingCacheKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCacheKeyQueryStringInput)(nil)).Elem(), ZoneSettingCacheKeyQueryStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCacheKeyQueryStringPtrInput)(nil)).Elem(), ZoneSettingCacheKeyQueryStringArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCacheNoCacheInput)(nil)).Elem(), ZoneSettingCacheNoCacheArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCacheNoCachePtrInput)(nil)).Elem(), ZoneSettingCacheNoCacheArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCachePrefreshInput)(nil)).Elem(), ZoneSettingCachePrefreshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCachePrefreshPtrInput)(nil)).Elem(), ZoneSettingCachePrefreshArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingClientIpHeaderInput)(nil)).Elem(), ZoneSettingClientIpHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingClientIpHeaderPtrInput)(nil)).Elem(), ZoneSettingClientIpHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCompressionInput)(nil)).Elem(), ZoneSettingCompressionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingCompressionPtrInput)(nil)).Elem(), ZoneSettingCompressionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingForceRedirectInput)(nil)).Elem(), ZoneSettingForceRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingForceRedirectPtrInput)(nil)).Elem(), ZoneSettingForceRedirectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingHttpsInput)(nil)).Elem(), ZoneSettingHttpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingHttpsPtrInput)(nil)).Elem(), ZoneSettingHttpsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingHttpsHstsInput)(nil)).Elem(), ZoneSettingHttpsHstsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingHttpsHstsPtrInput)(nil)).Elem(), ZoneSettingHttpsHstsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingIpv6Input)(nil)).Elem(), ZoneSettingIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingIpv6PtrInput)(nil)).Elem(), ZoneSettingIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingMaxAgeInput)(nil)).Elem(), ZoneSettingMaxAgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingMaxAgePtrInput)(nil)).Elem(), ZoneSettingMaxAgeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingOfflineCacheInput)(nil)).Elem(), ZoneSettingOfflineCacheArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingOfflineCachePtrInput)(nil)).Elem(), ZoneSettingOfflineCacheArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingOriginInput)(nil)).Elem(), ZoneSettingOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingOriginPtrInput)(nil)).Elem(), ZoneSettingOriginArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingPostMaxSizeInput)(nil)).Elem(), ZoneSettingPostMaxSizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingPostMaxSizePtrInput)(nil)).Elem(), ZoneSettingPostMaxSizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingQuicInput)(nil)).Elem(), ZoneSettingQuicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingQuicPtrInput)(nil)).Elem(), ZoneSettingQuicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingSmartRoutingInput)(nil)).Elem(), ZoneSettingSmartRoutingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingSmartRoutingPtrInput)(nil)).Elem(), ZoneSettingSmartRoutingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingUpstreamHttp2Input)(nil)).Elem(), ZoneSettingUpstreamHttp2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingUpstreamHttp2PtrInput)(nil)).Elem(), ZoneSettingUpstreamHttp2Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingWebSocketInput)(nil)).Elem(), ZoneSettingWebSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneSettingWebSocketPtrInput)(nil)).Elem(), ZoneSettingWebSocketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneVanityNameServersInput)(nil)).Elem(), ZoneVanityNameServersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneVanityNameServersPtrInput)(nil)).Elem(), ZoneVanityNameServersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneVanityNameServersIpInput)(nil)).Elem(), ZoneVanityNameServersIpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ZoneVanityNameServersIpArrayInput)(nil)).Elem(), ZoneVanityNameServersIpArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRuleEngineSettingsActionInput)(nil)).Elem(), GetRuleEngineSettingsActionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRuleEngineSettingsActionArrayInput)(nil)).Elem(), GetRuleEngineSettingsActionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRuleEngineSettingsActionPropertyInput)(nil)).Elem(), GetRuleEngineSettingsActionPropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRuleEngineSettingsActionPropertyArrayInput)(nil)).Elem(), GetRuleEngineSettingsActionPropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRuleEngineSettingsActionPropertyChoicePropertyInput)(nil)).Elem(), GetRuleEngineSettingsActionPropertyChoicePropertyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRuleEngineSettingsActionPropertyChoicePropertyArrayInput)(nil)).Elem(), GetRuleEngineSettingsActionPropertyChoicePropertyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterInput)(nil)).Elem(), GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayInput)(nil)).Elem(), GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRuleEngineSettingsActionPropertyExtraParameterInput)(nil)).Elem(), GetRuleEngineSettingsActionPropertyExtraParameterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRuleEngineSettingsActionPropertyExtraParameterArrayInput)(nil)).Elem(), GetRuleEngineSettingsActionPropertyExtraParameterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneAvailablePlansPlanInfoListInput)(nil)).Elem(), GetZoneAvailablePlansPlanInfoListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetZoneAvailablePlansPlanInfoListArrayInput)(nil)).Elem(), GetZoneAvailablePlansPlanInfoListArray{})
	pulumi.RegisterOutputType(ApplicationProxyIpv6Output{})
	pulumi.RegisterOutputType(ApplicationProxyIpv6PtrOutput{})
	pulumi.RegisterOutputType(OriginGroupOriginRecordOutput{})
	pulumi.RegisterOutputType(OriginGroupOriginRecordArrayOutput{})
	pulumi.RegisterOutputType(OriginGroupOriginRecordPrivateParameterOutput{})
	pulumi.RegisterOutputType(OriginGroupOriginRecordPrivateParameterArrayOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleArrayOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleActionOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleActionArrayOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleActionCodeActionOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleActionCodeActionPtrOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleActionCodeActionParameterOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleActionCodeActionParameterArrayOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleActionNormalActionOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleActionNormalActionPtrOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleActionNormalActionParameterOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleActionNormalActionParameterArrayOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleActionRewriteActionOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleActionRewriteActionPtrOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleActionRewriteActionParameterOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleActionRewriteActionParameterArrayOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleOrOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleOrArrayOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleOrAndOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleOrAndArrayOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleArrayOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleArrayOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleActionOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleActionArrayOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleActionCodeActionOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleActionCodeActionPtrOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleActionCodeActionParameterOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleActionCodeActionParameterArrayOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleActionNormalActionOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleActionNormalActionPtrOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleActionNormalActionParameterOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleActionNormalActionParameterArrayOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleActionRewriteActionOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleActionRewriteActionPtrOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleActionRewriteActionParameterOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleActionRewriteActionParameterArrayOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleOrOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleOrArrayOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleOrAndOutput{})
	pulumi.RegisterOutputType(RuleEngineRuleSubRuleRuleOrAndArrayOutput{})
	pulumi.RegisterOutputType(ZoneResourceOutput{})
	pulumi.RegisterOutputType(ZoneResourceArrayOutput{})
	pulumi.RegisterOutputType(ZoneResourceSvOutput{})
	pulumi.RegisterOutputType(ZoneResourceSvArrayOutput{})
	pulumi.RegisterOutputType(ZoneSettingCacheOutput{})
	pulumi.RegisterOutputType(ZoneSettingCachePtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingCacheCacheOutput{})
	pulumi.RegisterOutputType(ZoneSettingCacheCachePtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingCacheFollowOriginOutput{})
	pulumi.RegisterOutputType(ZoneSettingCacheFollowOriginPtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingCacheKeyOutput{})
	pulumi.RegisterOutputType(ZoneSettingCacheKeyPtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingCacheKeyQueryStringOutput{})
	pulumi.RegisterOutputType(ZoneSettingCacheKeyQueryStringPtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingCacheNoCacheOutput{})
	pulumi.RegisterOutputType(ZoneSettingCacheNoCachePtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingCachePrefreshOutput{})
	pulumi.RegisterOutputType(ZoneSettingCachePrefreshPtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingClientIpHeaderOutput{})
	pulumi.RegisterOutputType(ZoneSettingClientIpHeaderPtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingCompressionOutput{})
	pulumi.RegisterOutputType(ZoneSettingCompressionPtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingForceRedirectOutput{})
	pulumi.RegisterOutputType(ZoneSettingForceRedirectPtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingHttpsOutput{})
	pulumi.RegisterOutputType(ZoneSettingHttpsPtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingHttpsHstsOutput{})
	pulumi.RegisterOutputType(ZoneSettingHttpsHstsPtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingIpv6Output{})
	pulumi.RegisterOutputType(ZoneSettingIpv6PtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingMaxAgeOutput{})
	pulumi.RegisterOutputType(ZoneSettingMaxAgePtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingOfflineCacheOutput{})
	pulumi.RegisterOutputType(ZoneSettingOfflineCachePtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingOriginOutput{})
	pulumi.RegisterOutputType(ZoneSettingOriginPtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingPostMaxSizeOutput{})
	pulumi.RegisterOutputType(ZoneSettingPostMaxSizePtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingQuicOutput{})
	pulumi.RegisterOutputType(ZoneSettingQuicPtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingSmartRoutingOutput{})
	pulumi.RegisterOutputType(ZoneSettingSmartRoutingPtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingUpstreamHttp2Output{})
	pulumi.RegisterOutputType(ZoneSettingUpstreamHttp2PtrOutput{})
	pulumi.RegisterOutputType(ZoneSettingWebSocketOutput{})
	pulumi.RegisterOutputType(ZoneSettingWebSocketPtrOutput{})
	pulumi.RegisterOutputType(ZoneVanityNameServersOutput{})
	pulumi.RegisterOutputType(ZoneVanityNameServersPtrOutput{})
	pulumi.RegisterOutputType(ZoneVanityNameServersIpOutput{})
	pulumi.RegisterOutputType(ZoneVanityNameServersIpArrayOutput{})
	pulumi.RegisterOutputType(GetRuleEngineSettingsActionOutput{})
	pulumi.RegisterOutputType(GetRuleEngineSettingsActionArrayOutput{})
	pulumi.RegisterOutputType(GetRuleEngineSettingsActionPropertyOutput{})
	pulumi.RegisterOutputType(GetRuleEngineSettingsActionPropertyArrayOutput{})
	pulumi.RegisterOutputType(GetRuleEngineSettingsActionPropertyChoicePropertyOutput{})
	pulumi.RegisterOutputType(GetRuleEngineSettingsActionPropertyChoicePropertyArrayOutput{})
	pulumi.RegisterOutputType(GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterOutput{})
	pulumi.RegisterOutputType(GetRuleEngineSettingsActionPropertyChoicePropertyExtraParameterArrayOutput{})
	pulumi.RegisterOutputType(GetRuleEngineSettingsActionPropertyExtraParameterOutput{})
	pulumi.RegisterOutputType(GetRuleEngineSettingsActionPropertyExtraParameterArrayOutput{})
	pulumi.RegisterOutputType(GetZoneAvailablePlansPlanInfoListOutput{})
	pulumi.RegisterOutputType(GetZoneAvailablePlansPlanInfoListArrayOutput{})
}
