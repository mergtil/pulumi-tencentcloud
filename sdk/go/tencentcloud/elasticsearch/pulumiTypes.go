// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticsearch

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type InstanceEsAcl struct {
	BlackLists []string `pulumi:"blackLists"`
	WhiteLists []string `pulumi:"whiteLists"`
}

// InstanceEsAclInput is an input type that accepts InstanceEsAclArgs and InstanceEsAclOutput values.
// You can construct a concrete instance of `InstanceEsAclInput` via:
//
//	InstanceEsAclArgs{...}
type InstanceEsAclInput interface {
	pulumi.Input

	ToInstanceEsAclOutput() InstanceEsAclOutput
	ToInstanceEsAclOutputWithContext(context.Context) InstanceEsAclOutput
}

type InstanceEsAclArgs struct {
	BlackLists pulumi.StringArrayInput `pulumi:"blackLists"`
	WhiteLists pulumi.StringArrayInput `pulumi:"whiteLists"`
}

func (InstanceEsAclArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEsAcl)(nil)).Elem()
}

func (i InstanceEsAclArgs) ToInstanceEsAclOutput() InstanceEsAclOutput {
	return i.ToInstanceEsAclOutputWithContext(context.Background())
}

func (i InstanceEsAclArgs) ToInstanceEsAclOutputWithContext(ctx context.Context) InstanceEsAclOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEsAclOutput)
}

func (i InstanceEsAclArgs) ToInstanceEsAclPtrOutput() InstanceEsAclPtrOutput {
	return i.ToInstanceEsAclPtrOutputWithContext(context.Background())
}

func (i InstanceEsAclArgs) ToInstanceEsAclPtrOutputWithContext(ctx context.Context) InstanceEsAclPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEsAclOutput).ToInstanceEsAclPtrOutputWithContext(ctx)
}

// InstanceEsAclPtrInput is an input type that accepts InstanceEsAclArgs, InstanceEsAclPtr and InstanceEsAclPtrOutput values.
// You can construct a concrete instance of `InstanceEsAclPtrInput` via:
//
//	        InstanceEsAclArgs{...}
//
//	or:
//
//	        nil
type InstanceEsAclPtrInput interface {
	pulumi.Input

	ToInstanceEsAclPtrOutput() InstanceEsAclPtrOutput
	ToInstanceEsAclPtrOutputWithContext(context.Context) InstanceEsAclPtrOutput
}

type instanceEsAclPtrType InstanceEsAclArgs

func InstanceEsAclPtr(v *InstanceEsAclArgs) InstanceEsAclPtrInput {
	return (*instanceEsAclPtrType)(v)
}

func (*instanceEsAclPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceEsAcl)(nil)).Elem()
}

func (i *instanceEsAclPtrType) ToInstanceEsAclPtrOutput() InstanceEsAclPtrOutput {
	return i.ToInstanceEsAclPtrOutputWithContext(context.Background())
}

func (i *instanceEsAclPtrType) ToInstanceEsAclPtrOutputWithContext(ctx context.Context) InstanceEsAclPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceEsAclPtrOutput)
}

type InstanceEsAclOutput struct{ *pulumi.OutputState }

func (InstanceEsAclOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceEsAcl)(nil)).Elem()
}

func (o InstanceEsAclOutput) ToInstanceEsAclOutput() InstanceEsAclOutput {
	return o
}

func (o InstanceEsAclOutput) ToInstanceEsAclOutputWithContext(ctx context.Context) InstanceEsAclOutput {
	return o
}

func (o InstanceEsAclOutput) ToInstanceEsAclPtrOutput() InstanceEsAclPtrOutput {
	return o.ToInstanceEsAclPtrOutputWithContext(context.Background())
}

func (o InstanceEsAclOutput) ToInstanceEsAclPtrOutputWithContext(ctx context.Context) InstanceEsAclPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceEsAcl) *InstanceEsAcl {
		return &v
	}).(InstanceEsAclPtrOutput)
}

func (o InstanceEsAclOutput) BlackLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstanceEsAcl) []string { return v.BlackLists }).(pulumi.StringArrayOutput)
}

func (o InstanceEsAclOutput) WhiteLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v InstanceEsAcl) []string { return v.WhiteLists }).(pulumi.StringArrayOutput)
}

type InstanceEsAclPtrOutput struct{ *pulumi.OutputState }

func (InstanceEsAclPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceEsAcl)(nil)).Elem()
}

func (o InstanceEsAclPtrOutput) ToInstanceEsAclPtrOutput() InstanceEsAclPtrOutput {
	return o
}

func (o InstanceEsAclPtrOutput) ToInstanceEsAclPtrOutputWithContext(ctx context.Context) InstanceEsAclPtrOutput {
	return o
}

func (o InstanceEsAclPtrOutput) Elem() InstanceEsAclOutput {
	return o.ApplyT(func(v *InstanceEsAcl) InstanceEsAcl {
		if v != nil {
			return *v
		}
		var ret InstanceEsAcl
		return ret
	}).(InstanceEsAclOutput)
}

func (o InstanceEsAclPtrOutput) BlackLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InstanceEsAcl) []string {
		if v == nil {
			return nil
		}
		return v.BlackLists
	}).(pulumi.StringArrayOutput)
}

func (o InstanceEsAclPtrOutput) WhiteLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *InstanceEsAcl) []string {
		if v == nil {
			return nil
		}
		return v.WhiteLists
	}).(pulumi.StringArrayOutput)
}

type InstanceMultiZoneInfo struct {
	AvailabilityZone string `pulumi:"availabilityZone"`
	SubnetId         string `pulumi:"subnetId"`
}

// InstanceMultiZoneInfoInput is an input type that accepts InstanceMultiZoneInfoArgs and InstanceMultiZoneInfoOutput values.
// You can construct a concrete instance of `InstanceMultiZoneInfoInput` via:
//
//	InstanceMultiZoneInfoArgs{...}
type InstanceMultiZoneInfoInput interface {
	pulumi.Input

	ToInstanceMultiZoneInfoOutput() InstanceMultiZoneInfoOutput
	ToInstanceMultiZoneInfoOutputWithContext(context.Context) InstanceMultiZoneInfoOutput
}

type InstanceMultiZoneInfoArgs struct {
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	SubnetId         pulumi.StringInput `pulumi:"subnetId"`
}

func (InstanceMultiZoneInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMultiZoneInfo)(nil)).Elem()
}

func (i InstanceMultiZoneInfoArgs) ToInstanceMultiZoneInfoOutput() InstanceMultiZoneInfoOutput {
	return i.ToInstanceMultiZoneInfoOutputWithContext(context.Background())
}

func (i InstanceMultiZoneInfoArgs) ToInstanceMultiZoneInfoOutputWithContext(ctx context.Context) InstanceMultiZoneInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMultiZoneInfoOutput)
}

// InstanceMultiZoneInfoArrayInput is an input type that accepts InstanceMultiZoneInfoArray and InstanceMultiZoneInfoArrayOutput values.
// You can construct a concrete instance of `InstanceMultiZoneInfoArrayInput` via:
//
//	InstanceMultiZoneInfoArray{ InstanceMultiZoneInfoArgs{...} }
type InstanceMultiZoneInfoArrayInput interface {
	pulumi.Input

	ToInstanceMultiZoneInfoArrayOutput() InstanceMultiZoneInfoArrayOutput
	ToInstanceMultiZoneInfoArrayOutputWithContext(context.Context) InstanceMultiZoneInfoArrayOutput
}

type InstanceMultiZoneInfoArray []InstanceMultiZoneInfoInput

func (InstanceMultiZoneInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceMultiZoneInfo)(nil)).Elem()
}

func (i InstanceMultiZoneInfoArray) ToInstanceMultiZoneInfoArrayOutput() InstanceMultiZoneInfoArrayOutput {
	return i.ToInstanceMultiZoneInfoArrayOutputWithContext(context.Background())
}

func (i InstanceMultiZoneInfoArray) ToInstanceMultiZoneInfoArrayOutputWithContext(ctx context.Context) InstanceMultiZoneInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceMultiZoneInfoArrayOutput)
}

type InstanceMultiZoneInfoOutput struct{ *pulumi.OutputState }

func (InstanceMultiZoneInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceMultiZoneInfo)(nil)).Elem()
}

func (o InstanceMultiZoneInfoOutput) ToInstanceMultiZoneInfoOutput() InstanceMultiZoneInfoOutput {
	return o
}

func (o InstanceMultiZoneInfoOutput) ToInstanceMultiZoneInfoOutputWithContext(ctx context.Context) InstanceMultiZoneInfoOutput {
	return o
}

func (o InstanceMultiZoneInfoOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceMultiZoneInfo) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o InstanceMultiZoneInfoOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceMultiZoneInfo) string { return v.SubnetId }).(pulumi.StringOutput)
}

type InstanceMultiZoneInfoArrayOutput struct{ *pulumi.OutputState }

func (InstanceMultiZoneInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceMultiZoneInfo)(nil)).Elem()
}

func (o InstanceMultiZoneInfoArrayOutput) ToInstanceMultiZoneInfoArrayOutput() InstanceMultiZoneInfoArrayOutput {
	return o
}

func (o InstanceMultiZoneInfoArrayOutput) ToInstanceMultiZoneInfoArrayOutputWithContext(ctx context.Context) InstanceMultiZoneInfoArrayOutput {
	return o
}

func (o InstanceMultiZoneInfoArrayOutput) Index(i pulumi.IntInput) InstanceMultiZoneInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceMultiZoneInfo {
		return vs[0].([]InstanceMultiZoneInfo)[vs[1].(int)]
	}).(InstanceMultiZoneInfoOutput)
}

type InstanceNodeInfoList struct {
	DiskSize *int    `pulumi:"diskSize"`
	DiskType *string `pulumi:"diskType"`
	Encrypt  *bool   `pulumi:"encrypt"`
	NodeNum  int     `pulumi:"nodeNum"`
	NodeType string  `pulumi:"nodeType"`
	Type     *string `pulumi:"type"`
}

// InstanceNodeInfoListInput is an input type that accepts InstanceNodeInfoListArgs and InstanceNodeInfoListOutput values.
// You can construct a concrete instance of `InstanceNodeInfoListInput` via:
//
//	InstanceNodeInfoListArgs{...}
type InstanceNodeInfoListInput interface {
	pulumi.Input

	ToInstanceNodeInfoListOutput() InstanceNodeInfoListOutput
	ToInstanceNodeInfoListOutputWithContext(context.Context) InstanceNodeInfoListOutput
}

type InstanceNodeInfoListArgs struct {
	DiskSize pulumi.IntPtrInput    `pulumi:"diskSize"`
	DiskType pulumi.StringPtrInput `pulumi:"diskType"`
	Encrypt  pulumi.BoolPtrInput   `pulumi:"encrypt"`
	NodeNum  pulumi.IntInput       `pulumi:"nodeNum"`
	NodeType pulumi.StringInput    `pulumi:"nodeType"`
	Type     pulumi.StringPtrInput `pulumi:"type"`
}

func (InstanceNodeInfoListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNodeInfoList)(nil)).Elem()
}

func (i InstanceNodeInfoListArgs) ToInstanceNodeInfoListOutput() InstanceNodeInfoListOutput {
	return i.ToInstanceNodeInfoListOutputWithContext(context.Background())
}

func (i InstanceNodeInfoListArgs) ToInstanceNodeInfoListOutputWithContext(ctx context.Context) InstanceNodeInfoListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNodeInfoListOutput)
}

// InstanceNodeInfoListArrayInput is an input type that accepts InstanceNodeInfoListArray and InstanceNodeInfoListArrayOutput values.
// You can construct a concrete instance of `InstanceNodeInfoListArrayInput` via:
//
//	InstanceNodeInfoListArray{ InstanceNodeInfoListArgs{...} }
type InstanceNodeInfoListArrayInput interface {
	pulumi.Input

	ToInstanceNodeInfoListArrayOutput() InstanceNodeInfoListArrayOutput
	ToInstanceNodeInfoListArrayOutputWithContext(context.Context) InstanceNodeInfoListArrayOutput
}

type InstanceNodeInfoListArray []InstanceNodeInfoListInput

func (InstanceNodeInfoListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceNodeInfoList)(nil)).Elem()
}

func (i InstanceNodeInfoListArray) ToInstanceNodeInfoListArrayOutput() InstanceNodeInfoListArrayOutput {
	return i.ToInstanceNodeInfoListArrayOutputWithContext(context.Background())
}

func (i InstanceNodeInfoListArray) ToInstanceNodeInfoListArrayOutputWithContext(ctx context.Context) InstanceNodeInfoListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceNodeInfoListArrayOutput)
}

type InstanceNodeInfoListOutput struct{ *pulumi.OutputState }

func (InstanceNodeInfoListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceNodeInfoList)(nil)).Elem()
}

func (o InstanceNodeInfoListOutput) ToInstanceNodeInfoListOutput() InstanceNodeInfoListOutput {
	return o
}

func (o InstanceNodeInfoListOutput) ToInstanceNodeInfoListOutputWithContext(ctx context.Context) InstanceNodeInfoListOutput {
	return o
}

func (o InstanceNodeInfoListOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceNodeInfoList) *int { return v.DiskSize }).(pulumi.IntPtrOutput)
}

func (o InstanceNodeInfoListOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceNodeInfoList) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

func (o InstanceNodeInfoListOutput) Encrypt() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v InstanceNodeInfoList) *bool { return v.Encrypt }).(pulumi.BoolPtrOutput)
}

func (o InstanceNodeInfoListOutput) NodeNum() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceNodeInfoList) int { return v.NodeNum }).(pulumi.IntOutput)
}

func (o InstanceNodeInfoListOutput) NodeType() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceNodeInfoList) string { return v.NodeType }).(pulumi.StringOutput)
}

func (o InstanceNodeInfoListOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceNodeInfoList) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type InstanceNodeInfoListArrayOutput struct{ *pulumi.OutputState }

func (InstanceNodeInfoListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceNodeInfoList)(nil)).Elem()
}

func (o InstanceNodeInfoListArrayOutput) ToInstanceNodeInfoListArrayOutput() InstanceNodeInfoListArrayOutput {
	return o
}

func (o InstanceNodeInfoListArrayOutput) ToInstanceNodeInfoListArrayOutputWithContext(ctx context.Context) InstanceNodeInfoListArrayOutput {
	return o
}

func (o InstanceNodeInfoListArrayOutput) Index(i pulumi.IntInput) InstanceNodeInfoListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceNodeInfoList {
		return vs[0].([]InstanceNodeInfoList)[vs[1].(int)]
	}).(InstanceNodeInfoListOutput)
}

type InstanceWebNodeTypeInfo struct {
	NodeNum  int    `pulumi:"nodeNum"`
	NodeType string `pulumi:"nodeType"`
}

// InstanceWebNodeTypeInfoInput is an input type that accepts InstanceWebNodeTypeInfoArgs and InstanceWebNodeTypeInfoOutput values.
// You can construct a concrete instance of `InstanceWebNodeTypeInfoInput` via:
//
//	InstanceWebNodeTypeInfoArgs{...}
type InstanceWebNodeTypeInfoInput interface {
	pulumi.Input

	ToInstanceWebNodeTypeInfoOutput() InstanceWebNodeTypeInfoOutput
	ToInstanceWebNodeTypeInfoOutputWithContext(context.Context) InstanceWebNodeTypeInfoOutput
}

type InstanceWebNodeTypeInfoArgs struct {
	NodeNum  pulumi.IntInput    `pulumi:"nodeNum"`
	NodeType pulumi.StringInput `pulumi:"nodeType"`
}

func (InstanceWebNodeTypeInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceWebNodeTypeInfo)(nil)).Elem()
}

func (i InstanceWebNodeTypeInfoArgs) ToInstanceWebNodeTypeInfoOutput() InstanceWebNodeTypeInfoOutput {
	return i.ToInstanceWebNodeTypeInfoOutputWithContext(context.Background())
}

func (i InstanceWebNodeTypeInfoArgs) ToInstanceWebNodeTypeInfoOutputWithContext(ctx context.Context) InstanceWebNodeTypeInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceWebNodeTypeInfoOutput)
}

// InstanceWebNodeTypeInfoArrayInput is an input type that accepts InstanceWebNodeTypeInfoArray and InstanceWebNodeTypeInfoArrayOutput values.
// You can construct a concrete instance of `InstanceWebNodeTypeInfoArrayInput` via:
//
//	InstanceWebNodeTypeInfoArray{ InstanceWebNodeTypeInfoArgs{...} }
type InstanceWebNodeTypeInfoArrayInput interface {
	pulumi.Input

	ToInstanceWebNodeTypeInfoArrayOutput() InstanceWebNodeTypeInfoArrayOutput
	ToInstanceWebNodeTypeInfoArrayOutputWithContext(context.Context) InstanceWebNodeTypeInfoArrayOutput
}

type InstanceWebNodeTypeInfoArray []InstanceWebNodeTypeInfoInput

func (InstanceWebNodeTypeInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceWebNodeTypeInfo)(nil)).Elem()
}

func (i InstanceWebNodeTypeInfoArray) ToInstanceWebNodeTypeInfoArrayOutput() InstanceWebNodeTypeInfoArrayOutput {
	return i.ToInstanceWebNodeTypeInfoArrayOutputWithContext(context.Background())
}

func (i InstanceWebNodeTypeInfoArray) ToInstanceWebNodeTypeInfoArrayOutputWithContext(ctx context.Context) InstanceWebNodeTypeInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceWebNodeTypeInfoArrayOutput)
}

type InstanceWebNodeTypeInfoOutput struct{ *pulumi.OutputState }

func (InstanceWebNodeTypeInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceWebNodeTypeInfo)(nil)).Elem()
}

func (o InstanceWebNodeTypeInfoOutput) ToInstanceWebNodeTypeInfoOutput() InstanceWebNodeTypeInfoOutput {
	return o
}

func (o InstanceWebNodeTypeInfoOutput) ToInstanceWebNodeTypeInfoOutputWithContext(ctx context.Context) InstanceWebNodeTypeInfoOutput {
	return o
}

func (o InstanceWebNodeTypeInfoOutput) NodeNum() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceWebNodeTypeInfo) int { return v.NodeNum }).(pulumi.IntOutput)
}

func (o InstanceWebNodeTypeInfoOutput) NodeType() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceWebNodeTypeInfo) string { return v.NodeType }).(pulumi.StringOutput)
}

type InstanceWebNodeTypeInfoArrayOutput struct{ *pulumi.OutputState }

func (InstanceWebNodeTypeInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceWebNodeTypeInfo)(nil)).Elem()
}

func (o InstanceWebNodeTypeInfoArrayOutput) ToInstanceWebNodeTypeInfoArrayOutput() InstanceWebNodeTypeInfoArrayOutput {
	return o
}

func (o InstanceWebNodeTypeInfoArrayOutput) ToInstanceWebNodeTypeInfoArrayOutputWithContext(ctx context.Context) InstanceWebNodeTypeInfoArrayOutput {
	return o
}

func (o InstanceWebNodeTypeInfoArrayOutput) Index(i pulumi.IntInput) InstanceWebNodeTypeInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceWebNodeTypeInfo {
		return vs[0].([]InstanceWebNodeTypeInfo)[vs[1].(int)]
	}).(InstanceWebNodeTypeInfoOutput)
}

type GetInstancesInstanceList struct {
	AvailabilityZone    string                                  `pulumi:"availabilityZone"`
	BasicSecurityType   int                                     `pulumi:"basicSecurityType"`
	ChargeType          string                                  `pulumi:"chargeType"`
	CreateTime          string                                  `pulumi:"createTime"`
	DeployMode          int                                     `pulumi:"deployMode"`
	ElasticsearchDomain string                                  `pulumi:"elasticsearchDomain"`
	ElasticsearchPort   int                                     `pulumi:"elasticsearchPort"`
	ElasticsearchVip    string                                  `pulumi:"elasticsearchVip"`
	InstanceId          string                                  `pulumi:"instanceId"`
	InstanceName        string                                  `pulumi:"instanceName"`
	KibanaUrl           string                                  `pulumi:"kibanaUrl"`
	LicenseType         string                                  `pulumi:"licenseType"`
	MultiZoneInfos      []GetInstancesInstanceListMultiZoneInfo `pulumi:"multiZoneInfos"`
	NodeInfoLists       []GetInstancesInstanceListNodeInfoList  `pulumi:"nodeInfoLists"`
	SubnetId            string                                  `pulumi:"subnetId"`
	Tags                map[string]interface{}                  `pulumi:"tags"`
	Version             string                                  `pulumi:"version"`
	VpcId               string                                  `pulumi:"vpcId"`
}

// GetInstancesInstanceListInput is an input type that accepts GetInstancesInstanceListArgs and GetInstancesInstanceListOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListInput` via:
//
//	GetInstancesInstanceListArgs{...}
type GetInstancesInstanceListInput interface {
	pulumi.Input

	ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput
	ToGetInstancesInstanceListOutputWithContext(context.Context) GetInstancesInstanceListOutput
}

type GetInstancesInstanceListArgs struct {
	AvailabilityZone    pulumi.StringInput                              `pulumi:"availabilityZone"`
	BasicSecurityType   pulumi.IntInput                                 `pulumi:"basicSecurityType"`
	ChargeType          pulumi.StringInput                              `pulumi:"chargeType"`
	CreateTime          pulumi.StringInput                              `pulumi:"createTime"`
	DeployMode          pulumi.IntInput                                 `pulumi:"deployMode"`
	ElasticsearchDomain pulumi.StringInput                              `pulumi:"elasticsearchDomain"`
	ElasticsearchPort   pulumi.IntInput                                 `pulumi:"elasticsearchPort"`
	ElasticsearchVip    pulumi.StringInput                              `pulumi:"elasticsearchVip"`
	InstanceId          pulumi.StringInput                              `pulumi:"instanceId"`
	InstanceName        pulumi.StringInput                              `pulumi:"instanceName"`
	KibanaUrl           pulumi.StringInput                              `pulumi:"kibanaUrl"`
	LicenseType         pulumi.StringInput                              `pulumi:"licenseType"`
	MultiZoneInfos      GetInstancesInstanceListMultiZoneInfoArrayInput `pulumi:"multiZoneInfos"`
	NodeInfoLists       GetInstancesInstanceListNodeInfoListArrayInput  `pulumi:"nodeInfoLists"`
	SubnetId            pulumi.StringInput                              `pulumi:"subnetId"`
	Tags                pulumi.MapInput                                 `pulumi:"tags"`
	Version             pulumi.StringInput                              `pulumi:"version"`
	VpcId               pulumi.StringInput                              `pulumi:"vpcId"`
}

func (GetInstancesInstanceListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceList)(nil)).Elem()
}

func (i GetInstancesInstanceListArgs) ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput {
	return i.ToGetInstancesInstanceListOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListArgs) ToGetInstancesInstanceListOutputWithContext(ctx context.Context) GetInstancesInstanceListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListOutput)
}

// GetInstancesInstanceListArrayInput is an input type that accepts GetInstancesInstanceListArray and GetInstancesInstanceListArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListArrayInput` via:
//
//	GetInstancesInstanceListArray{ GetInstancesInstanceListArgs{...} }
type GetInstancesInstanceListArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput
	ToGetInstancesInstanceListArrayOutputWithContext(context.Context) GetInstancesInstanceListArrayOutput
}

type GetInstancesInstanceListArray []GetInstancesInstanceListInput

func (GetInstancesInstanceListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceList)(nil)).Elem()
}

func (i GetInstancesInstanceListArray) ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput {
	return i.ToGetInstancesInstanceListArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListArray) ToGetInstancesInstanceListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListArrayOutput)
}

type GetInstancesInstanceListOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceList)(nil)).Elem()
}

func (o GetInstancesInstanceListOutput) ToGetInstancesInstanceListOutput() GetInstancesInstanceListOutput {
	return o
}

func (o GetInstancesInstanceListOutput) ToGetInstancesInstanceListOutputWithContext(ctx context.Context) GetInstancesInstanceListOutput {
	return o
}

func (o GetInstancesInstanceListOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceListOutput) BasicSecurityType() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.BasicSecurityType }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceListOutput) ChargeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.ChargeType }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceListOutput) DeployMode() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.DeployMode }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceListOutput) ElasticsearchDomain() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.ElasticsearchDomain }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceListOutput) ElasticsearchPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) int { return v.ElasticsearchPort }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceListOutput) ElasticsearchVip() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.ElasticsearchVip }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceListOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceListOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.InstanceName }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceListOutput) KibanaUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.KibanaUrl }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceListOutput) LicenseType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.LicenseType }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceListOutput) MultiZoneInfos() GetInstancesInstanceListMultiZoneInfoArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) []GetInstancesInstanceListMultiZoneInfo { return v.MultiZoneInfos }).(GetInstancesInstanceListMultiZoneInfoArrayOutput)
}

func (o GetInstancesInstanceListOutput) NodeInfoLists() GetInstancesInstanceListNodeInfoListArrayOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) []GetInstancesInstanceListNodeInfoList { return v.NodeInfoLists }).(GetInstancesInstanceListNodeInfoListArrayOutput)
}

func (o GetInstancesInstanceListOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.SubnetId }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceListOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func (o GetInstancesInstanceListOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.Version }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceListOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceList) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetInstancesInstanceListArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceList)(nil)).Elem()
}

func (o GetInstancesInstanceListArrayOutput) ToGetInstancesInstanceListArrayOutput() GetInstancesInstanceListArrayOutput {
	return o
}

func (o GetInstancesInstanceListArrayOutput) ToGetInstancesInstanceListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListArrayOutput {
	return o
}

func (o GetInstancesInstanceListArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceList {
		return vs[0].([]GetInstancesInstanceList)[vs[1].(int)]
	}).(GetInstancesInstanceListOutput)
}

type GetInstancesInstanceListMultiZoneInfo struct {
	AvailabilityZone string `pulumi:"availabilityZone"`
	SubnetId         string `pulumi:"subnetId"`
}

// GetInstancesInstanceListMultiZoneInfoInput is an input type that accepts GetInstancesInstanceListMultiZoneInfoArgs and GetInstancesInstanceListMultiZoneInfoOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListMultiZoneInfoInput` via:
//
//	GetInstancesInstanceListMultiZoneInfoArgs{...}
type GetInstancesInstanceListMultiZoneInfoInput interface {
	pulumi.Input

	ToGetInstancesInstanceListMultiZoneInfoOutput() GetInstancesInstanceListMultiZoneInfoOutput
	ToGetInstancesInstanceListMultiZoneInfoOutputWithContext(context.Context) GetInstancesInstanceListMultiZoneInfoOutput
}

type GetInstancesInstanceListMultiZoneInfoArgs struct {
	AvailabilityZone pulumi.StringInput `pulumi:"availabilityZone"`
	SubnetId         pulumi.StringInput `pulumi:"subnetId"`
}

func (GetInstancesInstanceListMultiZoneInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceListMultiZoneInfo)(nil)).Elem()
}

func (i GetInstancesInstanceListMultiZoneInfoArgs) ToGetInstancesInstanceListMultiZoneInfoOutput() GetInstancesInstanceListMultiZoneInfoOutput {
	return i.ToGetInstancesInstanceListMultiZoneInfoOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListMultiZoneInfoArgs) ToGetInstancesInstanceListMultiZoneInfoOutputWithContext(ctx context.Context) GetInstancesInstanceListMultiZoneInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListMultiZoneInfoOutput)
}

// GetInstancesInstanceListMultiZoneInfoArrayInput is an input type that accepts GetInstancesInstanceListMultiZoneInfoArray and GetInstancesInstanceListMultiZoneInfoArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListMultiZoneInfoArrayInput` via:
//
//	GetInstancesInstanceListMultiZoneInfoArray{ GetInstancesInstanceListMultiZoneInfoArgs{...} }
type GetInstancesInstanceListMultiZoneInfoArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceListMultiZoneInfoArrayOutput() GetInstancesInstanceListMultiZoneInfoArrayOutput
	ToGetInstancesInstanceListMultiZoneInfoArrayOutputWithContext(context.Context) GetInstancesInstanceListMultiZoneInfoArrayOutput
}

type GetInstancesInstanceListMultiZoneInfoArray []GetInstancesInstanceListMultiZoneInfoInput

func (GetInstancesInstanceListMultiZoneInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceListMultiZoneInfo)(nil)).Elem()
}

func (i GetInstancesInstanceListMultiZoneInfoArray) ToGetInstancesInstanceListMultiZoneInfoArrayOutput() GetInstancesInstanceListMultiZoneInfoArrayOutput {
	return i.ToGetInstancesInstanceListMultiZoneInfoArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListMultiZoneInfoArray) ToGetInstancesInstanceListMultiZoneInfoArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListMultiZoneInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListMultiZoneInfoArrayOutput)
}

type GetInstancesInstanceListMultiZoneInfoOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListMultiZoneInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceListMultiZoneInfo)(nil)).Elem()
}

func (o GetInstancesInstanceListMultiZoneInfoOutput) ToGetInstancesInstanceListMultiZoneInfoOutput() GetInstancesInstanceListMultiZoneInfoOutput {
	return o
}

func (o GetInstancesInstanceListMultiZoneInfoOutput) ToGetInstancesInstanceListMultiZoneInfoOutputWithContext(ctx context.Context) GetInstancesInstanceListMultiZoneInfoOutput {
	return o
}

func (o GetInstancesInstanceListMultiZoneInfoOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceListMultiZoneInfo) string { return v.AvailabilityZone }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceListMultiZoneInfoOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceListMultiZoneInfo) string { return v.SubnetId }).(pulumi.StringOutput)
}

type GetInstancesInstanceListMultiZoneInfoArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListMultiZoneInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceListMultiZoneInfo)(nil)).Elem()
}

func (o GetInstancesInstanceListMultiZoneInfoArrayOutput) ToGetInstancesInstanceListMultiZoneInfoArrayOutput() GetInstancesInstanceListMultiZoneInfoArrayOutput {
	return o
}

func (o GetInstancesInstanceListMultiZoneInfoArrayOutput) ToGetInstancesInstanceListMultiZoneInfoArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListMultiZoneInfoArrayOutput {
	return o
}

func (o GetInstancesInstanceListMultiZoneInfoArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceListMultiZoneInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceListMultiZoneInfo {
		return vs[0].([]GetInstancesInstanceListMultiZoneInfo)[vs[1].(int)]
	}).(GetInstancesInstanceListMultiZoneInfoOutput)
}

type GetInstancesInstanceListNodeInfoList struct {
	DiskSize int    `pulumi:"diskSize"`
	DiskType string `pulumi:"diskType"`
	Encrypt  bool   `pulumi:"encrypt"`
	NodeNum  int    `pulumi:"nodeNum"`
	NodeType string `pulumi:"nodeType"`
	Type     string `pulumi:"type"`
}

// GetInstancesInstanceListNodeInfoListInput is an input type that accepts GetInstancesInstanceListNodeInfoListArgs and GetInstancesInstanceListNodeInfoListOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListNodeInfoListInput` via:
//
//	GetInstancesInstanceListNodeInfoListArgs{...}
type GetInstancesInstanceListNodeInfoListInput interface {
	pulumi.Input

	ToGetInstancesInstanceListNodeInfoListOutput() GetInstancesInstanceListNodeInfoListOutput
	ToGetInstancesInstanceListNodeInfoListOutputWithContext(context.Context) GetInstancesInstanceListNodeInfoListOutput
}

type GetInstancesInstanceListNodeInfoListArgs struct {
	DiskSize pulumi.IntInput    `pulumi:"diskSize"`
	DiskType pulumi.StringInput `pulumi:"diskType"`
	Encrypt  pulumi.BoolInput   `pulumi:"encrypt"`
	NodeNum  pulumi.IntInput    `pulumi:"nodeNum"`
	NodeType pulumi.StringInput `pulumi:"nodeType"`
	Type     pulumi.StringInput `pulumi:"type"`
}

func (GetInstancesInstanceListNodeInfoListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceListNodeInfoList)(nil)).Elem()
}

func (i GetInstancesInstanceListNodeInfoListArgs) ToGetInstancesInstanceListNodeInfoListOutput() GetInstancesInstanceListNodeInfoListOutput {
	return i.ToGetInstancesInstanceListNodeInfoListOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListNodeInfoListArgs) ToGetInstancesInstanceListNodeInfoListOutputWithContext(ctx context.Context) GetInstancesInstanceListNodeInfoListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListNodeInfoListOutput)
}

// GetInstancesInstanceListNodeInfoListArrayInput is an input type that accepts GetInstancesInstanceListNodeInfoListArray and GetInstancesInstanceListNodeInfoListArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstanceListNodeInfoListArrayInput` via:
//
//	GetInstancesInstanceListNodeInfoListArray{ GetInstancesInstanceListNodeInfoListArgs{...} }
type GetInstancesInstanceListNodeInfoListArrayInput interface {
	pulumi.Input

	ToGetInstancesInstanceListNodeInfoListArrayOutput() GetInstancesInstanceListNodeInfoListArrayOutput
	ToGetInstancesInstanceListNodeInfoListArrayOutputWithContext(context.Context) GetInstancesInstanceListNodeInfoListArrayOutput
}

type GetInstancesInstanceListNodeInfoListArray []GetInstancesInstanceListNodeInfoListInput

func (GetInstancesInstanceListNodeInfoListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceListNodeInfoList)(nil)).Elem()
}

func (i GetInstancesInstanceListNodeInfoListArray) ToGetInstancesInstanceListNodeInfoListArrayOutput() GetInstancesInstanceListNodeInfoListArrayOutput {
	return i.ToGetInstancesInstanceListNodeInfoListArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstanceListNodeInfoListArray) ToGetInstancesInstanceListNodeInfoListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListNodeInfoListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstanceListNodeInfoListArrayOutput)
}

type GetInstancesInstanceListNodeInfoListOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListNodeInfoListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstanceListNodeInfoList)(nil)).Elem()
}

func (o GetInstancesInstanceListNodeInfoListOutput) ToGetInstancesInstanceListNodeInfoListOutput() GetInstancesInstanceListNodeInfoListOutput {
	return o
}

func (o GetInstancesInstanceListNodeInfoListOutput) ToGetInstancesInstanceListNodeInfoListOutputWithContext(ctx context.Context) GetInstancesInstanceListNodeInfoListOutput {
	return o
}

func (o GetInstancesInstanceListNodeInfoListOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceListNodeInfoList) int { return v.DiskSize }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceListNodeInfoListOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceListNodeInfoList) string { return v.DiskType }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceListNodeInfoListOutput) Encrypt() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstanceListNodeInfoList) bool { return v.Encrypt }).(pulumi.BoolOutput)
}

func (o GetInstancesInstanceListNodeInfoListOutput) NodeNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstanceListNodeInfoList) int { return v.NodeNum }).(pulumi.IntOutput)
}

func (o GetInstancesInstanceListNodeInfoListOutput) NodeType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceListNodeInfoList) string { return v.NodeType }).(pulumi.StringOutput)
}

func (o GetInstancesInstanceListNodeInfoListOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstanceListNodeInfoList) string { return v.Type }).(pulumi.StringOutput)
}

type GetInstancesInstanceListNodeInfoListArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstanceListNodeInfoListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstanceListNodeInfoList)(nil)).Elem()
}

func (o GetInstancesInstanceListNodeInfoListArrayOutput) ToGetInstancesInstanceListNodeInfoListArrayOutput() GetInstancesInstanceListNodeInfoListArrayOutput {
	return o
}

func (o GetInstancesInstanceListNodeInfoListArrayOutput) ToGetInstancesInstanceListNodeInfoListArrayOutputWithContext(ctx context.Context) GetInstancesInstanceListNodeInfoListArrayOutput {
	return o
}

func (o GetInstancesInstanceListNodeInfoListArrayOutput) Index(i pulumi.IntInput) GetInstancesInstanceListNodeInfoListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstanceListNodeInfoList {
		return vs[0].([]GetInstancesInstanceListNodeInfoList)[vs[1].(int)]
	}).(GetInstancesInstanceListNodeInfoListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceEsAclInput)(nil)).Elem(), InstanceEsAclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceEsAclPtrInput)(nil)).Elem(), InstanceEsAclArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMultiZoneInfoInput)(nil)).Elem(), InstanceMultiZoneInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceMultiZoneInfoArrayInput)(nil)).Elem(), InstanceMultiZoneInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceNodeInfoListInput)(nil)).Elem(), InstanceNodeInfoListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceNodeInfoListArrayInput)(nil)).Elem(), InstanceNodeInfoListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceWebNodeTypeInfoInput)(nil)).Elem(), InstanceWebNodeTypeInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceWebNodeTypeInfoArrayInput)(nil)).Elem(), InstanceWebNodeTypeInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListInput)(nil)).Elem(), GetInstancesInstanceListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListArrayInput)(nil)).Elem(), GetInstancesInstanceListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListMultiZoneInfoInput)(nil)).Elem(), GetInstancesInstanceListMultiZoneInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListMultiZoneInfoArrayInput)(nil)).Elem(), GetInstancesInstanceListMultiZoneInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListNodeInfoListInput)(nil)).Elem(), GetInstancesInstanceListNodeInfoListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstanceListNodeInfoListArrayInput)(nil)).Elem(), GetInstancesInstanceListNodeInfoListArray{})
	pulumi.RegisterOutputType(InstanceEsAclOutput{})
	pulumi.RegisterOutputType(InstanceEsAclPtrOutput{})
	pulumi.RegisterOutputType(InstanceMultiZoneInfoOutput{})
	pulumi.RegisterOutputType(InstanceMultiZoneInfoArrayOutput{})
	pulumi.RegisterOutputType(InstanceNodeInfoListOutput{})
	pulumi.RegisterOutputType(InstanceNodeInfoListArrayOutput{})
	pulumi.RegisterOutputType(InstanceWebNodeTypeInfoOutput{})
	pulumi.RegisterOutputType(InstanceWebNodeTypeInfoArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListMultiZoneInfoOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListMultiZoneInfoArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListNodeInfoListOutput{})
	pulumi.RegisterOutputType(GetInstancesInstanceListNodeInfoListArrayOutput{})
}
