// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package deprecatednats

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetNats(ctx *pulumi.Context, args *GetNatsArgs, opts ...pulumi.InvokeOption) (*GetNatsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetNatsResult
	err := ctx.Invoke("tencentcloud:Deprecatednats/getNats:getNats", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getNats.
type GetNatsArgs struct {
	Bandwidth     *int    `pulumi:"bandwidth"`
	Id            *string `pulumi:"id"`
	MaxConcurrent *int    `pulumi:"maxConcurrent"`
	Name          *string `pulumi:"name"`
	State         *int    `pulumi:"state"`
	VpcId         *string `pulumi:"vpcId"`
}

// A collection of values returned by getNats.
type GetNatsResult struct {
	Bandwidth     *int         `pulumi:"bandwidth"`
	Id            *string      `pulumi:"id"`
	MaxConcurrent *int         `pulumi:"maxConcurrent"`
	Name          *string      `pulumi:"name"`
	Nats          []GetNatsNat `pulumi:"nats"`
	State         *int         `pulumi:"state"`
	VpcId         *string      `pulumi:"vpcId"`
}

func GetNatsOutput(ctx *pulumi.Context, args GetNatsOutputArgs, opts ...pulumi.InvokeOption) GetNatsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetNatsResult, error) {
			args := v.(GetNatsArgs)
			r, err := GetNats(ctx, &args, opts...)
			var s GetNatsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetNatsResultOutput)
}

// A collection of arguments for invoking getNats.
type GetNatsOutputArgs struct {
	Bandwidth     pulumi.IntPtrInput    `pulumi:"bandwidth"`
	Id            pulumi.StringPtrInput `pulumi:"id"`
	MaxConcurrent pulumi.IntPtrInput    `pulumi:"maxConcurrent"`
	Name          pulumi.StringPtrInput `pulumi:"name"`
	State         pulumi.IntPtrInput    `pulumi:"state"`
	VpcId         pulumi.StringPtrInput `pulumi:"vpcId"`
}

func (GetNatsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatsArgs)(nil)).Elem()
}

// A collection of values returned by getNats.
type GetNatsResultOutput struct{ *pulumi.OutputState }

func (GetNatsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatsResult)(nil)).Elem()
}

func (o GetNatsResultOutput) ToGetNatsResultOutput() GetNatsResultOutput {
	return o
}

func (o GetNatsResultOutput) ToGetNatsResultOutputWithContext(ctx context.Context) GetNatsResultOutput {
	return o
}

func (o GetNatsResultOutput) Bandwidth() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetNatsResult) *int { return v.Bandwidth }).(pulumi.IntPtrOutput)
}

func (o GetNatsResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNatsResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o GetNatsResultOutput) MaxConcurrent() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetNatsResult) *int { return v.MaxConcurrent }).(pulumi.IntPtrOutput)
}

func (o GetNatsResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNatsResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o GetNatsResultOutput) Nats() GetNatsNatArrayOutput {
	return o.ApplyT(func(v GetNatsResult) []GetNatsNat { return v.Nats }).(GetNatsNatArrayOutput)
}

func (o GetNatsResultOutput) State() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetNatsResult) *int { return v.State }).(pulumi.IntPtrOutput)
}

func (o GetNatsResultOutput) VpcId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetNatsResult) *string { return v.VpcId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetNatsResultOutput{})
}
