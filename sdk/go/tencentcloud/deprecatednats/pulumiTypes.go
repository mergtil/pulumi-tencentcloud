// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package deprecatednats

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GetNatsNat struct {
	AssignedEipSets []string `pulumi:"assignedEipSets"`
	Bandwidth       int      `pulumi:"bandwidth"`
	CreateTime      string   `pulumi:"createTime"`
	Id              string   `pulumi:"id"`
	MaxConcurrent   int      `pulumi:"maxConcurrent"`
	Name            string   `pulumi:"name"`
	State           int      `pulumi:"state"`
	VpcId           string   `pulumi:"vpcId"`
}

// GetNatsNatInput is an input type that accepts GetNatsNatArgs and GetNatsNatOutput values.
// You can construct a concrete instance of `GetNatsNatInput` via:
//
//	GetNatsNatArgs{...}
type GetNatsNatInput interface {
	pulumi.Input

	ToGetNatsNatOutput() GetNatsNatOutput
	ToGetNatsNatOutputWithContext(context.Context) GetNatsNatOutput
}

type GetNatsNatArgs struct {
	AssignedEipSets pulumi.StringArrayInput `pulumi:"assignedEipSets"`
	Bandwidth       pulumi.IntInput         `pulumi:"bandwidth"`
	CreateTime      pulumi.StringInput      `pulumi:"createTime"`
	Id              pulumi.StringInput      `pulumi:"id"`
	MaxConcurrent   pulumi.IntInput         `pulumi:"maxConcurrent"`
	Name            pulumi.StringInput      `pulumi:"name"`
	State           pulumi.IntInput         `pulumi:"state"`
	VpcId           pulumi.StringInput      `pulumi:"vpcId"`
}

func (GetNatsNatArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatsNat)(nil)).Elem()
}

func (i GetNatsNatArgs) ToGetNatsNatOutput() GetNatsNatOutput {
	return i.ToGetNatsNatOutputWithContext(context.Background())
}

func (i GetNatsNatArgs) ToGetNatsNatOutputWithContext(ctx context.Context) GetNatsNatOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatsNatOutput)
}

// GetNatsNatArrayInput is an input type that accepts GetNatsNatArray and GetNatsNatArrayOutput values.
// You can construct a concrete instance of `GetNatsNatArrayInput` via:
//
//	GetNatsNatArray{ GetNatsNatArgs{...} }
type GetNatsNatArrayInput interface {
	pulumi.Input

	ToGetNatsNatArrayOutput() GetNatsNatArrayOutput
	ToGetNatsNatArrayOutputWithContext(context.Context) GetNatsNatArrayOutput
}

type GetNatsNatArray []GetNatsNatInput

func (GetNatsNatArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatsNat)(nil)).Elem()
}

func (i GetNatsNatArray) ToGetNatsNatArrayOutput() GetNatsNatArrayOutput {
	return i.ToGetNatsNatArrayOutputWithContext(context.Background())
}

func (i GetNatsNatArray) ToGetNatsNatArrayOutputWithContext(ctx context.Context) GetNatsNatArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNatsNatArrayOutput)
}

type GetNatsNatOutput struct{ *pulumi.OutputState }

func (GetNatsNatOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNatsNat)(nil)).Elem()
}

func (o GetNatsNatOutput) ToGetNatsNatOutput() GetNatsNatOutput {
	return o
}

func (o GetNatsNatOutput) ToGetNatsNatOutputWithContext(ctx context.Context) GetNatsNatOutput {
	return o
}

func (o GetNatsNatOutput) AssignedEipSets() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetNatsNat) []string { return v.AssignedEipSets }).(pulumi.StringArrayOutput)
}

func (o GetNatsNatOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetNatsNat) int { return v.Bandwidth }).(pulumi.IntOutput)
}

func (o GetNatsNatOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatsNat) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o GetNatsNatOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatsNat) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetNatsNatOutput) MaxConcurrent() pulumi.IntOutput {
	return o.ApplyT(func(v GetNatsNat) int { return v.MaxConcurrent }).(pulumi.IntOutput)
}

func (o GetNatsNatOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatsNat) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetNatsNatOutput) State() pulumi.IntOutput {
	return o.ApplyT(func(v GetNatsNat) int { return v.State }).(pulumi.IntOutput)
}

func (o GetNatsNatOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNatsNat) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetNatsNatArrayOutput struct{ *pulumi.OutputState }

func (GetNatsNatArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNatsNat)(nil)).Elem()
}

func (o GetNatsNatArrayOutput) ToGetNatsNatArrayOutput() GetNatsNatArrayOutput {
	return o
}

func (o GetNatsNatArrayOutput) ToGetNatsNatArrayOutputWithContext(ctx context.Context) GetNatsNatArrayOutput {
	return o
}

func (o GetNatsNatArrayOutput) Index(i pulumi.IntInput) GetNatsNatOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNatsNat {
		return vs[0].([]GetNatsNat)[vs[1].(int)]
	}).(GetNatsNatOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetNatsNatInput)(nil)).Elem(), GetNatsNatArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNatsNatArrayInput)(nil)).Elem(), GetNatsNatArray{})
	pulumi.RegisterOutputType(GetNatsNatOutput{})
	pulumi.RegisterOutputType(GetNatsNatArrayOutput{})
}
