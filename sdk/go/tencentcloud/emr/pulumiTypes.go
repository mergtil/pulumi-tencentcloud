// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package emr

import (
	"context"
	"reflect"

	"github.com/mergtil/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type ClusterResourceSpec struct {
	CommonCount        *int                                   `pulumi:"commonCount"`
	CommonResourceSpec *ClusterResourceSpecCommonResourceSpec `pulumi:"commonResourceSpec"`
	CoreCount          *int                                   `pulumi:"coreCount"`
	CoreResourceSpec   *ClusterResourceSpecCoreResourceSpec   `pulumi:"coreResourceSpec"`
	MasterCount        *int                                   `pulumi:"masterCount"`
	MasterResourceSpec *ClusterResourceSpecMasterResourceSpec `pulumi:"masterResourceSpec"`
	TaskCount          *int                                   `pulumi:"taskCount"`
	TaskResourceSpec   *ClusterResourceSpecTaskResourceSpec   `pulumi:"taskResourceSpec"`
}

// ClusterResourceSpecInput is an input type that accepts ClusterResourceSpecArgs and ClusterResourceSpecOutput values.
// You can construct a concrete instance of `ClusterResourceSpecInput` via:
//
//	ClusterResourceSpecArgs{...}
type ClusterResourceSpecInput interface {
	pulumi.Input

	ToClusterResourceSpecOutput() ClusterResourceSpecOutput
	ToClusterResourceSpecOutputWithContext(context.Context) ClusterResourceSpecOutput
}

type ClusterResourceSpecArgs struct {
	CommonCount        pulumi.IntPtrInput                            `pulumi:"commonCount"`
	CommonResourceSpec ClusterResourceSpecCommonResourceSpecPtrInput `pulumi:"commonResourceSpec"`
	CoreCount          pulumi.IntPtrInput                            `pulumi:"coreCount"`
	CoreResourceSpec   ClusterResourceSpecCoreResourceSpecPtrInput   `pulumi:"coreResourceSpec"`
	MasterCount        pulumi.IntPtrInput                            `pulumi:"masterCount"`
	MasterResourceSpec ClusterResourceSpecMasterResourceSpecPtrInput `pulumi:"masterResourceSpec"`
	TaskCount          pulumi.IntPtrInput                            `pulumi:"taskCount"`
	TaskResourceSpec   ClusterResourceSpecTaskResourceSpecPtrInput   `pulumi:"taskResourceSpec"`
}

func (ClusterResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceSpec)(nil)).Elem()
}

func (i ClusterResourceSpecArgs) ToClusterResourceSpecOutput() ClusterResourceSpecOutput {
	return i.ToClusterResourceSpecOutputWithContext(context.Background())
}

func (i ClusterResourceSpecArgs) ToClusterResourceSpecOutputWithContext(ctx context.Context) ClusterResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceSpecOutput)
}

func (i ClusterResourceSpecArgs) ToClusterResourceSpecPtrOutput() ClusterResourceSpecPtrOutput {
	return i.ToClusterResourceSpecPtrOutputWithContext(context.Background())
}

func (i ClusterResourceSpecArgs) ToClusterResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceSpecOutput).ToClusterResourceSpecPtrOutputWithContext(ctx)
}

// ClusterResourceSpecPtrInput is an input type that accepts ClusterResourceSpecArgs, ClusterResourceSpecPtr and ClusterResourceSpecPtrOutput values.
// You can construct a concrete instance of `ClusterResourceSpecPtrInput` via:
//
//	        ClusterResourceSpecArgs{...}
//
//	or:
//
//	        nil
type ClusterResourceSpecPtrInput interface {
	pulumi.Input

	ToClusterResourceSpecPtrOutput() ClusterResourceSpecPtrOutput
	ToClusterResourceSpecPtrOutputWithContext(context.Context) ClusterResourceSpecPtrOutput
}

type clusterResourceSpecPtrType ClusterResourceSpecArgs

func ClusterResourceSpecPtr(v *ClusterResourceSpecArgs) ClusterResourceSpecPtrInput {
	return (*clusterResourceSpecPtrType)(v)
}

func (*clusterResourceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceSpec)(nil)).Elem()
}

func (i *clusterResourceSpecPtrType) ToClusterResourceSpecPtrOutput() ClusterResourceSpecPtrOutput {
	return i.ToClusterResourceSpecPtrOutputWithContext(context.Background())
}

func (i *clusterResourceSpecPtrType) ToClusterResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceSpecPtrOutput)
}

type ClusterResourceSpecOutput struct{ *pulumi.OutputState }

func (ClusterResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceSpec)(nil)).Elem()
}

func (o ClusterResourceSpecOutput) ToClusterResourceSpecOutput() ClusterResourceSpecOutput {
	return o
}

func (o ClusterResourceSpecOutput) ToClusterResourceSpecOutputWithContext(ctx context.Context) ClusterResourceSpecOutput {
	return o
}

func (o ClusterResourceSpecOutput) ToClusterResourceSpecPtrOutput() ClusterResourceSpecPtrOutput {
	return o.ToClusterResourceSpecPtrOutputWithContext(context.Background())
}

func (o ClusterResourceSpecOutput) ToClusterResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterResourceSpec) *ClusterResourceSpec {
		return &v
	}).(ClusterResourceSpecPtrOutput)
}

func (o ClusterResourceSpecOutput) CommonCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpec) *int { return v.CommonCount }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecOutput) CommonResourceSpec() ClusterResourceSpecCommonResourceSpecPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpec) *ClusterResourceSpecCommonResourceSpec { return v.CommonResourceSpec }).(ClusterResourceSpecCommonResourceSpecPtrOutput)
}

func (o ClusterResourceSpecOutput) CoreCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpec) *int { return v.CoreCount }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecOutput) CoreResourceSpec() ClusterResourceSpecCoreResourceSpecPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpec) *ClusterResourceSpecCoreResourceSpec { return v.CoreResourceSpec }).(ClusterResourceSpecCoreResourceSpecPtrOutput)
}

func (o ClusterResourceSpecOutput) MasterCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpec) *int { return v.MasterCount }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecOutput) MasterResourceSpec() ClusterResourceSpecMasterResourceSpecPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpec) *ClusterResourceSpecMasterResourceSpec { return v.MasterResourceSpec }).(ClusterResourceSpecMasterResourceSpecPtrOutput)
}

func (o ClusterResourceSpecOutput) TaskCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpec) *int { return v.TaskCount }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecOutput) TaskResourceSpec() ClusterResourceSpecTaskResourceSpecPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpec) *ClusterResourceSpecTaskResourceSpec { return v.TaskResourceSpec }).(ClusterResourceSpecTaskResourceSpecPtrOutput)
}

type ClusterResourceSpecPtrOutput struct{ *pulumi.OutputState }

func (ClusterResourceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceSpec)(nil)).Elem()
}

func (o ClusterResourceSpecPtrOutput) ToClusterResourceSpecPtrOutput() ClusterResourceSpecPtrOutput {
	return o
}

func (o ClusterResourceSpecPtrOutput) ToClusterResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecPtrOutput {
	return o
}

func (o ClusterResourceSpecPtrOutput) Elem() ClusterResourceSpecOutput {
	return o.ApplyT(func(v *ClusterResourceSpec) ClusterResourceSpec {
		if v != nil {
			return *v
		}
		var ret ClusterResourceSpec
		return ret
	}).(ClusterResourceSpecOutput)
}

func (o ClusterResourceSpecPtrOutput) CommonCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.CommonCount
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecPtrOutput) CommonResourceSpec() ClusterResourceSpecCommonResourceSpecPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpec) *ClusterResourceSpecCommonResourceSpec {
		if v == nil {
			return nil
		}
		return v.CommonResourceSpec
	}).(ClusterResourceSpecCommonResourceSpecPtrOutput)
}

func (o ClusterResourceSpecPtrOutput) CoreCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.CoreCount
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecPtrOutput) CoreResourceSpec() ClusterResourceSpecCoreResourceSpecPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpec) *ClusterResourceSpecCoreResourceSpec {
		if v == nil {
			return nil
		}
		return v.CoreResourceSpec
	}).(ClusterResourceSpecCoreResourceSpecPtrOutput)
}

func (o ClusterResourceSpecPtrOutput) MasterCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.MasterCount
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecPtrOutput) MasterResourceSpec() ClusterResourceSpecMasterResourceSpecPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpec) *ClusterResourceSpecMasterResourceSpec {
		if v == nil {
			return nil
		}
		return v.MasterResourceSpec
	}).(ClusterResourceSpecMasterResourceSpecPtrOutput)
}

func (o ClusterResourceSpecPtrOutput) TaskCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.TaskCount
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecPtrOutput) TaskResourceSpec() ClusterResourceSpecTaskResourceSpecPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpec) *ClusterResourceSpecTaskResourceSpec {
		if v == nil {
			return nil
		}
		return v.TaskResourceSpec
	}).(ClusterResourceSpecTaskResourceSpecPtrOutput)
}

type ClusterResourceSpecCommonResourceSpec struct {
	Cpu         *int    `pulumi:"cpu"`
	DiskSize    *int    `pulumi:"diskSize"`
	DiskType    *string `pulumi:"diskType"`
	MemSize     *int    `pulumi:"memSize"`
	RootSize    *int    `pulumi:"rootSize"`
	Spec        *string `pulumi:"spec"`
	StorageType *int    `pulumi:"storageType"`
}

// ClusterResourceSpecCommonResourceSpecInput is an input type that accepts ClusterResourceSpecCommonResourceSpecArgs and ClusterResourceSpecCommonResourceSpecOutput values.
// You can construct a concrete instance of `ClusterResourceSpecCommonResourceSpecInput` via:
//
//	ClusterResourceSpecCommonResourceSpecArgs{...}
type ClusterResourceSpecCommonResourceSpecInput interface {
	pulumi.Input

	ToClusterResourceSpecCommonResourceSpecOutput() ClusterResourceSpecCommonResourceSpecOutput
	ToClusterResourceSpecCommonResourceSpecOutputWithContext(context.Context) ClusterResourceSpecCommonResourceSpecOutput
}

type ClusterResourceSpecCommonResourceSpecArgs struct {
	Cpu         pulumi.IntPtrInput    `pulumi:"cpu"`
	DiskSize    pulumi.IntPtrInput    `pulumi:"diskSize"`
	DiskType    pulumi.StringPtrInput `pulumi:"diskType"`
	MemSize     pulumi.IntPtrInput    `pulumi:"memSize"`
	RootSize    pulumi.IntPtrInput    `pulumi:"rootSize"`
	Spec        pulumi.StringPtrInput `pulumi:"spec"`
	StorageType pulumi.IntPtrInput    `pulumi:"storageType"`
}

func (ClusterResourceSpecCommonResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceSpecCommonResourceSpec)(nil)).Elem()
}

func (i ClusterResourceSpecCommonResourceSpecArgs) ToClusterResourceSpecCommonResourceSpecOutput() ClusterResourceSpecCommonResourceSpecOutput {
	return i.ToClusterResourceSpecCommonResourceSpecOutputWithContext(context.Background())
}

func (i ClusterResourceSpecCommonResourceSpecArgs) ToClusterResourceSpecCommonResourceSpecOutputWithContext(ctx context.Context) ClusterResourceSpecCommonResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceSpecCommonResourceSpecOutput)
}

func (i ClusterResourceSpecCommonResourceSpecArgs) ToClusterResourceSpecCommonResourceSpecPtrOutput() ClusterResourceSpecCommonResourceSpecPtrOutput {
	return i.ToClusterResourceSpecCommonResourceSpecPtrOutputWithContext(context.Background())
}

func (i ClusterResourceSpecCommonResourceSpecArgs) ToClusterResourceSpecCommonResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecCommonResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceSpecCommonResourceSpecOutput).ToClusterResourceSpecCommonResourceSpecPtrOutputWithContext(ctx)
}

// ClusterResourceSpecCommonResourceSpecPtrInput is an input type that accepts ClusterResourceSpecCommonResourceSpecArgs, ClusterResourceSpecCommonResourceSpecPtr and ClusterResourceSpecCommonResourceSpecPtrOutput values.
// You can construct a concrete instance of `ClusterResourceSpecCommonResourceSpecPtrInput` via:
//
//	        ClusterResourceSpecCommonResourceSpecArgs{...}
//
//	or:
//
//	        nil
type ClusterResourceSpecCommonResourceSpecPtrInput interface {
	pulumi.Input

	ToClusterResourceSpecCommonResourceSpecPtrOutput() ClusterResourceSpecCommonResourceSpecPtrOutput
	ToClusterResourceSpecCommonResourceSpecPtrOutputWithContext(context.Context) ClusterResourceSpecCommonResourceSpecPtrOutput
}

type clusterResourceSpecCommonResourceSpecPtrType ClusterResourceSpecCommonResourceSpecArgs

func ClusterResourceSpecCommonResourceSpecPtr(v *ClusterResourceSpecCommonResourceSpecArgs) ClusterResourceSpecCommonResourceSpecPtrInput {
	return (*clusterResourceSpecCommonResourceSpecPtrType)(v)
}

func (*clusterResourceSpecCommonResourceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceSpecCommonResourceSpec)(nil)).Elem()
}

func (i *clusterResourceSpecCommonResourceSpecPtrType) ToClusterResourceSpecCommonResourceSpecPtrOutput() ClusterResourceSpecCommonResourceSpecPtrOutput {
	return i.ToClusterResourceSpecCommonResourceSpecPtrOutputWithContext(context.Background())
}

func (i *clusterResourceSpecCommonResourceSpecPtrType) ToClusterResourceSpecCommonResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecCommonResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceSpecCommonResourceSpecPtrOutput)
}

type ClusterResourceSpecCommonResourceSpecOutput struct{ *pulumi.OutputState }

func (ClusterResourceSpecCommonResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceSpecCommonResourceSpec)(nil)).Elem()
}

func (o ClusterResourceSpecCommonResourceSpecOutput) ToClusterResourceSpecCommonResourceSpecOutput() ClusterResourceSpecCommonResourceSpecOutput {
	return o
}

func (o ClusterResourceSpecCommonResourceSpecOutput) ToClusterResourceSpecCommonResourceSpecOutputWithContext(ctx context.Context) ClusterResourceSpecCommonResourceSpecOutput {
	return o
}

func (o ClusterResourceSpecCommonResourceSpecOutput) ToClusterResourceSpecCommonResourceSpecPtrOutput() ClusterResourceSpecCommonResourceSpecPtrOutput {
	return o.ToClusterResourceSpecCommonResourceSpecPtrOutputWithContext(context.Background())
}

func (o ClusterResourceSpecCommonResourceSpecOutput) ToClusterResourceSpecCommonResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecCommonResourceSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterResourceSpecCommonResourceSpec) *ClusterResourceSpecCommonResourceSpec {
		return &v
	}).(ClusterResourceSpecCommonResourceSpecPtrOutput)
}

func (o ClusterResourceSpecCommonResourceSpecOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecCommonResourceSpec) *int { return v.Cpu }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCommonResourceSpecOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecCommonResourceSpec) *int { return v.DiskSize }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCommonResourceSpecOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecCommonResourceSpec) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecCommonResourceSpecOutput) MemSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecCommonResourceSpec) *int { return v.MemSize }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCommonResourceSpecOutput) RootSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecCommonResourceSpec) *int { return v.RootSize }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCommonResourceSpecOutput) Spec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecCommonResourceSpec) *string { return v.Spec }).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecCommonResourceSpecOutput) StorageType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecCommonResourceSpec) *int { return v.StorageType }).(pulumi.IntPtrOutput)
}

type ClusterResourceSpecCommonResourceSpecPtrOutput struct{ *pulumi.OutputState }

func (ClusterResourceSpecCommonResourceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceSpecCommonResourceSpec)(nil)).Elem()
}

func (o ClusterResourceSpecCommonResourceSpecPtrOutput) ToClusterResourceSpecCommonResourceSpecPtrOutput() ClusterResourceSpecCommonResourceSpecPtrOutput {
	return o
}

func (o ClusterResourceSpecCommonResourceSpecPtrOutput) ToClusterResourceSpecCommonResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecCommonResourceSpecPtrOutput {
	return o
}

func (o ClusterResourceSpecCommonResourceSpecPtrOutput) Elem() ClusterResourceSpecCommonResourceSpecOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCommonResourceSpec) ClusterResourceSpecCommonResourceSpec {
		if v != nil {
			return *v
		}
		var ret ClusterResourceSpecCommonResourceSpec
		return ret
	}).(ClusterResourceSpecCommonResourceSpecOutput)
}

func (o ClusterResourceSpecCommonResourceSpecPtrOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCommonResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCommonResourceSpecPtrOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCommonResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.DiskSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCommonResourceSpecPtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCommonResourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.DiskType
	}).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecCommonResourceSpecPtrOutput) MemSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCommonResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.MemSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCommonResourceSpecPtrOutput) RootSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCommonResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.RootSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCommonResourceSpecPtrOutput) Spec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCommonResourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecCommonResourceSpecPtrOutput) StorageType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCommonResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.StorageType
	}).(pulumi.IntPtrOutput)
}

type ClusterResourceSpecCoreResourceSpec struct {
	Cpu         *int    `pulumi:"cpu"`
	DiskSize    *int    `pulumi:"diskSize"`
	DiskType    *string `pulumi:"diskType"`
	MemSize     *int    `pulumi:"memSize"`
	RootSize    *int    `pulumi:"rootSize"`
	Spec        *string `pulumi:"spec"`
	StorageType *int    `pulumi:"storageType"`
}

// ClusterResourceSpecCoreResourceSpecInput is an input type that accepts ClusterResourceSpecCoreResourceSpecArgs and ClusterResourceSpecCoreResourceSpecOutput values.
// You can construct a concrete instance of `ClusterResourceSpecCoreResourceSpecInput` via:
//
//	ClusterResourceSpecCoreResourceSpecArgs{...}
type ClusterResourceSpecCoreResourceSpecInput interface {
	pulumi.Input

	ToClusterResourceSpecCoreResourceSpecOutput() ClusterResourceSpecCoreResourceSpecOutput
	ToClusterResourceSpecCoreResourceSpecOutputWithContext(context.Context) ClusterResourceSpecCoreResourceSpecOutput
}

type ClusterResourceSpecCoreResourceSpecArgs struct {
	Cpu         pulumi.IntPtrInput    `pulumi:"cpu"`
	DiskSize    pulumi.IntPtrInput    `pulumi:"diskSize"`
	DiskType    pulumi.StringPtrInput `pulumi:"diskType"`
	MemSize     pulumi.IntPtrInput    `pulumi:"memSize"`
	RootSize    pulumi.IntPtrInput    `pulumi:"rootSize"`
	Spec        pulumi.StringPtrInput `pulumi:"spec"`
	StorageType pulumi.IntPtrInput    `pulumi:"storageType"`
}

func (ClusterResourceSpecCoreResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceSpecCoreResourceSpec)(nil)).Elem()
}

func (i ClusterResourceSpecCoreResourceSpecArgs) ToClusterResourceSpecCoreResourceSpecOutput() ClusterResourceSpecCoreResourceSpecOutput {
	return i.ToClusterResourceSpecCoreResourceSpecOutputWithContext(context.Background())
}

func (i ClusterResourceSpecCoreResourceSpecArgs) ToClusterResourceSpecCoreResourceSpecOutputWithContext(ctx context.Context) ClusterResourceSpecCoreResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceSpecCoreResourceSpecOutput)
}

func (i ClusterResourceSpecCoreResourceSpecArgs) ToClusterResourceSpecCoreResourceSpecPtrOutput() ClusterResourceSpecCoreResourceSpecPtrOutput {
	return i.ToClusterResourceSpecCoreResourceSpecPtrOutputWithContext(context.Background())
}

func (i ClusterResourceSpecCoreResourceSpecArgs) ToClusterResourceSpecCoreResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecCoreResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceSpecCoreResourceSpecOutput).ToClusterResourceSpecCoreResourceSpecPtrOutputWithContext(ctx)
}

// ClusterResourceSpecCoreResourceSpecPtrInput is an input type that accepts ClusterResourceSpecCoreResourceSpecArgs, ClusterResourceSpecCoreResourceSpecPtr and ClusterResourceSpecCoreResourceSpecPtrOutput values.
// You can construct a concrete instance of `ClusterResourceSpecCoreResourceSpecPtrInput` via:
//
//	        ClusterResourceSpecCoreResourceSpecArgs{...}
//
//	or:
//
//	        nil
type ClusterResourceSpecCoreResourceSpecPtrInput interface {
	pulumi.Input

	ToClusterResourceSpecCoreResourceSpecPtrOutput() ClusterResourceSpecCoreResourceSpecPtrOutput
	ToClusterResourceSpecCoreResourceSpecPtrOutputWithContext(context.Context) ClusterResourceSpecCoreResourceSpecPtrOutput
}

type clusterResourceSpecCoreResourceSpecPtrType ClusterResourceSpecCoreResourceSpecArgs

func ClusterResourceSpecCoreResourceSpecPtr(v *ClusterResourceSpecCoreResourceSpecArgs) ClusterResourceSpecCoreResourceSpecPtrInput {
	return (*clusterResourceSpecCoreResourceSpecPtrType)(v)
}

func (*clusterResourceSpecCoreResourceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceSpecCoreResourceSpec)(nil)).Elem()
}

func (i *clusterResourceSpecCoreResourceSpecPtrType) ToClusterResourceSpecCoreResourceSpecPtrOutput() ClusterResourceSpecCoreResourceSpecPtrOutput {
	return i.ToClusterResourceSpecCoreResourceSpecPtrOutputWithContext(context.Background())
}

func (i *clusterResourceSpecCoreResourceSpecPtrType) ToClusterResourceSpecCoreResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecCoreResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceSpecCoreResourceSpecPtrOutput)
}

type ClusterResourceSpecCoreResourceSpecOutput struct{ *pulumi.OutputState }

func (ClusterResourceSpecCoreResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceSpecCoreResourceSpec)(nil)).Elem()
}

func (o ClusterResourceSpecCoreResourceSpecOutput) ToClusterResourceSpecCoreResourceSpecOutput() ClusterResourceSpecCoreResourceSpecOutput {
	return o
}

func (o ClusterResourceSpecCoreResourceSpecOutput) ToClusterResourceSpecCoreResourceSpecOutputWithContext(ctx context.Context) ClusterResourceSpecCoreResourceSpecOutput {
	return o
}

func (o ClusterResourceSpecCoreResourceSpecOutput) ToClusterResourceSpecCoreResourceSpecPtrOutput() ClusterResourceSpecCoreResourceSpecPtrOutput {
	return o.ToClusterResourceSpecCoreResourceSpecPtrOutputWithContext(context.Background())
}

func (o ClusterResourceSpecCoreResourceSpecOutput) ToClusterResourceSpecCoreResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecCoreResourceSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterResourceSpecCoreResourceSpec) *ClusterResourceSpecCoreResourceSpec {
		return &v
	}).(ClusterResourceSpecCoreResourceSpecPtrOutput)
}

func (o ClusterResourceSpecCoreResourceSpecOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecCoreResourceSpec) *int { return v.Cpu }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCoreResourceSpecOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecCoreResourceSpec) *int { return v.DiskSize }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCoreResourceSpecOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecCoreResourceSpec) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecCoreResourceSpecOutput) MemSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecCoreResourceSpec) *int { return v.MemSize }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCoreResourceSpecOutput) RootSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecCoreResourceSpec) *int { return v.RootSize }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCoreResourceSpecOutput) Spec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecCoreResourceSpec) *string { return v.Spec }).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecCoreResourceSpecOutput) StorageType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecCoreResourceSpec) *int { return v.StorageType }).(pulumi.IntPtrOutput)
}

type ClusterResourceSpecCoreResourceSpecPtrOutput struct{ *pulumi.OutputState }

func (ClusterResourceSpecCoreResourceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceSpecCoreResourceSpec)(nil)).Elem()
}

func (o ClusterResourceSpecCoreResourceSpecPtrOutput) ToClusterResourceSpecCoreResourceSpecPtrOutput() ClusterResourceSpecCoreResourceSpecPtrOutput {
	return o
}

func (o ClusterResourceSpecCoreResourceSpecPtrOutput) ToClusterResourceSpecCoreResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecCoreResourceSpecPtrOutput {
	return o
}

func (o ClusterResourceSpecCoreResourceSpecPtrOutput) Elem() ClusterResourceSpecCoreResourceSpecOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCoreResourceSpec) ClusterResourceSpecCoreResourceSpec {
		if v != nil {
			return *v
		}
		var ret ClusterResourceSpecCoreResourceSpec
		return ret
	}).(ClusterResourceSpecCoreResourceSpecOutput)
}

func (o ClusterResourceSpecCoreResourceSpecPtrOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCoreResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCoreResourceSpecPtrOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCoreResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.DiskSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCoreResourceSpecPtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCoreResourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.DiskType
	}).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecCoreResourceSpecPtrOutput) MemSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCoreResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.MemSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCoreResourceSpecPtrOutput) RootSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCoreResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.RootSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecCoreResourceSpecPtrOutput) Spec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCoreResourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecCoreResourceSpecPtrOutput) StorageType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecCoreResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.StorageType
	}).(pulumi.IntPtrOutput)
}

type ClusterResourceSpecMasterResourceSpec struct {
	Cpu         *int    `pulumi:"cpu"`
	DiskSize    *int    `pulumi:"diskSize"`
	DiskType    *string `pulumi:"diskType"`
	MemSize     *int    `pulumi:"memSize"`
	RootSize    *int    `pulumi:"rootSize"`
	Spec        *string `pulumi:"spec"`
	StorageType *int    `pulumi:"storageType"`
}

// ClusterResourceSpecMasterResourceSpecInput is an input type that accepts ClusterResourceSpecMasterResourceSpecArgs and ClusterResourceSpecMasterResourceSpecOutput values.
// You can construct a concrete instance of `ClusterResourceSpecMasterResourceSpecInput` via:
//
//	ClusterResourceSpecMasterResourceSpecArgs{...}
type ClusterResourceSpecMasterResourceSpecInput interface {
	pulumi.Input

	ToClusterResourceSpecMasterResourceSpecOutput() ClusterResourceSpecMasterResourceSpecOutput
	ToClusterResourceSpecMasterResourceSpecOutputWithContext(context.Context) ClusterResourceSpecMasterResourceSpecOutput
}

type ClusterResourceSpecMasterResourceSpecArgs struct {
	Cpu         pulumi.IntPtrInput    `pulumi:"cpu"`
	DiskSize    pulumi.IntPtrInput    `pulumi:"diskSize"`
	DiskType    pulumi.StringPtrInput `pulumi:"diskType"`
	MemSize     pulumi.IntPtrInput    `pulumi:"memSize"`
	RootSize    pulumi.IntPtrInput    `pulumi:"rootSize"`
	Spec        pulumi.StringPtrInput `pulumi:"spec"`
	StorageType pulumi.IntPtrInput    `pulumi:"storageType"`
}

func (ClusterResourceSpecMasterResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceSpecMasterResourceSpec)(nil)).Elem()
}

func (i ClusterResourceSpecMasterResourceSpecArgs) ToClusterResourceSpecMasterResourceSpecOutput() ClusterResourceSpecMasterResourceSpecOutput {
	return i.ToClusterResourceSpecMasterResourceSpecOutputWithContext(context.Background())
}

func (i ClusterResourceSpecMasterResourceSpecArgs) ToClusterResourceSpecMasterResourceSpecOutputWithContext(ctx context.Context) ClusterResourceSpecMasterResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceSpecMasterResourceSpecOutput)
}

func (i ClusterResourceSpecMasterResourceSpecArgs) ToClusterResourceSpecMasterResourceSpecPtrOutput() ClusterResourceSpecMasterResourceSpecPtrOutput {
	return i.ToClusterResourceSpecMasterResourceSpecPtrOutputWithContext(context.Background())
}

func (i ClusterResourceSpecMasterResourceSpecArgs) ToClusterResourceSpecMasterResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecMasterResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceSpecMasterResourceSpecOutput).ToClusterResourceSpecMasterResourceSpecPtrOutputWithContext(ctx)
}

// ClusterResourceSpecMasterResourceSpecPtrInput is an input type that accepts ClusterResourceSpecMasterResourceSpecArgs, ClusterResourceSpecMasterResourceSpecPtr and ClusterResourceSpecMasterResourceSpecPtrOutput values.
// You can construct a concrete instance of `ClusterResourceSpecMasterResourceSpecPtrInput` via:
//
//	        ClusterResourceSpecMasterResourceSpecArgs{...}
//
//	or:
//
//	        nil
type ClusterResourceSpecMasterResourceSpecPtrInput interface {
	pulumi.Input

	ToClusterResourceSpecMasterResourceSpecPtrOutput() ClusterResourceSpecMasterResourceSpecPtrOutput
	ToClusterResourceSpecMasterResourceSpecPtrOutputWithContext(context.Context) ClusterResourceSpecMasterResourceSpecPtrOutput
}

type clusterResourceSpecMasterResourceSpecPtrType ClusterResourceSpecMasterResourceSpecArgs

func ClusterResourceSpecMasterResourceSpecPtr(v *ClusterResourceSpecMasterResourceSpecArgs) ClusterResourceSpecMasterResourceSpecPtrInput {
	return (*clusterResourceSpecMasterResourceSpecPtrType)(v)
}

func (*clusterResourceSpecMasterResourceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceSpecMasterResourceSpec)(nil)).Elem()
}

func (i *clusterResourceSpecMasterResourceSpecPtrType) ToClusterResourceSpecMasterResourceSpecPtrOutput() ClusterResourceSpecMasterResourceSpecPtrOutput {
	return i.ToClusterResourceSpecMasterResourceSpecPtrOutputWithContext(context.Background())
}

func (i *clusterResourceSpecMasterResourceSpecPtrType) ToClusterResourceSpecMasterResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecMasterResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceSpecMasterResourceSpecPtrOutput)
}

type ClusterResourceSpecMasterResourceSpecOutput struct{ *pulumi.OutputState }

func (ClusterResourceSpecMasterResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceSpecMasterResourceSpec)(nil)).Elem()
}

func (o ClusterResourceSpecMasterResourceSpecOutput) ToClusterResourceSpecMasterResourceSpecOutput() ClusterResourceSpecMasterResourceSpecOutput {
	return o
}

func (o ClusterResourceSpecMasterResourceSpecOutput) ToClusterResourceSpecMasterResourceSpecOutputWithContext(ctx context.Context) ClusterResourceSpecMasterResourceSpecOutput {
	return o
}

func (o ClusterResourceSpecMasterResourceSpecOutput) ToClusterResourceSpecMasterResourceSpecPtrOutput() ClusterResourceSpecMasterResourceSpecPtrOutput {
	return o.ToClusterResourceSpecMasterResourceSpecPtrOutputWithContext(context.Background())
}

func (o ClusterResourceSpecMasterResourceSpecOutput) ToClusterResourceSpecMasterResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecMasterResourceSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterResourceSpecMasterResourceSpec) *ClusterResourceSpecMasterResourceSpec {
		return &v
	}).(ClusterResourceSpecMasterResourceSpecPtrOutput)
}

func (o ClusterResourceSpecMasterResourceSpecOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecMasterResourceSpec) *int { return v.Cpu }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecMasterResourceSpecOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecMasterResourceSpec) *int { return v.DiskSize }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecMasterResourceSpecOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecMasterResourceSpec) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecMasterResourceSpecOutput) MemSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecMasterResourceSpec) *int { return v.MemSize }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecMasterResourceSpecOutput) RootSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecMasterResourceSpec) *int { return v.RootSize }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecMasterResourceSpecOutput) Spec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecMasterResourceSpec) *string { return v.Spec }).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecMasterResourceSpecOutput) StorageType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecMasterResourceSpec) *int { return v.StorageType }).(pulumi.IntPtrOutput)
}

type ClusterResourceSpecMasterResourceSpecPtrOutput struct{ *pulumi.OutputState }

func (ClusterResourceSpecMasterResourceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceSpecMasterResourceSpec)(nil)).Elem()
}

func (o ClusterResourceSpecMasterResourceSpecPtrOutput) ToClusterResourceSpecMasterResourceSpecPtrOutput() ClusterResourceSpecMasterResourceSpecPtrOutput {
	return o
}

func (o ClusterResourceSpecMasterResourceSpecPtrOutput) ToClusterResourceSpecMasterResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecMasterResourceSpecPtrOutput {
	return o
}

func (o ClusterResourceSpecMasterResourceSpecPtrOutput) Elem() ClusterResourceSpecMasterResourceSpecOutput {
	return o.ApplyT(func(v *ClusterResourceSpecMasterResourceSpec) ClusterResourceSpecMasterResourceSpec {
		if v != nil {
			return *v
		}
		var ret ClusterResourceSpecMasterResourceSpec
		return ret
	}).(ClusterResourceSpecMasterResourceSpecOutput)
}

func (o ClusterResourceSpecMasterResourceSpecPtrOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecMasterResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecMasterResourceSpecPtrOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecMasterResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.DiskSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecMasterResourceSpecPtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecMasterResourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.DiskType
	}).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecMasterResourceSpecPtrOutput) MemSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecMasterResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.MemSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecMasterResourceSpecPtrOutput) RootSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecMasterResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.RootSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecMasterResourceSpecPtrOutput) Spec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecMasterResourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecMasterResourceSpecPtrOutput) StorageType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecMasterResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.StorageType
	}).(pulumi.IntPtrOutput)
}

type ClusterResourceSpecTaskResourceSpec struct {
	Cpu         *int    `pulumi:"cpu"`
	DiskSize    *int    `pulumi:"diskSize"`
	DiskType    *string `pulumi:"diskType"`
	MemSize     *int    `pulumi:"memSize"`
	RootSize    *int    `pulumi:"rootSize"`
	Spec        *string `pulumi:"spec"`
	StorageType *int    `pulumi:"storageType"`
}

// ClusterResourceSpecTaskResourceSpecInput is an input type that accepts ClusterResourceSpecTaskResourceSpecArgs and ClusterResourceSpecTaskResourceSpecOutput values.
// You can construct a concrete instance of `ClusterResourceSpecTaskResourceSpecInput` via:
//
//	ClusterResourceSpecTaskResourceSpecArgs{...}
type ClusterResourceSpecTaskResourceSpecInput interface {
	pulumi.Input

	ToClusterResourceSpecTaskResourceSpecOutput() ClusterResourceSpecTaskResourceSpecOutput
	ToClusterResourceSpecTaskResourceSpecOutputWithContext(context.Context) ClusterResourceSpecTaskResourceSpecOutput
}

type ClusterResourceSpecTaskResourceSpecArgs struct {
	Cpu         pulumi.IntPtrInput    `pulumi:"cpu"`
	DiskSize    pulumi.IntPtrInput    `pulumi:"diskSize"`
	DiskType    pulumi.StringPtrInput `pulumi:"diskType"`
	MemSize     pulumi.IntPtrInput    `pulumi:"memSize"`
	RootSize    pulumi.IntPtrInput    `pulumi:"rootSize"`
	Spec        pulumi.StringPtrInput `pulumi:"spec"`
	StorageType pulumi.IntPtrInput    `pulumi:"storageType"`
}

func (ClusterResourceSpecTaskResourceSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceSpecTaskResourceSpec)(nil)).Elem()
}

func (i ClusterResourceSpecTaskResourceSpecArgs) ToClusterResourceSpecTaskResourceSpecOutput() ClusterResourceSpecTaskResourceSpecOutput {
	return i.ToClusterResourceSpecTaskResourceSpecOutputWithContext(context.Background())
}

func (i ClusterResourceSpecTaskResourceSpecArgs) ToClusterResourceSpecTaskResourceSpecOutputWithContext(ctx context.Context) ClusterResourceSpecTaskResourceSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceSpecTaskResourceSpecOutput)
}

func (i ClusterResourceSpecTaskResourceSpecArgs) ToClusterResourceSpecTaskResourceSpecPtrOutput() ClusterResourceSpecTaskResourceSpecPtrOutput {
	return i.ToClusterResourceSpecTaskResourceSpecPtrOutputWithContext(context.Background())
}

func (i ClusterResourceSpecTaskResourceSpecArgs) ToClusterResourceSpecTaskResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecTaskResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceSpecTaskResourceSpecOutput).ToClusterResourceSpecTaskResourceSpecPtrOutputWithContext(ctx)
}

// ClusterResourceSpecTaskResourceSpecPtrInput is an input type that accepts ClusterResourceSpecTaskResourceSpecArgs, ClusterResourceSpecTaskResourceSpecPtr and ClusterResourceSpecTaskResourceSpecPtrOutput values.
// You can construct a concrete instance of `ClusterResourceSpecTaskResourceSpecPtrInput` via:
//
//	        ClusterResourceSpecTaskResourceSpecArgs{...}
//
//	or:
//
//	        nil
type ClusterResourceSpecTaskResourceSpecPtrInput interface {
	pulumi.Input

	ToClusterResourceSpecTaskResourceSpecPtrOutput() ClusterResourceSpecTaskResourceSpecPtrOutput
	ToClusterResourceSpecTaskResourceSpecPtrOutputWithContext(context.Context) ClusterResourceSpecTaskResourceSpecPtrOutput
}

type clusterResourceSpecTaskResourceSpecPtrType ClusterResourceSpecTaskResourceSpecArgs

func ClusterResourceSpecTaskResourceSpecPtr(v *ClusterResourceSpecTaskResourceSpecArgs) ClusterResourceSpecTaskResourceSpecPtrInput {
	return (*clusterResourceSpecTaskResourceSpecPtrType)(v)
}

func (*clusterResourceSpecTaskResourceSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceSpecTaskResourceSpec)(nil)).Elem()
}

func (i *clusterResourceSpecTaskResourceSpecPtrType) ToClusterResourceSpecTaskResourceSpecPtrOutput() ClusterResourceSpecTaskResourceSpecPtrOutput {
	return i.ToClusterResourceSpecTaskResourceSpecPtrOutputWithContext(context.Background())
}

func (i *clusterResourceSpecTaskResourceSpecPtrType) ToClusterResourceSpecTaskResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecTaskResourceSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClusterResourceSpecTaskResourceSpecPtrOutput)
}

type ClusterResourceSpecTaskResourceSpecOutput struct{ *pulumi.OutputState }

func (ClusterResourceSpecTaskResourceSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClusterResourceSpecTaskResourceSpec)(nil)).Elem()
}

func (o ClusterResourceSpecTaskResourceSpecOutput) ToClusterResourceSpecTaskResourceSpecOutput() ClusterResourceSpecTaskResourceSpecOutput {
	return o
}

func (o ClusterResourceSpecTaskResourceSpecOutput) ToClusterResourceSpecTaskResourceSpecOutputWithContext(ctx context.Context) ClusterResourceSpecTaskResourceSpecOutput {
	return o
}

func (o ClusterResourceSpecTaskResourceSpecOutput) ToClusterResourceSpecTaskResourceSpecPtrOutput() ClusterResourceSpecTaskResourceSpecPtrOutput {
	return o.ToClusterResourceSpecTaskResourceSpecPtrOutputWithContext(context.Background())
}

func (o ClusterResourceSpecTaskResourceSpecOutput) ToClusterResourceSpecTaskResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecTaskResourceSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ClusterResourceSpecTaskResourceSpec) *ClusterResourceSpecTaskResourceSpec {
		return &v
	}).(ClusterResourceSpecTaskResourceSpecPtrOutput)
}

func (o ClusterResourceSpecTaskResourceSpecOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecTaskResourceSpec) *int { return v.Cpu }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecTaskResourceSpecOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecTaskResourceSpec) *int { return v.DiskSize }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecTaskResourceSpecOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecTaskResourceSpec) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecTaskResourceSpecOutput) MemSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecTaskResourceSpec) *int { return v.MemSize }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecTaskResourceSpecOutput) RootSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecTaskResourceSpec) *int { return v.RootSize }).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecTaskResourceSpecOutput) Spec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecTaskResourceSpec) *string { return v.Spec }).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecTaskResourceSpecOutput) StorageType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClusterResourceSpecTaskResourceSpec) *int { return v.StorageType }).(pulumi.IntPtrOutput)
}

type ClusterResourceSpecTaskResourceSpecPtrOutput struct{ *pulumi.OutputState }

func (ClusterResourceSpecTaskResourceSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ClusterResourceSpecTaskResourceSpec)(nil)).Elem()
}

func (o ClusterResourceSpecTaskResourceSpecPtrOutput) ToClusterResourceSpecTaskResourceSpecPtrOutput() ClusterResourceSpecTaskResourceSpecPtrOutput {
	return o
}

func (o ClusterResourceSpecTaskResourceSpecPtrOutput) ToClusterResourceSpecTaskResourceSpecPtrOutputWithContext(ctx context.Context) ClusterResourceSpecTaskResourceSpecPtrOutput {
	return o
}

func (o ClusterResourceSpecTaskResourceSpecPtrOutput) Elem() ClusterResourceSpecTaskResourceSpecOutput {
	return o.ApplyT(func(v *ClusterResourceSpecTaskResourceSpec) ClusterResourceSpecTaskResourceSpec {
		if v != nil {
			return *v
		}
		var ret ClusterResourceSpecTaskResourceSpec
		return ret
	}).(ClusterResourceSpecTaskResourceSpecOutput)
}

func (o ClusterResourceSpecTaskResourceSpecPtrOutput) Cpu() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecTaskResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.Cpu
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecTaskResourceSpecPtrOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecTaskResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.DiskSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecTaskResourceSpecPtrOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecTaskResourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.DiskType
	}).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecTaskResourceSpecPtrOutput) MemSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecTaskResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.MemSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecTaskResourceSpecPtrOutput) RootSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecTaskResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.RootSize
	}).(pulumi.IntPtrOutput)
}

func (o ClusterResourceSpecTaskResourceSpecPtrOutput) Spec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecTaskResourceSpec) *string {
		if v == nil {
			return nil
		}
		return v.Spec
	}).(pulumi.StringPtrOutput)
}

func (o ClusterResourceSpecTaskResourceSpecPtrOutput) StorageType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ClusterResourceSpecTaskResourceSpec) *int {
		if v == nil {
			return nil
		}
		return v.StorageType
	}).(pulumi.IntPtrOutput)
}

type GetInstanceCluster struct {
	AddTime     string `pulumi:"addTime"`
	ChargeType  int    `pulumi:"chargeType"`
	ClusterId   string `pulumi:"clusterId"`
	ClusterName string `pulumi:"clusterName"`
	Ftitle      string `pulumi:"ftitle"`
	Id          int    `pulumi:"id"`
	MasterIp    string `pulumi:"masterIp"`
	ProjectId   int    `pulumi:"projectId"`
	RegionId    int    `pulumi:"regionId"`
	Status      int    `pulumi:"status"`
	Zone        string `pulumi:"zone"`
	ZoneId      int    `pulumi:"zoneId"`
}

// GetInstanceClusterInput is an input type that accepts GetInstanceClusterArgs and GetInstanceClusterOutput values.
// You can construct a concrete instance of `GetInstanceClusterInput` via:
//
//	GetInstanceClusterArgs{...}
type GetInstanceClusterInput interface {
	pulumi.Input

	ToGetInstanceClusterOutput() GetInstanceClusterOutput
	ToGetInstanceClusterOutputWithContext(context.Context) GetInstanceClusterOutput
}

type GetInstanceClusterArgs struct {
	AddTime     pulumi.StringInput `pulumi:"addTime"`
	ChargeType  pulumi.IntInput    `pulumi:"chargeType"`
	ClusterId   pulumi.StringInput `pulumi:"clusterId"`
	ClusterName pulumi.StringInput `pulumi:"clusterName"`
	Ftitle      pulumi.StringInput `pulumi:"ftitle"`
	Id          pulumi.IntInput    `pulumi:"id"`
	MasterIp    pulumi.StringInput `pulumi:"masterIp"`
	ProjectId   pulumi.IntInput    `pulumi:"projectId"`
	RegionId    pulumi.IntInput    `pulumi:"regionId"`
	Status      pulumi.IntInput    `pulumi:"status"`
	Zone        pulumi.StringInput `pulumi:"zone"`
	ZoneId      pulumi.IntInput    `pulumi:"zoneId"`
}

func (GetInstanceClusterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceCluster)(nil)).Elem()
}

func (i GetInstanceClusterArgs) ToGetInstanceClusterOutput() GetInstanceClusterOutput {
	return i.ToGetInstanceClusterOutputWithContext(context.Background())
}

func (i GetInstanceClusterArgs) ToGetInstanceClusterOutputWithContext(ctx context.Context) GetInstanceClusterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceClusterOutput)
}

// GetInstanceClusterArrayInput is an input type that accepts GetInstanceClusterArray and GetInstanceClusterArrayOutput values.
// You can construct a concrete instance of `GetInstanceClusterArrayInput` via:
//
//	GetInstanceClusterArray{ GetInstanceClusterArgs{...} }
type GetInstanceClusterArrayInput interface {
	pulumi.Input

	ToGetInstanceClusterArrayOutput() GetInstanceClusterArrayOutput
	ToGetInstanceClusterArrayOutputWithContext(context.Context) GetInstanceClusterArrayOutput
}

type GetInstanceClusterArray []GetInstanceClusterInput

func (GetInstanceClusterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceCluster)(nil)).Elem()
}

func (i GetInstanceClusterArray) ToGetInstanceClusterArrayOutput() GetInstanceClusterArrayOutput {
	return i.ToGetInstanceClusterArrayOutputWithContext(context.Background())
}

func (i GetInstanceClusterArray) ToGetInstanceClusterArrayOutputWithContext(ctx context.Context) GetInstanceClusterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceClusterArrayOutput)
}

type GetInstanceClusterOutput struct{ *pulumi.OutputState }

func (GetInstanceClusterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceCluster)(nil)).Elem()
}

func (o GetInstanceClusterOutput) ToGetInstanceClusterOutput() GetInstanceClusterOutput {
	return o
}

func (o GetInstanceClusterOutput) ToGetInstanceClusterOutputWithContext(ctx context.Context) GetInstanceClusterOutput {
	return o
}

func (o GetInstanceClusterOutput) AddTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceCluster) string { return v.AddTime }).(pulumi.StringOutput)
}

func (o GetInstanceClusterOutput) ChargeType() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceCluster) int { return v.ChargeType }).(pulumi.IntOutput)
}

func (o GetInstanceClusterOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceCluster) string { return v.ClusterId }).(pulumi.StringOutput)
}

func (o GetInstanceClusterOutput) ClusterName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceCluster) string { return v.ClusterName }).(pulumi.StringOutput)
}

func (o GetInstanceClusterOutput) Ftitle() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceCluster) string { return v.Ftitle }).(pulumi.StringOutput)
}

func (o GetInstanceClusterOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceCluster) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetInstanceClusterOutput) MasterIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceCluster) string { return v.MasterIp }).(pulumi.StringOutput)
}

func (o GetInstanceClusterOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceCluster) int { return v.ProjectId }).(pulumi.IntOutput)
}

func (o GetInstanceClusterOutput) RegionId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceCluster) int { return v.RegionId }).(pulumi.IntOutput)
}

func (o GetInstanceClusterOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceCluster) int { return v.Status }).(pulumi.IntOutput)
}

func (o GetInstanceClusterOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceCluster) string { return v.Zone }).(pulumi.StringOutput)
}

func (o GetInstanceClusterOutput) ZoneId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceCluster) int { return v.ZoneId }).(pulumi.IntOutput)
}

type GetInstanceClusterArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceClusterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceCluster)(nil)).Elem()
}

func (o GetInstanceClusterArrayOutput) ToGetInstanceClusterArrayOutput() GetInstanceClusterArrayOutput {
	return o
}

func (o GetInstanceClusterArrayOutput) ToGetInstanceClusterArrayOutputWithContext(ctx context.Context) GetInstanceClusterArrayOutput {
	return o
}

func (o GetInstanceClusterArrayOutput) Index(i pulumi.IntInput) GetInstanceClusterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceCluster {
		return vs[0].([]GetInstanceCluster)[vs[1].(int)]
	}).(GetInstanceClusterOutput)
}

type GetNodesNode struct {
	AppId                int                       `pulumi:"appId"`
	ApplyTime            string                    `pulumi:"applyTime"`
	AutoFlag             int                       `pulumi:"autoFlag"`
	CdbIp                string                    `pulumi:"cdbIp"`
	CdbNodeInfos         []GetNodesNodeCdbNodeInfo `pulumi:"cdbNodeInfos"`
	CdbPort              int                       `pulumi:"cdbPort"`
	ChargeType           int                       `pulumi:"chargeType"`
	CpuNum               int                       `pulumi:"cpuNum"`
	Destroyable          int                       `pulumi:"destroyable"`
	DeviceClass          string                    `pulumi:"deviceClass"`
	DiskSize             string                    `pulumi:"diskSize"`
	DynamicPodSpec       string                    `pulumi:"dynamicPodSpec"`
	EmrResourceId        string                    `pulumi:"emrResourceId"`
	ExpireTime           string                    `pulumi:"expireTime"`
	Flag                 int                       `pulumi:"flag"`
	FreeTime             string                    `pulumi:"freeTime"`
	HardwareResourceType string                    `pulumi:"hardwareResourceType"`
	HwDiskSize           int                       `pulumi:"hwDiskSize"`
	HwDiskSizeDesc       string                    `pulumi:"hwDiskSizeDesc"`
	HwMemSize            int                       `pulumi:"hwMemSize"`
	HwMemSizeDesc        string                    `pulumi:"hwMemSizeDesc"`
	Ip                   string                    `pulumi:"ip"`
	IsAutoRenew          int                       `pulumi:"isAutoRenew"`
	IsDynamicSpec        int                       `pulumi:"isDynamicSpec"`
	McMultiDisks         []GetNodesNodeMcMultiDisk `pulumi:"mcMultiDisks"`
	MemDesc              string                    `pulumi:"memDesc"`
	MemSize              int                       `pulumi:"memSize"`
	Mutable              int                       `pulumi:"mutable"`
	NameTag              string                    `pulumi:"nameTag"`
	OrderNo              string                    `pulumi:"orderNo"`
	RegionId             int                       `pulumi:"regionId"`
	RootSize             int                       `pulumi:"rootSize"`
	SerialNo             string                    `pulumi:"serialNo"`
	Services             string                    `pulumi:"services"`
	Spec                 string                    `pulumi:"spec"`
	StorageType          int                       `pulumi:"storageType"`
	SupportModifyPayMode int                       `pulumi:"supportModifyPayMode"`
	Tags                 []GetNodesNodeTag         `pulumi:"tags"`
	WanIp                string                    `pulumi:"wanIp"`
	ZoneId               int                       `pulumi:"zoneId"`
}

// GetNodesNodeInput is an input type that accepts GetNodesNodeArgs and GetNodesNodeOutput values.
// You can construct a concrete instance of `GetNodesNodeInput` via:
//
//	GetNodesNodeArgs{...}
type GetNodesNodeInput interface {
	pulumi.Input

	ToGetNodesNodeOutput() GetNodesNodeOutput
	ToGetNodesNodeOutputWithContext(context.Context) GetNodesNodeOutput
}

type GetNodesNodeArgs struct {
	AppId                pulumi.IntInput                   `pulumi:"appId"`
	ApplyTime            pulumi.StringInput                `pulumi:"applyTime"`
	AutoFlag             pulumi.IntInput                   `pulumi:"autoFlag"`
	CdbIp                pulumi.StringInput                `pulumi:"cdbIp"`
	CdbNodeInfos         GetNodesNodeCdbNodeInfoArrayInput `pulumi:"cdbNodeInfos"`
	CdbPort              pulumi.IntInput                   `pulumi:"cdbPort"`
	ChargeType           pulumi.IntInput                   `pulumi:"chargeType"`
	CpuNum               pulumi.IntInput                   `pulumi:"cpuNum"`
	Destroyable          pulumi.IntInput                   `pulumi:"destroyable"`
	DeviceClass          pulumi.StringInput                `pulumi:"deviceClass"`
	DiskSize             pulumi.StringInput                `pulumi:"diskSize"`
	DynamicPodSpec       pulumi.StringInput                `pulumi:"dynamicPodSpec"`
	EmrResourceId        pulumi.StringInput                `pulumi:"emrResourceId"`
	ExpireTime           pulumi.StringInput                `pulumi:"expireTime"`
	Flag                 pulumi.IntInput                   `pulumi:"flag"`
	FreeTime             pulumi.StringInput                `pulumi:"freeTime"`
	HardwareResourceType pulumi.StringInput                `pulumi:"hardwareResourceType"`
	HwDiskSize           pulumi.IntInput                   `pulumi:"hwDiskSize"`
	HwDiskSizeDesc       pulumi.StringInput                `pulumi:"hwDiskSizeDesc"`
	HwMemSize            pulumi.IntInput                   `pulumi:"hwMemSize"`
	HwMemSizeDesc        pulumi.StringInput                `pulumi:"hwMemSizeDesc"`
	Ip                   pulumi.StringInput                `pulumi:"ip"`
	IsAutoRenew          pulumi.IntInput                   `pulumi:"isAutoRenew"`
	IsDynamicSpec        pulumi.IntInput                   `pulumi:"isDynamicSpec"`
	McMultiDisks         GetNodesNodeMcMultiDiskArrayInput `pulumi:"mcMultiDisks"`
	MemDesc              pulumi.StringInput                `pulumi:"memDesc"`
	MemSize              pulumi.IntInput                   `pulumi:"memSize"`
	Mutable              pulumi.IntInput                   `pulumi:"mutable"`
	NameTag              pulumi.StringInput                `pulumi:"nameTag"`
	OrderNo              pulumi.StringInput                `pulumi:"orderNo"`
	RegionId             pulumi.IntInput                   `pulumi:"regionId"`
	RootSize             pulumi.IntInput                   `pulumi:"rootSize"`
	SerialNo             pulumi.StringInput                `pulumi:"serialNo"`
	Services             pulumi.StringInput                `pulumi:"services"`
	Spec                 pulumi.StringInput                `pulumi:"spec"`
	StorageType          pulumi.IntInput                   `pulumi:"storageType"`
	SupportModifyPayMode pulumi.IntInput                   `pulumi:"supportModifyPayMode"`
	Tags                 GetNodesNodeTagArrayInput         `pulumi:"tags"`
	WanIp                pulumi.StringInput                `pulumi:"wanIp"`
	ZoneId               pulumi.IntInput                   `pulumi:"zoneId"`
}

func (GetNodesNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodesNode)(nil)).Elem()
}

func (i GetNodesNodeArgs) ToGetNodesNodeOutput() GetNodesNodeOutput {
	return i.ToGetNodesNodeOutputWithContext(context.Background())
}

func (i GetNodesNodeArgs) ToGetNodesNodeOutputWithContext(ctx context.Context) GetNodesNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodesNodeOutput)
}

// GetNodesNodeArrayInput is an input type that accepts GetNodesNodeArray and GetNodesNodeArrayOutput values.
// You can construct a concrete instance of `GetNodesNodeArrayInput` via:
//
//	GetNodesNodeArray{ GetNodesNodeArgs{...} }
type GetNodesNodeArrayInput interface {
	pulumi.Input

	ToGetNodesNodeArrayOutput() GetNodesNodeArrayOutput
	ToGetNodesNodeArrayOutputWithContext(context.Context) GetNodesNodeArrayOutput
}

type GetNodesNodeArray []GetNodesNodeInput

func (GetNodesNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodesNode)(nil)).Elem()
}

func (i GetNodesNodeArray) ToGetNodesNodeArrayOutput() GetNodesNodeArrayOutput {
	return i.ToGetNodesNodeArrayOutputWithContext(context.Background())
}

func (i GetNodesNodeArray) ToGetNodesNodeArrayOutputWithContext(ctx context.Context) GetNodesNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodesNodeArrayOutput)
}

type GetNodesNodeOutput struct{ *pulumi.OutputState }

func (GetNodesNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodesNode)(nil)).Elem()
}

func (o GetNodesNodeOutput) ToGetNodesNodeOutput() GetNodesNodeOutput {
	return o
}

func (o GetNodesNodeOutput) ToGetNodesNodeOutputWithContext(ctx context.Context) GetNodesNodeOutput {
	return o
}

func (o GetNodesNodeOutput) AppId() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.AppId }).(pulumi.IntOutput)
}

func (o GetNodesNodeOutput) ApplyTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.ApplyTime }).(pulumi.StringOutput)
}

func (o GetNodesNodeOutput) AutoFlag() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.AutoFlag }).(pulumi.IntOutput)
}

func (o GetNodesNodeOutput) CdbIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.CdbIp }).(pulumi.StringOutput)
}

func (o GetNodesNodeOutput) CdbNodeInfos() GetNodesNodeCdbNodeInfoArrayOutput {
	return o.ApplyT(func(v GetNodesNode) []GetNodesNodeCdbNodeInfo { return v.CdbNodeInfos }).(GetNodesNodeCdbNodeInfoArrayOutput)
}

func (o GetNodesNodeOutput) CdbPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.CdbPort }).(pulumi.IntOutput)
}

func (o GetNodesNodeOutput) ChargeType() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.ChargeType }).(pulumi.IntOutput)
}

func (o GetNodesNodeOutput) CpuNum() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.CpuNum }).(pulumi.IntOutput)
}

func (o GetNodesNodeOutput) Destroyable() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.Destroyable }).(pulumi.IntOutput)
}

func (o GetNodesNodeOutput) DeviceClass() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.DeviceClass }).(pulumi.StringOutput)
}

func (o GetNodesNodeOutput) DiskSize() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.DiskSize }).(pulumi.StringOutput)
}

func (o GetNodesNodeOutput) DynamicPodSpec() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.DynamicPodSpec }).(pulumi.StringOutput)
}

func (o GetNodesNodeOutput) EmrResourceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.EmrResourceId }).(pulumi.StringOutput)
}

func (o GetNodesNodeOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.ExpireTime }).(pulumi.StringOutput)
}

func (o GetNodesNodeOutput) Flag() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.Flag }).(pulumi.IntOutput)
}

func (o GetNodesNodeOutput) FreeTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.FreeTime }).(pulumi.StringOutput)
}

func (o GetNodesNodeOutput) HardwareResourceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.HardwareResourceType }).(pulumi.StringOutput)
}

func (o GetNodesNodeOutput) HwDiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.HwDiskSize }).(pulumi.IntOutput)
}

func (o GetNodesNodeOutput) HwDiskSizeDesc() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.HwDiskSizeDesc }).(pulumi.StringOutput)
}

func (o GetNodesNodeOutput) HwMemSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.HwMemSize }).(pulumi.IntOutput)
}

func (o GetNodesNodeOutput) HwMemSizeDesc() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.HwMemSizeDesc }).(pulumi.StringOutput)
}

func (o GetNodesNodeOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.Ip }).(pulumi.StringOutput)
}

func (o GetNodesNodeOutput) IsAutoRenew() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.IsAutoRenew }).(pulumi.IntOutput)
}

func (o GetNodesNodeOutput) IsDynamicSpec() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.IsDynamicSpec }).(pulumi.IntOutput)
}

func (o GetNodesNodeOutput) McMultiDisks() GetNodesNodeMcMultiDiskArrayOutput {
	return o.ApplyT(func(v GetNodesNode) []GetNodesNodeMcMultiDisk { return v.McMultiDisks }).(GetNodesNodeMcMultiDiskArrayOutput)
}

func (o GetNodesNodeOutput) MemDesc() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.MemDesc }).(pulumi.StringOutput)
}

func (o GetNodesNodeOutput) MemSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.MemSize }).(pulumi.IntOutput)
}

func (o GetNodesNodeOutput) Mutable() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.Mutable }).(pulumi.IntOutput)
}

func (o GetNodesNodeOutput) NameTag() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.NameTag }).(pulumi.StringOutput)
}

func (o GetNodesNodeOutput) OrderNo() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.OrderNo }).(pulumi.StringOutput)
}

func (o GetNodesNodeOutput) RegionId() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.RegionId }).(pulumi.IntOutput)
}

func (o GetNodesNodeOutput) RootSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.RootSize }).(pulumi.IntOutput)
}

func (o GetNodesNodeOutput) SerialNo() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.SerialNo }).(pulumi.StringOutput)
}

func (o GetNodesNodeOutput) Services() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.Services }).(pulumi.StringOutput)
}

func (o GetNodesNodeOutput) Spec() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.Spec }).(pulumi.StringOutput)
}

func (o GetNodesNodeOutput) StorageType() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.StorageType }).(pulumi.IntOutput)
}

func (o GetNodesNodeOutput) SupportModifyPayMode() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.SupportModifyPayMode }).(pulumi.IntOutput)
}

func (o GetNodesNodeOutput) Tags() GetNodesNodeTagArrayOutput {
	return o.ApplyT(func(v GetNodesNode) []GetNodesNodeTag { return v.Tags }).(GetNodesNodeTagArrayOutput)
}

func (o GetNodesNodeOutput) WanIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNode) string { return v.WanIp }).(pulumi.StringOutput)
}

func (o GetNodesNodeOutput) ZoneId() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNode) int { return v.ZoneId }).(pulumi.IntOutput)
}

type GetNodesNodeArrayOutput struct{ *pulumi.OutputState }

func (GetNodesNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodesNode)(nil)).Elem()
}

func (o GetNodesNodeArrayOutput) ToGetNodesNodeArrayOutput() GetNodesNodeArrayOutput {
	return o
}

func (o GetNodesNodeArrayOutput) ToGetNodesNodeArrayOutputWithContext(ctx context.Context) GetNodesNodeArrayOutput {
	return o
}

func (o GetNodesNodeArrayOutput) Index(i pulumi.IntInput) GetNodesNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNodesNode {
		return vs[0].([]GetNodesNode)[vs[1].(int)]
	}).(GetNodesNodeOutput)
}

type GetNodesNodeCdbNodeInfo struct {
	ApplyTime    string `pulumi:"applyTime"`
	ExpireFlag   bool   `pulumi:"expireFlag"`
	ExpireTime   string `pulumi:"expireTime"`
	InstanceName string `pulumi:"instanceName"`
	Ip           string `pulumi:"ip"`
	IsAutoRenew  int    `pulumi:"isAutoRenew"`
	MemSize      int    `pulumi:"memSize"`
	PayType      int    `pulumi:"payType"`
	Port         int    `pulumi:"port"`
	RegionId     int    `pulumi:"regionId"`
	SerialNo     string `pulumi:"serialNo"`
	Service      string `pulumi:"service"`
	Status       int    `pulumi:"status"`
	Volume       int    `pulumi:"volume"`
	ZoneId       int    `pulumi:"zoneId"`
}

// GetNodesNodeCdbNodeInfoInput is an input type that accepts GetNodesNodeCdbNodeInfoArgs and GetNodesNodeCdbNodeInfoOutput values.
// You can construct a concrete instance of `GetNodesNodeCdbNodeInfoInput` via:
//
//	GetNodesNodeCdbNodeInfoArgs{...}
type GetNodesNodeCdbNodeInfoInput interface {
	pulumi.Input

	ToGetNodesNodeCdbNodeInfoOutput() GetNodesNodeCdbNodeInfoOutput
	ToGetNodesNodeCdbNodeInfoOutputWithContext(context.Context) GetNodesNodeCdbNodeInfoOutput
}

type GetNodesNodeCdbNodeInfoArgs struct {
	ApplyTime    pulumi.StringInput `pulumi:"applyTime"`
	ExpireFlag   pulumi.BoolInput   `pulumi:"expireFlag"`
	ExpireTime   pulumi.StringInput `pulumi:"expireTime"`
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	Ip           pulumi.StringInput `pulumi:"ip"`
	IsAutoRenew  pulumi.IntInput    `pulumi:"isAutoRenew"`
	MemSize      pulumi.IntInput    `pulumi:"memSize"`
	PayType      pulumi.IntInput    `pulumi:"payType"`
	Port         pulumi.IntInput    `pulumi:"port"`
	RegionId     pulumi.IntInput    `pulumi:"regionId"`
	SerialNo     pulumi.StringInput `pulumi:"serialNo"`
	Service      pulumi.StringInput `pulumi:"service"`
	Status       pulumi.IntInput    `pulumi:"status"`
	Volume       pulumi.IntInput    `pulumi:"volume"`
	ZoneId       pulumi.IntInput    `pulumi:"zoneId"`
}

func (GetNodesNodeCdbNodeInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodesNodeCdbNodeInfo)(nil)).Elem()
}

func (i GetNodesNodeCdbNodeInfoArgs) ToGetNodesNodeCdbNodeInfoOutput() GetNodesNodeCdbNodeInfoOutput {
	return i.ToGetNodesNodeCdbNodeInfoOutputWithContext(context.Background())
}

func (i GetNodesNodeCdbNodeInfoArgs) ToGetNodesNodeCdbNodeInfoOutputWithContext(ctx context.Context) GetNodesNodeCdbNodeInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodesNodeCdbNodeInfoOutput)
}

// GetNodesNodeCdbNodeInfoArrayInput is an input type that accepts GetNodesNodeCdbNodeInfoArray and GetNodesNodeCdbNodeInfoArrayOutput values.
// You can construct a concrete instance of `GetNodesNodeCdbNodeInfoArrayInput` via:
//
//	GetNodesNodeCdbNodeInfoArray{ GetNodesNodeCdbNodeInfoArgs{...} }
type GetNodesNodeCdbNodeInfoArrayInput interface {
	pulumi.Input

	ToGetNodesNodeCdbNodeInfoArrayOutput() GetNodesNodeCdbNodeInfoArrayOutput
	ToGetNodesNodeCdbNodeInfoArrayOutputWithContext(context.Context) GetNodesNodeCdbNodeInfoArrayOutput
}

type GetNodesNodeCdbNodeInfoArray []GetNodesNodeCdbNodeInfoInput

func (GetNodesNodeCdbNodeInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodesNodeCdbNodeInfo)(nil)).Elem()
}

func (i GetNodesNodeCdbNodeInfoArray) ToGetNodesNodeCdbNodeInfoArrayOutput() GetNodesNodeCdbNodeInfoArrayOutput {
	return i.ToGetNodesNodeCdbNodeInfoArrayOutputWithContext(context.Background())
}

func (i GetNodesNodeCdbNodeInfoArray) ToGetNodesNodeCdbNodeInfoArrayOutputWithContext(ctx context.Context) GetNodesNodeCdbNodeInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodesNodeCdbNodeInfoArrayOutput)
}

type GetNodesNodeCdbNodeInfoOutput struct{ *pulumi.OutputState }

func (GetNodesNodeCdbNodeInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodesNodeCdbNodeInfo)(nil)).Elem()
}

func (o GetNodesNodeCdbNodeInfoOutput) ToGetNodesNodeCdbNodeInfoOutput() GetNodesNodeCdbNodeInfoOutput {
	return o
}

func (o GetNodesNodeCdbNodeInfoOutput) ToGetNodesNodeCdbNodeInfoOutputWithContext(ctx context.Context) GetNodesNodeCdbNodeInfoOutput {
	return o
}

func (o GetNodesNodeCdbNodeInfoOutput) ApplyTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNodeCdbNodeInfo) string { return v.ApplyTime }).(pulumi.StringOutput)
}

func (o GetNodesNodeCdbNodeInfoOutput) ExpireFlag() pulumi.BoolOutput {
	return o.ApplyT(func(v GetNodesNodeCdbNodeInfo) bool { return v.ExpireFlag }).(pulumi.BoolOutput)
}

func (o GetNodesNodeCdbNodeInfoOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNodeCdbNodeInfo) string { return v.ExpireTime }).(pulumi.StringOutput)
}

func (o GetNodesNodeCdbNodeInfoOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNodeCdbNodeInfo) string { return v.InstanceName }).(pulumi.StringOutput)
}

func (o GetNodesNodeCdbNodeInfoOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNodeCdbNodeInfo) string { return v.Ip }).(pulumi.StringOutput)
}

func (o GetNodesNodeCdbNodeInfoOutput) IsAutoRenew() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNodeCdbNodeInfo) int { return v.IsAutoRenew }).(pulumi.IntOutput)
}

func (o GetNodesNodeCdbNodeInfoOutput) MemSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNodeCdbNodeInfo) int { return v.MemSize }).(pulumi.IntOutput)
}

func (o GetNodesNodeCdbNodeInfoOutput) PayType() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNodeCdbNodeInfo) int { return v.PayType }).(pulumi.IntOutput)
}

func (o GetNodesNodeCdbNodeInfoOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNodeCdbNodeInfo) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetNodesNodeCdbNodeInfoOutput) RegionId() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNodeCdbNodeInfo) int { return v.RegionId }).(pulumi.IntOutput)
}

func (o GetNodesNodeCdbNodeInfoOutput) SerialNo() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNodeCdbNodeInfo) string { return v.SerialNo }).(pulumi.StringOutput)
}

func (o GetNodesNodeCdbNodeInfoOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNodeCdbNodeInfo) string { return v.Service }).(pulumi.StringOutput)
}

func (o GetNodesNodeCdbNodeInfoOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNodeCdbNodeInfo) int { return v.Status }).(pulumi.IntOutput)
}

func (o GetNodesNodeCdbNodeInfoOutput) Volume() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNodeCdbNodeInfo) int { return v.Volume }).(pulumi.IntOutput)
}

func (o GetNodesNodeCdbNodeInfoOutput) ZoneId() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNodeCdbNodeInfo) int { return v.ZoneId }).(pulumi.IntOutput)
}

type GetNodesNodeCdbNodeInfoArrayOutput struct{ *pulumi.OutputState }

func (GetNodesNodeCdbNodeInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodesNodeCdbNodeInfo)(nil)).Elem()
}

func (o GetNodesNodeCdbNodeInfoArrayOutput) ToGetNodesNodeCdbNodeInfoArrayOutput() GetNodesNodeCdbNodeInfoArrayOutput {
	return o
}

func (o GetNodesNodeCdbNodeInfoArrayOutput) ToGetNodesNodeCdbNodeInfoArrayOutputWithContext(ctx context.Context) GetNodesNodeCdbNodeInfoArrayOutput {
	return o
}

func (o GetNodesNodeCdbNodeInfoArrayOutput) Index(i pulumi.IntInput) GetNodesNodeCdbNodeInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNodesNodeCdbNodeInfo {
		return vs[0].([]GetNodesNodeCdbNodeInfo)[vs[1].(int)]
	}).(GetNodesNodeCdbNodeInfoOutput)
}

type GetNodesNodeMcMultiDisk struct {
	Count  int `pulumi:"count"`
	Type   int `pulumi:"type"`
	Volume int `pulumi:"volume"`
}

// GetNodesNodeMcMultiDiskInput is an input type that accepts GetNodesNodeMcMultiDiskArgs and GetNodesNodeMcMultiDiskOutput values.
// You can construct a concrete instance of `GetNodesNodeMcMultiDiskInput` via:
//
//	GetNodesNodeMcMultiDiskArgs{...}
type GetNodesNodeMcMultiDiskInput interface {
	pulumi.Input

	ToGetNodesNodeMcMultiDiskOutput() GetNodesNodeMcMultiDiskOutput
	ToGetNodesNodeMcMultiDiskOutputWithContext(context.Context) GetNodesNodeMcMultiDiskOutput
}

type GetNodesNodeMcMultiDiskArgs struct {
	Count  pulumi.IntInput `pulumi:"count"`
	Type   pulumi.IntInput `pulumi:"type"`
	Volume pulumi.IntInput `pulumi:"volume"`
}

func (GetNodesNodeMcMultiDiskArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodesNodeMcMultiDisk)(nil)).Elem()
}

func (i GetNodesNodeMcMultiDiskArgs) ToGetNodesNodeMcMultiDiskOutput() GetNodesNodeMcMultiDiskOutput {
	return i.ToGetNodesNodeMcMultiDiskOutputWithContext(context.Background())
}

func (i GetNodesNodeMcMultiDiskArgs) ToGetNodesNodeMcMultiDiskOutputWithContext(ctx context.Context) GetNodesNodeMcMultiDiskOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodesNodeMcMultiDiskOutput)
}

// GetNodesNodeMcMultiDiskArrayInput is an input type that accepts GetNodesNodeMcMultiDiskArray and GetNodesNodeMcMultiDiskArrayOutput values.
// You can construct a concrete instance of `GetNodesNodeMcMultiDiskArrayInput` via:
//
//	GetNodesNodeMcMultiDiskArray{ GetNodesNodeMcMultiDiskArgs{...} }
type GetNodesNodeMcMultiDiskArrayInput interface {
	pulumi.Input

	ToGetNodesNodeMcMultiDiskArrayOutput() GetNodesNodeMcMultiDiskArrayOutput
	ToGetNodesNodeMcMultiDiskArrayOutputWithContext(context.Context) GetNodesNodeMcMultiDiskArrayOutput
}

type GetNodesNodeMcMultiDiskArray []GetNodesNodeMcMultiDiskInput

func (GetNodesNodeMcMultiDiskArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodesNodeMcMultiDisk)(nil)).Elem()
}

func (i GetNodesNodeMcMultiDiskArray) ToGetNodesNodeMcMultiDiskArrayOutput() GetNodesNodeMcMultiDiskArrayOutput {
	return i.ToGetNodesNodeMcMultiDiskArrayOutputWithContext(context.Background())
}

func (i GetNodesNodeMcMultiDiskArray) ToGetNodesNodeMcMultiDiskArrayOutputWithContext(ctx context.Context) GetNodesNodeMcMultiDiskArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodesNodeMcMultiDiskArrayOutput)
}

type GetNodesNodeMcMultiDiskOutput struct{ *pulumi.OutputState }

func (GetNodesNodeMcMultiDiskOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodesNodeMcMultiDisk)(nil)).Elem()
}

func (o GetNodesNodeMcMultiDiskOutput) ToGetNodesNodeMcMultiDiskOutput() GetNodesNodeMcMultiDiskOutput {
	return o
}

func (o GetNodesNodeMcMultiDiskOutput) ToGetNodesNodeMcMultiDiskOutputWithContext(ctx context.Context) GetNodesNodeMcMultiDiskOutput {
	return o
}

func (o GetNodesNodeMcMultiDiskOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNodeMcMultiDisk) int { return v.Count }).(pulumi.IntOutput)
}

func (o GetNodesNodeMcMultiDiskOutput) Type() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNodeMcMultiDisk) int { return v.Type }).(pulumi.IntOutput)
}

func (o GetNodesNodeMcMultiDiskOutput) Volume() pulumi.IntOutput {
	return o.ApplyT(func(v GetNodesNodeMcMultiDisk) int { return v.Volume }).(pulumi.IntOutput)
}

type GetNodesNodeMcMultiDiskArrayOutput struct{ *pulumi.OutputState }

func (GetNodesNodeMcMultiDiskArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodesNodeMcMultiDisk)(nil)).Elem()
}

func (o GetNodesNodeMcMultiDiskArrayOutput) ToGetNodesNodeMcMultiDiskArrayOutput() GetNodesNodeMcMultiDiskArrayOutput {
	return o
}

func (o GetNodesNodeMcMultiDiskArrayOutput) ToGetNodesNodeMcMultiDiskArrayOutputWithContext(ctx context.Context) GetNodesNodeMcMultiDiskArrayOutput {
	return o
}

func (o GetNodesNodeMcMultiDiskArrayOutput) Index(i pulumi.IntInput) GetNodesNodeMcMultiDiskOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNodesNodeMcMultiDisk {
		return vs[0].([]GetNodesNodeMcMultiDisk)[vs[1].(int)]
	}).(GetNodesNodeMcMultiDiskOutput)
}

type GetNodesNodeTag struct {
	TagKey   string `pulumi:"tagKey"`
	TagValue string `pulumi:"tagValue"`
}

// GetNodesNodeTagInput is an input type that accepts GetNodesNodeTagArgs and GetNodesNodeTagOutput values.
// You can construct a concrete instance of `GetNodesNodeTagInput` via:
//
//	GetNodesNodeTagArgs{...}
type GetNodesNodeTagInput interface {
	pulumi.Input

	ToGetNodesNodeTagOutput() GetNodesNodeTagOutput
	ToGetNodesNodeTagOutputWithContext(context.Context) GetNodesNodeTagOutput
}

type GetNodesNodeTagArgs struct {
	TagKey   pulumi.StringInput `pulumi:"tagKey"`
	TagValue pulumi.StringInput `pulumi:"tagValue"`
}

func (GetNodesNodeTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodesNodeTag)(nil)).Elem()
}

func (i GetNodesNodeTagArgs) ToGetNodesNodeTagOutput() GetNodesNodeTagOutput {
	return i.ToGetNodesNodeTagOutputWithContext(context.Background())
}

func (i GetNodesNodeTagArgs) ToGetNodesNodeTagOutputWithContext(ctx context.Context) GetNodesNodeTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodesNodeTagOutput)
}

// GetNodesNodeTagArrayInput is an input type that accepts GetNodesNodeTagArray and GetNodesNodeTagArrayOutput values.
// You can construct a concrete instance of `GetNodesNodeTagArrayInput` via:
//
//	GetNodesNodeTagArray{ GetNodesNodeTagArgs{...} }
type GetNodesNodeTagArrayInput interface {
	pulumi.Input

	ToGetNodesNodeTagArrayOutput() GetNodesNodeTagArrayOutput
	ToGetNodesNodeTagArrayOutputWithContext(context.Context) GetNodesNodeTagArrayOutput
}

type GetNodesNodeTagArray []GetNodesNodeTagInput

func (GetNodesNodeTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodesNodeTag)(nil)).Elem()
}

func (i GetNodesNodeTagArray) ToGetNodesNodeTagArrayOutput() GetNodesNodeTagArrayOutput {
	return i.ToGetNodesNodeTagArrayOutputWithContext(context.Background())
}

func (i GetNodesNodeTagArray) ToGetNodesNodeTagArrayOutputWithContext(ctx context.Context) GetNodesNodeTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetNodesNodeTagArrayOutput)
}

type GetNodesNodeTagOutput struct{ *pulumi.OutputState }

func (GetNodesNodeTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetNodesNodeTag)(nil)).Elem()
}

func (o GetNodesNodeTagOutput) ToGetNodesNodeTagOutput() GetNodesNodeTagOutput {
	return o
}

func (o GetNodesNodeTagOutput) ToGetNodesNodeTagOutputWithContext(ctx context.Context) GetNodesNodeTagOutput {
	return o
}

func (o GetNodesNodeTagOutput) TagKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNodeTag) string { return v.TagKey }).(pulumi.StringOutput)
}

func (o GetNodesNodeTagOutput) TagValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetNodesNodeTag) string { return v.TagValue }).(pulumi.StringOutput)
}

type GetNodesNodeTagArrayOutput struct{ *pulumi.OutputState }

func (GetNodesNodeTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetNodesNodeTag)(nil)).Elem()
}

func (o GetNodesNodeTagArrayOutput) ToGetNodesNodeTagArrayOutput() GetNodesNodeTagArrayOutput {
	return o
}

func (o GetNodesNodeTagArrayOutput) ToGetNodesNodeTagArrayOutputWithContext(ctx context.Context) GetNodesNodeTagArrayOutput {
	return o
}

func (o GetNodesNodeTagArrayOutput) Index(i pulumi.IntInput) GetNodesNodeTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetNodesNodeTag {
		return vs[0].([]GetNodesNodeTag)[vs[1].(int)]
	}).(GetNodesNodeTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterResourceSpecInput)(nil)).Elem(), ClusterResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterResourceSpecPtrInput)(nil)).Elem(), ClusterResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterResourceSpecCommonResourceSpecInput)(nil)).Elem(), ClusterResourceSpecCommonResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterResourceSpecCommonResourceSpecPtrInput)(nil)).Elem(), ClusterResourceSpecCommonResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterResourceSpecCoreResourceSpecInput)(nil)).Elem(), ClusterResourceSpecCoreResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterResourceSpecCoreResourceSpecPtrInput)(nil)).Elem(), ClusterResourceSpecCoreResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterResourceSpecMasterResourceSpecInput)(nil)).Elem(), ClusterResourceSpecMasterResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterResourceSpecMasterResourceSpecPtrInput)(nil)).Elem(), ClusterResourceSpecMasterResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterResourceSpecTaskResourceSpecInput)(nil)).Elem(), ClusterResourceSpecTaskResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClusterResourceSpecTaskResourceSpecPtrInput)(nil)).Elem(), ClusterResourceSpecTaskResourceSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceClusterInput)(nil)).Elem(), GetInstanceClusterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceClusterArrayInput)(nil)).Elem(), GetInstanceClusterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodesNodeInput)(nil)).Elem(), GetNodesNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodesNodeArrayInput)(nil)).Elem(), GetNodesNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodesNodeCdbNodeInfoInput)(nil)).Elem(), GetNodesNodeCdbNodeInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodesNodeCdbNodeInfoArrayInput)(nil)).Elem(), GetNodesNodeCdbNodeInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodesNodeMcMultiDiskInput)(nil)).Elem(), GetNodesNodeMcMultiDiskArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodesNodeMcMultiDiskArrayInput)(nil)).Elem(), GetNodesNodeMcMultiDiskArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodesNodeTagInput)(nil)).Elem(), GetNodesNodeTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetNodesNodeTagArrayInput)(nil)).Elem(), GetNodesNodeTagArray{})
	pulumi.RegisterOutputType(ClusterResourceSpecOutput{})
	pulumi.RegisterOutputType(ClusterResourceSpecPtrOutput{})
	pulumi.RegisterOutputType(ClusterResourceSpecCommonResourceSpecOutput{})
	pulumi.RegisterOutputType(ClusterResourceSpecCommonResourceSpecPtrOutput{})
	pulumi.RegisterOutputType(ClusterResourceSpecCoreResourceSpecOutput{})
	pulumi.RegisterOutputType(ClusterResourceSpecCoreResourceSpecPtrOutput{})
	pulumi.RegisterOutputType(ClusterResourceSpecMasterResourceSpecOutput{})
	pulumi.RegisterOutputType(ClusterResourceSpecMasterResourceSpecPtrOutput{})
	pulumi.RegisterOutputType(ClusterResourceSpecTaskResourceSpecOutput{})
	pulumi.RegisterOutputType(ClusterResourceSpecTaskResourceSpecPtrOutput{})
	pulumi.RegisterOutputType(GetInstanceClusterOutput{})
	pulumi.RegisterOutputType(GetInstanceClusterArrayOutput{})
	pulumi.RegisterOutputType(GetNodesNodeOutput{})
	pulumi.RegisterOutputType(GetNodesNodeArrayOutput{})
	pulumi.RegisterOutputType(GetNodesNodeCdbNodeInfoOutput{})
	pulumi.RegisterOutputType(GetNodesNodeCdbNodeInfoArrayOutput{})
	pulumi.RegisterOutputType(GetNodesNodeMcMultiDiskOutput{})
	pulumi.RegisterOutputType(GetNodesNodeMcMultiDiskArrayOutput{})
	pulumi.RegisterOutputType(GetNodesNodeTagOutput{})
	pulumi.RegisterOutputType(GetNodesNodeTagArrayOutput{})
}
