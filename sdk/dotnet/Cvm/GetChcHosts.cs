// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Cvm
{
    public static class GetChcHosts
    {
        public static Task<GetChcHostsResult> InvokeAsync(GetChcHostsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetChcHostsResult>("tencentcloud:Cvm/getChcHosts:getChcHosts", args ?? new GetChcHostsArgs(), options.WithDefaults());

        public static Output<GetChcHostsResult> Invoke(GetChcHostsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetChcHostsResult>("tencentcloud:Cvm/getChcHosts:getChcHosts", args ?? new GetChcHostsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetChcHostsArgs : global::Pulumi.InvokeArgs
    {
        [Input("chcIds")]
        private List<string>? _chcIds;
        public List<string> ChcIds
        {
            get => _chcIds ?? (_chcIds = new List<string>());
            set => _chcIds = value;
        }

        [Input("filters")]
        private List<Inputs.GetChcHostsFilterArgs>? _filters;
        public List<Inputs.GetChcHostsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetChcHostsFilterArgs>());
            set => _filters = value;
        }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetChcHostsArgs()
        {
        }
        public static new GetChcHostsArgs Empty => new GetChcHostsArgs();
    }

    public sealed class GetChcHostsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("chcIds")]
        private InputList<string>? _chcIds;
        public InputList<string> ChcIds
        {
            get => _chcIds ?? (_chcIds = new InputList<string>());
            set => _chcIds = value;
        }

        [Input("filters")]
        private InputList<Inputs.GetChcHostsFilterInputArgs>? _filters;
        public InputList<Inputs.GetChcHostsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetChcHostsFilterInputArgs>());
            set => _filters = value;
        }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetChcHostsInvokeArgs()
        {
        }
        public static new GetChcHostsInvokeArgs Empty => new GetChcHostsInvokeArgs();
    }


    [OutputType]
    public sealed class GetChcHostsResult
    {
        public readonly ImmutableArray<Outputs.GetChcHostsChcHostSetResult> ChcHostSets;
        public readonly ImmutableArray<string> ChcIds;
        public readonly ImmutableArray<Outputs.GetChcHostsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetChcHostsResult(
            ImmutableArray<Outputs.GetChcHostsChcHostSetResult> chcHostSets,

            ImmutableArray<string> chcIds,

            ImmutableArray<Outputs.GetChcHostsFilterResult> filters,

            string id,

            string? resultOutputFile)
        {
            ChcHostSets = chcHostSets;
            ChcIds = chcIds;
            Filters = filters;
            Id = id;
            ResultOutputFile = resultOutputFile;
        }
    }
}
