// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Gaap
{
    public static class GetProxies
    {
        public static Task<GetProxiesResult> InvokeAsync(GetProxiesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProxiesResult>("tencentcloud:Gaap/getProxies:getProxies", args ?? new GetProxiesArgs(), options.WithDefaults());

        public static Output<GetProxiesResult> Invoke(GetProxiesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProxiesResult>("tencentcloud:Gaap/getProxies:getProxies", args ?? new GetProxiesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProxiesArgs : global::Pulumi.InvokeArgs
    {
        [Input("accessRegion")]
        public string? AccessRegion { get; set; }

        [Input("ids")]
        private List<string>? _ids;
        public List<string> Ids
        {
            get => _ids ?? (_ids = new List<string>());
            set => _ids = value;
        }

        [Input("projectId")]
        public int? ProjectId { get; set; }

        [Input("realserverRegion")]
        public string? RealserverRegion { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("tags")]
        private Dictionary<string, object>? _tags;
        public Dictionary<string, object> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, object>());
            set => _tags = value;
        }

        public GetProxiesArgs()
        {
        }
        public static new GetProxiesArgs Empty => new GetProxiesArgs();
    }

    public sealed class GetProxiesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("accessRegion")]
        public Input<string>? AccessRegion { get; set; }

        [Input("ids")]
        private InputList<string>? _ids;
        public InputList<string> Ids
        {
            get => _ids ?? (_ids = new InputList<string>());
            set => _ids = value;
        }

        [Input("projectId")]
        public Input<int>? ProjectId { get; set; }

        [Input("realserverRegion")]
        public Input<string>? RealserverRegion { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public GetProxiesInvokeArgs()
        {
        }
        public static new GetProxiesInvokeArgs Empty => new GetProxiesInvokeArgs();
    }


    [OutputType]
    public sealed class GetProxiesResult
    {
        public readonly string? AccessRegion;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> Ids;
        public readonly int? ProjectId;
        public readonly ImmutableArray<Outputs.GetProxiesProxyResult> GaapProxies;
        public readonly string? RealserverRegion;
        public readonly string? ResultOutputFile;
        public readonly ImmutableDictionary<string, object>? Tags;

        [OutputConstructor]
        private GetProxiesResult(
            string? accessRegion,

            string id,

            ImmutableArray<string> ids,

            int? projectId,

            ImmutableArray<Outputs.GetProxiesProxyResult> proxies,

            string? realserverRegion,

            string? resultOutputFile,

            ImmutableDictionary<string, object>? tags)
        {
            AccessRegion = accessRegion;
            Id = id;
            Ids = ids;
            ProjectId = projectId;
            GaapProxies = proxies;
            RealserverRegion = realserverRegion;
            ResultOutputFile = resultOutputFile;
            Tags = tags;
        }
    }
}
