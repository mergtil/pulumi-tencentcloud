// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Tcr
{
    [TencentcloudResourceType("tencentcloud:Tcr/manageReplicationOperation:ManageReplicationOperation")]
    public partial class ManageReplicationOperation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// rule description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// the region ID of the target instance, such as Guangzhou is 1.
        /// </summary>
        [Output("destinationRegionId")]
        public Output<int?> DestinationRegionId { get; private set; } = null!;

        /// <summary>
        /// copy destination instance Id.
        /// </summary>
        [Output("destinationRegistryId")]
        public Output<string> DestinationRegistryId { get; private set; } = null!;

        /// <summary>
        /// enable synchronization of configuration items across master account instances.
        /// </summary>
        [Output("peerReplicationOption")]
        public Output<Outputs.ManageReplicationOperationPeerReplicationOption?> PeerReplicationOption { get; private set; } = null!;

        /// <summary>
        /// synchronization rules.
        /// </summary>
        [Output("rule")]
        public Output<Outputs.ManageReplicationOperationRule> Rule { get; private set; } = null!;

        /// <summary>
        /// copy source instance Id.
        /// </summary>
        [Output("sourceRegistryId")]
        public Output<string> SourceRegistryId { get; private set; } = null!;


        /// <summary>
        /// Create a ManageReplicationOperation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ManageReplicationOperation(string name, ManageReplicationOperationArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Tcr/manageReplicationOperation:ManageReplicationOperation", name, args ?? new ManageReplicationOperationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ManageReplicationOperation(string name, Input<string> id, ManageReplicationOperationState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Tcr/manageReplicationOperation:ManageReplicationOperation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ManageReplicationOperation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ManageReplicationOperation Get(string name, Input<string> id, ManageReplicationOperationState? state = null, CustomResourceOptions? options = null)
        {
            return new ManageReplicationOperation(name, id, state, options);
        }
    }

    public sealed class ManageReplicationOperationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// rule description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// the region ID of the target instance, such as Guangzhou is 1.
        /// </summary>
        [Input("destinationRegionId")]
        public Input<int>? DestinationRegionId { get; set; }

        /// <summary>
        /// copy destination instance Id.
        /// </summary>
        [Input("destinationRegistryId", required: true)]
        public Input<string> DestinationRegistryId { get; set; } = null!;

        /// <summary>
        /// enable synchronization of configuration items across master account instances.
        /// </summary>
        [Input("peerReplicationOption")]
        public Input<Inputs.ManageReplicationOperationPeerReplicationOptionArgs>? PeerReplicationOption { get; set; }

        /// <summary>
        /// synchronization rules.
        /// </summary>
        [Input("rule", required: true)]
        public Input<Inputs.ManageReplicationOperationRuleArgs> Rule { get; set; } = null!;

        /// <summary>
        /// copy source instance Id.
        /// </summary>
        [Input("sourceRegistryId", required: true)]
        public Input<string> SourceRegistryId { get; set; } = null!;

        public ManageReplicationOperationArgs()
        {
        }
        public static new ManageReplicationOperationArgs Empty => new ManageReplicationOperationArgs();
    }

    public sealed class ManageReplicationOperationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// rule description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// the region ID of the target instance, such as Guangzhou is 1.
        /// </summary>
        [Input("destinationRegionId")]
        public Input<int>? DestinationRegionId { get; set; }

        /// <summary>
        /// copy destination instance Id.
        /// </summary>
        [Input("destinationRegistryId")]
        public Input<string>? DestinationRegistryId { get; set; }

        /// <summary>
        /// enable synchronization of configuration items across master account instances.
        /// </summary>
        [Input("peerReplicationOption")]
        public Input<Inputs.ManageReplicationOperationPeerReplicationOptionGetArgs>? PeerReplicationOption { get; set; }

        /// <summary>
        /// synchronization rules.
        /// </summary>
        [Input("rule")]
        public Input<Inputs.ManageReplicationOperationRuleGetArgs>? Rule { get; set; }

        /// <summary>
        /// copy source instance Id.
        /// </summary>
        [Input("sourceRegistryId")]
        public Input<string>? SourceRegistryId { get; set; }

        public ManageReplicationOperationState()
        {
        }
        public static new ManageReplicationOperationState Empty => new ManageReplicationOperationState();
    }
}
