// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Mps
{
    [TencentcloudResourceType("tencentcloud:Mps/transcodeTemplate:TranscodeTemplate")]
    public partial class TranscodeTemplate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Audio stream configuration parameters, when RemoveAudio is 0, this field is required.
        /// </summary>
        [Output("audioTemplate")]
        public Output<Outputs.TranscodeTemplateAudioTemplate?> AudioTemplate { get; private set; } = null!;

        /// <summary>
        /// Template description information, length limit: 256 characters.
        /// </summary>
        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        /// <summary>
        /// Encapsulation format, optional values: mp4, flv, hls, mp3, flac, ogg, m4a. Among them, mp3, flac, ogg, m4a are pure
        /// audio files.
        /// </summary>
        [Output("container")]
        public Output<string> Container { get; private set; } = null!;

        /// <summary>
        /// Audio and video enhancement configuration.
        /// </summary>
        [Output("enhanceConfig")]
        public Output<Outputs.TranscodeTemplateEnhanceConfig?> EnhanceConfig { get; private set; } = null!;

        /// <summary>
        /// Transcoding template name, length limit: 64 characters.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Whether to remove audio data, value:0: reserved.1: remove.Default: 0.
        /// </summary>
        [Output("removeAudio")]
        public Output<int?> RemoveAudio { get; private set; } = null!;

        /// <summary>
        /// Whether to remove video data, value:0: reserved.1: remove.Default: 0.
        /// </summary>
        [Output("removeVideo")]
        public Output<int?> RemoveVideo { get; private set; } = null!;

        /// <summary>
        /// Ultra-fast HD transcoding parameters.
        /// </summary>
        [Output("tehdConfig")]
        public Output<Outputs.TranscodeTemplateTehdConfig?> TehdConfig { get; private set; } = null!;

        /// <summary>
        /// Video stream configuration parameters, when RemoveVideo is 0, this field is required.
        /// </summary>
        [Output("videoTemplate")]
        public Output<Outputs.TranscodeTemplateVideoTemplate?> VideoTemplate { get; private set; } = null!;


        /// <summary>
        /// Create a TranscodeTemplate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TranscodeTemplate(string name, TranscodeTemplateArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Mps/transcodeTemplate:TranscodeTemplate", name, args ?? new TranscodeTemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TranscodeTemplate(string name, Input<string> id, TranscodeTemplateState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Mps/transcodeTemplate:TranscodeTemplate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TranscodeTemplate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TranscodeTemplate Get(string name, Input<string> id, TranscodeTemplateState? state = null, CustomResourceOptions? options = null)
        {
            return new TranscodeTemplate(name, id, state, options);
        }
    }

    public sealed class TranscodeTemplateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Audio stream configuration parameters, when RemoveAudio is 0, this field is required.
        /// </summary>
        [Input("audioTemplate")]
        public Input<Inputs.TranscodeTemplateAudioTemplateArgs>? AudioTemplate { get; set; }

        /// <summary>
        /// Template description information, length limit: 256 characters.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Encapsulation format, optional values: mp4, flv, hls, mp3, flac, ogg, m4a. Among them, mp3, flac, ogg, m4a are pure
        /// audio files.
        /// </summary>
        [Input("container", required: true)]
        public Input<string> Container { get; set; } = null!;

        /// <summary>
        /// Audio and video enhancement configuration.
        /// </summary>
        [Input("enhanceConfig")]
        public Input<Inputs.TranscodeTemplateEnhanceConfigArgs>? EnhanceConfig { get; set; }

        /// <summary>
        /// Transcoding template name, length limit: 64 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Whether to remove audio data, value:0: reserved.1: remove.Default: 0.
        /// </summary>
        [Input("removeAudio")]
        public Input<int>? RemoveAudio { get; set; }

        /// <summary>
        /// Whether to remove video data, value:0: reserved.1: remove.Default: 0.
        /// </summary>
        [Input("removeVideo")]
        public Input<int>? RemoveVideo { get; set; }

        /// <summary>
        /// Ultra-fast HD transcoding parameters.
        /// </summary>
        [Input("tehdConfig")]
        public Input<Inputs.TranscodeTemplateTehdConfigArgs>? TehdConfig { get; set; }

        /// <summary>
        /// Video stream configuration parameters, when RemoveVideo is 0, this field is required.
        /// </summary>
        [Input("videoTemplate")]
        public Input<Inputs.TranscodeTemplateVideoTemplateArgs>? VideoTemplate { get; set; }

        public TranscodeTemplateArgs()
        {
        }
        public static new TranscodeTemplateArgs Empty => new TranscodeTemplateArgs();
    }

    public sealed class TranscodeTemplateState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Audio stream configuration parameters, when RemoveAudio is 0, this field is required.
        /// </summary>
        [Input("audioTemplate")]
        public Input<Inputs.TranscodeTemplateAudioTemplateGetArgs>? AudioTemplate { get; set; }

        /// <summary>
        /// Template description information, length limit: 256 characters.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Encapsulation format, optional values: mp4, flv, hls, mp3, flac, ogg, m4a. Among them, mp3, flac, ogg, m4a are pure
        /// audio files.
        /// </summary>
        [Input("container")]
        public Input<string>? Container { get; set; }

        /// <summary>
        /// Audio and video enhancement configuration.
        /// </summary>
        [Input("enhanceConfig")]
        public Input<Inputs.TranscodeTemplateEnhanceConfigGetArgs>? EnhanceConfig { get; set; }

        /// <summary>
        /// Transcoding template name, length limit: 64 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Whether to remove audio data, value:0: reserved.1: remove.Default: 0.
        /// </summary>
        [Input("removeAudio")]
        public Input<int>? RemoveAudio { get; set; }

        /// <summary>
        /// Whether to remove video data, value:0: reserved.1: remove.Default: 0.
        /// </summary>
        [Input("removeVideo")]
        public Input<int>? RemoveVideo { get; set; }

        /// <summary>
        /// Ultra-fast HD transcoding parameters.
        /// </summary>
        [Input("tehdConfig")]
        public Input<Inputs.TranscodeTemplateTehdConfigGetArgs>? TehdConfig { get; set; }

        /// <summary>
        /// Video stream configuration parameters, when RemoveVideo is 0, this field is required.
        /// </summary>
        [Input("videoTemplate")]
        public Input<Inputs.TranscodeTemplateVideoTemplateGetArgs>? VideoTemplate { get; set; }

        public TranscodeTemplateState()
        {
        }
        public static new TranscodeTemplateState Empty => new TranscodeTemplateState();
    }
}
