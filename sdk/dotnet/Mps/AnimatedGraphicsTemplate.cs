// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Mps
{
    [TencentcloudResourceType("tencentcloud:Mps/animatedGraphicsTemplate:AnimatedGraphicsTemplate")]
    public partial class AnimatedGraphicsTemplate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Template description information, length limit: 256 characters.
        /// </summary>
        [Output("comment")]
        public Output<string?> Comment { get; private set; } = null!;

        /// <summary>
        /// Animation format, the values are gif and webp. Default is gif.
        /// </summary>
        [Output("format")]
        public Output<string?> Format { get; private set; } = null!;

        /// <summary>
        /// Frame rate, value range: [1, 30], unit: Hz.
        /// </summary>
        [Output("fps")]
        public Output<int> Fps { get; private set; } = null!;

        /// <summary>
        /// The maximum value of the animation height (or short side), value range: 0 and [128, 4096], unit: px.When Width and
        /// Height are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When
        /// Width is not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is
        /// specified by the user.Default value: 0.
        /// </summary>
        [Output("height")]
        public Output<int?> Height { get; private set; } = null!;

        /// <summary>
        /// Rotation diagram template name, length limit: 64 characters.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Image quality, value range: [1, 100], default value is 75.
        /// </summary>
        [Output("quality")]
        public Output<double?> Quality { get; private set; } = null!;

        /// <summary>
        /// Adaptive resolution, optional value:open: At this time, Width represents the long side of the video, Height represents
        /// the short side of the video.close: At this point, Width represents the width of the video, and Height represents the
        /// height of the video.Default value: open.
        /// </summary>
        [Output("resolutionAdaptive")]
        public Output<string?> ResolutionAdaptive { get; private set; } = null!;

        /// <summary>
        /// The maximum value of the animation width (or long side), value range: 0 and [128, 4096], unit: px.When Width and Height
        /// are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When Width is
        /// not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is specified
        /// by the user.Default value: 0.
        /// </summary>
        [Output("width")]
        public Output<int?> Width { get; private set; } = null!;


        /// <summary>
        /// Create a AnimatedGraphicsTemplate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AnimatedGraphicsTemplate(string name, AnimatedGraphicsTemplateArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Mps/animatedGraphicsTemplate:AnimatedGraphicsTemplate", name, args ?? new AnimatedGraphicsTemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AnimatedGraphicsTemplate(string name, Input<string> id, AnimatedGraphicsTemplateState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Mps/animatedGraphicsTemplate:AnimatedGraphicsTemplate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AnimatedGraphicsTemplate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AnimatedGraphicsTemplate Get(string name, Input<string> id, AnimatedGraphicsTemplateState? state = null, CustomResourceOptions? options = null)
        {
            return new AnimatedGraphicsTemplate(name, id, state, options);
        }
    }

    public sealed class AnimatedGraphicsTemplateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Template description information, length limit: 256 characters.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Animation format, the values are gif and webp. Default is gif.
        /// </summary>
        [Input("format")]
        public Input<string>? Format { get; set; }

        /// <summary>
        /// Frame rate, value range: [1, 30], unit: Hz.
        /// </summary>
        [Input("fps", required: true)]
        public Input<int> Fps { get; set; } = null!;

        /// <summary>
        /// The maximum value of the animation height (or short side), value range: 0 and [128, 4096], unit: px.When Width and
        /// Height are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When
        /// Width is not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is
        /// specified by the user.Default value: 0.
        /// </summary>
        [Input("height")]
        public Input<int>? Height { get; set; }

        /// <summary>
        /// Rotation diagram template name, length limit: 64 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Image quality, value range: [1, 100], default value is 75.
        /// </summary>
        [Input("quality")]
        public Input<double>? Quality { get; set; }

        /// <summary>
        /// Adaptive resolution, optional value:open: At this time, Width represents the long side of the video, Height represents
        /// the short side of the video.close: At this point, Width represents the width of the video, and Height represents the
        /// height of the video.Default value: open.
        /// </summary>
        [Input("resolutionAdaptive")]
        public Input<string>? ResolutionAdaptive { get; set; }

        /// <summary>
        /// The maximum value of the animation width (or long side), value range: 0 and [128, 4096], unit: px.When Width and Height
        /// are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When Width is
        /// not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is specified
        /// by the user.Default value: 0.
        /// </summary>
        [Input("width")]
        public Input<int>? Width { get; set; }

        public AnimatedGraphicsTemplateArgs()
        {
        }
        public static new AnimatedGraphicsTemplateArgs Empty => new AnimatedGraphicsTemplateArgs();
    }

    public sealed class AnimatedGraphicsTemplateState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Template description information, length limit: 256 characters.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Animation format, the values are gif and webp. Default is gif.
        /// </summary>
        [Input("format")]
        public Input<string>? Format { get; set; }

        /// <summary>
        /// Frame rate, value range: [1, 30], unit: Hz.
        /// </summary>
        [Input("fps")]
        public Input<int>? Fps { get; set; }

        /// <summary>
        /// The maximum value of the animation height (or short side), value range: 0 and [128, 4096], unit: px.When Width and
        /// Height are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When
        /// Width is not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is
        /// specified by the user.Default value: 0.
        /// </summary>
        [Input("height")]
        public Input<int>? Height { get; set; }

        /// <summary>
        /// Rotation diagram template name, length limit: 64 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Image quality, value range: [1, 100], default value is 75.
        /// </summary>
        [Input("quality")]
        public Input<double>? Quality { get; set; }

        /// <summary>
        /// Adaptive resolution, optional value:open: At this time, Width represents the long side of the video, Height represents
        /// the short side of the video.close: At this point, Width represents the width of the video, and Height represents the
        /// height of the video.Default value: open.
        /// </summary>
        [Input("resolutionAdaptive")]
        public Input<string>? ResolutionAdaptive { get; set; }

        /// <summary>
        /// The maximum value of the animation width (or long side), value range: 0 and [128, 4096], unit: px.When Width and Height
        /// are both 0, the resolution is the same.When Width is 0 and Height is not 0, Width is scaled proportionally.When Width is
        /// not 0 and Height is 0, Height is scaled proportionally.When both Width and Height are not 0, the resolution is specified
        /// by the user.Default value: 0.
        /// </summary>
        [Input("width")]
        public Input<int>? Width { get; set; }

        public AnimatedGraphicsTemplateState()
        {
        }
        public static new AnimatedGraphicsTemplateState Empty => new AnimatedGraphicsTemplateState();
    }
}
