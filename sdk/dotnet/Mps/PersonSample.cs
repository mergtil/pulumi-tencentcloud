// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Mps
{
    [TencentcloudResourceType("tencentcloud:Mps/personSample:PersonSample")]
    public partial class PersonSample : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Material description, length limit: 1024 characters.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Material image [Base64](https://tools.ietf.org/html/rfc4648) encoded string only supports jpeg and png image formats.
        /// Array length limit: 5 images.Note: The picture must be a single portrait with clearer facial features, with a pixel size
        /// of not less than 200*200.
        /// </summary>
        [Output("faceContents")]
        public Output<ImmutableArray<string>> FaceContents { get; private set; } = null!;

        /// <summary>
        /// Material name, length limit: 20 characters.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Material application scene, optional value:1. Recognition.Face: used for content recognition 2. Review.Face: used for
        /// inappropriate content identification 3. All: contains all of the above, equivalent to 1+2.
        /// </summary>
        [Output("usages")]
        public Output<ImmutableArray<string>> Usages { get; private set; } = null!;


        /// <summary>
        /// Create a PersonSample resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PersonSample(string name, PersonSampleArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Mps/personSample:PersonSample", name, args ?? new PersonSampleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PersonSample(string name, Input<string> id, PersonSampleState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Mps/personSample:PersonSample", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PersonSample resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PersonSample Get(string name, Input<string> id, PersonSampleState? state = null, CustomResourceOptions? options = null)
        {
            return new PersonSample(name, id, state, options);
        }
    }

    public sealed class PersonSampleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Material description, length limit: 1024 characters.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("faceContents")]
        private InputList<string>? _faceContents;

        /// <summary>
        /// Material image [Base64](https://tools.ietf.org/html/rfc4648) encoded string only supports jpeg and png image formats.
        /// Array length limit: 5 images.Note: The picture must be a single portrait with clearer facial features, with a pixel size
        /// of not less than 200*200.
        /// </summary>
        public InputList<string> FaceContents
        {
            get => _faceContents ?? (_faceContents = new InputList<string>());
            set => _faceContents = value;
        }

        /// <summary>
        /// Material name, length limit: 20 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("usages", required: true)]
        private InputList<string>? _usages;

        /// <summary>
        /// Material application scene, optional value:1. Recognition.Face: used for content recognition 2. Review.Face: used for
        /// inappropriate content identification 3. All: contains all of the above, equivalent to 1+2.
        /// </summary>
        public InputList<string> Usages
        {
            get => _usages ?? (_usages = new InputList<string>());
            set => _usages = value;
        }

        public PersonSampleArgs()
        {
        }
        public static new PersonSampleArgs Empty => new PersonSampleArgs();
    }

    public sealed class PersonSampleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Material description, length limit: 1024 characters.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("faceContents")]
        private InputList<string>? _faceContents;

        /// <summary>
        /// Material image [Base64](https://tools.ietf.org/html/rfc4648) encoded string only supports jpeg and png image formats.
        /// Array length limit: 5 images.Note: The picture must be a single portrait with clearer facial features, with a pixel size
        /// of not less than 200*200.
        /// </summary>
        public InputList<string> FaceContents
        {
            get => _faceContents ?? (_faceContents = new InputList<string>());
            set => _faceContents = value;
        }

        /// <summary>
        /// Material name, length limit: 20 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("usages")]
        private InputList<string>? _usages;

        /// <summary>
        /// Material application scene, optional value:1. Recognition.Face: used for content recognition 2. Review.Face: used for
        /// inappropriate content identification 3. All: contains all of the above, equivalent to 1+2.
        /// </summary>
        public InputList<string> Usages
        {
            get => _usages ?? (_usages = new InputList<string>());
            set => _usages = value;
        }

        public PersonSampleState()
        {
        }
        public static new PersonSampleState Empty => new PersonSampleState();
    }
}
