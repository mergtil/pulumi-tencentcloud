// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Audits
{
    public static class GetAudits
    {
        public static Task<GetAuditsResult> InvokeAsync(GetAuditsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAuditsResult>("tencentcloud:Audits/getAudits:getAudits", args ?? new GetAuditsArgs(), options.WithDefaults());

        public static Output<GetAuditsResult> Invoke(GetAuditsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAuditsResult>("tencentcloud:Audits/getAudits:getAudits", args ?? new GetAuditsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAuditsArgs : global::Pulumi.InvokeArgs
    {
        [Input("name")]
        public string? Name { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetAuditsArgs()
        {
        }
        public static new GetAuditsArgs Empty => new GetAuditsArgs();
    }

    public sealed class GetAuditsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetAuditsInvokeArgs()
        {
        }
        public static new GetAuditsInvokeArgs Empty => new GetAuditsInvokeArgs();
    }


    [OutputType]
    public sealed class GetAuditsResult
    {
        public readonly ImmutableArray<Outputs.GetAuditsAuditListResult> AuditLists;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Name;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetAuditsResult(
            ImmutableArray<Outputs.GetAuditsAuditListResult> auditLists,

            string id,

            string? name,

            string? resultOutputFile)
        {
            AuditLists = auditLists;
            Id = id;
            Name = name;
            ResultOutputFile = resultOutputFile;
        }
    }
}
