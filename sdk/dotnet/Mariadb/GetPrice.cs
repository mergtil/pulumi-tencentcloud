// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Mariadb
{
    public static class GetPrice
    {
        public static Task<GetPriceResult> InvokeAsync(GetPriceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPriceResult>("tencentcloud:Mariadb/getPrice:getPrice", args ?? new GetPriceArgs(), options.WithDefaults());

        public static Output<GetPriceResult> Invoke(GetPriceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPriceResult>("tencentcloud:Mariadb/getPrice:getPrice", args ?? new GetPriceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPriceArgs : global::Pulumi.InvokeArgs
    {
        [Input("amountUnit")]
        public string? AmountUnit { get; set; }

        [Input("buyCount", required: true)]
        public int BuyCount { get; set; }

        [Input("memory", required: true)]
        public int Memory { get; set; }

        [Input("nodeCount", required: true)]
        public int NodeCount { get; set; }

        [Input("paymode")]
        public string? Paymode { get; set; }

        [Input("period")]
        public int? Period { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("storage", required: true)]
        public int Storage { get; set; }

        [Input("zone", required: true)]
        public string Zone { get; set; } = null!;

        public GetPriceArgs()
        {
        }
        public static new GetPriceArgs Empty => new GetPriceArgs();
    }

    public sealed class GetPriceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("amountUnit")]
        public Input<string>? AmountUnit { get; set; }

        [Input("buyCount", required: true)]
        public Input<int> BuyCount { get; set; } = null!;

        [Input("memory", required: true)]
        public Input<int> Memory { get; set; } = null!;

        [Input("nodeCount", required: true)]
        public Input<int> NodeCount { get; set; } = null!;

        [Input("paymode")]
        public Input<string>? Paymode { get; set; }

        [Input("period")]
        public Input<int>? Period { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("storage", required: true)]
        public Input<int> Storage { get; set; } = null!;

        [Input("zone", required: true)]
        public Input<string> Zone { get; set; } = null!;

        public GetPriceInvokeArgs()
        {
        }
        public static new GetPriceInvokeArgs Empty => new GetPriceInvokeArgs();
    }


    [OutputType]
    public sealed class GetPriceResult
    {
        public readonly string? AmountUnit;
        public readonly int BuyCount;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int Memory;
        public readonly int NodeCount;
        public readonly int OriginalPrice;
        public readonly string? Paymode;
        public readonly int? Period;
        public readonly int MariadbPrice;
        public readonly string? ResultOutputFile;
        public readonly int Storage;
        public readonly string Zone;

        [OutputConstructor]
        private GetPriceResult(
            string? amountUnit,

            int buyCount,

            string id,

            int memory,

            int nodeCount,

            int originalPrice,

            string? paymode,

            int? period,

            int price,

            string? resultOutputFile,

            int storage,

            string zone)
        {
            AmountUnit = amountUnit;
            BuyCount = buyCount;
            Id = id;
            Memory = memory;
            NodeCount = nodeCount;
            OriginalPrice = originalPrice;
            Paymode = paymode;
            Period = period;
            MariadbPrice = price;
            ResultOutputFile = resultOutputFile;
            Storage = storage;
            Zone = zone;
        }
    }
}
