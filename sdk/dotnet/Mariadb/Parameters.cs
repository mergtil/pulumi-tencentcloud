// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Mariadb
{
    [TencentcloudResourceType("tencentcloud:Mariadb/parameters:Parameters")]
    public partial class Parameters : global::Pulumi.CustomResource
    {
        /// <summary>
        /// instance id.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// Number of days to keep, no more than 30.
        /// </summary>
        [Output("params")]
        public Output<ImmutableArray<Outputs.ParametersParam>> Params { get; private set; } = null!;


        /// <summary>
        /// Create a Parameters resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Parameters(string name, ParametersArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Mariadb/parameters:Parameters", name, args ?? new ParametersArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Parameters(string name, Input<string> id, ParametersState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Mariadb/parameters:Parameters", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Parameters resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Parameters Get(string name, Input<string> id, ParametersState? state = null, CustomResourceOptions? options = null)
        {
            return new Parameters(name, id, state, options);
        }
    }

    public sealed class ParametersArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// instance id.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("params", required: true)]
        private InputList<Inputs.ParametersParamArgs>? _params;

        /// <summary>
        /// Number of days to keep, no more than 30.
        /// </summary>
        public InputList<Inputs.ParametersParamArgs> Params
        {
            get => _params ?? (_params = new InputList<Inputs.ParametersParamArgs>());
            set => _params = value;
        }

        public ParametersArgs()
        {
        }
        public static new ParametersArgs Empty => new ParametersArgs();
    }

    public sealed class ParametersState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// instance id.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        [Input("params")]
        private InputList<Inputs.ParametersParamGetArgs>? _params;

        /// <summary>
        /// Number of days to keep, no more than 30.
        /// </summary>
        public InputList<Inputs.ParametersParamGetArgs> Params
        {
            get => _params ?? (_params = new InputList<Inputs.ParametersParamGetArgs>());
            set => _params = value;
        }

        public ParametersState()
        {
        }
        public static new ParametersState Empty => new ParametersState();
    }
}
