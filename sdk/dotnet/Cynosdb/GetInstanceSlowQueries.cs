// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Cynosdb
{
    public static class GetInstanceSlowQueries
    {
        public static Task<GetInstanceSlowQueriesResult> InvokeAsync(GetInstanceSlowQueriesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInstanceSlowQueriesResult>("tencentcloud:Cynosdb/getInstanceSlowQueries:getInstanceSlowQueries", args ?? new GetInstanceSlowQueriesArgs(), options.WithDefaults());

        public static Output<GetInstanceSlowQueriesResult> Invoke(GetInstanceSlowQueriesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInstanceSlowQueriesResult>("tencentcloud:Cynosdb/getInstanceSlowQueries:getInstanceSlowQueries", args ?? new GetInstanceSlowQueriesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInstanceSlowQueriesArgs : global::Pulumi.InvokeArgs
    {
        [Input("database")]
        public string? Database { get; set; }

        [Input("endTime")]
        public string? EndTime { get; set; }

        [Input("host")]
        public string? Host { get; set; }

        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        [Input("orderBy")]
        public string? OrderBy { get; set; }

        [Input("orderByType")]
        public string? OrderByType { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("startTime")]
        public string? StartTime { get; set; }

        [Input("username")]
        public string? Username { get; set; }

        public GetInstanceSlowQueriesArgs()
        {
        }
        public static new GetInstanceSlowQueriesArgs Empty => new GetInstanceSlowQueriesArgs();
    }

    public sealed class GetInstanceSlowQueriesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("database")]
        public Input<string>? Database { get; set; }

        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        [Input("host")]
        public Input<string>? Host { get; set; }

        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("orderBy")]
        public Input<string>? OrderBy { get; set; }

        [Input("orderByType")]
        public Input<string>? OrderByType { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        [Input("username")]
        public Input<string>? Username { get; set; }

        public GetInstanceSlowQueriesInvokeArgs()
        {
        }
        public static new GetInstanceSlowQueriesInvokeArgs Empty => new GetInstanceSlowQueriesInvokeArgs();
    }


    [OutputType]
    public sealed class GetInstanceSlowQueriesResult
    {
        public readonly string? Database;
        public readonly string? EndTime;
        public readonly string? Host;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        public readonly string? OrderBy;
        public readonly string? OrderByType;
        public readonly string? ResultOutputFile;
        public readonly ImmutableArray<Outputs.GetInstanceSlowQueriesSlowQueryResult> SlowQueries;
        public readonly string? StartTime;
        public readonly string? Username;

        [OutputConstructor]
        private GetInstanceSlowQueriesResult(
            string? database,

            string? endTime,

            string? host,

            string id,

            string instanceId,

            string? orderBy,

            string? orderByType,

            string? resultOutputFile,

            ImmutableArray<Outputs.GetInstanceSlowQueriesSlowQueryResult> slowQueries,

            string? startTime,

            string? username)
        {
            Database = database;
            EndTime = endTime;
            Host = host;
            Id = id;
            InstanceId = instanceId;
            OrderBy = orderBy;
            OrderByType = orderByType;
            ResultOutputFile = resultOutputFile;
            SlowQueries = slowQueries;
            StartTime = startTime;
            Username = username;
        }
    }
}
