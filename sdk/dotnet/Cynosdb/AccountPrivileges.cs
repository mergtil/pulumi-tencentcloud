// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Cynosdb
{
    [TencentcloudResourceType("tencentcloud:Cynosdb/accountPrivileges:AccountPrivileges")]
    public partial class AccountPrivileges : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Account.
        /// </summary>
        [Output("accountName")]
        public Output<string> AccountName { get; private set; } = null!;

        /// <summary>
        /// Cluster ID.
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// Array of database permissions.
        /// </summary>
        [Output("databasePrivileges")]
        public Output<ImmutableArray<Outputs.AccountPrivilegesDatabasePrivilege>> DatabasePrivileges { get; private set; } = null!;

        /// <summary>
        /// Array of global permissions.
        /// </summary>
        [Output("globalPrivileges")]
        public Output<ImmutableArray<string>> GlobalPrivileges { get; private set; } = null!;

        /// <summary>
        /// Host, default `%`.
        /// </summary>
        [Output("host")]
        public Output<string?> Host { get; private set; } = null!;

        /// <summary>
        /// array of table permissions.
        /// </summary>
        [Output("tablePrivileges")]
        public Output<ImmutableArray<Outputs.AccountPrivilegesTablePrivilege>> TablePrivileges { get; private set; } = null!;


        /// <summary>
        /// Create a AccountPrivileges resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AccountPrivileges(string name, AccountPrivilegesArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Cynosdb/accountPrivileges:AccountPrivileges", name, args ?? new AccountPrivilegesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AccountPrivileges(string name, Input<string> id, AccountPrivilegesState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Cynosdb/accountPrivileges:AccountPrivileges", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AccountPrivileges resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AccountPrivileges Get(string name, Input<string> id, AccountPrivilegesState? state = null, CustomResourceOptions? options = null)
        {
            return new AccountPrivileges(name, id, state, options);
        }
    }

    public sealed class AccountPrivilegesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Account.
        /// </summary>
        [Input("accountName", required: true)]
        public Input<string> AccountName { get; set; } = null!;

        /// <summary>
        /// Cluster ID.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        [Input("databasePrivileges")]
        private InputList<Inputs.AccountPrivilegesDatabasePrivilegeArgs>? _databasePrivileges;

        /// <summary>
        /// Array of database permissions.
        /// </summary>
        public InputList<Inputs.AccountPrivilegesDatabasePrivilegeArgs> DatabasePrivileges
        {
            get => _databasePrivileges ?? (_databasePrivileges = new InputList<Inputs.AccountPrivilegesDatabasePrivilegeArgs>());
            set => _databasePrivileges = value;
        }

        [Input("globalPrivileges", required: true)]
        private InputList<string>? _globalPrivileges;

        /// <summary>
        /// Array of global permissions.
        /// </summary>
        public InputList<string> GlobalPrivileges
        {
            get => _globalPrivileges ?? (_globalPrivileges = new InputList<string>());
            set => _globalPrivileges = value;
        }

        /// <summary>
        /// Host, default `%`.
        /// </summary>
        [Input("host")]
        public Input<string>? Host { get; set; }

        [Input("tablePrivileges")]
        private InputList<Inputs.AccountPrivilegesTablePrivilegeArgs>? _tablePrivileges;

        /// <summary>
        /// array of table permissions.
        /// </summary>
        public InputList<Inputs.AccountPrivilegesTablePrivilegeArgs> TablePrivileges
        {
            get => _tablePrivileges ?? (_tablePrivileges = new InputList<Inputs.AccountPrivilegesTablePrivilegeArgs>());
            set => _tablePrivileges = value;
        }

        public AccountPrivilegesArgs()
        {
        }
        public static new AccountPrivilegesArgs Empty => new AccountPrivilegesArgs();
    }

    public sealed class AccountPrivilegesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Account.
        /// </summary>
        [Input("accountName")]
        public Input<string>? AccountName { get; set; }

        /// <summary>
        /// Cluster ID.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        [Input("databasePrivileges")]
        private InputList<Inputs.AccountPrivilegesDatabasePrivilegeGetArgs>? _databasePrivileges;

        /// <summary>
        /// Array of database permissions.
        /// </summary>
        public InputList<Inputs.AccountPrivilegesDatabasePrivilegeGetArgs> DatabasePrivileges
        {
            get => _databasePrivileges ?? (_databasePrivileges = new InputList<Inputs.AccountPrivilegesDatabasePrivilegeGetArgs>());
            set => _databasePrivileges = value;
        }

        [Input("globalPrivileges")]
        private InputList<string>? _globalPrivileges;

        /// <summary>
        /// Array of global permissions.
        /// </summary>
        public InputList<string> GlobalPrivileges
        {
            get => _globalPrivileges ?? (_globalPrivileges = new InputList<string>());
            set => _globalPrivileges = value;
        }

        /// <summary>
        /// Host, default `%`.
        /// </summary>
        [Input("host")]
        public Input<string>? Host { get; set; }

        [Input("tablePrivileges")]
        private InputList<Inputs.AccountPrivilegesTablePrivilegeGetArgs>? _tablePrivileges;

        /// <summary>
        /// array of table permissions.
        /// </summary>
        public InputList<Inputs.AccountPrivilegesTablePrivilegeGetArgs> TablePrivileges
        {
            get => _tablePrivileges ?? (_tablePrivileges = new InputList<Inputs.AccountPrivilegesTablePrivilegeGetArgs>());
            set => _tablePrivileges = value;
        }

        public AccountPrivilegesState()
        {
        }
        public static new AccountPrivilegesState Empty => new AccountPrivilegesState();
    }
}
