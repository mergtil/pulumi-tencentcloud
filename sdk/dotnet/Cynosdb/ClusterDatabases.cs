// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Cynosdb
{
    [TencentcloudResourceType("tencentcloud:Cynosdb/clusterDatabases:ClusterDatabases")]
    public partial class ClusterDatabases : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Character Set Type.
        /// </summary>
        [Output("characterSet")]
        public Output<string> CharacterSet { get; private set; } = null!;

        /// <summary>
        /// Cluster ID.
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// Sort Rules.
        /// </summary>
        [Output("collateRule")]
        public Output<string> CollateRule { get; private set; } = null!;

        /// <summary>
        /// Database name.
        /// </summary>
        [Output("dbName")]
        public Output<string> DbName { get; private set; } = null!;

        /// <summary>
        /// Remarks.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Authorize user host permissions.
        /// </summary>
        [Output("userHostPrivileges")]
        public Output<ImmutableArray<Outputs.ClusterDatabasesUserHostPrivilege>> UserHostPrivileges { get; private set; } = null!;


        /// <summary>
        /// Create a ClusterDatabases resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ClusterDatabases(string name, ClusterDatabasesArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Cynosdb/clusterDatabases:ClusterDatabases", name, args ?? new ClusterDatabasesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ClusterDatabases(string name, Input<string> id, ClusterDatabasesState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Cynosdb/clusterDatabases:ClusterDatabases", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ClusterDatabases resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ClusterDatabases Get(string name, Input<string> id, ClusterDatabasesState? state = null, CustomResourceOptions? options = null)
        {
            return new ClusterDatabases(name, id, state, options);
        }
    }

    public sealed class ClusterDatabasesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Character Set Type.
        /// </summary>
        [Input("characterSet", required: true)]
        public Input<string> CharacterSet { get; set; } = null!;

        /// <summary>
        /// Cluster ID.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// Sort Rules.
        /// </summary>
        [Input("collateRule", required: true)]
        public Input<string> CollateRule { get; set; } = null!;

        /// <summary>
        /// Database name.
        /// </summary>
        [Input("dbName", required: true)]
        public Input<string> DbName { get; set; } = null!;

        /// <summary>
        /// Remarks.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("userHostPrivileges")]
        private InputList<Inputs.ClusterDatabasesUserHostPrivilegeArgs>? _userHostPrivileges;

        /// <summary>
        /// Authorize user host permissions.
        /// </summary>
        public InputList<Inputs.ClusterDatabasesUserHostPrivilegeArgs> UserHostPrivileges
        {
            get => _userHostPrivileges ?? (_userHostPrivileges = new InputList<Inputs.ClusterDatabasesUserHostPrivilegeArgs>());
            set => _userHostPrivileges = value;
        }

        public ClusterDatabasesArgs()
        {
        }
        public static new ClusterDatabasesArgs Empty => new ClusterDatabasesArgs();
    }

    public sealed class ClusterDatabasesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Character Set Type.
        /// </summary>
        [Input("characterSet")]
        public Input<string>? CharacterSet { get; set; }

        /// <summary>
        /// Cluster ID.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// Sort Rules.
        /// </summary>
        [Input("collateRule")]
        public Input<string>? CollateRule { get; set; }

        /// <summary>
        /// Database name.
        /// </summary>
        [Input("dbName")]
        public Input<string>? DbName { get; set; }

        /// <summary>
        /// Remarks.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("userHostPrivileges")]
        private InputList<Inputs.ClusterDatabasesUserHostPrivilegeGetArgs>? _userHostPrivileges;

        /// <summary>
        /// Authorize user host permissions.
        /// </summary>
        public InputList<Inputs.ClusterDatabasesUserHostPrivilegeGetArgs> UserHostPrivileges
        {
            get => _userHostPrivileges ?? (_userHostPrivileges = new InputList<Inputs.ClusterDatabasesUserHostPrivilegeGetArgs>());
            set => _userHostPrivileges = value;
        }

        public ClusterDatabasesState()
        {
        }
        public static new ClusterDatabasesState Empty => new ClusterDatabasesState();
    }
}
