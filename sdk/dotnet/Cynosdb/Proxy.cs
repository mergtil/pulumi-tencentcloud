// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Cynosdb
{
    [TencentcloudResourceType("tencentcloud:Cynosdb/proxy:Proxy")]
    public partial class Proxy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Cluster ID.
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// Connection pool threshold: unit (second).
        /// </summary>
        [Output("connectionPoolTimeOut")]
        public Output<int?> ConnectionPoolTimeOut { get; private set; } = null!;

        /// <summary>
        /// Connection pool type: SessionConnectionPool (session level Connection pool).
        /// </summary>
        [Output("connectionPoolType")]
        public Output<string?> ConnectionPoolType { get; private set; } = null!;

        /// <summary>
        /// Number of CPU cores.
        /// </summary>
        [Output("cpu")]
        public Output<int> Cpu { get; private set; } = null!;

        /// <summary>
        /// Description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Memory.
        /// </summary>
        [Output("mem")]
        public Output<int> Mem { get; private set; } = null!;

        /// <summary>
        /// Whether to enable Connection pool, yes - enable, no - do not enable.
        /// </summary>
        [Output("openConnectionPool")]
        public Output<string?> OpenConnectionPool { get; private set; } = null!;

        /// <summary>
        /// Number of database proxy group nodes. If it is set at the same time as the `proxy_zones` field, the `proxy_zones`
        /// parameter shall prevail.
        /// </summary>
        [Output("proxyCount")]
        public Output<int> ProxyCount { get; private set; } = null!;

        /// <summary>
        /// Proxy Group Id.
        /// </summary>
        [Output("proxyGroupId")]
        public Output<string> ProxyGroupId { get; private set; } = null!;

        /// <summary>
        /// Database node information.
        /// </summary>
        [Output("proxyZones")]
        public Output<ImmutableArray<Outputs.ProxyProxyZone>> ProxyZones { get; private set; } = null!;

        /// <summary>
        /// Read only instance list.
        /// </summary>
        [Output("roInstances")]
        public Output<ImmutableArray<Outputs.ProxyRoInstance>> RoInstances { get; private set; } = null!;

        /// <summary>
        /// Security Group ID Array.
        /// </summary>
        [Output("securityGroupIds")]
        public Output<ImmutableArray<string>> SecurityGroupIds { get; private set; } = null!;

        /// <summary>
        /// The private network subnet ID is consistent with the cluster subnet ID by default.
        /// </summary>
        [Output("uniqueSubnetId")]
        public Output<string> UniqueSubnetId { get; private set; } = null!;

        /// <summary>
        /// Private network ID, which is consistent with the cluster private network ID by default.
        /// </summary>
        [Output("uniqueVpcId")]
        public Output<string> UniqueVpcId { get; private set; } = null!;


        /// <summary>
        /// Create a Proxy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Proxy(string name, ProxyArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Cynosdb/proxy:Proxy", name, args ?? new ProxyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Proxy(string name, Input<string> id, ProxyState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Cynosdb/proxy:Proxy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Proxy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Proxy Get(string name, Input<string> id, ProxyState? state = null, CustomResourceOptions? options = null)
        {
            return new Proxy(name, id, state, options);
        }
    }

    public sealed class ProxyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Cluster ID.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// Connection pool threshold: unit (second).
        /// </summary>
        [Input("connectionPoolTimeOut")]
        public Input<int>? ConnectionPoolTimeOut { get; set; }

        /// <summary>
        /// Connection pool type: SessionConnectionPool (session level Connection pool).
        /// </summary>
        [Input("connectionPoolType")]
        public Input<string>? ConnectionPoolType { get; set; }

        /// <summary>
        /// Number of CPU cores.
        /// </summary>
        [Input("cpu", required: true)]
        public Input<int> Cpu { get; set; } = null!;

        /// <summary>
        /// Description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Memory.
        /// </summary>
        [Input("mem", required: true)]
        public Input<int> Mem { get; set; } = null!;

        /// <summary>
        /// Whether to enable Connection pool, yes - enable, no - do not enable.
        /// </summary>
        [Input("openConnectionPool")]
        public Input<string>? OpenConnectionPool { get; set; }

        /// <summary>
        /// Number of database proxy group nodes. If it is set at the same time as the `proxy_zones` field, the `proxy_zones`
        /// parameter shall prevail.
        /// </summary>
        [Input("proxyCount")]
        public Input<int>? ProxyCount { get; set; }

        [Input("proxyZones")]
        private InputList<Inputs.ProxyProxyZoneArgs>? _proxyZones;

        /// <summary>
        /// Database node information.
        /// </summary>
        public InputList<Inputs.ProxyProxyZoneArgs> ProxyZones
        {
            get => _proxyZones ?? (_proxyZones = new InputList<Inputs.ProxyProxyZoneArgs>());
            set => _proxyZones = value;
        }

        [Input("securityGroupIds")]
        private InputList<string>? _securityGroupIds;

        /// <summary>
        /// Security Group ID Array.
        /// </summary>
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        /// <summary>
        /// The private network subnet ID is consistent with the cluster subnet ID by default.
        /// </summary>
        [Input("uniqueSubnetId")]
        public Input<string>? UniqueSubnetId { get; set; }

        /// <summary>
        /// Private network ID, which is consistent with the cluster private network ID by default.
        /// </summary>
        [Input("uniqueVpcId")]
        public Input<string>? UniqueVpcId { get; set; }

        public ProxyArgs()
        {
        }
        public static new ProxyArgs Empty => new ProxyArgs();
    }

    public sealed class ProxyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Cluster ID.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// Connection pool threshold: unit (second).
        /// </summary>
        [Input("connectionPoolTimeOut")]
        public Input<int>? ConnectionPoolTimeOut { get; set; }

        /// <summary>
        /// Connection pool type: SessionConnectionPool (session level Connection pool).
        /// </summary>
        [Input("connectionPoolType")]
        public Input<string>? ConnectionPoolType { get; set; }

        /// <summary>
        /// Number of CPU cores.
        /// </summary>
        [Input("cpu")]
        public Input<int>? Cpu { get; set; }

        /// <summary>
        /// Description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Memory.
        /// </summary>
        [Input("mem")]
        public Input<int>? Mem { get; set; }

        /// <summary>
        /// Whether to enable Connection pool, yes - enable, no - do not enable.
        /// </summary>
        [Input("openConnectionPool")]
        public Input<string>? OpenConnectionPool { get; set; }

        /// <summary>
        /// Number of database proxy group nodes. If it is set at the same time as the `proxy_zones` field, the `proxy_zones`
        /// parameter shall prevail.
        /// </summary>
        [Input("proxyCount")]
        public Input<int>? ProxyCount { get; set; }

        /// <summary>
        /// Proxy Group Id.
        /// </summary>
        [Input("proxyGroupId")]
        public Input<string>? ProxyGroupId { get; set; }

        [Input("proxyZones")]
        private InputList<Inputs.ProxyProxyZoneGetArgs>? _proxyZones;

        /// <summary>
        /// Database node information.
        /// </summary>
        public InputList<Inputs.ProxyProxyZoneGetArgs> ProxyZones
        {
            get => _proxyZones ?? (_proxyZones = new InputList<Inputs.ProxyProxyZoneGetArgs>());
            set => _proxyZones = value;
        }

        [Input("roInstances")]
        private InputList<Inputs.ProxyRoInstanceGetArgs>? _roInstances;

        /// <summary>
        /// Read only instance list.
        /// </summary>
        public InputList<Inputs.ProxyRoInstanceGetArgs> RoInstances
        {
            get => _roInstances ?? (_roInstances = new InputList<Inputs.ProxyRoInstanceGetArgs>());
            set => _roInstances = value;
        }

        [Input("securityGroupIds")]
        private InputList<string>? _securityGroupIds;

        /// <summary>
        /// Security Group ID Array.
        /// </summary>
        public InputList<string> SecurityGroupIds
        {
            get => _securityGroupIds ?? (_securityGroupIds = new InputList<string>());
            set => _securityGroupIds = value;
        }

        /// <summary>
        /// The private network subnet ID is consistent with the cluster subnet ID by default.
        /// </summary>
        [Input("uniqueSubnetId")]
        public Input<string>? UniqueSubnetId { get; set; }

        /// <summary>
        /// Private network ID, which is consistent with the cluster private network ID by default.
        /// </summary>
        [Input("uniqueVpcId")]
        public Input<string>? UniqueVpcId { get; set; }

        public ProxyState()
        {
        }
        public static new ProxyState Empty => new ProxyState();
    }
}
