// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Cynosdb
{
    [TencentcloudResourceType("tencentcloud:Cynosdb/resourcePackage:ResourcePackage")]
    public partial class ResourcePackage : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Validity period of resource package, in days.
        /// </summary>
        [Output("expireDay")]
        public Output<int> ExpireDay { get; private set; } = null!;

        /// <summary>
        /// Instance Type.
        /// </summary>
        [Output("instanceType")]
        public Output<string> InstanceType { get; private set; } = null!;

        /// <summary>
        /// Number of purchased resource packs.
        /// </summary>
        [Output("packageCount")]
        public Output<int> PackageCount { get; private set; } = null!;

        /// <summary>
        /// Resource Package Name.
        /// </summary>
        [Output("packageName")]
        public Output<string?> PackageName { get; private set; } = null!;

        /// <summary>
        /// Resource package usage region China - common in mainland China, overseas - common in Hong Kong, Macao, Taiwan, and
        /// overseas.
        /// </summary>
        [Output("packageRegion")]
        public Output<string> PackageRegion { get; private set; } = null!;

        /// <summary>
        /// Resource package size, calculated in 10000 units; Storage resources: GB.
        /// </summary>
        [Output("packageSpec")]
        public Output<double> PackageSpec { get; private set; } = null!;

        /// <summary>
        /// Resource package type: CCU computing resource package, DISK storage resource package.
        /// </summary>
        [Output("packageType")]
        public Output<string> PackageType { get; private set; } = null!;

        /// <summary>
        /// Resource package version base basic version, common general version, enterprise enterprise version.
        /// </summary>
        [Output("packageVersion")]
        public Output<string> PackageVersion { get; private set; } = null!;


        /// <summary>
        /// Create a ResourcePackage resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ResourcePackage(string name, ResourcePackageArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Cynosdb/resourcePackage:ResourcePackage", name, args ?? new ResourcePackageArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ResourcePackage(string name, Input<string> id, ResourcePackageState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Cynosdb/resourcePackage:ResourcePackage", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ResourcePackage resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ResourcePackage Get(string name, Input<string> id, ResourcePackageState? state = null, CustomResourceOptions? options = null)
        {
            return new ResourcePackage(name, id, state, options);
        }
    }

    public sealed class ResourcePackageArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Validity period of resource package, in days.
        /// </summary>
        [Input("expireDay", required: true)]
        public Input<int> ExpireDay { get; set; } = null!;

        /// <summary>
        /// Instance Type.
        /// </summary>
        [Input("instanceType", required: true)]
        public Input<string> InstanceType { get; set; } = null!;

        /// <summary>
        /// Number of purchased resource packs.
        /// </summary>
        [Input("packageCount", required: true)]
        public Input<int> PackageCount { get; set; } = null!;

        /// <summary>
        /// Resource Package Name.
        /// </summary>
        [Input("packageName")]
        public Input<string>? PackageName { get; set; }

        /// <summary>
        /// Resource package usage region China - common in mainland China, overseas - common in Hong Kong, Macao, Taiwan, and
        /// overseas.
        /// </summary>
        [Input("packageRegion", required: true)]
        public Input<string> PackageRegion { get; set; } = null!;

        /// <summary>
        /// Resource package size, calculated in 10000 units; Storage resources: GB.
        /// </summary>
        [Input("packageSpec", required: true)]
        public Input<double> PackageSpec { get; set; } = null!;

        /// <summary>
        /// Resource package type: CCU computing resource package, DISK storage resource package.
        /// </summary>
        [Input("packageType", required: true)]
        public Input<string> PackageType { get; set; } = null!;

        /// <summary>
        /// Resource package version base basic version, common general version, enterprise enterprise version.
        /// </summary>
        [Input("packageVersion", required: true)]
        public Input<string> PackageVersion { get; set; } = null!;

        public ResourcePackageArgs()
        {
        }
        public static new ResourcePackageArgs Empty => new ResourcePackageArgs();
    }

    public sealed class ResourcePackageState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Validity period of resource package, in days.
        /// </summary>
        [Input("expireDay")]
        public Input<int>? ExpireDay { get; set; }

        /// <summary>
        /// Instance Type.
        /// </summary>
        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        /// <summary>
        /// Number of purchased resource packs.
        /// </summary>
        [Input("packageCount")]
        public Input<int>? PackageCount { get; set; }

        /// <summary>
        /// Resource Package Name.
        /// </summary>
        [Input("packageName")]
        public Input<string>? PackageName { get; set; }

        /// <summary>
        /// Resource package usage region China - common in mainland China, overseas - common in Hong Kong, Macao, Taiwan, and
        /// overseas.
        /// </summary>
        [Input("packageRegion")]
        public Input<string>? PackageRegion { get; set; }

        /// <summary>
        /// Resource package size, calculated in 10000 units; Storage resources: GB.
        /// </summary>
        [Input("packageSpec")]
        public Input<double>? PackageSpec { get; set; }

        /// <summary>
        /// Resource package type: CCU computing resource package, DISK storage resource package.
        /// </summary>
        [Input("packageType")]
        public Input<string>? PackageType { get; set; }

        /// <summary>
        /// Resource package version base basic version, common general version, enterprise enterprise version.
        /// </summary>
        [Input("packageVersion")]
        public Input<string>? PackageVersion { get; set; }

        public ResourcePackageState()
        {
        }
        public static new ResourcePackageState Empty => new ResourcePackageState();
    }
}
