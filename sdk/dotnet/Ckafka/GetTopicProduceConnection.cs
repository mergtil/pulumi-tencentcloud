// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Ckafka
{
    public static class GetTopicProduceConnection
    {
        public static Task<GetTopicProduceConnectionResult> InvokeAsync(GetTopicProduceConnectionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTopicProduceConnectionResult>("tencentcloud:Ckafka/getTopicProduceConnection:getTopicProduceConnection", args ?? new GetTopicProduceConnectionArgs(), options.WithDefaults());

        public static Output<GetTopicProduceConnectionResult> Invoke(GetTopicProduceConnectionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTopicProduceConnectionResult>("tencentcloud:Ckafka/getTopicProduceConnection:getTopicProduceConnection", args ?? new GetTopicProduceConnectionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTopicProduceConnectionArgs : global::Pulumi.InvokeArgs
    {
        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("topicName", required: true)]
        public string TopicName { get; set; } = null!;

        public GetTopicProduceConnectionArgs()
        {
        }
        public static new GetTopicProduceConnectionArgs Empty => new GetTopicProduceConnectionArgs();
    }

    public sealed class GetTopicProduceConnectionInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("topicName", required: true)]
        public Input<string> TopicName { get; set; } = null!;

        public GetTopicProduceConnectionInvokeArgs()
        {
        }
        public static new GetTopicProduceConnectionInvokeArgs Empty => new GetTopicProduceConnectionInvokeArgs();
    }


    [OutputType]
    public sealed class GetTopicProduceConnectionResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        public readonly string? ResultOutputFile;
        public readonly ImmutableArray<Outputs.GetTopicProduceConnectionResultResult> Results;
        public readonly string TopicName;

        [OutputConstructor]
        private GetTopicProduceConnectionResult(
            string id,

            string instanceId,

            string? resultOutputFile,

            ImmutableArray<Outputs.GetTopicProduceConnectionResultResult> results,

            string topicName)
        {
            Id = id;
            InstanceId = instanceId;
            ResultOutputFile = resultOutputFile;
            Results = results;
            TopicName = topicName;
        }
    }
}
