// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Ckafka
{
    [TencentcloudResourceType("tencentcloud:Ckafka/datahubTask:DatahubTask")]
    public partial class DatahubTask : global::Pulumi.CustomResource
    {
        /// <summary>
        /// SchemaId.
        /// </summary>
        [Output("schemaId")]
        public Output<string?> SchemaId { get; private set; } = null!;

        /// <summary>
        /// data resource.
        /// </summary>
        [Output("sourceResource")]
        public Output<Outputs.DatahubTaskSourceResource?> SourceResource { get; private set; } = null!;

        /// <summary>
        /// Target Resource.
        /// </summary>
        [Output("targetResource")]
        public Output<Outputs.DatahubTaskTargetResource?> TargetResource { get; private set; } = null!;

        /// <summary>
        /// name of the task.
        /// </summary>
        [Output("taskName")]
        public Output<string> TaskName { get; private set; } = null!;

        /// <summary>
        /// type of the task, SOURCE(data input), SINK(data output).
        /// </summary>
        [Output("taskType")]
        public Output<string> TaskType { get; private set; } = null!;

        /// <summary>
        /// Data Processing Rules.
        /// </summary>
        [Output("transformParam")]
        public Output<Outputs.DatahubTaskTransformParam?> TransformParam { get; private set; } = null!;

        /// <summary>
        /// Data processing rules.
        /// </summary>
        [Output("transformsParam")]
        public Output<Outputs.DatahubTaskTransformsParam?> TransformsParam { get; private set; } = null!;


        /// <summary>
        /// Create a DatahubTask resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DatahubTask(string name, DatahubTaskArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Ckafka/datahubTask:DatahubTask", name, args ?? new DatahubTaskArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DatahubTask(string name, Input<string> id, DatahubTaskState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Ckafka/datahubTask:DatahubTask", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DatahubTask resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DatahubTask Get(string name, Input<string> id, DatahubTaskState? state = null, CustomResourceOptions? options = null)
        {
            return new DatahubTask(name, id, state, options);
        }
    }

    public sealed class DatahubTaskArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// SchemaId.
        /// </summary>
        [Input("schemaId")]
        public Input<string>? SchemaId { get; set; }

        /// <summary>
        /// data resource.
        /// </summary>
        [Input("sourceResource")]
        public Input<Inputs.DatahubTaskSourceResourceArgs>? SourceResource { get; set; }

        /// <summary>
        /// Target Resource.
        /// </summary>
        [Input("targetResource")]
        public Input<Inputs.DatahubTaskTargetResourceArgs>? TargetResource { get; set; }

        /// <summary>
        /// name of the task.
        /// </summary>
        [Input("taskName", required: true)]
        public Input<string> TaskName { get; set; } = null!;

        /// <summary>
        /// type of the task, SOURCE(data input), SINK(data output).
        /// </summary>
        [Input("taskType", required: true)]
        public Input<string> TaskType { get; set; } = null!;

        /// <summary>
        /// Data Processing Rules.
        /// </summary>
        [Input("transformParam")]
        public Input<Inputs.DatahubTaskTransformParamArgs>? TransformParam { get; set; }

        /// <summary>
        /// Data processing rules.
        /// </summary>
        [Input("transformsParam")]
        public Input<Inputs.DatahubTaskTransformsParamArgs>? TransformsParam { get; set; }

        public DatahubTaskArgs()
        {
        }
        public static new DatahubTaskArgs Empty => new DatahubTaskArgs();
    }

    public sealed class DatahubTaskState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// SchemaId.
        /// </summary>
        [Input("schemaId")]
        public Input<string>? SchemaId { get; set; }

        /// <summary>
        /// data resource.
        /// </summary>
        [Input("sourceResource")]
        public Input<Inputs.DatahubTaskSourceResourceGetArgs>? SourceResource { get; set; }

        /// <summary>
        /// Target Resource.
        /// </summary>
        [Input("targetResource")]
        public Input<Inputs.DatahubTaskTargetResourceGetArgs>? TargetResource { get; set; }

        /// <summary>
        /// name of the task.
        /// </summary>
        [Input("taskName")]
        public Input<string>? TaskName { get; set; }

        /// <summary>
        /// type of the task, SOURCE(data input), SINK(data output).
        /// </summary>
        [Input("taskType")]
        public Input<string>? TaskType { get; set; }

        /// <summary>
        /// Data Processing Rules.
        /// </summary>
        [Input("transformParam")]
        public Input<Inputs.DatahubTaskTransformParamGetArgs>? TransformParam { get; set; }

        /// <summary>
        /// Data processing rules.
        /// </summary>
        [Input("transformsParam")]
        public Input<Inputs.DatahubTaskTransformsParamGetArgs>? TransformsParam { get; set; }

        public DatahubTaskState()
        {
        }
        public static new DatahubTaskState Empty => new DatahubTaskState();
    }
}
