// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Ckafka
{
    [TencentcloudResourceType("tencentcloud:Ckafka/aclRule:AclRule")]
    public partial class AclRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// instance id.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// Whether the preset ACL rule is applied to the newly added topic.
        /// </summary>
        [Output("isApplied")]
        public Output<int?> IsApplied { get; private set; } = null!;

        /// <summary>
        /// A value representing the prefix that the prefix matches.
        /// </summary>
        [Output("pattern")]
        public Output<string?> Pattern { get; private set; } = null!;

        /// <summary>
        /// Match type, currently supports prefix matching and preset strategy, enumeration value list{PREFIXED/PRESET}.
        /// </summary>
        [Output("patternType")]
        public Output<string> PatternType { get; private set; } = null!;

        /// <summary>
        /// Acl resource type, currently only supports Topic, enumeration value list{Topic}.
        /// </summary>
        [Output("resourceType")]
        public Output<string> ResourceType { get; private set; } = null!;

        /// <summary>
        /// List of configured ACL rules.
        /// </summary>
        [Output("ruleLists")]
        public Output<ImmutableArray<Outputs.AclRuleRuleList>> RuleLists { get; private set; } = null!;

        /// <summary>
        /// rule name.
        /// </summary>
        [Output("ruleName")]
        public Output<string> RuleName { get; private set; } = null!;


        /// <summary>
        /// Create a AclRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AclRule(string name, AclRuleArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Ckafka/aclRule:AclRule", name, args ?? new AclRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AclRule(string name, Input<string> id, AclRuleState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Ckafka/aclRule:AclRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AclRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AclRule Get(string name, Input<string> id, AclRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new AclRule(name, id, state, options);
        }
    }

    public sealed class AclRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// instance id.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// Whether the preset ACL rule is applied to the newly added topic.
        /// </summary>
        [Input("isApplied")]
        public Input<int>? IsApplied { get; set; }

        /// <summary>
        /// A value representing the prefix that the prefix matches.
        /// </summary>
        [Input("pattern")]
        public Input<string>? Pattern { get; set; }

        /// <summary>
        /// Match type, currently supports prefix matching and preset strategy, enumeration value list{PREFIXED/PRESET}.
        /// </summary>
        [Input("patternType", required: true)]
        public Input<string> PatternType { get; set; } = null!;

        /// <summary>
        /// Acl resource type, currently only supports Topic, enumeration value list{Topic}.
        /// </summary>
        [Input("resourceType", required: true)]
        public Input<string> ResourceType { get; set; } = null!;

        [Input("ruleLists", required: true)]
        private InputList<Inputs.AclRuleRuleListArgs>? _ruleLists;

        /// <summary>
        /// List of configured ACL rules.
        /// </summary>
        public InputList<Inputs.AclRuleRuleListArgs> RuleLists
        {
            get => _ruleLists ?? (_ruleLists = new InputList<Inputs.AclRuleRuleListArgs>());
            set => _ruleLists = value;
        }

        /// <summary>
        /// rule name.
        /// </summary>
        [Input("ruleName", required: true)]
        public Input<string> RuleName { get; set; } = null!;

        public AclRuleArgs()
        {
        }
        public static new AclRuleArgs Empty => new AclRuleArgs();
    }

    public sealed class AclRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// instance id.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// Whether the preset ACL rule is applied to the newly added topic.
        /// </summary>
        [Input("isApplied")]
        public Input<int>? IsApplied { get; set; }

        /// <summary>
        /// A value representing the prefix that the prefix matches.
        /// </summary>
        [Input("pattern")]
        public Input<string>? Pattern { get; set; }

        /// <summary>
        /// Match type, currently supports prefix matching and preset strategy, enumeration value list{PREFIXED/PRESET}.
        /// </summary>
        [Input("patternType")]
        public Input<string>? PatternType { get; set; }

        /// <summary>
        /// Acl resource type, currently only supports Topic, enumeration value list{Topic}.
        /// </summary>
        [Input("resourceType")]
        public Input<string>? ResourceType { get; set; }

        [Input("ruleLists")]
        private InputList<Inputs.AclRuleRuleListGetArgs>? _ruleLists;

        /// <summary>
        /// List of configured ACL rules.
        /// </summary>
        public InputList<Inputs.AclRuleRuleListGetArgs> RuleLists
        {
            get => _ruleLists ?? (_ruleLists = new InputList<Inputs.AclRuleRuleListGetArgs>());
            set => _ruleLists = value;
        }

        /// <summary>
        /// rule name.
        /// </summary>
        [Input("ruleName")]
        public Input<string>? RuleName { get; set; }

        public AclRuleState()
        {
        }
        public static new AclRuleState Empty => new AclRuleState();
    }
}
