// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Ckafka
{
    public static class GetGroupOffsets
    {
        public static Task<GetGroupOffsetsResult> InvokeAsync(GetGroupOffsetsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGroupOffsetsResult>("tencentcloud:Ckafka/getGroupOffsets:getGroupOffsets", args ?? new GetGroupOffsetsArgs(), options.WithDefaults());

        public static Output<GetGroupOffsetsResult> Invoke(GetGroupOffsetsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGroupOffsetsResult>("tencentcloud:Ckafka/getGroupOffsets:getGroupOffsets", args ?? new GetGroupOffsetsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGroupOffsetsArgs : global::Pulumi.InvokeArgs
    {
        [Input("group", required: true)]
        public string Group { get; set; } = null!;

        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("searchWord")]
        public string? SearchWord { get; set; }

        [Input("topics")]
        private List<string>? _topics;
        public List<string> Topics
        {
            get => _topics ?? (_topics = new List<string>());
            set => _topics = value;
        }

        public GetGroupOffsetsArgs()
        {
        }
        public static new GetGroupOffsetsArgs Empty => new GetGroupOffsetsArgs();
    }

    public sealed class GetGroupOffsetsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("group", required: true)]
        public Input<string> Group { get; set; } = null!;

        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("searchWord")]
        public Input<string>? SearchWord { get; set; }

        [Input("topics")]
        private InputList<string>? _topics;
        public InputList<string> Topics
        {
            get => _topics ?? (_topics = new InputList<string>());
            set => _topics = value;
        }

        public GetGroupOffsetsInvokeArgs()
        {
        }
        public static new GetGroupOffsetsInvokeArgs Empty => new GetGroupOffsetsInvokeArgs();
    }


    [OutputType]
    public sealed class GetGroupOffsetsResult
    {
        public readonly string Group;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        public readonly string? ResultOutputFile;
        public readonly string? SearchWord;
        public readonly ImmutableArray<Outputs.GetGroupOffsetsTopicListResult> TopicLists;
        public readonly ImmutableArray<string> Topics;

        [OutputConstructor]
        private GetGroupOffsetsResult(
            string group,

            string id,

            string instanceId,

            string? resultOutputFile,

            string? searchWord,

            ImmutableArray<Outputs.GetGroupOffsetsTopicListResult> topicLists,

            ImmutableArray<string> topics)
        {
            Group = group;
            Id = id;
            InstanceId = instanceId;
            ResultOutputFile = resultOutputFile;
            SearchWord = searchWord;
            TopicLists = topicLists;
            Topics = topics;
        }
    }
}
