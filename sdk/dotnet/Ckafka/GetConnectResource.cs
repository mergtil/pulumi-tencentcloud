// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Ckafka
{
    public static class GetConnectResource
    {
        public static Task<GetConnectResourceResult> InvokeAsync(GetConnectResourceArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConnectResourceResult>("tencentcloud:Ckafka/getConnectResource:getConnectResource", args ?? new GetConnectResourceArgs(), options.WithDefaults());

        public static Output<GetConnectResourceResult> Invoke(GetConnectResourceInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConnectResourceResult>("tencentcloud:Ckafka/getConnectResource:getConnectResource", args ?? new GetConnectResourceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConnectResourceArgs : global::Pulumi.InvokeArgs
    {
        [Input("limit")]
        public int? Limit { get; set; }

        [Input("offset")]
        public int? Offset { get; set; }

        [Input("resourceRegion")]
        public string? ResourceRegion { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("searchWord")]
        public string? SearchWord { get; set; }

        [Input("type")]
        public string? Type { get; set; }

        public GetConnectResourceArgs()
        {
        }
        public static new GetConnectResourceArgs Empty => new GetConnectResourceArgs();
    }

    public sealed class GetConnectResourceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("offset")]
        public Input<int>? Offset { get; set; }

        [Input("resourceRegion")]
        public Input<string>? ResourceRegion { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("searchWord")]
        public Input<string>? SearchWord { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public GetConnectResourceInvokeArgs()
        {
        }
        public static new GetConnectResourceInvokeArgs Empty => new GetConnectResourceInvokeArgs();
    }


    [OutputType]
    public sealed class GetConnectResourceResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int? Limit;
        public readonly int? Offset;
        public readonly string? ResourceRegion;
        public readonly string? ResultOutputFile;
        public readonly ImmutableArray<Outputs.GetConnectResourceResultResult> Results;
        public readonly string? SearchWord;
        public readonly string? Type;

        [OutputConstructor]
        private GetConnectResourceResult(
            string id,

            int? limit,

            int? offset,

            string? resourceRegion,

            string? resultOutputFile,

            ImmutableArray<Outputs.GetConnectResourceResultResult> results,

            string? searchWord,

            string? type)
        {
            Id = id;
            Limit = limit;
            Offset = offset;
            ResourceRegion = resourceRegion;
            ResultOutputFile = resultOutputFile;
            Results = results;
            SearchWord = searchWord;
            Type = type;
        }
    }
}
