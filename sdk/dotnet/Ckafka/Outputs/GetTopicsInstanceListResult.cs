// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Ckafka.Outputs
{

    [OutputType]
    public sealed class GetTopicsInstanceListResult
    {
        public readonly string CleanUpPolicy;
        public readonly string CreateTime;
        public readonly bool EnableWhiteList;
        public readonly string ForwardCosBucket;
        public readonly int ForwardInterval;
        public readonly int ForwardStatus;
        public readonly int IpWhiteListCount;
        public readonly int MaxMessageBytes;
        public readonly string Note;
        public readonly int PartitionNum;
        public readonly int ReplicaNum;
        public readonly int Retention;
        public readonly int Segment;
        public readonly int SegmentBytes;
        public readonly int SyncReplicaMinNum;
        public readonly string TopicId;
        public readonly string TopicName;
        public readonly bool UncleanLeaderElectionEnable;

        [OutputConstructor]
        private GetTopicsInstanceListResult(
            string cleanUpPolicy,

            string createTime,

            bool enableWhiteList,

            string forwardCosBucket,

            int forwardInterval,

            int forwardStatus,

            int ipWhiteListCount,

            int maxMessageBytes,

            string note,

            int partitionNum,

            int replicaNum,

            int retention,

            int segment,

            int segmentBytes,

            int syncReplicaMinNum,

            string topicId,

            string topicName,

            bool uncleanLeaderElectionEnable)
        {
            CleanUpPolicy = cleanUpPolicy;
            CreateTime = createTime;
            EnableWhiteList = enableWhiteList;
            ForwardCosBucket = forwardCosBucket;
            ForwardInterval = forwardInterval;
            ForwardStatus = forwardStatus;
            IpWhiteListCount = ipWhiteListCount;
            MaxMessageBytes = maxMessageBytes;
            Note = note;
            PartitionNum = partitionNum;
            ReplicaNum = replicaNum;
            Retention = retention;
            Segment = segment;
            SegmentBytes = segmentBytes;
            SyncReplicaMinNum = syncReplicaMinNum;
            TopicId = topicId;
            TopicName = topicName;
            UncleanLeaderElectionEnable = uncleanLeaderElectionEnable;
        }
    }
}
