// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Ckafka.Outputs
{

    [OutputType]
    public sealed class GetInstancesInstanceListResult
    {
        public readonly int Bandwidth;
        public readonly int CreateTime;
        public readonly int Cvm;
        public readonly int DiskSize;
        public readonly string DiskType;
        public readonly int ExpireTime;
        public readonly int Healthy;
        public readonly string HealthyMessage;
        public readonly string InstanceId;
        public readonly string InstanceName;
        public readonly string InstanceType;
        public readonly int IsInternal;
        public readonly int MaxPartitionNumber;
        public readonly int MaxTopicNumber;
        public readonly int PartitionNumber;
        public readonly int PublicNetwork;
        public readonly string PublicNetworkChargeType;
        public readonly string RebalanceTime;
        public readonly int RenewFlag;
        public readonly int Status;
        public readonly string SubnetId;
        public readonly ImmutableArray<Outputs.GetInstancesInstanceListTagResult> Tags;
        public readonly int TopicNum;
        public readonly string Version;
        public readonly string Vip;
        public readonly Outputs.GetInstancesInstanceListVipListResult VipList;
        public readonly string VpcId;
        public readonly string Vport;
        public readonly int ZoneId;
        public readonly ImmutableArray<int> ZoneIds;

        [OutputConstructor]
        private GetInstancesInstanceListResult(
            int bandwidth,

            int createTime,

            int cvm,

            int diskSize,

            string diskType,

            int expireTime,

            int healthy,

            string healthyMessage,

            string instanceId,

            string instanceName,

            string instanceType,

            int isInternal,

            int maxPartitionNumber,

            int maxTopicNumber,

            int partitionNumber,

            int publicNetwork,

            string publicNetworkChargeType,

            string rebalanceTime,

            int renewFlag,

            int status,

            string subnetId,

            ImmutableArray<Outputs.GetInstancesInstanceListTagResult> tags,

            int topicNum,

            string version,

            string vip,

            Outputs.GetInstancesInstanceListVipListResult vipList,

            string vpcId,

            string vport,

            int zoneId,

            ImmutableArray<int> zoneIds)
        {
            Bandwidth = bandwidth;
            CreateTime = createTime;
            Cvm = cvm;
            DiskSize = diskSize;
            DiskType = diskType;
            ExpireTime = expireTime;
            Healthy = healthy;
            HealthyMessage = healthyMessage;
            InstanceId = instanceId;
            InstanceName = instanceName;
            InstanceType = instanceType;
            IsInternal = isInternal;
            MaxPartitionNumber = maxPartitionNumber;
            MaxTopicNumber = maxTopicNumber;
            PartitionNumber = partitionNumber;
            PublicNetwork = publicNetwork;
            PublicNetworkChargeType = publicNetworkChargeType;
            RebalanceTime = rebalanceTime;
            RenewFlag = renewFlag;
            Status = status;
            SubnetId = subnetId;
            Tags = tags;
            TopicNum = topicNum;
            Version = version;
            Vip = vip;
            VipList = vipList;
            VpcId = vpcId;
            Vport = vport;
            ZoneId = zoneId;
            ZoneIds = zoneIds;
        }
    }
}
