// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Ckafka.Outputs
{

    [OutputType]
    public sealed class DatahubTaskTargetResourceKafkaParam
    {
        public readonly string? CompressionType;
        public readonly bool? EnableToleration;
        public readonly int? MsgMultiple;
        public readonly string? OffsetType;
        public readonly int? PartitionNum;
        public readonly int? QpsLimit;
        public readonly string Resource;
        public readonly string? ResourceName;
        public readonly bool SelfBuilt;
        public readonly int? StartTime;
        public readonly ImmutableArray<Outputs.DatahubTaskTargetResourceKafkaParamTableMapping> TableMappings;
        public readonly string? Topic;
        public readonly string? TopicId;
        public readonly bool? UseAutoCreateTopic;
        public readonly bool? UseTableMapping;
        public readonly int? ZoneId;

        [OutputConstructor]
        private DatahubTaskTargetResourceKafkaParam(
            string? compressionType,

            bool? enableToleration,

            int? msgMultiple,

            string? offsetType,

            int? partitionNum,

            int? qpsLimit,

            string resource,

            string? resourceName,

            bool selfBuilt,

            int? startTime,

            ImmutableArray<Outputs.DatahubTaskTargetResourceKafkaParamTableMapping> tableMappings,

            string? topic,

            string? topicId,

            bool? useAutoCreateTopic,

            bool? useTableMapping,

            int? zoneId)
        {
            CompressionType = compressionType;
            EnableToleration = enableToleration;
            MsgMultiple = msgMultiple;
            OffsetType = offsetType;
            PartitionNum = partitionNum;
            QpsLimit = qpsLimit;
            Resource = resource;
            ResourceName = resourceName;
            SelfBuilt = selfBuilt;
            StartTime = startTime;
            TableMappings = tableMappings;
            Topic = topic;
            TopicId = topicId;
            UseAutoCreateTopic = useAutoCreateTopic;
            UseTableMapping = useTableMapping;
            ZoneId = zoneId;
        }
    }
}
