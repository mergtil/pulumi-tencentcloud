// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Tat
{
    public static class GetInvocationTask
    {
        public static Task<GetInvocationTaskResult> InvokeAsync(GetInvocationTaskArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInvocationTaskResult>("tencentcloud:Tat/getInvocationTask:getInvocationTask", args ?? new GetInvocationTaskArgs(), options.WithDefaults());

        public static Output<GetInvocationTaskResult> Invoke(GetInvocationTaskInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInvocationTaskResult>("tencentcloud:Tat/getInvocationTask:getInvocationTask", args ?? new GetInvocationTaskInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInvocationTaskArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetInvocationTaskFilterArgs>? _filters;
        public List<Inputs.GetInvocationTaskFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetInvocationTaskFilterArgs>());
            set => _filters = value;
        }

        [Input("hideOutput")]
        public bool? HideOutput { get; set; }

        [Input("invocationTaskIds")]
        private List<string>? _invocationTaskIds;
        public List<string> InvocationTaskIds
        {
            get => _invocationTaskIds ?? (_invocationTaskIds = new List<string>());
            set => _invocationTaskIds = value;
        }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetInvocationTaskArgs()
        {
        }
        public static new GetInvocationTaskArgs Empty => new GetInvocationTaskArgs();
    }

    public sealed class GetInvocationTaskInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetInvocationTaskFilterInputArgs>? _filters;
        public InputList<Inputs.GetInvocationTaskFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetInvocationTaskFilterInputArgs>());
            set => _filters = value;
        }

        [Input("hideOutput")]
        public Input<bool>? HideOutput { get; set; }

        [Input("invocationTaskIds")]
        private InputList<string>? _invocationTaskIds;
        public InputList<string> InvocationTaskIds
        {
            get => _invocationTaskIds ?? (_invocationTaskIds = new InputList<string>());
            set => _invocationTaskIds = value;
        }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetInvocationTaskInvokeArgs()
        {
        }
        public static new GetInvocationTaskInvokeArgs Empty => new GetInvocationTaskInvokeArgs();
    }


    [OutputType]
    public sealed class GetInvocationTaskResult
    {
        public readonly ImmutableArray<Outputs.GetInvocationTaskFilterResult> Filters;
        public readonly bool? HideOutput;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> InvocationTaskIds;
        public readonly ImmutableArray<Outputs.GetInvocationTaskInvocationTaskSetResult> InvocationTaskSets;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetInvocationTaskResult(
            ImmutableArray<Outputs.GetInvocationTaskFilterResult> filters,

            bool? hideOutput,

            string id,

            ImmutableArray<string> invocationTaskIds,

            ImmutableArray<Outputs.GetInvocationTaskInvocationTaskSetResult> invocationTaskSets,

            string? resultOutputFile)
        {
            Filters = filters;
            HideOutput = hideOutput;
            Id = id;
            InvocationTaskIds = invocationTaskIds;
            InvocationTaskSets = invocationTaskSets;
            ResultOutputFile = resultOutputFile;
        }
    }
}
