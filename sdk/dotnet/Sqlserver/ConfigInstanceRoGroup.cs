// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Sqlserver
{
    [TencentcloudResourceType("tencentcloud:Sqlserver/configInstanceRoGroup:ConfigInstanceRoGroup")]
    public partial class ConfigInstanceRoGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// 0-user-defined weight (adjusted according to WeightPairs), 1-system automatically assigns weight (WeightPairs is
        /// invalid), the default is 0.
        /// </summary>
        [Output("autoWeight")]
        public Output<int?> AutoWeight { get; private set; } = null!;

        /// <summary>
        /// 0-do not rebalance the load, 1-rebalance the load, the default is 0.
        /// </summary>
        [Output("balanceWeight")]
        public Output<int?> BalanceWeight { get; private set; } = null!;

        /// <summary>
        /// Instance ID.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// Whether to enable timeout culling function. 0- Disable the culling function. 1- Enable the culling function.
        /// </summary>
        [Output("isOfflineDelay")]
        public Output<int?> IsOfflineDelay { get; private set; } = null!;

        /// <summary>
        /// After the timeout removal function is enabled, the number of read-only copies retained by the read-only group at least,
        /// if this parameter is not filled, it will not be modified.
        /// </summary>
        [Output("minReadOnlyInGroup")]
        public Output<int?> MinReadOnlyInGroup { get; private set; } = null!;

        /// <summary>
        /// Read-only group ID.
        /// </summary>
        [Output("readOnlyGroupId")]
        public Output<string> ReadOnlyGroupId { get; private set; } = null!;

        /// <summary>
        /// Read-only group name. If this parameter is not specified, it is not modified.
        /// </summary>
        [Output("readOnlyGroupName")]
        public Output<string?> ReadOnlyGroupName { get; private set; } = null!;

        /// <summary>
        /// After the timeout elimination function is enabled, the timeout threshold used, if this parameter is not filled, it will
        /// not be modified.
        /// </summary>
        [Output("readOnlyMaxDelayTime")]
        public Output<int?> ReadOnlyMaxDelayTime { get; private set; } = null!;

        /// <summary>
        /// Read-only group instance weight modification set, if this parameter is not filled, it will not be modified.
        /// </summary>
        [Output("weightPairs")]
        public Output<ImmutableArray<Outputs.ConfigInstanceRoGroupWeightPair>> WeightPairs { get; private set; } = null!;


        /// <summary>
        /// Create a ConfigInstanceRoGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConfigInstanceRoGroup(string name, ConfigInstanceRoGroupArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Sqlserver/configInstanceRoGroup:ConfigInstanceRoGroup", name, args ?? new ConfigInstanceRoGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ConfigInstanceRoGroup(string name, Input<string> id, ConfigInstanceRoGroupState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Sqlserver/configInstanceRoGroup:ConfigInstanceRoGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConfigInstanceRoGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConfigInstanceRoGroup Get(string name, Input<string> id, ConfigInstanceRoGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new ConfigInstanceRoGroup(name, id, state, options);
        }
    }

    public sealed class ConfigInstanceRoGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// 0-user-defined weight (adjusted according to WeightPairs), 1-system automatically assigns weight (WeightPairs is
        /// invalid), the default is 0.
        /// </summary>
        [Input("autoWeight")]
        public Input<int>? AutoWeight { get; set; }

        /// <summary>
        /// 0-do not rebalance the load, 1-rebalance the load, the default is 0.
        /// </summary>
        [Input("balanceWeight")]
        public Input<int>? BalanceWeight { get; set; }

        /// <summary>
        /// Instance ID.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// Whether to enable timeout culling function. 0- Disable the culling function. 1- Enable the culling function.
        /// </summary>
        [Input("isOfflineDelay")]
        public Input<int>? IsOfflineDelay { get; set; }

        /// <summary>
        /// After the timeout removal function is enabled, the number of read-only copies retained by the read-only group at least,
        /// if this parameter is not filled, it will not be modified.
        /// </summary>
        [Input("minReadOnlyInGroup")]
        public Input<int>? MinReadOnlyInGroup { get; set; }

        /// <summary>
        /// Read-only group ID.
        /// </summary>
        [Input("readOnlyGroupId", required: true)]
        public Input<string> ReadOnlyGroupId { get; set; } = null!;

        /// <summary>
        /// Read-only group name. If this parameter is not specified, it is not modified.
        /// </summary>
        [Input("readOnlyGroupName")]
        public Input<string>? ReadOnlyGroupName { get; set; }

        /// <summary>
        /// After the timeout elimination function is enabled, the timeout threshold used, if this parameter is not filled, it will
        /// not be modified.
        /// </summary>
        [Input("readOnlyMaxDelayTime")]
        public Input<int>? ReadOnlyMaxDelayTime { get; set; }

        [Input("weightPairs")]
        private InputList<Inputs.ConfigInstanceRoGroupWeightPairArgs>? _weightPairs;

        /// <summary>
        /// Read-only group instance weight modification set, if this parameter is not filled, it will not be modified.
        /// </summary>
        public InputList<Inputs.ConfigInstanceRoGroupWeightPairArgs> WeightPairs
        {
            get => _weightPairs ?? (_weightPairs = new InputList<Inputs.ConfigInstanceRoGroupWeightPairArgs>());
            set => _weightPairs = value;
        }

        public ConfigInstanceRoGroupArgs()
        {
        }
        public static new ConfigInstanceRoGroupArgs Empty => new ConfigInstanceRoGroupArgs();
    }

    public sealed class ConfigInstanceRoGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// 0-user-defined weight (adjusted according to WeightPairs), 1-system automatically assigns weight (WeightPairs is
        /// invalid), the default is 0.
        /// </summary>
        [Input("autoWeight")]
        public Input<int>? AutoWeight { get; set; }

        /// <summary>
        /// 0-do not rebalance the load, 1-rebalance the load, the default is 0.
        /// </summary>
        [Input("balanceWeight")]
        public Input<int>? BalanceWeight { get; set; }

        /// <summary>
        /// Instance ID.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// Whether to enable timeout culling function. 0- Disable the culling function. 1- Enable the culling function.
        /// </summary>
        [Input("isOfflineDelay")]
        public Input<int>? IsOfflineDelay { get; set; }

        /// <summary>
        /// After the timeout removal function is enabled, the number of read-only copies retained by the read-only group at least,
        /// if this parameter is not filled, it will not be modified.
        /// </summary>
        [Input("minReadOnlyInGroup")]
        public Input<int>? MinReadOnlyInGroup { get; set; }

        /// <summary>
        /// Read-only group ID.
        /// </summary>
        [Input("readOnlyGroupId")]
        public Input<string>? ReadOnlyGroupId { get; set; }

        /// <summary>
        /// Read-only group name. If this parameter is not specified, it is not modified.
        /// </summary>
        [Input("readOnlyGroupName")]
        public Input<string>? ReadOnlyGroupName { get; set; }

        /// <summary>
        /// After the timeout elimination function is enabled, the timeout threshold used, if this parameter is not filled, it will
        /// not be modified.
        /// </summary>
        [Input("readOnlyMaxDelayTime")]
        public Input<int>? ReadOnlyMaxDelayTime { get; set; }

        [Input("weightPairs")]
        private InputList<Inputs.ConfigInstanceRoGroupWeightPairGetArgs>? _weightPairs;

        /// <summary>
        /// Read-only group instance weight modification set, if this parameter is not filled, it will not be modified.
        /// </summary>
        public InputList<Inputs.ConfigInstanceRoGroupWeightPairGetArgs> WeightPairs
        {
            get => _weightPairs ?? (_weightPairs = new InputList<Inputs.ConfigInstanceRoGroupWeightPairGetArgs>());
            set => _weightPairs = value;
        }

        public ConfigInstanceRoGroupState()
        {
        }
        public static new ConfigInstanceRoGroupState Empty => new ConfigInstanceRoGroupState();
    }
}
