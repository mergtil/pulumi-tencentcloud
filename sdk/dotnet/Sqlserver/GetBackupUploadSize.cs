// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Sqlserver
{
    public static class GetBackupUploadSize
    {
        public static Task<GetBackupUploadSizeResult> InvokeAsync(GetBackupUploadSizeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBackupUploadSizeResult>("tencentcloud:Sqlserver/getBackupUploadSize:getBackupUploadSize", args ?? new GetBackupUploadSizeArgs(), options.WithDefaults());

        public static Output<GetBackupUploadSizeResult> Invoke(GetBackupUploadSizeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBackupUploadSizeResult>("tencentcloud:Sqlserver/getBackupUploadSize:getBackupUploadSize", args ?? new GetBackupUploadSizeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBackupUploadSizeArgs : global::Pulumi.InvokeArgs
    {
        [Input("backupMigrationId", required: true)]
        public string BackupMigrationId { get; set; } = null!;

        [Input("incrementalMigrationId")]
        public string? IncrementalMigrationId { get; set; }

        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetBackupUploadSizeArgs()
        {
        }
        public static new GetBackupUploadSizeArgs Empty => new GetBackupUploadSizeArgs();
    }

    public sealed class GetBackupUploadSizeInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("backupMigrationId", required: true)]
        public Input<string> BackupMigrationId { get; set; } = null!;

        [Input("incrementalMigrationId")]
        public Input<string>? IncrementalMigrationId { get; set; }

        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetBackupUploadSizeInvokeArgs()
        {
        }
        public static new GetBackupUploadSizeInvokeArgs Empty => new GetBackupUploadSizeInvokeArgs();
    }


    [OutputType]
    public sealed class GetBackupUploadSizeResult
    {
        public readonly string BackupMigrationId;
        public readonly ImmutableArray<Outputs.GetBackupUploadSizeCosUploadBackupFileSetResult> CosUploadBackupFileSets;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? IncrementalMigrationId;
        public readonly string InstanceId;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetBackupUploadSizeResult(
            string backupMigrationId,

            ImmutableArray<Outputs.GetBackupUploadSizeCosUploadBackupFileSetResult> cosUploadBackupFileSets,

            string id,

            string? incrementalMigrationId,

            string instanceId,

            string? resultOutputFile)
        {
            BackupMigrationId = backupMigrationId;
            CosUploadBackupFileSets = cosUploadBackupFileSets;
            Id = id;
            IncrementalMigrationId = incrementalMigrationId;
            InstanceId = instanceId;
            ResultOutputFile = resultOutputFile;
        }
    }
}
