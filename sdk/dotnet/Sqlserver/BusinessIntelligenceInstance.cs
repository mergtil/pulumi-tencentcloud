// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Sqlserver
{
    [TencentcloudResourceType("tencentcloud:Sqlserver/businessIntelligenceInstance:BusinessIntelligenceInstance")]
    public partial class BusinessIntelligenceInstance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The number of CPU cores of the instance you want to purchase.
        /// </summary>
        [Output("cpu")]
        public Output<int> Cpu { get; private set; } = null!;

        /// <summary>
        /// Supported versions of business intelligence server. Valid values: 201603 (SQL Server 2016 Integration Services), 201703
        /// (SQL Server 2017 Integration Services), 201903 (SQL Server 2019 Integration Services). Default value: 201903. As the
        /// purchasable versions are region-specific, you can use the DescribeProductConfig API to query the information of
        /// purchasable versions in each region.
        /// </summary>
        [Output("dbVersion")]
        public Output<string> DbVersion { get; private set; } = null!;

        /// <summary>
        /// Instance Name.
        /// </summary>
        [Output("instanceName")]
        public Output<string> InstanceName { get; private set; } = null!;

        /// <summary>
        /// The host type of purchased instance. Valid values: CLOUD_PREMIUM (virtual machine with premium cloud disk), CLOUD_SSD
        /// (virtual machine with SSD).
        /// </summary>
        [Output("machineType")]
        public Output<string> MachineType { get; private set; } = null!;

        /// <summary>
        /// Instance memory size in GB.
        /// </summary>
        [Output("memory")]
        public Output<int> Memory { get; private set; } = null!;

        /// <summary>
        /// Project ID.
        /// </summary>
        [Output("projectId")]
        public Output<int> ProjectId { get; private set; } = null!;

        /// <summary>
        /// Tags associated with the instances to be created.
        /// </summary>
        [Output("resourceTags")]
        public Output<ImmutableArray<Outputs.BusinessIntelligenceInstanceResourceTag>> ResourceTags { get; private set; } = null!;

        /// <summary>
        /// Security group list, which contains security group IDs in the format of sg-xxx.
        /// </summary>
        [Output("securityGroupLists")]
        public Output<ImmutableArray<string>> SecurityGroupLists { get; private set; } = null!;

        /// <summary>
        /// Configuration of the maintenance window, which specifies the maintenance duration in hours.
        /// </summary>
        [Output("span")]
        public Output<int> Span { get; private set; } = null!;

        /// <summary>
        /// Configuration of the maintenance window, which specifies the start time of daily maintenance.
        /// </summary>
        [Output("startTime")]
        public Output<string> StartTime { get; private set; } = null!;

        /// <summary>
        /// Instance disk size in GB.
        /// </summary>
        [Output("storage")]
        public Output<int> Storage { get; private set; } = null!;

        /// <summary>
        /// VPC subnet ID in the format of subnet-bdoe83fa. Both SubnetId and VpcId need to be set or unset at the same time.
        /// </summary>
        [Output("subnetId")]
        public Output<string> SubnetId { get; private set; } = null!;

        /// <summary>
        /// VPC ID in the format of vpc-dsp338hz. Both SubnetId and VpcId need to be set or unset at the same time.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;

        /// <summary>
        /// Configuration of the maintenance window, which specifies the day of the week when maintenance can be performed. Valid
        /// values: 1 (Monday), 2 (Tuesday), 3 (Wednesday), 4 (Thursday), 5 (Friday), 6 (Saturday), 7 (Sunday).
        /// </summary>
        [Output("weeklies")]
        public Output<ImmutableArray<int>> Weeklies { get; private set; } = null!;

        /// <summary>
        /// Instance AZ, such as ap-guangzhou-1 (Guangzhou Zone 1). Purchasable AZs for an instance can be obtained through
        /// theDescribeZones API.
        /// </summary>
        [Output("zone")]
        public Output<string> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a BusinessIntelligenceInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BusinessIntelligenceInstance(string name, BusinessIntelligenceInstanceArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Sqlserver/businessIntelligenceInstance:BusinessIntelligenceInstance", name, args ?? new BusinessIntelligenceInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BusinessIntelligenceInstance(string name, Input<string> id, BusinessIntelligenceInstanceState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Sqlserver/businessIntelligenceInstance:BusinessIntelligenceInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BusinessIntelligenceInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BusinessIntelligenceInstance Get(string name, Input<string> id, BusinessIntelligenceInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new BusinessIntelligenceInstance(name, id, state, options);
        }
    }

    public sealed class BusinessIntelligenceInstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of CPU cores of the instance you want to purchase.
        /// </summary>
        [Input("cpu", required: true)]
        public Input<int> Cpu { get; set; } = null!;

        /// <summary>
        /// Supported versions of business intelligence server. Valid values: 201603 (SQL Server 2016 Integration Services), 201703
        /// (SQL Server 2017 Integration Services), 201903 (SQL Server 2019 Integration Services). Default value: 201903. As the
        /// purchasable versions are region-specific, you can use the DescribeProductConfig API to query the information of
        /// purchasable versions in each region.
        /// </summary>
        [Input("dbVersion")]
        public Input<string>? DbVersion { get; set; }

        /// <summary>
        /// Instance Name.
        /// </summary>
        [Input("instanceName", required: true)]
        public Input<string> InstanceName { get; set; } = null!;

        /// <summary>
        /// The host type of purchased instance. Valid values: CLOUD_PREMIUM (virtual machine with premium cloud disk), CLOUD_SSD
        /// (virtual machine with SSD).
        /// </summary>
        [Input("machineType", required: true)]
        public Input<string> MachineType { get; set; } = null!;

        /// <summary>
        /// Instance memory size in GB.
        /// </summary>
        [Input("memory", required: true)]
        public Input<int> Memory { get; set; } = null!;

        /// <summary>
        /// Project ID.
        /// </summary>
        [Input("projectId")]
        public Input<int>? ProjectId { get; set; }

        [Input("resourceTags")]
        private InputList<Inputs.BusinessIntelligenceInstanceResourceTagArgs>? _resourceTags;

        /// <summary>
        /// Tags associated with the instances to be created.
        /// </summary>
        public InputList<Inputs.BusinessIntelligenceInstanceResourceTagArgs> ResourceTags
        {
            get => _resourceTags ?? (_resourceTags = new InputList<Inputs.BusinessIntelligenceInstanceResourceTagArgs>());
            set => _resourceTags = value;
        }

        [Input("securityGroupLists")]
        private InputList<string>? _securityGroupLists;

        /// <summary>
        /// Security group list, which contains security group IDs in the format of sg-xxx.
        /// </summary>
        public InputList<string> SecurityGroupLists
        {
            get => _securityGroupLists ?? (_securityGroupLists = new InputList<string>());
            set => _securityGroupLists = value;
        }

        /// <summary>
        /// Configuration of the maintenance window, which specifies the maintenance duration in hours.
        /// </summary>
        [Input("span")]
        public Input<int>? Span { get; set; }

        /// <summary>
        /// Configuration of the maintenance window, which specifies the start time of daily maintenance.
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        /// <summary>
        /// Instance disk size in GB.
        /// </summary>
        [Input("storage", required: true)]
        public Input<int> Storage { get; set; } = null!;

        /// <summary>
        /// VPC subnet ID in the format of subnet-bdoe83fa. Both SubnetId and VpcId need to be set or unset at the same time.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// VPC ID in the format of vpc-dsp338hz. Both SubnetId and VpcId need to be set or unset at the same time.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        [Input("weeklies")]
        private InputList<int>? _weeklies;

        /// <summary>
        /// Configuration of the maintenance window, which specifies the day of the week when maintenance can be performed. Valid
        /// values: 1 (Monday), 2 (Tuesday), 3 (Wednesday), 4 (Thursday), 5 (Friday), 6 (Saturday), 7 (Sunday).
        /// </summary>
        public InputList<int> Weeklies
        {
            get => _weeklies ?? (_weeklies = new InputList<int>());
            set => _weeklies = value;
        }

        /// <summary>
        /// Instance AZ, such as ap-guangzhou-1 (Guangzhou Zone 1). Purchasable AZs for an instance can be obtained through
        /// theDescribeZones API.
        /// </summary>
        [Input("zone", required: true)]
        public Input<string> Zone { get; set; } = null!;

        public BusinessIntelligenceInstanceArgs()
        {
        }
        public static new BusinessIntelligenceInstanceArgs Empty => new BusinessIntelligenceInstanceArgs();
    }

    public sealed class BusinessIntelligenceInstanceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of CPU cores of the instance you want to purchase.
        /// </summary>
        [Input("cpu")]
        public Input<int>? Cpu { get; set; }

        /// <summary>
        /// Supported versions of business intelligence server. Valid values: 201603 (SQL Server 2016 Integration Services), 201703
        /// (SQL Server 2017 Integration Services), 201903 (SQL Server 2019 Integration Services). Default value: 201903. As the
        /// purchasable versions are region-specific, you can use the DescribeProductConfig API to query the information of
        /// purchasable versions in each region.
        /// </summary>
        [Input("dbVersion")]
        public Input<string>? DbVersion { get; set; }

        /// <summary>
        /// Instance Name.
        /// </summary>
        [Input("instanceName")]
        public Input<string>? InstanceName { get; set; }

        /// <summary>
        /// The host type of purchased instance. Valid values: CLOUD_PREMIUM (virtual machine with premium cloud disk), CLOUD_SSD
        /// (virtual machine with SSD).
        /// </summary>
        [Input("machineType")]
        public Input<string>? MachineType { get; set; }

        /// <summary>
        /// Instance memory size in GB.
        /// </summary>
        [Input("memory")]
        public Input<int>? Memory { get; set; }

        /// <summary>
        /// Project ID.
        /// </summary>
        [Input("projectId")]
        public Input<int>? ProjectId { get; set; }

        [Input("resourceTags")]
        private InputList<Inputs.BusinessIntelligenceInstanceResourceTagGetArgs>? _resourceTags;

        /// <summary>
        /// Tags associated with the instances to be created.
        /// </summary>
        public InputList<Inputs.BusinessIntelligenceInstanceResourceTagGetArgs> ResourceTags
        {
            get => _resourceTags ?? (_resourceTags = new InputList<Inputs.BusinessIntelligenceInstanceResourceTagGetArgs>());
            set => _resourceTags = value;
        }

        [Input("securityGroupLists")]
        private InputList<string>? _securityGroupLists;

        /// <summary>
        /// Security group list, which contains security group IDs in the format of sg-xxx.
        /// </summary>
        public InputList<string> SecurityGroupLists
        {
            get => _securityGroupLists ?? (_securityGroupLists = new InputList<string>());
            set => _securityGroupLists = value;
        }

        /// <summary>
        /// Configuration of the maintenance window, which specifies the maintenance duration in hours.
        /// </summary>
        [Input("span")]
        public Input<int>? Span { get; set; }

        /// <summary>
        /// Configuration of the maintenance window, which specifies the start time of daily maintenance.
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        /// <summary>
        /// Instance disk size in GB.
        /// </summary>
        [Input("storage")]
        public Input<int>? Storage { get; set; }

        /// <summary>
        /// VPC subnet ID in the format of subnet-bdoe83fa. Both SubnetId and VpcId need to be set or unset at the same time.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// VPC ID in the format of vpc-dsp338hz. Both SubnetId and VpcId need to be set or unset at the same time.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        [Input("weeklies")]
        private InputList<int>? _weeklies;

        /// <summary>
        /// Configuration of the maintenance window, which specifies the day of the week when maintenance can be performed. Valid
        /// values: 1 (Monday), 2 (Tuesday), 3 (Wednesday), 4 (Thursday), 5 (Friday), 6 (Saturday), 7 (Sunday).
        /// </summary>
        public InputList<int> Weeklies
        {
            get => _weeklies ?? (_weeklies = new InputList<int>());
            set => _weeklies = value;
        }

        /// <summary>
        /// Instance AZ, such as ap-guangzhou-1 (Guangzhou Zone 1). Purchasable AZs for an instance can be obtained through
        /// theDescribeZones API.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public BusinessIntelligenceInstanceState()
        {
        }
        public static new BusinessIntelligenceInstanceState Empty => new BusinessIntelligenceInstanceState();
    }
}
