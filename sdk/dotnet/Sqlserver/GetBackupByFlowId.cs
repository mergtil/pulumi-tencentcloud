// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Sqlserver
{
    public static class GetBackupByFlowId
    {
        public static Task<GetBackupByFlowIdResult> InvokeAsync(GetBackupByFlowIdArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBackupByFlowIdResult>("tencentcloud:Sqlserver/getBackupByFlowId:getBackupByFlowId", args ?? new GetBackupByFlowIdArgs(), options.WithDefaults());

        public static Output<GetBackupByFlowIdResult> Invoke(GetBackupByFlowIdInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBackupByFlowIdResult>("tencentcloud:Sqlserver/getBackupByFlowId:getBackupByFlowId", args ?? new GetBackupByFlowIdInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBackupByFlowIdArgs : global::Pulumi.InvokeArgs
    {
        [Input("flowId", required: true)]
        public string FlowId { get; set; } = null!;

        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetBackupByFlowIdArgs()
        {
        }
        public static new GetBackupByFlowIdArgs Empty => new GetBackupByFlowIdArgs();
    }

    public sealed class GetBackupByFlowIdInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("flowId", required: true)]
        public Input<string> FlowId { get; set; } = null!;

        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetBackupByFlowIdInvokeArgs()
        {
        }
        public static new GetBackupByFlowIdInvokeArgs Empty => new GetBackupByFlowIdInvokeArgs();
    }


    [OutputType]
    public sealed class GetBackupByFlowIdResult
    {
        public readonly string BackupName;
        public readonly int BackupWay;
        public readonly ImmutableArray<string> Dbs;
        public readonly string EndTime;
        public readonly string ExternalAddr;
        public readonly string FileName;
        public readonly string FlowId;
        public readonly string GroupId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        public readonly string InternalAddr;
        public readonly string? ResultOutputFile;
        public readonly string StartTime;
        public readonly int Status;
        public readonly int Strategy;

        [OutputConstructor]
        private GetBackupByFlowIdResult(
            string backupName,

            int backupWay,

            ImmutableArray<string> dbs,

            string endTime,

            string externalAddr,

            string fileName,

            string flowId,

            string groupId,

            string id,

            string instanceId,

            string internalAddr,

            string? resultOutputFile,

            string startTime,

            int status,

            int strategy)
        {
            BackupName = backupName;
            BackupWay = backupWay;
            Dbs = dbs;
            EndTime = endTime;
            ExternalAddr = externalAddr;
            FileName = fileName;
            FlowId = flowId;
            GroupId = groupId;
            Id = id;
            InstanceId = instanceId;
            InternalAddr = internalAddr;
            ResultOutputFile = resultOutputFile;
            StartTime = startTime;
            Status = status;
            Strategy = strategy;
        }
    }
}
