// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Sqlserver
{
    public static class GetUploadBackupInfo
    {
        public static Task<GetUploadBackupInfoResult> InvokeAsync(GetUploadBackupInfoArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUploadBackupInfoResult>("tencentcloud:Sqlserver/getUploadBackupInfo:getUploadBackupInfo", args ?? new GetUploadBackupInfoArgs(), options.WithDefaults());

        public static Output<GetUploadBackupInfoResult> Invoke(GetUploadBackupInfoInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUploadBackupInfoResult>("tencentcloud:Sqlserver/getUploadBackupInfo:getUploadBackupInfo", args ?? new GetUploadBackupInfoInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUploadBackupInfoArgs : global::Pulumi.InvokeArgs
    {
        [Input("backupMigrationId", required: true)]
        public string BackupMigrationId { get; set; } = null!;

        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetUploadBackupInfoArgs()
        {
        }
        public static new GetUploadBackupInfoArgs Empty => new GetUploadBackupInfoArgs();
    }

    public sealed class GetUploadBackupInfoInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("backupMigrationId", required: true)]
        public Input<string> BackupMigrationId { get; set; } = null!;

        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetUploadBackupInfoInvokeArgs()
        {
        }
        public static new GetUploadBackupInfoInvokeArgs Empty => new GetUploadBackupInfoInvokeArgs();
    }


    [OutputType]
    public sealed class GetUploadBackupInfoResult
    {
        public readonly string BackupMigrationId;
        public readonly string BucketName;
        public readonly string ExpiredTime;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        public readonly string Path;
        public readonly string Region;
        public readonly string? ResultOutputFile;
        public readonly string StartTime;
        public readonly string TmpSecretId;
        public readonly string TmpSecretKey;
        public readonly string XCosSecurityToken;

        [OutputConstructor]
        private GetUploadBackupInfoResult(
            string backupMigrationId,

            string bucketName,

            string expiredTime,

            string id,

            string instanceId,

            string path,

            string region,

            string? resultOutputFile,

            string startTime,

            string tmpSecretId,

            string tmpSecretKey,

            string xCosSecurityToken)
        {
            BackupMigrationId = backupMigrationId;
            BucketName = bucketName;
            ExpiredTime = expiredTime;
            Id = id;
            InstanceId = instanceId;
            Path = path;
            Region = region;
            ResultOutputFile = resultOutputFile;
            StartTime = startTime;
            TmpSecretId = tmpSecretId;
            TmpSecretKey = tmpSecretKey;
            XCosSecurityToken = xCosSecurityToken;
        }
    }
}
