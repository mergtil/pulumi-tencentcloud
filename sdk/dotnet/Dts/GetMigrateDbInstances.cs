// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Dts
{
    public static class GetMigrateDbInstances
    {
        public static Task<GetMigrateDbInstancesResult> InvokeAsync(GetMigrateDbInstancesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMigrateDbInstancesResult>("tencentcloud:Dts/getMigrateDbInstances:getMigrateDbInstances", args ?? new GetMigrateDbInstancesArgs(), options.WithDefaults());

        public static Output<GetMigrateDbInstancesResult> Invoke(GetMigrateDbInstancesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMigrateDbInstancesResult>("tencentcloud:Dts/getMigrateDbInstances:getMigrateDbInstances", args ?? new GetMigrateDbInstancesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMigrateDbInstancesArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountMode")]
        public string? AccountMode { get; set; }

        [Input("databaseType", required: true)]
        public string DatabaseType { get; set; } = null!;

        [Input("instanceId")]
        public string? InstanceId { get; set; }

        [Input("instanceName")]
        public string? InstanceName { get; set; }

        [Input("limit")]
        public int? Limit { get; set; }

        [Input("migrateRole")]
        public string? MigrateRole { get; set; }

        [Input("offset")]
        public int? Offset { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("tmpSecretId")]
        public string? TmpSecretId { get; set; }

        [Input("tmpSecretKey")]
        public string? TmpSecretKey { get; set; }

        [Input("tmpToken")]
        public string? TmpToken { get; set; }

        public GetMigrateDbInstancesArgs()
        {
        }
        public static new GetMigrateDbInstancesArgs Empty => new GetMigrateDbInstancesArgs();
    }

    public sealed class GetMigrateDbInstancesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("accountMode")]
        public Input<string>? AccountMode { get; set; }

        [Input("databaseType", required: true)]
        public Input<string> DatabaseType { get; set; } = null!;

        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        [Input("instanceName")]
        public Input<string>? InstanceName { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("migrateRole")]
        public Input<string>? MigrateRole { get; set; }

        [Input("offset")]
        public Input<int>? Offset { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("tmpSecretId")]
        public Input<string>? TmpSecretId { get; set; }

        [Input("tmpSecretKey")]
        public Input<string>? TmpSecretKey { get; set; }

        [Input("tmpToken")]
        public Input<string>? TmpToken { get; set; }

        public GetMigrateDbInstancesInvokeArgs()
        {
        }
        public static new GetMigrateDbInstancesInvokeArgs Empty => new GetMigrateDbInstancesInvokeArgs();
    }


    [OutputType]
    public sealed class GetMigrateDbInstancesResult
    {
        public readonly string? AccountMode;
        public readonly string DatabaseType;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? InstanceId;
        public readonly string? InstanceName;
        public readonly ImmutableArray<Outputs.GetMigrateDbInstancesInstanceResult> Instances;
        public readonly int? Limit;
        public readonly string? MigrateRole;
        public readonly int? Offset;
        public readonly string RequestId;
        public readonly string? ResultOutputFile;
        public readonly string? TmpSecretId;
        public readonly string? TmpSecretKey;
        public readonly string? TmpToken;

        [OutputConstructor]
        private GetMigrateDbInstancesResult(
            string? accountMode,

            string databaseType,

            string id,

            string? instanceId,

            string? instanceName,

            ImmutableArray<Outputs.GetMigrateDbInstancesInstanceResult> instances,

            int? limit,

            string? migrateRole,

            int? offset,

            string requestId,

            string? resultOutputFile,

            string? tmpSecretId,

            string? tmpSecretKey,

            string? tmpToken)
        {
            AccountMode = accountMode;
            DatabaseType = databaseType;
            Id = id;
            InstanceId = instanceId;
            InstanceName = instanceName;
            Instances = instances;
            Limit = limit;
            MigrateRole = migrateRole;
            Offset = offset;
            RequestId = requestId;
            ResultOutputFile = resultOutputFile;
            TmpSecretId = tmpSecretId;
            TmpSecretKey = tmpSecretKey;
            TmpToken = tmpToken;
        }
    }
}
