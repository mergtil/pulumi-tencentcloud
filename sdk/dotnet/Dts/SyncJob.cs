// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Dts
{
    [TencentcloudResourceType("tencentcloud:Dts/syncJob:SyncJob")]
    public partial class SyncJob : global::Pulumi.CustomResource
    {
        /// <summary>
        /// auto renew.
        /// </summary>
        [Output("autoRenew")]
        public Output<int> AutoRenew { get; private set; } = null!;

        /// <summary>
        /// destination database type.
        /// </summary>
        [Output("dstDatabaseType")]
        public Output<string> DstDatabaseType { get; private set; } = null!;

        /// <summary>
        /// destination region.
        /// </summary>
        [Output("dstRegion")]
        public Output<string> DstRegion { get; private set; } = null!;

        /// <summary>
        /// existed job id.
        /// </summary>
        [Output("existedJobId")]
        public Output<string> ExistedJobId { get; private set; } = null!;

        /// <summary>
        /// instance class.
        /// </summary>
        [Output("instanceClass")]
        public Output<string> InstanceClass { get; private set; } = null!;

        /// <summary>
        /// job id.
        /// </summary>
        [Output("jobId")]
        public Output<string> JobId { get; private set; } = null!;

        /// <summary>
        /// job name.
        /// </summary>
        [Output("jobName")]
        public Output<string> JobName { get; private set; } = null!;

        /// <summary>
        /// pay mode, optional value is PrePay or PostPay.
        /// </summary>
        [Output("payMode")]
        public Output<string> PayMode { get; private set; } = null!;

        /// <summary>
        /// specification.
        /// </summary>
        [Output("specification")]
        public Output<string> Specification { get; private set; } = null!;

        /// <summary>
        /// source database type.
        /// </summary>
        [Output("srcDatabaseType")]
        public Output<string> SrcDatabaseType { get; private set; } = null!;

        /// <summary>
        /// source region.
        /// </summary>
        [Output("srcRegion")]
        public Output<string> SrcRegion { get; private set; } = null!;

        /// <summary>
        /// tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<Outputs.SyncJobTag>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a SyncJob resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SyncJob(string name, SyncJobArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Dts/syncJob:SyncJob", name, args ?? new SyncJobArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SyncJob(string name, Input<string> id, SyncJobState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Dts/syncJob:SyncJob", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SyncJob resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SyncJob Get(string name, Input<string> id, SyncJobState? state = null, CustomResourceOptions? options = null)
        {
            return new SyncJob(name, id, state, options);
        }
    }

    public sealed class SyncJobArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// auto renew.
        /// </summary>
        [Input("autoRenew")]
        public Input<int>? AutoRenew { get; set; }

        /// <summary>
        /// destination database type.
        /// </summary>
        [Input("dstDatabaseType", required: true)]
        public Input<string> DstDatabaseType { get; set; } = null!;

        /// <summary>
        /// destination region.
        /// </summary>
        [Input("dstRegion", required: true)]
        public Input<string> DstRegion { get; set; } = null!;

        /// <summary>
        /// existed job id.
        /// </summary>
        [Input("existedJobId")]
        public Input<string>? ExistedJobId { get; set; }

        /// <summary>
        /// instance class.
        /// </summary>
        [Input("instanceClass")]
        public Input<string>? InstanceClass { get; set; }

        /// <summary>
        /// job name.
        /// </summary>
        [Input("jobName")]
        public Input<string>? JobName { get; set; }

        /// <summary>
        /// pay mode, optional value is PrePay or PostPay.
        /// </summary>
        [Input("payMode", required: true)]
        public Input<string> PayMode { get; set; } = null!;

        /// <summary>
        /// specification.
        /// </summary>
        [Input("specification")]
        public Input<string>? Specification { get; set; }

        /// <summary>
        /// source database type.
        /// </summary>
        [Input("srcDatabaseType", required: true)]
        public Input<string> SrcDatabaseType { get; set; } = null!;

        /// <summary>
        /// source region.
        /// </summary>
        [Input("srcRegion", required: true)]
        public Input<string> SrcRegion { get; set; } = null!;

        [Input("tags")]
        private InputList<Inputs.SyncJobTagArgs>? _tags;

        /// <summary>
        /// tags.
        /// </summary>
        public InputList<Inputs.SyncJobTagArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.SyncJobTagArgs>());
            set => _tags = value;
        }

        public SyncJobArgs()
        {
        }
        public static new SyncJobArgs Empty => new SyncJobArgs();
    }

    public sealed class SyncJobState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// auto renew.
        /// </summary>
        [Input("autoRenew")]
        public Input<int>? AutoRenew { get; set; }

        /// <summary>
        /// destination database type.
        /// </summary>
        [Input("dstDatabaseType")]
        public Input<string>? DstDatabaseType { get; set; }

        /// <summary>
        /// destination region.
        /// </summary>
        [Input("dstRegion")]
        public Input<string>? DstRegion { get; set; }

        /// <summary>
        /// existed job id.
        /// </summary>
        [Input("existedJobId")]
        public Input<string>? ExistedJobId { get; set; }

        /// <summary>
        /// instance class.
        /// </summary>
        [Input("instanceClass")]
        public Input<string>? InstanceClass { get; set; }

        /// <summary>
        /// job id.
        /// </summary>
        [Input("jobId")]
        public Input<string>? JobId { get; set; }

        /// <summary>
        /// job name.
        /// </summary>
        [Input("jobName")]
        public Input<string>? JobName { get; set; }

        /// <summary>
        /// pay mode, optional value is PrePay or PostPay.
        /// </summary>
        [Input("payMode")]
        public Input<string>? PayMode { get; set; }

        /// <summary>
        /// specification.
        /// </summary>
        [Input("specification")]
        public Input<string>? Specification { get; set; }

        /// <summary>
        /// source database type.
        /// </summary>
        [Input("srcDatabaseType")]
        public Input<string>? SrcDatabaseType { get; set; }

        /// <summary>
        /// source region.
        /// </summary>
        [Input("srcRegion")]
        public Input<string>? SrcRegion { get; set; }

        [Input("tags")]
        private InputList<Inputs.SyncJobTagGetArgs>? _tags;

        /// <summary>
        /// tags.
        /// </summary>
        public InputList<Inputs.SyncJobTagGetArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.SyncJobTagGetArgs>());
            set => _tags = value;
        }

        public SyncJobState()
        {
        }
        public static new SyncJobState Empty => new SyncJobState();
    }
}
