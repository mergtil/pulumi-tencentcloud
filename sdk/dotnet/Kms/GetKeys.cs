// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Kms
{
    public static class GetKeys
    {
        public static Task<GetKeysResult> InvokeAsync(GetKeysArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetKeysResult>("tencentcloud:Kms/getKeys:getKeys", args ?? new GetKeysArgs(), options.WithDefaults());

        public static Output<GetKeysResult> Invoke(GetKeysInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetKeysResult>("tencentcloud:Kms/getKeys:getKeys", args ?? new GetKeysInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetKeysArgs : global::Pulumi.InvokeArgs
    {
        [Input("keyState")]
        public int? KmsKeyState { get; set; }

        [Input("keyUsage")]
        public string? KeyUsage { get; set; }

        [Input("orderType")]
        public int? OrderType { get; set; }

        [Input("origin")]
        public string? Origin { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("role")]
        public int? Role { get; set; }

        [Input("searchKeyAlias")]
        public string? SearchKeyAlias { get; set; }

        [Input("tags")]
        private Dictionary<string, object>? _tags;
        public Dictionary<string, object> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, object>());
            set => _tags = value;
        }

        public GetKeysArgs()
        {
        }
        public static new GetKeysArgs Empty => new GetKeysArgs();
    }

    public sealed class GetKeysInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("keyState")]
        public Input<int>? KeyState { get; set; }

        [Input("keyUsage")]
        public Input<string>? KeyUsage { get; set; }

        [Input("orderType")]
        public Input<int>? OrderType { get; set; }

        [Input("origin")]
        public Input<string>? Origin { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("role")]
        public Input<int>? Role { get; set; }

        [Input("searchKeyAlias")]
        public Input<string>? SearchKeyAlias { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public GetKeysInvokeArgs()
        {
        }
        public static new GetKeysInvokeArgs Empty => new GetKeysInvokeArgs();
    }


    [OutputType]
    public sealed class GetKeysResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetKeysKeyListResult> KeyLists;
        public readonly int? KmsKeyState;
        public readonly string? KeyUsage;
        public readonly int? OrderType;
        public readonly string? Origin;
        public readonly string? ResultOutputFile;
        public readonly int? Role;
        public readonly string? SearchKeyAlias;
        public readonly ImmutableDictionary<string, object>? Tags;

        [OutputConstructor]
        private GetKeysResult(
            string id,

            ImmutableArray<Outputs.GetKeysKeyListResult> keyLists,

            int? keyState,

            string? keyUsage,

            int? orderType,

            string? origin,

            string? resultOutputFile,

            int? role,

            string? searchKeyAlias,

            ImmutableDictionary<string, object>? tags)
        {
            Id = id;
            KeyLists = keyLists;
            KmsKeyState = keyState;
            KeyUsage = keyUsage;
            OrderType = orderType;
            Origin = origin;
            ResultOutputFile = resultOutputFile;
            Role = role;
            SearchKeyAlias = searchKeyAlias;
            Tags = tags;
        }
    }
}
