// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Chdfs
{
    [TencentcloudResourceType("tencentcloud:Chdfs/fileSystem:FileSystem")]
    public partial class FileSystem : global::Pulumi.CustomResource
    {
        /// <summary>
        /// file system capacity. min 1GB, max 1PB, CapacityQuota is N * 1073741824.
        /// </summary>
        [Output("capacityQuota")]
        public Output<int> CapacityQuota { get; private set; } = null!;

        /// <summary>
        /// desc of the file system.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// check the ranger address or not.
        /// </summary>
        [Output("enableRanger")]
        public Output<bool?> EnableRanger { get; private set; } = null!;

        /// <summary>
        /// file system name.
        /// </summary>
        [Output("fileSystemName")]
        public Output<string> FileSystemName { get; private set; } = null!;

        /// <summary>
        /// check POSIX ACL or not.
        /// </summary>
        [Output("posixAcl")]
        public Output<bool> PosixAcl { get; private set; } = null!;

        /// <summary>
        /// ranger address list, default empty.
        /// </summary>
        [Output("rangerServiceAddresses")]
        public Output<ImmutableArray<string>> RangerServiceAddresses { get; private set; } = null!;

        /// <summary>
        /// super users of the file system, default empty.
        /// </summary>
        [Output("superUsers")]
        public Output<ImmutableArray<string>> SuperUsers { get; private set; } = null!;


        /// <summary>
        /// Create a FileSystem resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FileSystem(string name, FileSystemArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Chdfs/fileSystem:FileSystem", name, args ?? new FileSystemArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FileSystem(string name, Input<string> id, FileSystemState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Chdfs/fileSystem:FileSystem", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FileSystem resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FileSystem Get(string name, Input<string> id, FileSystemState? state = null, CustomResourceOptions? options = null)
        {
            return new FileSystem(name, id, state, options);
        }
    }

    public sealed class FileSystemArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// file system capacity. min 1GB, max 1PB, CapacityQuota is N * 1073741824.
        /// </summary>
        [Input("capacityQuota", required: true)]
        public Input<int> CapacityQuota { get; set; } = null!;

        /// <summary>
        /// desc of the file system.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// check the ranger address or not.
        /// </summary>
        [Input("enableRanger")]
        public Input<bool>? EnableRanger { get; set; }

        /// <summary>
        /// file system name.
        /// </summary>
        [Input("fileSystemName", required: true)]
        public Input<string> FileSystemName { get; set; } = null!;

        /// <summary>
        /// check POSIX ACL or not.
        /// </summary>
        [Input("posixAcl", required: true)]
        public Input<bool> PosixAcl { get; set; } = null!;

        [Input("rangerServiceAddresses")]
        private InputList<string>? _rangerServiceAddresses;

        /// <summary>
        /// ranger address list, default empty.
        /// </summary>
        public InputList<string> RangerServiceAddresses
        {
            get => _rangerServiceAddresses ?? (_rangerServiceAddresses = new InputList<string>());
            set => _rangerServiceAddresses = value;
        }

        [Input("superUsers")]
        private InputList<string>? _superUsers;

        /// <summary>
        /// super users of the file system, default empty.
        /// </summary>
        public InputList<string> SuperUsers
        {
            get => _superUsers ?? (_superUsers = new InputList<string>());
            set => _superUsers = value;
        }

        public FileSystemArgs()
        {
        }
        public static new FileSystemArgs Empty => new FileSystemArgs();
    }

    public sealed class FileSystemState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// file system capacity. min 1GB, max 1PB, CapacityQuota is N * 1073741824.
        /// </summary>
        [Input("capacityQuota")]
        public Input<int>? CapacityQuota { get; set; }

        /// <summary>
        /// desc of the file system.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// check the ranger address or not.
        /// </summary>
        [Input("enableRanger")]
        public Input<bool>? EnableRanger { get; set; }

        /// <summary>
        /// file system name.
        /// </summary>
        [Input("fileSystemName")]
        public Input<string>? FileSystemName { get; set; }

        /// <summary>
        /// check POSIX ACL or not.
        /// </summary>
        [Input("posixAcl")]
        public Input<bool>? PosixAcl { get; set; }

        [Input("rangerServiceAddresses")]
        private InputList<string>? _rangerServiceAddresses;

        /// <summary>
        /// ranger address list, default empty.
        /// </summary>
        public InputList<string> RangerServiceAddresses
        {
            get => _rangerServiceAddresses ?? (_rangerServiceAddresses = new InputList<string>());
            set => _rangerServiceAddresses = value;
        }

        [Input("superUsers")]
        private InputList<string>? _superUsers;

        /// <summary>
        /// super users of the file system, default empty.
        /// </summary>
        public InputList<string> SuperUsers
        {
            get => _superUsers ?? (_superUsers = new InputList<string>());
            set => _superUsers = value;
        }

        public FileSystemState()
        {
        }
        public static new FileSystemState Empty => new FileSystemState();
    }
}
