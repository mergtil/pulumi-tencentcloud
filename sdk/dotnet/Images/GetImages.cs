// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Images
{
    public static class GetImages
    {
        public static Task<GetImagesResult> InvokeAsync(GetImagesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetImagesResult>("tencentcloud:Images/getImages:getImages", args ?? new GetImagesArgs(), options.WithDefaults());

        public static Output<GetImagesResult> Invoke(GetImagesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetImagesResult>("tencentcloud:Images/getImages:getImages", args ?? new GetImagesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetImagesArgs : global::Pulumi.InvokeArgs
    {
        [Input("imageId")]
        public string? ImageId { get; set; }

        [Input("imageNameRegex")]
        public string? ImageNameRegex { get; set; }

        [Input("imageTypes")]
        private List<string>? _imageTypes;
        public List<string> ImageTypes
        {
            get => _imageTypes ?? (_imageTypes = new List<string>());
            set => _imageTypes = value;
        }

        [Input("instanceType")]
        public string? InstanceType { get; set; }

        [Input("osName")]
        public string? OsName { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetImagesArgs()
        {
        }
        public static new GetImagesArgs Empty => new GetImagesArgs();
    }

    public sealed class GetImagesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("imageId")]
        public Input<string>? ImageId { get; set; }

        [Input("imageNameRegex")]
        public Input<string>? ImageNameRegex { get; set; }

        [Input("imageTypes")]
        private InputList<string>? _imageTypes;
        public InputList<string> ImageTypes
        {
            get => _imageTypes ?? (_imageTypes = new InputList<string>());
            set => _imageTypes = value;
        }

        [Input("instanceType")]
        public Input<string>? InstanceType { get; set; }

        [Input("osName")]
        public Input<string>? OsName { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetImagesInvokeArgs()
        {
        }
        public static new GetImagesInvokeArgs Empty => new GetImagesInvokeArgs();
    }


    [OutputType]
    public sealed class GetImagesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ImageId;
        public readonly string? ImageNameRegex;
        public readonly ImmutableArray<string> ImageTypes;
        public readonly ImmutableArray<Outputs.GetImagesImageResult> ImagesImages;
        public readonly string? InstanceType;
        public readonly string? OsName;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetImagesResult(
            string id,

            string? imageId,

            string? imageNameRegex,

            ImmutableArray<string> imageTypes,

            ImmutableArray<Outputs.GetImagesImageResult> images,

            string? instanceType,

            string? osName,

            string? resultOutputFile)
        {
            Id = id;
            ImageId = imageId;
            ImageNameRegex = imageNameRegex;
            ImageTypes = imageTypes;
            ImagesImages = images;
            InstanceType = instanceType;
            OsName = osName;
            ResultOutputFile = resultOutputFile;
        }
    }
}
