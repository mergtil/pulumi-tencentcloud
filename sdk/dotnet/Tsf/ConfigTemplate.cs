// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Tsf
{
    [TencentcloudResourceType("tencentcloud:Tsf/configTemplate:ConfigTemplate")]
    public partial class ConfigTemplate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Configuration template description.
        /// </summary>
        [Output("configTemplateDesc")]
        public Output<string?> ConfigTemplateDesc { get; private set; } = null!;

        /// <summary>
        /// Template Id.
        /// </summary>
        [Output("configTemplateId")]
        public Output<string> ConfigTemplateId { get; private set; } = null!;

        /// <summary>
        /// Configuration template name.
        /// </summary>
        [Output("configTemplateName")]
        public Output<string> ConfigTemplateName { get; private set; } = null!;

        /// <summary>
        /// Configure the microservice framework corresponding to the template.
        /// </summary>
        [Output("configTemplateType")]
        public Output<string> ConfigTemplateType { get; private set; } = null!;

        /// <summary>
        /// Configure template data.
        /// </summary>
        [Output("configTemplateValue")]
        public Output<string> ConfigTemplateValue { get; private set; } = null!;

        /// <summary>
        /// creation time.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Program id list.
        /// </summary>
        [Output("programIdLists")]
        public Output<ImmutableArray<string>> ProgramIdLists { get; private set; } = null!;

        /// <summary>
        /// update time.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;


        /// <summary>
        /// Create a ConfigTemplate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConfigTemplate(string name, ConfigTemplateArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Tsf/configTemplate:ConfigTemplate", name, args ?? new ConfigTemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ConfigTemplate(string name, Input<string> id, ConfigTemplateState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Tsf/configTemplate:ConfigTemplate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConfigTemplate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConfigTemplate Get(string name, Input<string> id, ConfigTemplateState? state = null, CustomResourceOptions? options = null)
        {
            return new ConfigTemplate(name, id, state, options);
        }
    }

    public sealed class ConfigTemplateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configuration template description.
        /// </summary>
        [Input("configTemplateDesc")]
        public Input<string>? ConfigTemplateDesc { get; set; }

        /// <summary>
        /// Configuration template name.
        /// </summary>
        [Input("configTemplateName", required: true)]
        public Input<string> ConfigTemplateName { get; set; } = null!;

        /// <summary>
        /// Configure the microservice framework corresponding to the template.
        /// </summary>
        [Input("configTemplateType", required: true)]
        public Input<string> ConfigTemplateType { get; set; } = null!;

        /// <summary>
        /// Configure template data.
        /// </summary>
        [Input("configTemplateValue", required: true)]
        public Input<string> ConfigTemplateValue { get; set; } = null!;

        [Input("programIdLists")]
        private InputList<string>? _programIdLists;

        /// <summary>
        /// Program id list.
        /// </summary>
        public InputList<string> ProgramIdLists
        {
            get => _programIdLists ?? (_programIdLists = new InputList<string>());
            set => _programIdLists = value;
        }

        public ConfigTemplateArgs()
        {
        }
        public static new ConfigTemplateArgs Empty => new ConfigTemplateArgs();
    }

    public sealed class ConfigTemplateState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Configuration template description.
        /// </summary>
        [Input("configTemplateDesc")]
        public Input<string>? ConfigTemplateDesc { get; set; }

        /// <summary>
        /// Template Id.
        /// </summary>
        [Input("configTemplateId")]
        public Input<string>? ConfigTemplateId { get; set; }

        /// <summary>
        /// Configuration template name.
        /// </summary>
        [Input("configTemplateName")]
        public Input<string>? ConfigTemplateName { get; set; }

        /// <summary>
        /// Configure the microservice framework corresponding to the template.
        /// </summary>
        [Input("configTemplateType")]
        public Input<string>? ConfigTemplateType { get; set; }

        /// <summary>
        /// Configure template data.
        /// </summary>
        [Input("configTemplateValue")]
        public Input<string>? ConfigTemplateValue { get; set; }

        /// <summary>
        /// creation time.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        [Input("programIdLists")]
        private InputList<string>? _programIdLists;

        /// <summary>
        /// Program id list.
        /// </summary>
        public InputList<string> ProgramIdLists
        {
            get => _programIdLists ?? (_programIdLists = new InputList<string>());
            set => _programIdLists = value;
        }

        /// <summary>
        /// update time.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        public ConfigTemplateState()
        {
        }
        public static new ConfigTemplateState Empty => new ConfigTemplateState();
    }
}
