// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Tsf
{
    [TencentcloudResourceType("tencentcloud:Tsf/deployContainerGroup:DeployContainerGroup")]
    public partial class DeployContainerGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The maximum number of CPU cores allocated to the agent container corresponds to the limit field in Kubernetes.
        /// </summary>
        [Output("agentCpuLimit")]
        public Output<string> AgentCpuLimit { get; private set; } = null!;

        /// <summary>
        /// The number of CPU cores allocated to the agent container corresponds to the request field in Kubernetes.
        /// </summary>
        [Output("agentCpuRequest")]
        public Output<string> AgentCpuRequest { get; private set; } = null!;

        /// <summary>
        /// The maximum amount of memory in MiB allocated to the agent container corresponds to the &amp;amp;#39;limit&amp;amp;#39; field in
        /// Kubernetes.
        /// </summary>
        [Output("agentMemLimit")]
        public Output<string> AgentMemLimit { get; private set; } = null!;

        /// <summary>
        /// The amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
        /// </summary>
        [Output("agentMemRequest")]
        public Output<string> AgentMemRequest { get; private set; } = null!;

        /// <summary>
        /// javaagent info: SERVICE_AGENT/OT_AGENT.
        /// </summary>
        [Output("agentProfileLists")]
        public Output<ImmutableArray<Outputs.DeployContainerGroupAgentProfileList>> AgentProfileLists { get; private set; } = null!;

        /// <summary>
        /// The maximum number of CPU cores for the business container, corresponding to the limit in K8S. If not specified, it
        /// defaults to twice the request.
        /// </summary>
        [Output("cpuLimit")]
        public Output<string> CpuLimit { get; private set; } = null!;

        /// <summary>
        /// The number of CPU cores allocated to the business container, corresponding to the request in K8S. The default value is
        /// 0.25.
        /// </summary>
        [Output("cpuRequest")]
        public Output<string> CpuRequest { get; private set; } = null!;

        /// <summary>
        /// Whether to deploy the agent container. If this parameter is not specified, the agent container will not be deployed by
        /// default.
        /// </summary>
        [Output("deployAgent")]
        public Output<bool> DeployAgent { get; private set; } = null!;

        /// <summary>
        /// Not start right away.
        /// </summary>
        [Output("doNotStart")]
        public Output<bool> DoNotStart { get; private set; } = null!;

        /// <summary>
        /// The environment variables that the application runs in the deployment group. If this parameter is not specified, no
        /// additional environment variables are set by default.
        /// </summary>
        [Output("envs")]
        public Output<ImmutableArray<Outputs.DeployContainerGroupEnv>> Envs { get; private set; } = null!;

        /// <summary>
        /// group Id.
        /// </summary>
        [Output("groupId")]
        public Output<string> GroupId { get; private set; } = null!;

        /// <summary>
        /// The configuration information for health checks. If this parameter is not specified, the health check is not set by
        /// default.
        /// </summary>
        [Output("healthCheckSettings")]
        public Output<Outputs.DeployContainerGroupHealthCheckSettings?> HealthCheckSettings { get; private set; } = null!;

        /// <summary>
        /// Whether to perform incremental deployment. The default value is false, which means full update.
        /// </summary>
        [Output("incrementalDeployment")]
        public Output<bool> IncrementalDeployment { get; private set; } = null!;

        /// <summary>
        /// instance number.
        /// </summary>
        [Output("instanceNum")]
        public Output<int> InstanceNum { get; private set; } = null!;

        /// <summary>
        /// The maximum amount of CPU cores allocated to the istio proxy container corresponds to the &amp;amp;#39;limit&amp;amp;#39; field
        /// in Kubernetes.
        /// </summary>
        [Output("istioCpuLimit")]
        public Output<string> IstioCpuLimit { get; private set; } = null!;

        /// <summary>
        /// The number of CPU cores allocated to the istio proxy container corresponds to the &amp;amp;#39;request&amp;amp;#39; field in
        /// Kubernetes.
        /// </summary>
        [Output("istioCpuRequest")]
        public Output<string> IstioCpuRequest { get; private set; } = null!;

        /// <summary>
        /// The maximum amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
        /// </summary>
        [Output("istioMemLimit")]
        public Output<string> IstioMemLimit { get; private set; } = null!;

        /// <summary>
        /// The amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
        /// </summary>
        [Output("istioMemRequest")]
        public Output<string> IstioMemRequest { get; private set; } = null!;

        /// <summary>
        /// jvm options.
        /// </summary>
        [Output("jvmOpts")]
        public Output<string> JvmOpts { get; private set; } = null!;

        /// <summary>
        /// MaxSurge parameter in Kubernetes rolling update strategy.
        /// </summary>
        [Output("maxSurge")]
        public Output<string> MaxSurge { get; private set; } = null!;

        /// <summary>
        /// MaxUnavailable parameter in Kubernetes rolling update strategy.
        /// </summary>
        [Output("maxUnavailable")]
        public Output<string> MaxUnavailable { get; private set; } = null!;

        /// <summary>
        /// The maximum memory size in MiB for the business container, corresponding to the limit in K8S. If not specified, it
        /// defaults to twice the request.
        /// </summary>
        [Output("memLimit")]
        public Output<string> MemLimit { get; private set; } = null!;

        /// <summary>
        /// The amount of memory in MiB allocated to the business container, corresponding to the request in K8S. The default value
        /// is 640 MiB.
        /// </summary>
        [Output("memRequest")]
        public Output<string> MemRequest { get; private set; } = null!;

        /// <summary>
        /// (Priority use) New image name, such as /tsf/nginx.
        /// </summary>
        [Output("repoName")]
        public Output<string> RepoName { get; private set; } = null!;

        /// <summary>
        /// repo type, tcr or leave it blank.
        /// </summary>
        [Output("repoType")]
        public Output<string> RepoType { get; private set; } = null!;

        /// <summary>
        /// old image name, eg: /tsf/server.
        /// </summary>
        [Output("reponame")]
        public Output<string> Reponame { get; private set; } = null!;

        /// <summary>
        /// Node scheduling strategy. If this parameter is not specified, the node scheduling strategy will not be used by default.
        /// </summary>
        [Output("schedulingStrategy")]
        public Output<Outputs.DeployContainerGroupSchedulingStrategy> SchedulingStrategy { get; private set; } = null!;

        /// <summary>
        /// image server.
        /// </summary>
        [Output("server")]
        public Output<string> Server { get; private set; } = null!;

        /// <summary>
        /// Network settings for container deployment groups.
        /// </summary>
        [Output("serviceSetting")]
        public Output<Outputs.DeployContainerGroupServiceSetting> ServiceSetting { get; private set; } = null!;

        /// <summary>
        /// image version name, v1.
        /// </summary>
        [Output("tagName")]
        public Output<string> TagName { get; private set; } = null!;

        /// <summary>
        /// update Interval, is required when rolling update.
        /// </summary>
        [Output("updateIvl")]
        public Output<int> UpdateIvl { get; private set; } = null!;

        /// <summary>
        /// Update method: 0 for fast update, 1 for rolling update.
        /// </summary>
        [Output("updateType")]
        public Output<int> UpdateType { get; private set; } = null!;

        /// <summary>
        /// Whether to clear the volume information. Default is false.
        /// </summary>
        [Output("volumeClean")]
        public Output<bool> VolumeClean { get; private set; } = null!;

        /// <summary>
        /// Volume information, as a list.
        /// </summary>
        [Output("volumeInfoLists")]
        public Output<ImmutableArray<Outputs.DeployContainerGroupVolumeInfoList>> VolumeInfoLists { get; private set; } = null!;

        /// <summary>
        /// Volume mount point information, list type.
        /// </summary>
        [Output("volumeMountInfoLists")]
        public Output<ImmutableArray<Outputs.DeployContainerGroupVolumeMountInfoList>> VolumeMountInfoLists { get; private set; } = null!;

        /// <summary>
        /// warmup setting.
        /// </summary>
        [Output("warmupSetting")]
        public Output<Outputs.DeployContainerGroupWarmupSetting> WarmupSetting { get; private set; } = null!;


        /// <summary>
        /// Create a DeployContainerGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DeployContainerGroup(string name, DeployContainerGroupArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Tsf/deployContainerGroup:DeployContainerGroup", name, args ?? new DeployContainerGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DeployContainerGroup(string name, Input<string> id, DeployContainerGroupState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Tsf/deployContainerGroup:DeployContainerGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DeployContainerGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DeployContainerGroup Get(string name, Input<string> id, DeployContainerGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new DeployContainerGroup(name, id, state, options);
        }
    }

    public sealed class DeployContainerGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The maximum number of CPU cores allocated to the agent container corresponds to the limit field in Kubernetes.
        /// </summary>
        [Input("agentCpuLimit")]
        public Input<string>? AgentCpuLimit { get; set; }

        /// <summary>
        /// The number of CPU cores allocated to the agent container corresponds to the request field in Kubernetes.
        /// </summary>
        [Input("agentCpuRequest")]
        public Input<string>? AgentCpuRequest { get; set; }

        /// <summary>
        /// The maximum amount of memory in MiB allocated to the agent container corresponds to the &amp;amp;#39;limit&amp;amp;#39; field in
        /// Kubernetes.
        /// </summary>
        [Input("agentMemLimit")]
        public Input<string>? AgentMemLimit { get; set; }

        /// <summary>
        /// The amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
        /// </summary>
        [Input("agentMemRequest")]
        public Input<string>? AgentMemRequest { get; set; }

        [Input("agentProfileLists")]
        private InputList<Inputs.DeployContainerGroupAgentProfileListArgs>? _agentProfileLists;

        /// <summary>
        /// javaagent info: SERVICE_AGENT/OT_AGENT.
        /// </summary>
        public InputList<Inputs.DeployContainerGroupAgentProfileListArgs> AgentProfileLists
        {
            get => _agentProfileLists ?? (_agentProfileLists = new InputList<Inputs.DeployContainerGroupAgentProfileListArgs>());
            set => _agentProfileLists = value;
        }

        /// <summary>
        /// The maximum number of CPU cores for the business container, corresponding to the limit in K8S. If not specified, it
        /// defaults to twice the request.
        /// </summary>
        [Input("cpuLimit")]
        public Input<string>? CpuLimit { get; set; }

        /// <summary>
        /// The number of CPU cores allocated to the business container, corresponding to the request in K8S. The default value is
        /// 0.25.
        /// </summary>
        [Input("cpuRequest")]
        public Input<string>? CpuRequest { get; set; }

        /// <summary>
        /// Whether to deploy the agent container. If this parameter is not specified, the agent container will not be deployed by
        /// default.
        /// </summary>
        [Input("deployAgent")]
        public Input<bool>? DeployAgent { get; set; }

        /// <summary>
        /// Not start right away.
        /// </summary>
        [Input("doNotStart")]
        public Input<bool>? DoNotStart { get; set; }

        [Input("envs")]
        private InputList<Inputs.DeployContainerGroupEnvArgs>? _envs;

        /// <summary>
        /// The environment variables that the application runs in the deployment group. If this parameter is not specified, no
        /// additional environment variables are set by default.
        /// </summary>
        public InputList<Inputs.DeployContainerGroupEnvArgs> Envs
        {
            get => _envs ?? (_envs = new InputList<Inputs.DeployContainerGroupEnvArgs>());
            set => _envs = value;
        }

        /// <summary>
        /// group Id.
        /// </summary>
        [Input("groupId", required: true)]
        public Input<string> GroupId { get; set; } = null!;

        /// <summary>
        /// The configuration information for health checks. If this parameter is not specified, the health check is not set by
        /// default.
        /// </summary>
        [Input("healthCheckSettings")]
        public Input<Inputs.DeployContainerGroupHealthCheckSettingsArgs>? HealthCheckSettings { get; set; }

        /// <summary>
        /// Whether to perform incremental deployment. The default value is false, which means full update.
        /// </summary>
        [Input("incrementalDeployment")]
        public Input<bool>? IncrementalDeployment { get; set; }

        /// <summary>
        /// instance number.
        /// </summary>
        [Input("instanceNum", required: true)]
        public Input<int> InstanceNum { get; set; } = null!;

        /// <summary>
        /// The maximum amount of CPU cores allocated to the istio proxy container corresponds to the &amp;amp;#39;limit&amp;amp;#39; field
        /// in Kubernetes.
        /// </summary>
        [Input("istioCpuLimit")]
        public Input<string>? IstioCpuLimit { get; set; }

        /// <summary>
        /// The number of CPU cores allocated to the istio proxy container corresponds to the &amp;amp;#39;request&amp;amp;#39; field in
        /// Kubernetes.
        /// </summary>
        [Input("istioCpuRequest")]
        public Input<string>? IstioCpuRequest { get; set; }

        /// <summary>
        /// The maximum amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
        /// </summary>
        [Input("istioMemLimit")]
        public Input<string>? IstioMemLimit { get; set; }

        /// <summary>
        /// The amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
        /// </summary>
        [Input("istioMemRequest")]
        public Input<string>? IstioMemRequest { get; set; }

        /// <summary>
        /// jvm options.
        /// </summary>
        [Input("jvmOpts")]
        public Input<string>? JvmOpts { get; set; }

        /// <summary>
        /// MaxSurge parameter in Kubernetes rolling update strategy.
        /// </summary>
        [Input("maxSurge")]
        public Input<string>? MaxSurge { get; set; }

        /// <summary>
        /// MaxUnavailable parameter in Kubernetes rolling update strategy.
        /// </summary>
        [Input("maxUnavailable")]
        public Input<string>? MaxUnavailable { get; set; }

        /// <summary>
        /// The maximum memory size in MiB for the business container, corresponding to the limit in K8S. If not specified, it
        /// defaults to twice the request.
        /// </summary>
        [Input("memLimit")]
        public Input<string>? MemLimit { get; set; }

        /// <summary>
        /// The amount of memory in MiB allocated to the business container, corresponding to the request in K8S. The default value
        /// is 640 MiB.
        /// </summary>
        [Input("memRequest")]
        public Input<string>? MemRequest { get; set; }

        /// <summary>
        /// (Priority use) New image name, such as /tsf/nginx.
        /// </summary>
        [Input("repoName")]
        public Input<string>? RepoName { get; set; }

        /// <summary>
        /// repo type, tcr or leave it blank.
        /// </summary>
        [Input("repoType")]
        public Input<string>? RepoType { get; set; }

        /// <summary>
        /// old image name, eg: /tsf/server.
        /// </summary>
        [Input("reponame")]
        public Input<string>? Reponame { get; set; }

        /// <summary>
        /// Node scheduling strategy. If this parameter is not specified, the node scheduling strategy will not be used by default.
        /// </summary>
        [Input("schedulingStrategy")]
        public Input<Inputs.DeployContainerGroupSchedulingStrategyArgs>? SchedulingStrategy { get; set; }

        /// <summary>
        /// image server.
        /// </summary>
        [Input("server")]
        public Input<string>? Server { get; set; }

        /// <summary>
        /// Network settings for container deployment groups.
        /// </summary>
        [Input("serviceSetting")]
        public Input<Inputs.DeployContainerGroupServiceSettingArgs>? ServiceSetting { get; set; }

        /// <summary>
        /// image version name, v1.
        /// </summary>
        [Input("tagName", required: true)]
        public Input<string> TagName { get; set; } = null!;

        /// <summary>
        /// update Interval, is required when rolling update.
        /// </summary>
        [Input("updateIvl")]
        public Input<int>? UpdateIvl { get; set; }

        /// <summary>
        /// Update method: 0 for fast update, 1 for rolling update.
        /// </summary>
        [Input("updateType")]
        public Input<int>? UpdateType { get; set; }

        /// <summary>
        /// Whether to clear the volume information. Default is false.
        /// </summary>
        [Input("volumeClean")]
        public Input<bool>? VolumeClean { get; set; }

        [Input("volumeInfoLists")]
        private InputList<Inputs.DeployContainerGroupVolumeInfoListArgs>? _volumeInfoLists;

        /// <summary>
        /// Volume information, as a list.
        /// </summary>
        public InputList<Inputs.DeployContainerGroupVolumeInfoListArgs> VolumeInfoLists
        {
            get => _volumeInfoLists ?? (_volumeInfoLists = new InputList<Inputs.DeployContainerGroupVolumeInfoListArgs>());
            set => _volumeInfoLists = value;
        }

        [Input("volumeMountInfoLists")]
        private InputList<Inputs.DeployContainerGroupVolumeMountInfoListArgs>? _volumeMountInfoLists;

        /// <summary>
        /// Volume mount point information, list type.
        /// </summary>
        public InputList<Inputs.DeployContainerGroupVolumeMountInfoListArgs> VolumeMountInfoLists
        {
            get => _volumeMountInfoLists ?? (_volumeMountInfoLists = new InputList<Inputs.DeployContainerGroupVolumeMountInfoListArgs>());
            set => _volumeMountInfoLists = value;
        }

        /// <summary>
        /// warmup setting.
        /// </summary>
        [Input("warmupSetting")]
        public Input<Inputs.DeployContainerGroupWarmupSettingArgs>? WarmupSetting { get; set; }

        public DeployContainerGroupArgs()
        {
        }
        public static new DeployContainerGroupArgs Empty => new DeployContainerGroupArgs();
    }

    public sealed class DeployContainerGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The maximum number of CPU cores allocated to the agent container corresponds to the limit field in Kubernetes.
        /// </summary>
        [Input("agentCpuLimit")]
        public Input<string>? AgentCpuLimit { get; set; }

        /// <summary>
        /// The number of CPU cores allocated to the agent container corresponds to the request field in Kubernetes.
        /// </summary>
        [Input("agentCpuRequest")]
        public Input<string>? AgentCpuRequest { get; set; }

        /// <summary>
        /// The maximum amount of memory in MiB allocated to the agent container corresponds to the &amp;amp;#39;limit&amp;amp;#39; field in
        /// Kubernetes.
        /// </summary>
        [Input("agentMemLimit")]
        public Input<string>? AgentMemLimit { get; set; }

        /// <summary>
        /// The amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
        /// </summary>
        [Input("agentMemRequest")]
        public Input<string>? AgentMemRequest { get; set; }

        [Input("agentProfileLists")]
        private InputList<Inputs.DeployContainerGroupAgentProfileListGetArgs>? _agentProfileLists;

        /// <summary>
        /// javaagent info: SERVICE_AGENT/OT_AGENT.
        /// </summary>
        public InputList<Inputs.DeployContainerGroupAgentProfileListGetArgs> AgentProfileLists
        {
            get => _agentProfileLists ?? (_agentProfileLists = new InputList<Inputs.DeployContainerGroupAgentProfileListGetArgs>());
            set => _agentProfileLists = value;
        }

        /// <summary>
        /// The maximum number of CPU cores for the business container, corresponding to the limit in K8S. If not specified, it
        /// defaults to twice the request.
        /// </summary>
        [Input("cpuLimit")]
        public Input<string>? CpuLimit { get; set; }

        /// <summary>
        /// The number of CPU cores allocated to the business container, corresponding to the request in K8S. The default value is
        /// 0.25.
        /// </summary>
        [Input("cpuRequest")]
        public Input<string>? CpuRequest { get; set; }

        /// <summary>
        /// Whether to deploy the agent container. If this parameter is not specified, the agent container will not be deployed by
        /// default.
        /// </summary>
        [Input("deployAgent")]
        public Input<bool>? DeployAgent { get; set; }

        /// <summary>
        /// Not start right away.
        /// </summary>
        [Input("doNotStart")]
        public Input<bool>? DoNotStart { get; set; }

        [Input("envs")]
        private InputList<Inputs.DeployContainerGroupEnvGetArgs>? _envs;

        /// <summary>
        /// The environment variables that the application runs in the deployment group. If this parameter is not specified, no
        /// additional environment variables are set by default.
        /// </summary>
        public InputList<Inputs.DeployContainerGroupEnvGetArgs> Envs
        {
            get => _envs ?? (_envs = new InputList<Inputs.DeployContainerGroupEnvGetArgs>());
            set => _envs = value;
        }

        /// <summary>
        /// group Id.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// The configuration information for health checks. If this parameter is not specified, the health check is not set by
        /// default.
        /// </summary>
        [Input("healthCheckSettings")]
        public Input<Inputs.DeployContainerGroupHealthCheckSettingsGetArgs>? HealthCheckSettings { get; set; }

        /// <summary>
        /// Whether to perform incremental deployment. The default value is false, which means full update.
        /// </summary>
        [Input("incrementalDeployment")]
        public Input<bool>? IncrementalDeployment { get; set; }

        /// <summary>
        /// instance number.
        /// </summary>
        [Input("instanceNum")]
        public Input<int>? InstanceNum { get; set; }

        /// <summary>
        /// The maximum amount of CPU cores allocated to the istio proxy container corresponds to the &amp;amp;#39;limit&amp;amp;#39; field
        /// in Kubernetes.
        /// </summary>
        [Input("istioCpuLimit")]
        public Input<string>? IstioCpuLimit { get; set; }

        /// <summary>
        /// The number of CPU cores allocated to the istio proxy container corresponds to the &amp;amp;#39;request&amp;amp;#39; field in
        /// Kubernetes.
        /// </summary>
        [Input("istioCpuRequest")]
        public Input<string>? IstioCpuRequest { get; set; }

        /// <summary>
        /// The maximum amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
        /// </summary>
        [Input("istioMemLimit")]
        public Input<string>? IstioMemLimit { get; set; }

        /// <summary>
        /// The amount of memory in MiB allocated to the agent container corresponds to the request field in Kubernetes.
        /// </summary>
        [Input("istioMemRequest")]
        public Input<string>? IstioMemRequest { get; set; }

        /// <summary>
        /// jvm options.
        /// </summary>
        [Input("jvmOpts")]
        public Input<string>? JvmOpts { get; set; }

        /// <summary>
        /// MaxSurge parameter in Kubernetes rolling update strategy.
        /// </summary>
        [Input("maxSurge")]
        public Input<string>? MaxSurge { get; set; }

        /// <summary>
        /// MaxUnavailable parameter in Kubernetes rolling update strategy.
        /// </summary>
        [Input("maxUnavailable")]
        public Input<string>? MaxUnavailable { get; set; }

        /// <summary>
        /// The maximum memory size in MiB for the business container, corresponding to the limit in K8S. If not specified, it
        /// defaults to twice the request.
        /// </summary>
        [Input("memLimit")]
        public Input<string>? MemLimit { get; set; }

        /// <summary>
        /// The amount of memory in MiB allocated to the business container, corresponding to the request in K8S. The default value
        /// is 640 MiB.
        /// </summary>
        [Input("memRequest")]
        public Input<string>? MemRequest { get; set; }

        /// <summary>
        /// (Priority use) New image name, such as /tsf/nginx.
        /// </summary>
        [Input("repoName")]
        public Input<string>? RepoName { get; set; }

        /// <summary>
        /// repo type, tcr or leave it blank.
        /// </summary>
        [Input("repoType")]
        public Input<string>? RepoType { get; set; }

        /// <summary>
        /// old image name, eg: /tsf/server.
        /// </summary>
        [Input("reponame")]
        public Input<string>? Reponame { get; set; }

        /// <summary>
        /// Node scheduling strategy. If this parameter is not specified, the node scheduling strategy will not be used by default.
        /// </summary>
        [Input("schedulingStrategy")]
        public Input<Inputs.DeployContainerGroupSchedulingStrategyGetArgs>? SchedulingStrategy { get; set; }

        /// <summary>
        /// image server.
        /// </summary>
        [Input("server")]
        public Input<string>? Server { get; set; }

        /// <summary>
        /// Network settings for container deployment groups.
        /// </summary>
        [Input("serviceSetting")]
        public Input<Inputs.DeployContainerGroupServiceSettingGetArgs>? ServiceSetting { get; set; }

        /// <summary>
        /// image version name, v1.
        /// </summary>
        [Input("tagName")]
        public Input<string>? TagName { get; set; }

        /// <summary>
        /// update Interval, is required when rolling update.
        /// </summary>
        [Input("updateIvl")]
        public Input<int>? UpdateIvl { get; set; }

        /// <summary>
        /// Update method: 0 for fast update, 1 for rolling update.
        /// </summary>
        [Input("updateType")]
        public Input<int>? UpdateType { get; set; }

        /// <summary>
        /// Whether to clear the volume information. Default is false.
        /// </summary>
        [Input("volumeClean")]
        public Input<bool>? VolumeClean { get; set; }

        [Input("volumeInfoLists")]
        private InputList<Inputs.DeployContainerGroupVolumeInfoListGetArgs>? _volumeInfoLists;

        /// <summary>
        /// Volume information, as a list.
        /// </summary>
        public InputList<Inputs.DeployContainerGroupVolumeInfoListGetArgs> VolumeInfoLists
        {
            get => _volumeInfoLists ?? (_volumeInfoLists = new InputList<Inputs.DeployContainerGroupVolumeInfoListGetArgs>());
            set => _volumeInfoLists = value;
        }

        [Input("volumeMountInfoLists")]
        private InputList<Inputs.DeployContainerGroupVolumeMountInfoListGetArgs>? _volumeMountInfoLists;

        /// <summary>
        /// Volume mount point information, list type.
        /// </summary>
        public InputList<Inputs.DeployContainerGroupVolumeMountInfoListGetArgs> VolumeMountInfoLists
        {
            get => _volumeMountInfoLists ?? (_volumeMountInfoLists = new InputList<Inputs.DeployContainerGroupVolumeMountInfoListGetArgs>());
            set => _volumeMountInfoLists = value;
        }

        /// <summary>
        /// warmup setting.
        /// </summary>
        [Input("warmupSetting")]
        public Input<Inputs.DeployContainerGroupWarmupSettingGetArgs>? WarmupSetting { get; set; }

        public DeployContainerGroupState()
        {
        }
        public static new DeployContainerGroupState Empty => new DeployContainerGroupState();
    }
}
