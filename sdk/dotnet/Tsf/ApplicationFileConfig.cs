// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Tsf
{
    [TencentcloudResourceType("tencentcloud:Tsf/applicationFileConfig:ApplicationFileConfig")]
    public partial class ApplicationFileConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Config file associated application ID.
        /// </summary>
        [Output("applicationId")]
        public Output<string> ApplicationId { get; private set; } = null!;

        /// <summary>
        /// Configuration file encoding, utf-8 or gbk. Note: If you choose gbk, you need the support of a new version of
        /// tsf-consul-template (public cloud virtual machines need to use 1.32 tsf-agent, and containers need to obtain the latest
        /// tsf-consul-template-docker.tar.gz from the documentation).
        /// </summary>
        [Output("configFileCode")]
        public Output<string?> ConfigFileCode { get; private set; } = null!;

        /// <summary>
        /// Config file name.
        /// </summary>
        [Output("configFileName")]
        public Output<string> ConfigFileName { get; private set; } = null!;

        /// <summary>
        /// config release path.
        /// </summary>
        [Output("configFilePath")]
        public Output<string> ConfigFilePath { get; private set; } = null!;

        /// <summary>
        /// Configuration file content (the original content encoding needs to be in utf-8 format, if the ConfigFileCode is gbk, it
        /// will be converted in the background).
        /// </summary>
        [Output("configFileValue")]
        public Output<string> ConfigFileValue { get; private set; } = null!;

        /// <summary>
        /// Config Name.
        /// </summary>
        [Output("configName")]
        public Output<string> ConfigName { get; private set; } = null!;

        /// <summary>
        /// post command.
        /// </summary>
        [Output("configPostCmd")]
        public Output<string?> ConfigPostCmd { get; private set; } = null!;

        /// <summary>
        /// Config version.
        /// </summary>
        [Output("configVersion")]
        public Output<string> ConfigVersion { get; private set; } = null!;

        /// <summary>
        /// config version description.
        /// </summary>
        [Output("configVersionDesc")]
        public Output<string?> ConfigVersionDesc { get; private set; } = null!;

        /// <summary>
        /// the config value is encoded with base64 or not.
        /// </summary>
        [Output("encodeWithBase64")]
        public Output<bool?> EncodeWithBase64 { get; private set; } = null!;

        /// <summary>
        /// datasource for auth.
        /// </summary>
        [Output("programIdLists")]
        public Output<ImmutableArray<string>> ProgramIdLists { get; private set; } = null!;


        /// <summary>
        /// Create a ApplicationFileConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApplicationFileConfig(string name, ApplicationFileConfigArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Tsf/applicationFileConfig:ApplicationFileConfig", name, args ?? new ApplicationFileConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApplicationFileConfig(string name, Input<string> id, ApplicationFileConfigState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Tsf/applicationFileConfig:ApplicationFileConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApplicationFileConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApplicationFileConfig Get(string name, Input<string> id, ApplicationFileConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new ApplicationFileConfig(name, id, state, options);
        }
    }

    public sealed class ApplicationFileConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Config file associated application ID.
        /// </summary>
        [Input("applicationId", required: true)]
        public Input<string> ApplicationId { get; set; } = null!;

        /// <summary>
        /// Configuration file encoding, utf-8 or gbk. Note: If you choose gbk, you need the support of a new version of
        /// tsf-consul-template (public cloud virtual machines need to use 1.32 tsf-agent, and containers need to obtain the latest
        /// tsf-consul-template-docker.tar.gz from the documentation).
        /// </summary>
        [Input("configFileCode")]
        public Input<string>? ConfigFileCode { get; set; }

        /// <summary>
        /// Config file name.
        /// </summary>
        [Input("configFileName", required: true)]
        public Input<string> ConfigFileName { get; set; } = null!;

        /// <summary>
        /// config release path.
        /// </summary>
        [Input("configFilePath", required: true)]
        public Input<string> ConfigFilePath { get; set; } = null!;

        /// <summary>
        /// Configuration file content (the original content encoding needs to be in utf-8 format, if the ConfigFileCode is gbk, it
        /// will be converted in the background).
        /// </summary>
        [Input("configFileValue", required: true)]
        public Input<string> ConfigFileValue { get; set; } = null!;

        /// <summary>
        /// Config Name.
        /// </summary>
        [Input("configName", required: true)]
        public Input<string> ConfigName { get; set; } = null!;

        /// <summary>
        /// post command.
        /// </summary>
        [Input("configPostCmd")]
        public Input<string>? ConfigPostCmd { get; set; }

        /// <summary>
        /// Config version.
        /// </summary>
        [Input("configVersion", required: true)]
        public Input<string> ConfigVersion { get; set; } = null!;

        /// <summary>
        /// config version description.
        /// </summary>
        [Input("configVersionDesc")]
        public Input<string>? ConfigVersionDesc { get; set; }

        /// <summary>
        /// the config value is encoded with base64 or not.
        /// </summary>
        [Input("encodeWithBase64")]
        public Input<bool>? EncodeWithBase64 { get; set; }

        [Input("programIdLists")]
        private InputList<string>? _programIdLists;

        /// <summary>
        /// datasource for auth.
        /// </summary>
        public InputList<string> ProgramIdLists
        {
            get => _programIdLists ?? (_programIdLists = new InputList<string>());
            set => _programIdLists = value;
        }

        public ApplicationFileConfigArgs()
        {
        }
        public static new ApplicationFileConfigArgs Empty => new ApplicationFileConfigArgs();
    }

    public sealed class ApplicationFileConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Config file associated application ID.
        /// </summary>
        [Input("applicationId")]
        public Input<string>? ApplicationId { get; set; }

        /// <summary>
        /// Configuration file encoding, utf-8 or gbk. Note: If you choose gbk, you need the support of a new version of
        /// tsf-consul-template (public cloud virtual machines need to use 1.32 tsf-agent, and containers need to obtain the latest
        /// tsf-consul-template-docker.tar.gz from the documentation).
        /// </summary>
        [Input("configFileCode")]
        public Input<string>? ConfigFileCode { get; set; }

        /// <summary>
        /// Config file name.
        /// </summary>
        [Input("configFileName")]
        public Input<string>? ConfigFileName { get; set; }

        /// <summary>
        /// config release path.
        /// </summary>
        [Input("configFilePath")]
        public Input<string>? ConfigFilePath { get; set; }

        /// <summary>
        /// Configuration file content (the original content encoding needs to be in utf-8 format, if the ConfigFileCode is gbk, it
        /// will be converted in the background).
        /// </summary>
        [Input("configFileValue")]
        public Input<string>? ConfigFileValue { get; set; }

        /// <summary>
        /// Config Name.
        /// </summary>
        [Input("configName")]
        public Input<string>? ConfigName { get; set; }

        /// <summary>
        /// post command.
        /// </summary>
        [Input("configPostCmd")]
        public Input<string>? ConfigPostCmd { get; set; }

        /// <summary>
        /// Config version.
        /// </summary>
        [Input("configVersion")]
        public Input<string>? ConfigVersion { get; set; }

        /// <summary>
        /// config version description.
        /// </summary>
        [Input("configVersionDesc")]
        public Input<string>? ConfigVersionDesc { get; set; }

        /// <summary>
        /// the config value is encoded with base64 or not.
        /// </summary>
        [Input("encodeWithBase64")]
        public Input<bool>? EncodeWithBase64 { get; set; }

        [Input("programIdLists")]
        private InputList<string>? _programIdLists;

        /// <summary>
        /// datasource for auth.
        /// </summary>
        public InputList<string> ProgramIdLists
        {
            get => _programIdLists ?? (_programIdLists = new InputList<string>());
            set => _programIdLists = value;
        }

        public ApplicationFileConfigState()
        {
        }
        public static new ApplicationFileConfigState Empty => new ApplicationFileConfigState();
    }
}
