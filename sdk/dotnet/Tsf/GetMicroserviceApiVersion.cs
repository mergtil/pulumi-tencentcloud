// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Tsf
{
    public static class GetMicroserviceApiVersion
    {
        public static Task<GetMicroserviceApiVersionResult> InvokeAsync(GetMicroserviceApiVersionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMicroserviceApiVersionResult>("tencentcloud:Tsf/getMicroserviceApiVersion:getMicroserviceApiVersion", args ?? new GetMicroserviceApiVersionArgs(), options.WithDefaults());

        public static Output<GetMicroserviceApiVersionResult> Invoke(GetMicroserviceApiVersionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMicroserviceApiVersionResult>("tencentcloud:Tsf/getMicroserviceApiVersion:getMicroserviceApiVersion", args ?? new GetMicroserviceApiVersionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMicroserviceApiVersionArgs : global::Pulumi.InvokeArgs
    {
        [Input("method")]
        public string? Method { get; set; }

        [Input("microserviceId", required: true)]
        public string MicroserviceId { get; set; } = null!;

        [Input("path")]
        public string? Path { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetMicroserviceApiVersionArgs()
        {
        }
        public static new GetMicroserviceApiVersionArgs Empty => new GetMicroserviceApiVersionArgs();
    }

    public sealed class GetMicroserviceApiVersionInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("method")]
        public Input<string>? Method { get; set; }

        [Input("microserviceId", required: true)]
        public Input<string> MicroserviceId { get; set; } = null!;

        [Input("path")]
        public Input<string>? Path { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetMicroserviceApiVersionInvokeArgs()
        {
        }
        public static new GetMicroserviceApiVersionInvokeArgs Empty => new GetMicroserviceApiVersionInvokeArgs();
    }


    [OutputType]
    public sealed class GetMicroserviceApiVersionResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Method;
        public readonly string MicroserviceId;
        public readonly string? Path;
        public readonly string? ResultOutputFile;
        public readonly ImmutableArray<Outputs.GetMicroserviceApiVersionResultResult> Results;

        [OutputConstructor]
        private GetMicroserviceApiVersionResult(
            string id,

            string? method,

            string microserviceId,

            string? path,

            string? resultOutputFile,

            ImmutableArray<Outputs.GetMicroserviceApiVersionResultResult> results)
        {
            Id = id;
            Method = method;
            MicroserviceId = microserviceId;
            Path = path;
            ResultOutputFile = resultOutputFile;
            Results = results;
        }
    }
}
