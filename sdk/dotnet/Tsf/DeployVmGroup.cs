// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Tsf
{
    [TencentcloudResourceType("tencentcloud:Tsf/deployVmGroup:DeployVmGroup")]
    public partial class DeployVmGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// javaagent info: SERVICE_AGENT/OT_AGENT.
        /// </summary>
        [Output("agentProfileLists")]
        public Output<ImmutableArray<Outputs.DeployVmGroupAgentProfileList>> AgentProfileLists { get; private set; } = null!;

        /// <summary>
        /// The ratio of instances participating in each batch during rolling release.
        /// </summary>
        [Output("deployBatches")]
        public Output<ImmutableArray<double>> DeployBatches { get; private set; } = null!;

        /// <summary>
        /// Whether to enable beta batch.
        /// </summary>
        [Output("deployBetaEnable")]
        public Output<bool> DeployBetaEnable { get; private set; } = null!;

        /// <summary>
        /// group description.
        /// </summary>
        [Output("deployDesc")]
        public Output<string> DeployDesc { get; private set; } = null!;

        /// <summary>
        /// The execution method of rolling release.
        /// </summary>
        [Output("deployExeMode")]
        public Output<string> DeployExeMode { get; private set; } = null!;

        /// <summary>
        /// The time interval for each batch during rolling release.
        /// </summary>
        [Output("deployWaitTime")]
        public Output<int> DeployWaitTime { get; private set; } = null!;

        /// <summary>
        /// Whether to enable health check.
        /// </summary>
        [Output("enableHealthCheck")]
        public Output<bool> EnableHealthCheck { get; private set; } = null!;

        /// <summary>
        /// Whether to allow forced start.
        /// </summary>
        [Output("forceStart")]
        public Output<bool> ForceStart { get; private set; } = null!;

        /// <summary>
        /// group id.
        /// </summary>
        [Output("groupId")]
        public Output<string> GroupId { get; private set; } = null!;

        /// <summary>
        /// When enabling health check, configure the health check settings.
        /// </summary>
        [Output("healthCheckSettings")]
        public Output<Outputs.DeployVmGroupHealthCheckSettings> HealthCheckSettings { get; private set; } = null!;

        /// <summary>
        /// Whether to perform incremental deployment. The default value is false, which means full update.
        /// </summary>
        [Output("incrementalDeployment")]
        public Output<bool> IncrementalDeployment { get; private set; } = null!;

        /// <summary>
        /// JDK name: konaJDK or openJDK.
        /// </summary>
        [Output("jdkName")]
        public Output<string> JdkName { get; private set; } = null!;

        /// <summary>
        /// JDK version: 8 or 11(openJDK only support 8).
        /// </summary>
        [Output("jdkVersion")]
        public Output<string> JdkVersion { get; private set; } = null!;

        /// <summary>
        /// program package ID.
        /// </summary>
        [Output("pkgId")]
        public Output<string> PkgId { get; private set; } = null!;

        /// <summary>
        /// The base64-encoded startup script.
        /// </summary>
        [Output("startScript")]
        public Output<string> StartScript { get; private set; } = null!;

        /// <summary>
        /// start args of group.
        /// </summary>
        [Output("startupParameters")]
        public Output<string> StartupParameters { get; private set; } = null!;

        /// <summary>
        /// The base64-encoded stop script.
        /// </summary>
        [Output("stopScript")]
        public Output<string> StopScript { get; private set; } = null!;

        /// <summary>
        /// Update method: 0 for fast update, 1 for rolling update.
        /// </summary>
        [Output("updateType")]
        public Output<int> UpdateType { get; private set; } = null!;

        /// <summary>
        /// warmup setting.
        /// </summary>
        [Output("warmupSetting")]
        public Output<Outputs.DeployVmGroupWarmupSetting> WarmupSetting { get; private set; } = null!;


        /// <summary>
        /// Create a DeployVmGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DeployVmGroup(string name, DeployVmGroupArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Tsf/deployVmGroup:DeployVmGroup", name, args ?? new DeployVmGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DeployVmGroup(string name, Input<string> id, DeployVmGroupState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Tsf/deployVmGroup:DeployVmGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DeployVmGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DeployVmGroup Get(string name, Input<string> id, DeployVmGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new DeployVmGroup(name, id, state, options);
        }
    }

    public sealed class DeployVmGroupArgs : global::Pulumi.ResourceArgs
    {
        [Input("agentProfileLists")]
        private InputList<Inputs.DeployVmGroupAgentProfileListArgs>? _agentProfileLists;

        /// <summary>
        /// javaagent info: SERVICE_AGENT/OT_AGENT.
        /// </summary>
        public InputList<Inputs.DeployVmGroupAgentProfileListArgs> AgentProfileLists
        {
            get => _agentProfileLists ?? (_agentProfileLists = new InputList<Inputs.DeployVmGroupAgentProfileListArgs>());
            set => _agentProfileLists = value;
        }

        [Input("deployBatches")]
        private InputList<double>? _deployBatches;

        /// <summary>
        /// The ratio of instances participating in each batch during rolling release.
        /// </summary>
        public InputList<double> DeployBatches
        {
            get => _deployBatches ?? (_deployBatches = new InputList<double>());
            set => _deployBatches = value;
        }

        /// <summary>
        /// Whether to enable beta batch.
        /// </summary>
        [Input("deployBetaEnable")]
        public Input<bool>? DeployBetaEnable { get; set; }

        /// <summary>
        /// group description.
        /// </summary>
        [Input("deployDesc")]
        public Input<string>? DeployDesc { get; set; }

        /// <summary>
        /// The execution method of rolling release.
        /// </summary>
        [Input("deployExeMode")]
        public Input<string>? DeployExeMode { get; set; }

        /// <summary>
        /// The time interval for each batch during rolling release.
        /// </summary>
        [Input("deployWaitTime")]
        public Input<int>? DeployWaitTime { get; set; }

        /// <summary>
        /// Whether to enable health check.
        /// </summary>
        [Input("enableHealthCheck")]
        public Input<bool>? EnableHealthCheck { get; set; }

        /// <summary>
        /// Whether to allow forced start.
        /// </summary>
        [Input("forceStart")]
        public Input<bool>? ForceStart { get; set; }

        /// <summary>
        /// group id.
        /// </summary>
        [Input("groupId", required: true)]
        public Input<string> GroupId { get; set; } = null!;

        /// <summary>
        /// When enabling health check, configure the health check settings.
        /// </summary>
        [Input("healthCheckSettings")]
        public Input<Inputs.DeployVmGroupHealthCheckSettingsArgs>? HealthCheckSettings { get; set; }

        /// <summary>
        /// Whether to perform incremental deployment. The default value is false, which means full update.
        /// </summary>
        [Input("incrementalDeployment")]
        public Input<bool>? IncrementalDeployment { get; set; }

        /// <summary>
        /// JDK name: konaJDK or openJDK.
        /// </summary>
        [Input("jdkName")]
        public Input<string>? JdkName { get; set; }

        /// <summary>
        /// JDK version: 8 or 11(openJDK only support 8).
        /// </summary>
        [Input("jdkVersion")]
        public Input<string>? JdkVersion { get; set; }

        /// <summary>
        /// program package ID.
        /// </summary>
        [Input("pkgId", required: true)]
        public Input<string> PkgId { get; set; } = null!;

        /// <summary>
        /// The base64-encoded startup script.
        /// </summary>
        [Input("startScript")]
        public Input<string>? StartScript { get; set; }

        /// <summary>
        /// start args of group.
        /// </summary>
        [Input("startupParameters")]
        public Input<string>? StartupParameters { get; set; }

        /// <summary>
        /// The base64-encoded stop script.
        /// </summary>
        [Input("stopScript")]
        public Input<string>? StopScript { get; set; }

        /// <summary>
        /// Update method: 0 for fast update, 1 for rolling update.
        /// </summary>
        [Input("updateType")]
        public Input<int>? UpdateType { get; set; }

        /// <summary>
        /// warmup setting.
        /// </summary>
        [Input("warmupSetting")]
        public Input<Inputs.DeployVmGroupWarmupSettingArgs>? WarmupSetting { get; set; }

        public DeployVmGroupArgs()
        {
        }
        public static new DeployVmGroupArgs Empty => new DeployVmGroupArgs();
    }

    public sealed class DeployVmGroupState : global::Pulumi.ResourceArgs
    {
        [Input("agentProfileLists")]
        private InputList<Inputs.DeployVmGroupAgentProfileListGetArgs>? _agentProfileLists;

        /// <summary>
        /// javaagent info: SERVICE_AGENT/OT_AGENT.
        /// </summary>
        public InputList<Inputs.DeployVmGroupAgentProfileListGetArgs> AgentProfileLists
        {
            get => _agentProfileLists ?? (_agentProfileLists = new InputList<Inputs.DeployVmGroupAgentProfileListGetArgs>());
            set => _agentProfileLists = value;
        }

        [Input("deployBatches")]
        private InputList<double>? _deployBatches;

        /// <summary>
        /// The ratio of instances participating in each batch during rolling release.
        /// </summary>
        public InputList<double> DeployBatches
        {
            get => _deployBatches ?? (_deployBatches = new InputList<double>());
            set => _deployBatches = value;
        }

        /// <summary>
        /// Whether to enable beta batch.
        /// </summary>
        [Input("deployBetaEnable")]
        public Input<bool>? DeployBetaEnable { get; set; }

        /// <summary>
        /// group description.
        /// </summary>
        [Input("deployDesc")]
        public Input<string>? DeployDesc { get; set; }

        /// <summary>
        /// The execution method of rolling release.
        /// </summary>
        [Input("deployExeMode")]
        public Input<string>? DeployExeMode { get; set; }

        /// <summary>
        /// The time interval for each batch during rolling release.
        /// </summary>
        [Input("deployWaitTime")]
        public Input<int>? DeployWaitTime { get; set; }

        /// <summary>
        /// Whether to enable health check.
        /// </summary>
        [Input("enableHealthCheck")]
        public Input<bool>? EnableHealthCheck { get; set; }

        /// <summary>
        /// Whether to allow forced start.
        /// </summary>
        [Input("forceStart")]
        public Input<bool>? ForceStart { get; set; }

        /// <summary>
        /// group id.
        /// </summary>
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        /// <summary>
        /// When enabling health check, configure the health check settings.
        /// </summary>
        [Input("healthCheckSettings")]
        public Input<Inputs.DeployVmGroupHealthCheckSettingsGetArgs>? HealthCheckSettings { get; set; }

        /// <summary>
        /// Whether to perform incremental deployment. The default value is false, which means full update.
        /// </summary>
        [Input("incrementalDeployment")]
        public Input<bool>? IncrementalDeployment { get; set; }

        /// <summary>
        /// JDK name: konaJDK or openJDK.
        /// </summary>
        [Input("jdkName")]
        public Input<string>? JdkName { get; set; }

        /// <summary>
        /// JDK version: 8 or 11(openJDK only support 8).
        /// </summary>
        [Input("jdkVersion")]
        public Input<string>? JdkVersion { get; set; }

        /// <summary>
        /// program package ID.
        /// </summary>
        [Input("pkgId")]
        public Input<string>? PkgId { get; set; }

        /// <summary>
        /// The base64-encoded startup script.
        /// </summary>
        [Input("startScript")]
        public Input<string>? StartScript { get; set; }

        /// <summary>
        /// start args of group.
        /// </summary>
        [Input("startupParameters")]
        public Input<string>? StartupParameters { get; set; }

        /// <summary>
        /// The base64-encoded stop script.
        /// </summary>
        [Input("stopScript")]
        public Input<string>? StopScript { get; set; }

        /// <summary>
        /// Update method: 0 for fast update, 1 for rolling update.
        /// </summary>
        [Input("updateType")]
        public Input<int>? UpdateType { get; set; }

        /// <summary>
        /// warmup setting.
        /// </summary>
        [Input("warmupSetting")]
        public Input<Inputs.DeployVmGroupWarmupSettingGetArgs>? WarmupSetting { get; set; }

        public DeployVmGroupState()
        {
        }
        public static new DeployVmGroupState Empty => new DeployVmGroupState();
    }
}
