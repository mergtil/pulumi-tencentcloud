// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Tsf
{
    [TencentcloudResourceType("tencentcloud:Tsf/unitRule:UnitRule")]
    public partial class UnitRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// rule description.
        /// </summary>
        [Output("description")]
        public Output<string> Description { get; private set; } = null!;

        /// <summary>
        /// gateway entity ID.
        /// </summary>
        [Output("gatewayInstanceId")]
        public Output<string> GatewayInstanceId { get; private set; } = null!;

        /// <summary>
        /// rule name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// rule ID.
        /// </summary>
        [Output("ruleId")]
        public Output<string> RuleId { get; private set; } = null!;

        /// <summary>
        /// usage status: enabled/disabled.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// list of rule items.
        /// </summary>
        [Output("unitRuleItemLists")]
        public Output<ImmutableArray<Outputs.UnitRuleUnitRuleItemList>> UnitRuleItemLists { get; private set; } = null!;


        /// <summary>
        /// Create a UnitRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UnitRule(string name, UnitRuleArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Tsf/unitRule:UnitRule", name, args ?? new UnitRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private UnitRule(string name, Input<string> id, UnitRuleState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Tsf/unitRule:UnitRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UnitRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UnitRule Get(string name, Input<string> id, UnitRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new UnitRule(name, id, state, options);
        }
    }

    public sealed class UnitRuleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// rule description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// gateway entity ID.
        /// </summary>
        [Input("gatewayInstanceId", required: true)]
        public Input<string> GatewayInstanceId { get; set; } = null!;

        /// <summary>
        /// rule name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("unitRuleItemLists")]
        private InputList<Inputs.UnitRuleUnitRuleItemListArgs>? _unitRuleItemLists;

        /// <summary>
        /// list of rule items.
        /// </summary>
        public InputList<Inputs.UnitRuleUnitRuleItemListArgs> UnitRuleItemLists
        {
            get => _unitRuleItemLists ?? (_unitRuleItemLists = new InputList<Inputs.UnitRuleUnitRuleItemListArgs>());
            set => _unitRuleItemLists = value;
        }

        public UnitRuleArgs()
        {
        }
        public static new UnitRuleArgs Empty => new UnitRuleArgs();
    }

    public sealed class UnitRuleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// rule description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// gateway entity ID.
        /// </summary>
        [Input("gatewayInstanceId")]
        public Input<string>? GatewayInstanceId { get; set; }

        /// <summary>
        /// rule name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// rule ID.
        /// </summary>
        [Input("ruleId")]
        public Input<string>? RuleId { get; set; }

        /// <summary>
        /// usage status: enabled/disabled.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("unitRuleItemLists")]
        private InputList<Inputs.UnitRuleUnitRuleItemListGetArgs>? _unitRuleItemLists;

        /// <summary>
        /// list of rule items.
        /// </summary>
        public InputList<Inputs.UnitRuleUnitRuleItemListGetArgs> UnitRuleItemLists
        {
            get => _unitRuleItemLists ?? (_unitRuleItemLists = new InputList<Inputs.UnitRuleUnitRuleItemListGetArgs>());
            set => _unitRuleItemLists = value;
        }

        public UnitRuleState()
        {
        }
        public static new UnitRuleState Empty => new UnitRuleState();
    }
}
