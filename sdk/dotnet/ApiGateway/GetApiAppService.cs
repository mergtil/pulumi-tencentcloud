// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.ApiGateway
{
    public static class GetApiAppService
    {
        public static Task<GetApiAppServiceResult> InvokeAsync(GetApiAppServiceArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetApiAppServiceResult>("tencentcloud:ApiGateway/getApiAppService:getApiAppService", args ?? new GetApiAppServiceArgs(), options.WithDefaults());

        public static Output<GetApiAppServiceResult> Invoke(GetApiAppServiceInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetApiAppServiceResult>("tencentcloud:ApiGateway/getApiAppService:getApiAppService", args ?? new GetApiAppServiceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetApiAppServiceArgs : global::Pulumi.InvokeArgs
    {
        [Input("apiRegion", required: true)]
        public string ApiRegion { get; set; } = null!;

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("serviceId", required: true)]
        public string ServiceId { get; set; } = null!;

        public GetApiAppServiceArgs()
        {
        }
        public static new GetApiAppServiceArgs Empty => new GetApiAppServiceArgs();
    }

    public sealed class GetApiAppServiceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("apiRegion", required: true)]
        public Input<string> ApiRegion { get; set; } = null!;

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("serviceId", required: true)]
        public Input<string> ServiceId { get; set; } = null!;

        public GetApiAppServiceInvokeArgs()
        {
        }
        public static new GetApiAppServiceInvokeArgs Empty => new GetApiAppServiceInvokeArgs();
    }


    [OutputType]
    public sealed class GetApiAppServiceResult
    {
        public readonly ImmutableArray<Outputs.GetApiAppServiceApiIdStatusSetResult> ApiIdStatusSets;
        public readonly string ApiRegion;
        public readonly int ApiTotalCount;
        public readonly ImmutableArray<string> AvailableEnvironments;
        public readonly string CreatedTime;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int InnerHttpPort;
        public readonly int InnerHttpsPort;
        public readonly string InternalSubDomain;
        public readonly string IpVersion;
        public readonly string ModifiedTime;
        public readonly ImmutableArray<string> NetTypes;
        public readonly string OuterSubDomain;
        public readonly string Protocol;
        public readonly string? ResultOutputFile;
        public readonly string ServiceDesc;
        public readonly string ServiceId;
        public readonly string ServiceName;
        public readonly int SetId;
        public readonly ImmutableArray<Outputs.GetApiAppServiceUsagePlanListResult> UsagePlanLists;
        public readonly int UsagePlanTotalCount;
        public readonly string UserType;

        [OutputConstructor]
        private GetApiAppServiceResult(
            ImmutableArray<Outputs.GetApiAppServiceApiIdStatusSetResult> apiIdStatusSets,

            string apiRegion,

            int apiTotalCount,

            ImmutableArray<string> availableEnvironments,

            string createdTime,

            string id,

            int innerHttpPort,

            int innerHttpsPort,

            string internalSubDomain,

            string ipVersion,

            string modifiedTime,

            ImmutableArray<string> netTypes,

            string outerSubDomain,

            string protocol,

            string? resultOutputFile,

            string serviceDesc,

            string serviceId,

            string serviceName,

            int setId,

            ImmutableArray<Outputs.GetApiAppServiceUsagePlanListResult> usagePlanLists,

            int usagePlanTotalCount,

            string userType)
        {
            ApiIdStatusSets = apiIdStatusSets;
            ApiRegion = apiRegion;
            ApiTotalCount = apiTotalCount;
            AvailableEnvironments = availableEnvironments;
            CreatedTime = createdTime;
            Id = id;
            InnerHttpPort = innerHttpPort;
            InnerHttpsPort = innerHttpsPort;
            InternalSubDomain = internalSubDomain;
            IpVersion = ipVersion;
            ModifiedTime = modifiedTime;
            NetTypes = netTypes;
            OuterSubDomain = outerSubDomain;
            Protocol = protocol;
            ResultOutputFile = resultOutputFile;
            ServiceDesc = serviceDesc;
            ServiceId = serviceId;
            ServiceName = serviceName;
            SetId = setId;
            UsagePlanLists = usagePlanLists;
            UsagePlanTotalCount = usagePlanTotalCount;
            UserType = userType;
        }
    }
}
