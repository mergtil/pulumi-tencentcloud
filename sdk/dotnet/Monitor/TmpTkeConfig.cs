// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Monitor
{
    [TencentcloudResourceType("tencentcloud:Monitor/tmpTkeConfig:TmpTkeConfig")]
    public partial class TmpTkeConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ID of cluster.
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// Type of cluster.
        /// </summary>
        [Output("clusterType")]
        public Output<string> ClusterType { get; private set; } = null!;

        /// <summary>
        /// Global configuration.
        /// </summary>
        [Output("config")]
        public Output<string> Config { get; private set; } = null!;

        /// <summary>
        /// ID of instance.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// Configuration of the pod monitors.
        /// </summary>
        [Output("podMonitors")]
        public Output<ImmutableArray<Outputs.TmpTkeConfigPodMonitor>> PodMonitors { get; private set; } = null!;

        /// <summary>
        /// Configuration of the native prometheus job.
        /// </summary>
        [Output("rawJobs")]
        public Output<ImmutableArray<Outputs.TmpTkeConfigRawJob>> RawJobs { get; private set; } = null!;

        /// <summary>
        /// Configuration of the service monitors.
        /// </summary>
        [Output("serviceMonitors")]
        public Output<ImmutableArray<Outputs.TmpTkeConfigServiceMonitor>> ServiceMonitors { get; private set; } = null!;


        /// <summary>
        /// Create a TmpTkeConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TmpTkeConfig(string name, TmpTkeConfigArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Monitor/tmpTkeConfig:TmpTkeConfig", name, args ?? new TmpTkeConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TmpTkeConfig(string name, Input<string> id, TmpTkeConfigState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Monitor/tmpTkeConfig:TmpTkeConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TmpTkeConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TmpTkeConfig Get(string name, Input<string> id, TmpTkeConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new TmpTkeConfig(name, id, state, options);
        }
    }

    public sealed class TmpTkeConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// Type of cluster.
        /// </summary>
        [Input("clusterType", required: true)]
        public Input<string> ClusterType { get; set; } = null!;

        /// <summary>
        /// ID of instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("podMonitors")]
        private InputList<Inputs.TmpTkeConfigPodMonitorArgs>? _podMonitors;

        /// <summary>
        /// Configuration of the pod monitors.
        /// </summary>
        public InputList<Inputs.TmpTkeConfigPodMonitorArgs> PodMonitors
        {
            get => _podMonitors ?? (_podMonitors = new InputList<Inputs.TmpTkeConfigPodMonitorArgs>());
            set => _podMonitors = value;
        }

        [Input("rawJobs")]
        private InputList<Inputs.TmpTkeConfigRawJobArgs>? _rawJobs;

        /// <summary>
        /// Configuration of the native prometheus job.
        /// </summary>
        public InputList<Inputs.TmpTkeConfigRawJobArgs> RawJobs
        {
            get => _rawJobs ?? (_rawJobs = new InputList<Inputs.TmpTkeConfigRawJobArgs>());
            set => _rawJobs = value;
        }

        [Input("serviceMonitors")]
        private InputList<Inputs.TmpTkeConfigServiceMonitorArgs>? _serviceMonitors;

        /// <summary>
        /// Configuration of the service monitors.
        /// </summary>
        public InputList<Inputs.TmpTkeConfigServiceMonitorArgs> ServiceMonitors
        {
            get => _serviceMonitors ?? (_serviceMonitors = new InputList<Inputs.TmpTkeConfigServiceMonitorArgs>());
            set => _serviceMonitors = value;
        }

        public TmpTkeConfigArgs()
        {
        }
        public static new TmpTkeConfigArgs Empty => new TmpTkeConfigArgs();
    }

    public sealed class TmpTkeConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of cluster.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// Type of cluster.
        /// </summary>
        [Input("clusterType")]
        public Input<string>? ClusterType { get; set; }

        /// <summary>
        /// Global configuration.
        /// </summary>
        [Input("config")]
        public Input<string>? Config { get; set; }

        /// <summary>
        /// ID of instance.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        [Input("podMonitors")]
        private InputList<Inputs.TmpTkeConfigPodMonitorGetArgs>? _podMonitors;

        /// <summary>
        /// Configuration of the pod monitors.
        /// </summary>
        public InputList<Inputs.TmpTkeConfigPodMonitorGetArgs> PodMonitors
        {
            get => _podMonitors ?? (_podMonitors = new InputList<Inputs.TmpTkeConfigPodMonitorGetArgs>());
            set => _podMonitors = value;
        }

        [Input("rawJobs")]
        private InputList<Inputs.TmpTkeConfigRawJobGetArgs>? _rawJobs;

        /// <summary>
        /// Configuration of the native prometheus job.
        /// </summary>
        public InputList<Inputs.TmpTkeConfigRawJobGetArgs> RawJobs
        {
            get => _rawJobs ?? (_rawJobs = new InputList<Inputs.TmpTkeConfigRawJobGetArgs>());
            set => _rawJobs = value;
        }

        [Input("serviceMonitors")]
        private InputList<Inputs.TmpTkeConfigServiceMonitorGetArgs>? _serviceMonitors;

        /// <summary>
        /// Configuration of the service monitors.
        /// </summary>
        public InputList<Inputs.TmpTkeConfigServiceMonitorGetArgs> ServiceMonitors
        {
            get => _serviceMonitors ?? (_serviceMonitors = new InputList<Inputs.TmpTkeConfigServiceMonitorGetArgs>());
            set => _serviceMonitors = value;
        }

        public TmpTkeConfigState()
        {
        }
        public static new TmpTkeConfigState Empty => new TmpTkeConfigState();
    }
}
