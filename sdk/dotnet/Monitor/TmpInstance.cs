// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Monitor
{
    [TencentcloudResourceType("tencentcloud:Monitor/tmpInstance:TmpInstance")]
    public partial class TmpInstance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Prometheus HTTP API root address.
        /// </summary>
        [Output("apiRootPath")]
        public Output<string> ApiRootPath { get; private set; } = null!;

        /// <summary>
        /// Data retention time.
        /// </summary>
        [Output("dataRetentionTime")]
        public Output<int> DataRetentionTime { get; private set; } = null!;

        /// <summary>
        /// Instance name.
        /// </summary>
        [Output("instanceName")]
        public Output<string> InstanceName { get; private set; } = null!;

        /// <summary>
        /// Instance IPv4 address.
        /// </summary>
        [Output("ipv4Address")]
        public Output<string> Ipv4Address { get; private set; } = null!;

        /// <summary>
        /// Proxy address.
        /// </summary>
        [Output("proxyAddress")]
        public Output<string> ProxyAddress { get; private set; } = null!;

        /// <summary>
        /// Prometheus remote write address.
        /// </summary>
        [Output("remoteWrite")]
        public Output<string> RemoteWrite { get; private set; } = null!;

        /// <summary>
        /// Subnet Id.
        /// </summary>
        [Output("subnetId")]
        public Output<string> SubnetId { get; private set; } = null!;

        /// <summary>
        /// Tag description list.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Vpc Id.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;

        /// <summary>
        /// Available zone.
        /// </summary>
        [Output("zone")]
        public Output<string> Zone { get; private set; } = null!;


        /// <summary>
        /// Create a TmpInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public TmpInstance(string name, TmpInstanceArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Monitor/tmpInstance:TmpInstance", name, args ?? new TmpInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private TmpInstance(string name, Input<string> id, TmpInstanceState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Monitor/tmpInstance:TmpInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing TmpInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static TmpInstance Get(string name, Input<string> id, TmpInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new TmpInstance(name, id, state, options);
        }
    }

    public sealed class TmpInstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Data retention time.
        /// </summary>
        [Input("dataRetentionTime", required: true)]
        public Input<int> DataRetentionTime { get; set; } = null!;

        /// <summary>
        /// Instance name.
        /// </summary>
        [Input("instanceName", required: true)]
        public Input<string> InstanceName { get; set; } = null!;

        /// <summary>
        /// Subnet Id.
        /// </summary>
        [Input("subnetId", required: true)]
        public Input<string> SubnetId { get; set; } = null!;

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Tag description list.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// Vpc Id.
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        /// <summary>
        /// Available zone.
        /// </summary>
        [Input("zone", required: true)]
        public Input<string> Zone { get; set; } = null!;

        public TmpInstanceArgs()
        {
        }
        public static new TmpInstanceArgs Empty => new TmpInstanceArgs();
    }

    public sealed class TmpInstanceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Prometheus HTTP API root address.
        /// </summary>
        [Input("apiRootPath")]
        public Input<string>? ApiRootPath { get; set; }

        /// <summary>
        /// Data retention time.
        /// </summary>
        [Input("dataRetentionTime")]
        public Input<int>? DataRetentionTime { get; set; }

        /// <summary>
        /// Instance name.
        /// </summary>
        [Input("instanceName")]
        public Input<string>? InstanceName { get; set; }

        /// <summary>
        /// Instance IPv4 address.
        /// </summary>
        [Input("ipv4Address")]
        public Input<string>? Ipv4Address { get; set; }

        /// <summary>
        /// Proxy address.
        /// </summary>
        [Input("proxyAddress")]
        public Input<string>? ProxyAddress { get; set; }

        /// <summary>
        /// Prometheus remote write address.
        /// </summary>
        [Input("remoteWrite")]
        public Input<string>? RemoteWrite { get; set; }

        /// <summary>
        /// Subnet Id.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Tag description list.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// Vpc Id.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        /// <summary>
        /// Available zone.
        /// </summary>
        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public TmpInstanceState()
        {
        }
        public static new TmpInstanceState Empty => new TmpInstanceState();
    }
}
