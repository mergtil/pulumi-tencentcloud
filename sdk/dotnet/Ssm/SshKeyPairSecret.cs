// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Ssm
{
    [TencentcloudResourceType("tencentcloud:Ssm/sshKeyPairSecret:SshKeyPairSecret")]
    public partial class SshKeyPairSecret : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies whether to delete the SSH key from both the secret and the SSH key list in the CVM console. This field is only
        /// take effect when delete SSH key secrets. Valid values: `True`: deletes SSH key from both the secret and SSH key list in
        /// the CVM console. Note that the deletion will fail if the SSH key is already bound to a CVM instance.`False`: only
        /// deletes the SSH key information in the secret.
        /// </summary>
        [Output("cleanSshKey")]
        public Output<bool?> CleanSshKey { get; private set; } = null!;

        /// <summary>
        /// Credential creation time in UNIX timestamp format.
        /// </summary>
        [Output("createTime")]
        public Output<int> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Description, such as what it is used for. It contains up to 2,048 bytes.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Specifies a KMS CMK to encrypt the secret.If this parameter is left empty, the CMK created by Secrets Manager by default
        /// will be used for encryption.You can also specify a custom KMS CMK created in the same region for encryption.
        /// </summary>
        [Output("kmsKeyId")]
        public Output<string?> KmsKeyId { get; private set; } = null!;

        /// <summary>
        /// ID of the project to which the created SSH key belongs.
        /// </summary>
        [Output("projectId")]
        public Output<int> ProjectId { get; private set; } = null!;

        /// <summary>
        /// Secret name, which must be unique in the same region. It can contain 128 bytes of letters, digits, hyphens and
        /// underscores and must begin with a letter or digit.
        /// </summary>
        [Output("secretName")]
        public Output<string> SecretName { get; private set; } = null!;

        /// <summary>
        /// `0`: user-defined secret. `1`: Tencent Cloud services secret. `2`: SSH key secret. `3`: Tencent Cloud API key secret.
        /// Note: this field may return `null`, indicating that no valid values can be obtained.
        /// </summary>
        [Output("secretType")]
        public Output<int> SecretType { get; private set; } = null!;

        /// <summary>
        /// Name of the SSH key pair, which only contains digits, letters and underscores and must start with a digit or letter. The
        /// maximum length is 25 characters.
        /// </summary>
        [Output("sshKeyName")]
        public Output<string?> SshKeyName { get; private set; } = null!;

        /// <summary>
        /// Enable or Disable Secret. Valid values is `Enabled` or `Disabled`. Default is `Enabled`.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Tags of secret.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a SshKeyPairSecret resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SshKeyPairSecret(string name, SshKeyPairSecretArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Ssm/sshKeyPairSecret:SshKeyPairSecret", name, args ?? new SshKeyPairSecretArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SshKeyPairSecret(string name, Input<string> id, SshKeyPairSecretState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Ssm/sshKeyPairSecret:SshKeyPairSecret", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SshKeyPairSecret resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SshKeyPairSecret Get(string name, Input<string> id, SshKeyPairSecretState? state = null, CustomResourceOptions? options = null)
        {
            return new SshKeyPairSecret(name, id, state, options);
        }
    }

    public sealed class SshKeyPairSecretArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether to delete the SSH key from both the secret and the SSH key list in the CVM console. This field is only
        /// take effect when delete SSH key secrets. Valid values: `True`: deletes SSH key from both the secret and SSH key list in
        /// the CVM console. Note that the deletion will fail if the SSH key is already bound to a CVM instance.`False`: only
        /// deletes the SSH key information in the secret.
        /// </summary>
        [Input("cleanSshKey")]
        public Input<bool>? CleanSshKey { get; set; }

        /// <summary>
        /// Description, such as what it is used for. It contains up to 2,048 bytes.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Specifies a KMS CMK to encrypt the secret.If this parameter is left empty, the CMK created by Secrets Manager by default
        /// will be used for encryption.You can also specify a custom KMS CMK created in the same region for encryption.
        /// </summary>
        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        /// <summary>
        /// ID of the project to which the created SSH key belongs.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<int> ProjectId { get; set; } = null!;

        /// <summary>
        /// Secret name, which must be unique in the same region. It can contain 128 bytes of letters, digits, hyphens and
        /// underscores and must begin with a letter or digit.
        /// </summary>
        [Input("secretName", required: true)]
        public Input<string> SecretName { get; set; } = null!;

        /// <summary>
        /// Name of the SSH key pair, which only contains digits, letters and underscores and must start with a digit or letter. The
        /// maximum length is 25 characters.
        /// </summary>
        [Input("sshKeyName")]
        public Input<string>? SshKeyName { get; set; }

        /// <summary>
        /// Enable or Disable Secret. Valid values is `Enabled` or `Disabled`. Default is `Enabled`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Tags of secret.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public SshKeyPairSecretArgs()
        {
        }
        public static new SshKeyPairSecretArgs Empty => new SshKeyPairSecretArgs();
    }

    public sealed class SshKeyPairSecretState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies whether to delete the SSH key from both the secret and the SSH key list in the CVM console. This field is only
        /// take effect when delete SSH key secrets. Valid values: `True`: deletes SSH key from both the secret and SSH key list in
        /// the CVM console. Note that the deletion will fail if the SSH key is already bound to a CVM instance.`False`: only
        /// deletes the SSH key information in the secret.
        /// </summary>
        [Input("cleanSshKey")]
        public Input<bool>? CleanSshKey { get; set; }

        /// <summary>
        /// Credential creation time in UNIX timestamp format.
        /// </summary>
        [Input("createTime")]
        public Input<int>? CreateTime { get; set; }

        /// <summary>
        /// Description, such as what it is used for. It contains up to 2,048 bytes.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Specifies a KMS CMK to encrypt the secret.If this parameter is left empty, the CMK created by Secrets Manager by default
        /// will be used for encryption.You can also specify a custom KMS CMK created in the same region for encryption.
        /// </summary>
        [Input("kmsKeyId")]
        public Input<string>? KmsKeyId { get; set; }

        /// <summary>
        /// ID of the project to which the created SSH key belongs.
        /// </summary>
        [Input("projectId")]
        public Input<int>? ProjectId { get; set; }

        /// <summary>
        /// Secret name, which must be unique in the same region. It can contain 128 bytes of letters, digits, hyphens and
        /// underscores and must begin with a letter or digit.
        /// </summary>
        [Input("secretName")]
        public Input<string>? SecretName { get; set; }

        /// <summary>
        /// `0`: user-defined secret. `1`: Tencent Cloud services secret. `2`: SSH key secret. `3`: Tencent Cloud API key secret.
        /// Note: this field may return `null`, indicating that no valid values can be obtained.
        /// </summary>
        [Input("secretType")]
        public Input<int>? SecretType { get; set; }

        /// <summary>
        /// Name of the SSH key pair, which only contains digits, letters and underscores and must start with a digit or letter. The
        /// maximum length is 25 characters.
        /// </summary>
        [Input("sshKeyName")]
        public Input<string>? SshKeyName { get; set; }

        /// <summary>
        /// Enable or Disable Secret. Valid values is `Enabled` or `Disabled`. Default is `Enabled`.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Tags of secret.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public SshKeyPairSecretState()
        {
        }
        public static new SshKeyPairSecretState Empty => new SshKeyPairSecretState();
    }
}
