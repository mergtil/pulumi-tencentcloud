// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Postgresql
{
    public static class GetBaseBackups
    {
        public static Task<GetBaseBackupsResult> InvokeAsync(GetBaseBackupsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetBaseBackupsResult>("tencentcloud:Postgresql/getBaseBackups:getBaseBackups", args ?? new GetBaseBackupsArgs(), options.WithDefaults());

        public static Output<GetBaseBackupsResult> Invoke(GetBaseBackupsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetBaseBackupsResult>("tencentcloud:Postgresql/getBaseBackups:getBaseBackups", args ?? new GetBaseBackupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetBaseBackupsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetBaseBackupsFilterArgs>? _filters;
        public List<Inputs.GetBaseBackupsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetBaseBackupsFilterArgs>());
            set => _filters = value;
        }

        [Input("maxFinishTime")]
        public string? MaxFinishTime { get; set; }

        [Input("minFinishTime")]
        public string? MinFinishTime { get; set; }

        [Input("orderBy")]
        public string? OrderBy { get; set; }

        [Input("orderByType")]
        public string? OrderByType { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetBaseBackupsArgs()
        {
        }
        public static new GetBaseBackupsArgs Empty => new GetBaseBackupsArgs();
    }

    public sealed class GetBaseBackupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetBaseBackupsFilterInputArgs>? _filters;
        public InputList<Inputs.GetBaseBackupsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetBaseBackupsFilterInputArgs>());
            set => _filters = value;
        }

        [Input("maxFinishTime")]
        public Input<string>? MaxFinishTime { get; set; }

        [Input("minFinishTime")]
        public Input<string>? MinFinishTime { get; set; }

        [Input("orderBy")]
        public Input<string>? OrderBy { get; set; }

        [Input("orderByType")]
        public Input<string>? OrderByType { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetBaseBackupsInvokeArgs()
        {
        }
        public static new GetBaseBackupsInvokeArgs Empty => new GetBaseBackupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetBaseBackupsResult
    {
        public readonly ImmutableArray<Outputs.GetBaseBackupsBaseBackupSetResult> BaseBackupSets;
        public readonly ImmutableArray<Outputs.GetBaseBackupsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? MaxFinishTime;
        public readonly string? MinFinishTime;
        public readonly string? OrderBy;
        public readonly string? OrderByType;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetBaseBackupsResult(
            ImmutableArray<Outputs.GetBaseBackupsBaseBackupSetResult> baseBackupSets,

            ImmutableArray<Outputs.GetBaseBackupsFilterResult> filters,

            string id,

            string? maxFinishTime,

            string? minFinishTime,

            string? orderBy,

            string? orderByType,

            string? resultOutputFile)
        {
            BaseBackupSets = baseBackupSets;
            Filters = filters;
            Id = id;
            MaxFinishTime = maxFinishTime;
            MinFinishTime = minFinishTime;
            OrderBy = orderBy;
            OrderByType = orderByType;
            ResultOutputFile = resultOutputFile;
        }
    }
}
