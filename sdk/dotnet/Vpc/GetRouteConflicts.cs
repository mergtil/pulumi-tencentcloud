// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Vpc
{
    public static class GetRouteConflicts
    {
        public static Task<GetRouteConflictsResult> InvokeAsync(GetRouteConflictsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRouteConflictsResult>("tencentcloud:Vpc/getRouteConflicts:getRouteConflicts", args ?? new GetRouteConflictsArgs(), options.WithDefaults());

        public static Output<GetRouteConflictsResult> Invoke(GetRouteConflictsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRouteConflictsResult>("tencentcloud:Vpc/getRouteConflicts:getRouteConflicts", args ?? new GetRouteConflictsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRouteConflictsArgs : global::Pulumi.InvokeArgs
    {
        [Input("destinationCidrBlocks", required: true)]
        private List<string>? _destinationCidrBlocks;
        public List<string> DestinationCidrBlocks
        {
            get => _destinationCidrBlocks ?? (_destinationCidrBlocks = new List<string>());
            set => _destinationCidrBlocks = value;
        }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("routeTableId", required: true)]
        public string RouteTableId { get; set; } = null!;

        public GetRouteConflictsArgs()
        {
        }
        public static new GetRouteConflictsArgs Empty => new GetRouteConflictsArgs();
    }

    public sealed class GetRouteConflictsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("destinationCidrBlocks", required: true)]
        private InputList<string>? _destinationCidrBlocks;
        public InputList<string> DestinationCidrBlocks
        {
            get => _destinationCidrBlocks ?? (_destinationCidrBlocks = new InputList<string>());
            set => _destinationCidrBlocks = value;
        }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("routeTableId", required: true)]
        public Input<string> RouteTableId { get; set; } = null!;

        public GetRouteConflictsInvokeArgs()
        {
        }
        public static new GetRouteConflictsInvokeArgs Empty => new GetRouteConflictsInvokeArgs();
    }


    [OutputType]
    public sealed class GetRouteConflictsResult
    {
        public readonly ImmutableArray<string> DestinationCidrBlocks;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ResultOutputFile;
        public readonly ImmutableArray<Outputs.GetRouteConflictsRouteConflictSetResult> RouteConflictSets;
        public readonly string RouteTableId;

        [OutputConstructor]
        private GetRouteConflictsResult(
            ImmutableArray<string> destinationCidrBlocks,

            string id,

            string? resultOutputFile,

            ImmutableArray<Outputs.GetRouteConflictsRouteConflictSetResult> routeConflictSets,

            string routeTableId)
        {
            DestinationCidrBlocks = destinationCidrBlocks;
            Id = id;
            ResultOutputFile = resultOutputFile;
            RouteConflictSets = routeConflictSets;
            RouteTableId = routeTableId;
        }
    }
}
