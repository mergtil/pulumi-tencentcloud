// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Vpc
{
    public static class GetNetDetectStates
    {
        public static Task<GetNetDetectStatesResult> InvokeAsync(GetNetDetectStatesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetDetectStatesResult>("tencentcloud:Vpc/getNetDetectStates:getNetDetectStates", args ?? new GetNetDetectStatesArgs(), options.WithDefaults());

        public static Output<GetNetDetectStatesResult> Invoke(GetNetDetectStatesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetDetectStatesResult>("tencentcloud:Vpc/getNetDetectStates:getNetDetectStates", args ?? new GetNetDetectStatesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetDetectStatesArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetNetDetectStatesFilterArgs>? _filters;
        public List<Inputs.GetNetDetectStatesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetNetDetectStatesFilterArgs>());
            set => _filters = value;
        }

        [Input("netDetectIds")]
        private List<string>? _netDetectIds;
        public List<string> NetDetectIds
        {
            get => _netDetectIds ?? (_netDetectIds = new List<string>());
            set => _netDetectIds = value;
        }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetNetDetectStatesArgs()
        {
        }
        public static new GetNetDetectStatesArgs Empty => new GetNetDetectStatesArgs();
    }

    public sealed class GetNetDetectStatesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetNetDetectStatesFilterInputArgs>? _filters;
        public InputList<Inputs.GetNetDetectStatesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetNetDetectStatesFilterInputArgs>());
            set => _filters = value;
        }

        [Input("netDetectIds")]
        private InputList<string>? _netDetectIds;
        public InputList<string> NetDetectIds
        {
            get => _netDetectIds ?? (_netDetectIds = new InputList<string>());
            set => _netDetectIds = value;
        }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetNetDetectStatesInvokeArgs()
        {
        }
        public static new GetNetDetectStatesInvokeArgs Empty => new GetNetDetectStatesInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetDetectStatesResult
    {
        public readonly ImmutableArray<Outputs.GetNetDetectStatesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> NetDetectIds;
        public readonly ImmutableArray<Outputs.GetNetDetectStatesNetDetectStateSetResult> NetDetectStateSets;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetNetDetectStatesResult(
            ImmutableArray<Outputs.GetNetDetectStatesFilterResult> filters,

            string id,

            ImmutableArray<string> netDetectIds,

            ImmutableArray<Outputs.GetNetDetectStatesNetDetectStateSetResult> netDetectStateSets,

            string? resultOutputFile)
        {
            Filters = filters;
            Id = id;
            NetDetectIds = netDetectIds;
            NetDetectStateSets = netDetectStateSets;
            ResultOutputFile = resultOutputFile;
        }
    }
}
