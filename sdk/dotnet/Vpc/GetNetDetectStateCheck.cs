// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Vpc
{
    public static class GetNetDetectStateCheck
    {
        public static Task<GetNetDetectStateCheckResult> InvokeAsync(GetNetDetectStateCheckArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNetDetectStateCheckResult>("tencentcloud:Vpc/getNetDetectStateCheck:getNetDetectStateCheck", args ?? new GetNetDetectStateCheckArgs(), options.WithDefaults());

        public static Output<GetNetDetectStateCheckResult> Invoke(GetNetDetectStateCheckInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNetDetectStateCheckResult>("tencentcloud:Vpc/getNetDetectStateCheck:getNetDetectStateCheck", args ?? new GetNetDetectStateCheckInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNetDetectStateCheckArgs : global::Pulumi.InvokeArgs
    {
        [Input("detectDestinationIps", required: true)]
        private List<string>? _detectDestinationIps;
        public List<string> DetectDestinationIps
        {
            get => _detectDestinationIps ?? (_detectDestinationIps = new List<string>());
            set => _detectDestinationIps = value;
        }

        [Input("netDetectId")]
        public string? NetDetectId { get; set; }

        [Input("netDetectName")]
        public string? NetDetectName { get; set; }

        [Input("nextHopDestination", required: true)]
        public string NextHopDestination { get; set; } = null!;

        [Input("nextHopType", required: true)]
        public string NextHopType { get; set; } = null!;

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("subnetId")]
        public string? SubnetId { get; set; }

        [Input("vpcId")]
        public string? VpcId { get; set; }

        public GetNetDetectStateCheckArgs()
        {
        }
        public static new GetNetDetectStateCheckArgs Empty => new GetNetDetectStateCheckArgs();
    }

    public sealed class GetNetDetectStateCheckInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("detectDestinationIps", required: true)]
        private InputList<string>? _detectDestinationIps;
        public InputList<string> DetectDestinationIps
        {
            get => _detectDestinationIps ?? (_detectDestinationIps = new InputList<string>());
            set => _detectDestinationIps = value;
        }

        [Input("netDetectId")]
        public Input<string>? NetDetectId { get; set; }

        [Input("netDetectName")]
        public Input<string>? NetDetectName { get; set; }

        [Input("nextHopDestination", required: true)]
        public Input<string> NextHopDestination { get; set; } = null!;

        [Input("nextHopType", required: true)]
        public Input<string> NextHopType { get; set; } = null!;

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public GetNetDetectStateCheckInvokeArgs()
        {
        }
        public static new GetNetDetectStateCheckInvokeArgs Empty => new GetNetDetectStateCheckInvokeArgs();
    }


    [OutputType]
    public sealed class GetNetDetectStateCheckResult
    {
        public readonly ImmutableArray<string> DetectDestinationIps;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? NetDetectId;
        public readonly ImmutableArray<Outputs.GetNetDetectStateCheckNetDetectIpStateSetResult> NetDetectIpStateSets;
        public readonly string? NetDetectName;
        public readonly string NextHopDestination;
        public readonly string NextHopType;
        public readonly string? ResultOutputFile;
        public readonly string? SubnetId;
        public readonly string? VpcId;

        [OutputConstructor]
        private GetNetDetectStateCheckResult(
            ImmutableArray<string> detectDestinationIps,

            string id,

            string? netDetectId,

            ImmutableArray<Outputs.GetNetDetectStateCheckNetDetectIpStateSetResult> netDetectIpStateSets,

            string? netDetectName,

            string nextHopDestination,

            string nextHopType,

            string? resultOutputFile,

            string? subnetId,

            string? vpcId)
        {
            DetectDestinationIps = detectDestinationIps;
            Id = id;
            NetDetectId = netDetectId;
            NetDetectIpStateSets = netDetectIpStateSets;
            NetDetectName = netDetectName;
            NextHopDestination = nextHopDestination;
            NextHopType = nextHopType;
            ResultOutputFile = resultOutputFile;
            SubnetId = subnetId;
            VpcId = vpcId;
        }
    }
}
