// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Vpc
{
    [TencentcloudResourceType("tencentcloud:Vpc/snapshotPolicy:SnapshotPolicy")]
    public partial class SnapshotPolicy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Time backup strategy. Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        [Output("backupPolicies")]
        public Output<ImmutableArray<Outputs.SnapshotPolicyBackupPolicy>> BackupPolicies { get; private set; } = null!;

        /// <summary>
        /// Backup strategy type, `operate`: operate backup, `time`: schedule backup.
        /// </summary>
        [Output("backupType")]
        public Output<string> BackupType { get; private set; } = null!;

        /// <summary>
        /// cos bucket.
        /// </summary>
        [Output("cosBucket")]
        public Output<string> CosBucket { get; private set; } = null!;

        /// <summary>
        /// The region where the cos bucket is located.
        /// </summary>
        [Output("cosRegion")]
        public Output<string> CosRegion { get; private set; } = null!;

        /// <summary>
        /// Whether to create a new cos bucket, the default is False.Note: This field may return null, indicating that no valid
        /// value can be obtained.
        /// </summary>
        [Output("createNewCos")]
        public Output<bool> CreateNewCos { get; private set; } = null!;

        /// <summary>
        /// Creation time.Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Enabled state, True-enabled, False-disabled, the default is True.
        /// </summary>
        [Output("enable")]
        public Output<bool> Enable { get; private set; } = null!;

        /// <summary>
        /// The retention time supports 1 to 365 days.
        /// </summary>
        [Output("keepTime")]
        public Output<int> KeepTime { get; private set; } = null!;

        /// <summary>
        /// Snapshot policy Id.
        /// </summary>
        [Output("snapshotPolicyId")]
        public Output<string> SnapshotPolicyId { get; private set; } = null!;

        /// <summary>
        /// Snapshot policy name.
        /// </summary>
        [Output("snapshotPolicyName")]
        public Output<string> SnapshotPolicyName { get; private set; } = null!;


        /// <summary>
        /// Create a SnapshotPolicy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SnapshotPolicy(string name, SnapshotPolicyArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Vpc/snapshotPolicy:SnapshotPolicy", name, args ?? new SnapshotPolicyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SnapshotPolicy(string name, Input<string> id, SnapshotPolicyState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Vpc/snapshotPolicy:SnapshotPolicy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SnapshotPolicy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SnapshotPolicy Get(string name, Input<string> id, SnapshotPolicyState? state = null, CustomResourceOptions? options = null)
        {
            return new SnapshotPolicy(name, id, state, options);
        }
    }

    public sealed class SnapshotPolicyArgs : global::Pulumi.ResourceArgs
    {
        [Input("backupPolicies")]
        private InputList<Inputs.SnapshotPolicyBackupPolicyArgs>? _backupPolicies;

        /// <summary>
        /// Time backup strategy. Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public InputList<Inputs.SnapshotPolicyBackupPolicyArgs> BackupPolicies
        {
            get => _backupPolicies ?? (_backupPolicies = new InputList<Inputs.SnapshotPolicyBackupPolicyArgs>());
            set => _backupPolicies = value;
        }

        /// <summary>
        /// Backup strategy type, `operate`: operate backup, `time`: schedule backup.
        /// </summary>
        [Input("backupType", required: true)]
        public Input<string> BackupType { get; set; } = null!;

        /// <summary>
        /// cos bucket.
        /// </summary>
        [Input("cosBucket", required: true)]
        public Input<string> CosBucket { get; set; } = null!;

        /// <summary>
        /// The region where the cos bucket is located.
        /// </summary>
        [Input("cosRegion", required: true)]
        public Input<string> CosRegion { get; set; } = null!;

        /// <summary>
        /// Whether to create a new cos bucket, the default is False.Note: This field may return null, indicating that no valid
        /// value can be obtained.
        /// </summary>
        [Input("createNewCos", required: true)]
        public Input<bool> CreateNewCos { get; set; } = null!;

        /// <summary>
        /// The retention time supports 1 to 365 days.
        /// </summary>
        [Input("keepTime", required: true)]
        public Input<int> KeepTime { get; set; } = null!;

        /// <summary>
        /// Snapshot policy name.
        /// </summary>
        [Input("snapshotPolicyName", required: true)]
        public Input<string> SnapshotPolicyName { get; set; } = null!;

        public SnapshotPolicyArgs()
        {
        }
        public static new SnapshotPolicyArgs Empty => new SnapshotPolicyArgs();
    }

    public sealed class SnapshotPolicyState : global::Pulumi.ResourceArgs
    {
        [Input("backupPolicies")]
        private InputList<Inputs.SnapshotPolicyBackupPolicyGetArgs>? _backupPolicies;

        /// <summary>
        /// Time backup strategy. Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        public InputList<Inputs.SnapshotPolicyBackupPolicyGetArgs> BackupPolicies
        {
            get => _backupPolicies ?? (_backupPolicies = new InputList<Inputs.SnapshotPolicyBackupPolicyGetArgs>());
            set => _backupPolicies = value;
        }

        /// <summary>
        /// Backup strategy type, `operate`: operate backup, `time`: schedule backup.
        /// </summary>
        [Input("backupType")]
        public Input<string>? BackupType { get; set; }

        /// <summary>
        /// cos bucket.
        /// </summary>
        [Input("cosBucket")]
        public Input<string>? CosBucket { get; set; }

        /// <summary>
        /// The region where the cos bucket is located.
        /// </summary>
        [Input("cosRegion")]
        public Input<string>? CosRegion { get; set; }

        /// <summary>
        /// Whether to create a new cos bucket, the default is False.Note: This field may return null, indicating that no valid
        /// value can be obtained.
        /// </summary>
        [Input("createNewCos")]
        public Input<bool>? CreateNewCos { get; set; }

        /// <summary>
        /// Creation time.Note: This field may return null, indicating that no valid value can be obtained.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Enabled state, True-enabled, False-disabled, the default is True.
        /// </summary>
        [Input("enable")]
        public Input<bool>? Enable { get; set; }

        /// <summary>
        /// The retention time supports 1 to 365 days.
        /// </summary>
        [Input("keepTime")]
        public Input<int>? KeepTime { get; set; }

        /// <summary>
        /// Snapshot policy Id.
        /// </summary>
        [Input("snapshotPolicyId")]
        public Input<string>? SnapshotPolicyId { get; set; }

        /// <summary>
        /// Snapshot policy name.
        /// </summary>
        [Input("snapshotPolicyName")]
        public Input<string>? SnapshotPolicyName { get; set; }

        public SnapshotPolicyState()
        {
        }
        public static new SnapshotPolicyState Empty => new SnapshotPolicyState();
    }
}
