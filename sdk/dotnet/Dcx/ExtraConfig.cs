// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Dcx
{
    [TencentcloudResourceType("tencentcloud:Dcx/extraConfig:ExtraConfig")]
    public partial class ExtraConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// direct connect tunnel bandwidth.
        /// </summary>
        [Output("bandwidth")]
        public Output<int?> Bandwidth { get; private set; } = null!;

        /// <summary>
        /// be enabled BFD.
        /// </summary>
        [Output("bfdEnable")]
        public Output<int?> BfdEnable { get; private set; } = null!;

        /// <summary>
        /// BFD config info.
        /// </summary>
        [Output("bfdInfo")]
        public Output<Outputs.ExtraConfigBfdInfo?> BfdInfo { get; private set; } = null!;

        /// <summary>
        /// idc BGP, Asn, AuthKey.
        /// </summary>
        [Output("bgpPeer")]
        public Output<Outputs.ExtraConfigBgpPeer?> BgpPeer { get; private set; } = null!;

        /// <summary>
        /// direct connect tunnel user idc connect ip.
        /// </summary>
        [Output("customerAddress")]
        public Output<string?> CustomerAddress { get; private set; } = null!;

        /// <summary>
        /// direct connect tunnel id.
        /// </summary>
        [Output("directConnectTunnelId")]
        public Output<string> DirectConnectTunnelId { get; private set; } = null!;

        /// <summary>
        /// BGP community attribute.
        /// </summary>
        [Output("enableBgpCommunity")]
        public Output<bool?> EnableBgpCommunity { get; private set; } = null!;

        /// <summary>
        /// 0: disable IPv61: enable IPv6.
        /// </summary>
        [Output("ipv6Enable")]
        public Output<int?> Ipv6Enable { get; private set; } = null!;

        /// <summary>
        /// direct connect tunnel support jumbo frame1: enable direct connect tunnel jumbo frame0: disable direct connect tunnel
        /// jumbo frame.
        /// </summary>
        [Output("jumboEnable")]
        public Output<int?> JumboEnable { get; private set; } = null!;

        /// <summary>
        /// be enabled NQA.
        /// </summary>
        [Output("nqaEnable")]
        public Output<int?> NqaEnable { get; private set; } = null!;

        /// <summary>
        /// NQA config info.
        /// </summary>
        [Output("nqaInfo")]
        public Output<Outputs.ExtraConfigNqaInfo?> NqaInfo { get; private set; } = null!;

        /// <summary>
        /// user filter network prefixes.
        /// </summary>
        [Output("routeFilterPrefixes")]
        public Output<Outputs.ExtraConfigRouteFilterPrefixes?> RouteFilterPrefixes { get; private set; } = null!;

        /// <summary>
        /// direct connect tunnel tencent cloud connect ip.
        /// </summary>
        [Output("tencentAddress")]
        public Output<string?> TencentAddress { get; private set; } = null!;

        /// <summary>
        /// direct connect tunnel tencent cloud backup connect ip.
        /// </summary>
        [Output("tencentBackupAddress")]
        public Output<string?> TencentBackupAddress { get; private set; } = null!;

        /// <summary>
        /// direct connect tunnel vlan id.
        /// </summary>
        [Output("vlan")]
        public Output<int?> Vlan { get; private set; } = null!;


        /// <summary>
        /// Create a ExtraConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ExtraConfig(string name, ExtraConfigArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Dcx/extraConfig:ExtraConfig", name, args ?? new ExtraConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ExtraConfig(string name, Input<string> id, ExtraConfigState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Dcx/extraConfig:ExtraConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ExtraConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ExtraConfig Get(string name, Input<string> id, ExtraConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new ExtraConfig(name, id, state, options);
        }
    }

    public sealed class ExtraConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// direct connect tunnel bandwidth.
        /// </summary>
        [Input("bandwidth")]
        public Input<int>? Bandwidth { get; set; }

        /// <summary>
        /// be enabled BFD.
        /// </summary>
        [Input("bfdEnable")]
        public Input<int>? BfdEnable { get; set; }

        /// <summary>
        /// BFD config info.
        /// </summary>
        [Input("bfdInfo")]
        public Input<Inputs.ExtraConfigBfdInfoArgs>? BfdInfo { get; set; }

        /// <summary>
        /// idc BGP, Asn, AuthKey.
        /// </summary>
        [Input("bgpPeer")]
        public Input<Inputs.ExtraConfigBgpPeerArgs>? BgpPeer { get; set; }

        /// <summary>
        /// direct connect tunnel user idc connect ip.
        /// </summary>
        [Input("customerAddress")]
        public Input<string>? CustomerAddress { get; set; }

        /// <summary>
        /// direct connect tunnel id.
        /// </summary>
        [Input("directConnectTunnelId", required: true)]
        public Input<string> DirectConnectTunnelId { get; set; } = null!;

        /// <summary>
        /// BGP community attribute.
        /// </summary>
        [Input("enableBgpCommunity")]
        public Input<bool>? EnableBgpCommunity { get; set; }

        /// <summary>
        /// 0: disable IPv61: enable IPv6.
        /// </summary>
        [Input("ipv6Enable")]
        public Input<int>? Ipv6Enable { get; set; }

        /// <summary>
        /// direct connect tunnel support jumbo frame1: enable direct connect tunnel jumbo frame0: disable direct connect tunnel
        /// jumbo frame.
        /// </summary>
        [Input("jumboEnable")]
        public Input<int>? JumboEnable { get; set; }

        /// <summary>
        /// be enabled NQA.
        /// </summary>
        [Input("nqaEnable")]
        public Input<int>? NqaEnable { get; set; }

        /// <summary>
        /// NQA config info.
        /// </summary>
        [Input("nqaInfo")]
        public Input<Inputs.ExtraConfigNqaInfoArgs>? NqaInfo { get; set; }

        /// <summary>
        /// user filter network prefixes.
        /// </summary>
        [Input("routeFilterPrefixes")]
        public Input<Inputs.ExtraConfigRouteFilterPrefixesArgs>? RouteFilterPrefixes { get; set; }

        /// <summary>
        /// direct connect tunnel tencent cloud connect ip.
        /// </summary>
        [Input("tencentAddress")]
        public Input<string>? TencentAddress { get; set; }

        /// <summary>
        /// direct connect tunnel tencent cloud backup connect ip.
        /// </summary>
        [Input("tencentBackupAddress")]
        public Input<string>? TencentBackupAddress { get; set; }

        /// <summary>
        /// direct connect tunnel vlan id.
        /// </summary>
        [Input("vlan")]
        public Input<int>? Vlan { get; set; }

        public ExtraConfigArgs()
        {
        }
        public static new ExtraConfigArgs Empty => new ExtraConfigArgs();
    }

    public sealed class ExtraConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// direct connect tunnel bandwidth.
        /// </summary>
        [Input("bandwidth")]
        public Input<int>? Bandwidth { get; set; }

        /// <summary>
        /// be enabled BFD.
        /// </summary>
        [Input("bfdEnable")]
        public Input<int>? BfdEnable { get; set; }

        /// <summary>
        /// BFD config info.
        /// </summary>
        [Input("bfdInfo")]
        public Input<Inputs.ExtraConfigBfdInfoGetArgs>? BfdInfo { get; set; }

        /// <summary>
        /// idc BGP, Asn, AuthKey.
        /// </summary>
        [Input("bgpPeer")]
        public Input<Inputs.ExtraConfigBgpPeerGetArgs>? BgpPeer { get; set; }

        /// <summary>
        /// direct connect tunnel user idc connect ip.
        /// </summary>
        [Input("customerAddress")]
        public Input<string>? CustomerAddress { get; set; }

        /// <summary>
        /// direct connect tunnel id.
        /// </summary>
        [Input("directConnectTunnelId")]
        public Input<string>? DirectConnectTunnelId { get; set; }

        /// <summary>
        /// BGP community attribute.
        /// </summary>
        [Input("enableBgpCommunity")]
        public Input<bool>? EnableBgpCommunity { get; set; }

        /// <summary>
        /// 0: disable IPv61: enable IPv6.
        /// </summary>
        [Input("ipv6Enable")]
        public Input<int>? Ipv6Enable { get; set; }

        /// <summary>
        /// direct connect tunnel support jumbo frame1: enable direct connect tunnel jumbo frame0: disable direct connect tunnel
        /// jumbo frame.
        /// </summary>
        [Input("jumboEnable")]
        public Input<int>? JumboEnable { get; set; }

        /// <summary>
        /// be enabled NQA.
        /// </summary>
        [Input("nqaEnable")]
        public Input<int>? NqaEnable { get; set; }

        /// <summary>
        /// NQA config info.
        /// </summary>
        [Input("nqaInfo")]
        public Input<Inputs.ExtraConfigNqaInfoGetArgs>? NqaInfo { get; set; }

        /// <summary>
        /// user filter network prefixes.
        /// </summary>
        [Input("routeFilterPrefixes")]
        public Input<Inputs.ExtraConfigRouteFilterPrefixesGetArgs>? RouteFilterPrefixes { get; set; }

        /// <summary>
        /// direct connect tunnel tencent cloud connect ip.
        /// </summary>
        [Input("tencentAddress")]
        public Input<string>? TencentAddress { get; set; }

        /// <summary>
        /// direct connect tunnel tencent cloud backup connect ip.
        /// </summary>
        [Input("tencentBackupAddress")]
        public Input<string>? TencentBackupAddress { get; set; }

        /// <summary>
        /// direct connect tunnel vlan id.
        /// </summary>
        [Input("vlan")]
        public Input<int>? Vlan { get; set; }

        public ExtraConfigState()
        {
        }
        public static new ExtraConfigState Empty => new ExtraConfigState();
    }
}
