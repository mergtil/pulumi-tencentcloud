// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Vpn.Outputs
{

    [OutputType]
    public sealed class GetConnectionsConnectionListResult
    {
        public readonly string CreateTime;
        public readonly string CustomerGatewayId;
        public readonly string EncryptProto;
        public readonly string Id;
        public readonly string IkeDhGroupName;
        public readonly string IkeExchangeMode;
        public readonly string IkeLocalAddress;
        public readonly string IkeLocalFqdnName;
        public readonly string IkeLocalIdentity;
        public readonly string IkeProtoAuthenAlgorithm;
        public readonly string IkeProtoEncryAlgorithm;
        public readonly string IkeRemoteAddress;
        public readonly string IkeRemoteFqdnName;
        public readonly string IkeRemoteIdentity;
        public readonly int IkeSaLifetimeSeconds;
        public readonly string IkeVersion;
        public readonly string IpsecEncryptAlgorithm;
        public readonly string IpsecIntegrityAlgorithm;
        public readonly string IpsecPfsDhGroup;
        public readonly int IpsecSaLifetimeSeconds;
        public readonly int IpsecSaLifetimeTraffic;
        public readonly string Name;
        public readonly string NetStatus;
        public readonly string PreShareKey;
        public readonly string RouteType;
        public readonly ImmutableArray<Outputs.GetConnectionsConnectionListSecurityGroupPolicyResult> SecurityGroupPolicies;
        public readonly string State;
        public readonly ImmutableDictionary<string, object> Tags;
        public readonly string VpcId;
        public readonly string VpnGatewayId;
        public readonly string VpnProto;

        [OutputConstructor]
        private GetConnectionsConnectionListResult(
            string createTime,

            string customerGatewayId,

            string encryptProto,

            string id,

            string ikeDhGroupName,

            string ikeExchangeMode,

            string ikeLocalAddress,

            string ikeLocalFqdnName,

            string ikeLocalIdentity,

            string ikeProtoAuthenAlgorithm,

            string ikeProtoEncryAlgorithm,

            string ikeRemoteAddress,

            string ikeRemoteFqdnName,

            string ikeRemoteIdentity,

            int ikeSaLifetimeSeconds,

            string ikeVersion,

            string ipsecEncryptAlgorithm,

            string ipsecIntegrityAlgorithm,

            string ipsecPfsDhGroup,

            int ipsecSaLifetimeSeconds,

            int ipsecSaLifetimeTraffic,

            string name,

            string netStatus,

            string preShareKey,

            string routeType,

            ImmutableArray<Outputs.GetConnectionsConnectionListSecurityGroupPolicyResult> securityGroupPolicies,

            string state,

            ImmutableDictionary<string, object> tags,

            string vpcId,

            string vpnGatewayId,

            string vpnProto)
        {
            CreateTime = createTime;
            CustomerGatewayId = customerGatewayId;
            EncryptProto = encryptProto;
            Id = id;
            IkeDhGroupName = ikeDhGroupName;
            IkeExchangeMode = ikeExchangeMode;
            IkeLocalAddress = ikeLocalAddress;
            IkeLocalFqdnName = ikeLocalFqdnName;
            IkeLocalIdentity = ikeLocalIdentity;
            IkeProtoAuthenAlgorithm = ikeProtoAuthenAlgorithm;
            IkeProtoEncryAlgorithm = ikeProtoEncryAlgorithm;
            IkeRemoteAddress = ikeRemoteAddress;
            IkeRemoteFqdnName = ikeRemoteFqdnName;
            IkeRemoteIdentity = ikeRemoteIdentity;
            IkeSaLifetimeSeconds = ikeSaLifetimeSeconds;
            IkeVersion = ikeVersion;
            IpsecEncryptAlgorithm = ipsecEncryptAlgorithm;
            IpsecIntegrityAlgorithm = ipsecIntegrityAlgorithm;
            IpsecPfsDhGroup = ipsecPfsDhGroup;
            IpsecSaLifetimeSeconds = ipsecSaLifetimeSeconds;
            IpsecSaLifetimeTraffic = ipsecSaLifetimeTraffic;
            Name = name;
            NetStatus = netStatus;
            PreShareKey = preShareKey;
            RouteType = routeType;
            SecurityGroupPolicies = securityGroupPolicies;
            State = state;
            Tags = tags;
            VpcId = vpcId;
            VpnGatewayId = vpnGatewayId;
            VpnProto = vpnProto;
        }
    }
}
