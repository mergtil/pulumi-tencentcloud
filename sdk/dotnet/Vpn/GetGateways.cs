// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Vpn
{
    public static class GetGateways
    {
        public static Task<GetGatewaysResult> InvokeAsync(GetGatewaysArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGatewaysResult>("tencentcloud:Vpn/getGateways:getGateways", args ?? new GetGatewaysArgs(), options.WithDefaults());

        public static Output<GetGatewaysResult> Invoke(GetGatewaysInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGatewaysResult>("tencentcloud:Vpn/getGateways:getGateways", args ?? new GetGatewaysInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGatewaysArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public string? Id { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("publicIpAddress")]
        public string? PublicIpAddress { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("tags")]
        private Dictionary<string, object>? _tags;
        public Dictionary<string, object> Tags
        {
            get => _tags ?? (_tags = new Dictionary<string, object>());
            set => _tags = value;
        }

        [Input("vpcId")]
        public string? VpcId { get; set; }

        [Input("zone")]
        public string? Zone { get; set; }

        public GetGatewaysArgs()
        {
        }
        public static new GetGatewaysArgs Empty => new GetGatewaysArgs();
    }

    public sealed class GetGatewaysInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("publicIpAddress")]
        public Input<string>? PublicIpAddress { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        [Input("zone")]
        public Input<string>? Zone { get; set; }

        public GetGatewaysInvokeArgs()
        {
        }
        public static new GetGatewaysInvokeArgs Empty => new GetGatewaysInvokeArgs();
    }


    [OutputType]
    public sealed class GetGatewaysResult
    {
        public readonly ImmutableArray<Outputs.GetGatewaysGatewayListResult> GatewayLists;
        public readonly string? Id;
        public readonly string? Name;
        public readonly string? PublicIpAddress;
        public readonly string? ResultOutputFile;
        public readonly ImmutableDictionary<string, object>? Tags;
        public readonly string? VpcId;
        public readonly string? Zone;

        [OutputConstructor]
        private GetGatewaysResult(
            ImmutableArray<Outputs.GetGatewaysGatewayListResult> gatewayLists,

            string? id,

            string? name,

            string? publicIpAddress,

            string? resultOutputFile,

            ImmutableDictionary<string, object>? tags,

            string? vpcId,

            string? zone)
        {
            GatewayLists = gatewayLists;
            Id = id;
            Name = name;
            PublicIpAddress = publicIpAddress;
            ResultOutputFile = resultOutputFile;
            Tags = tags;
            VpcId = vpcId;
            Zone = zone;
        }
    }
}
