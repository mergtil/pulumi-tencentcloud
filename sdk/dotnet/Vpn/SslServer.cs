// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Vpn
{
    [TencentcloudResourceType("tencentcloud:Vpn/sslServer:SslServer")]
    public partial class SslServer : global::Pulumi.CustomResource
    {
        /// <summary>
        /// need compressed. Default value: False.
        /// </summary>
        [Output("compress")]
        public Output<bool?> Compress { get; private set; } = null!;

        /// <summary>
        /// The encrypt algorithm. Valid values: AES-128-CBC, AES-192-CBC, AES-256-CBC, NONE.Default value: NONE.
        /// </summary>
        [Output("encryptAlgorithm")]
        public Output<string?> EncryptAlgorithm { get; private set; } = null!;

        /// <summary>
        /// The integrity algorithm. Valid values: SHA1, MD5 and NONE. Default value: NONE.
        /// </summary>
        [Output("integrityAlgorithm")]
        public Output<string?> IntegrityAlgorithm { get; private set; } = null!;

        /// <summary>
        /// List of local CIDR.
        /// </summary>
        [Output("localAddresses")]
        public Output<ImmutableArray<string>> LocalAddresses { get; private set; } = null!;

        /// <summary>
        /// Remote CIDR for client.
        /// </summary>
        [Output("remoteAddress")]
        public Output<string> RemoteAddress { get; private set; } = null!;

        /// <summary>
        /// The port of ssl vpn. Default value: 1194.
        /// </summary>
        [Output("sslVpnPort")]
        public Output<int?> SslVpnPort { get; private set; } = null!;

        /// <summary>
        /// The protocol of ssl vpn. Default value: UDP.
        /// </summary>
        [Output("sslVpnProtocol")]
        public Output<string?> SslVpnProtocol { get; private set; } = null!;

        /// <summary>
        /// The name of ssl vpn server to be created.
        /// </summary>
        [Output("sslVpnServerName")]
        public Output<string> SslVpnServerName { get; private set; } = null!;

        /// <summary>
        /// VPN gateway ID.
        /// </summary>
        [Output("vpnGatewayId")]
        public Output<string> VpnGatewayId { get; private set; } = null!;


        /// <summary>
        /// Create a SslServer resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SslServer(string name, SslServerArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Vpn/sslServer:SslServer", name, args ?? new SslServerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SslServer(string name, Input<string> id, SslServerState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Vpn/sslServer:SslServer", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SslServer resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SslServer Get(string name, Input<string> id, SslServerState? state = null, CustomResourceOptions? options = null)
        {
            return new SslServer(name, id, state, options);
        }
    }

    public sealed class SslServerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// need compressed. Default value: False.
        /// </summary>
        [Input("compress")]
        public Input<bool>? Compress { get; set; }

        /// <summary>
        /// The encrypt algorithm. Valid values: AES-128-CBC, AES-192-CBC, AES-256-CBC, NONE.Default value: NONE.
        /// </summary>
        [Input("encryptAlgorithm")]
        public Input<string>? EncryptAlgorithm { get; set; }

        /// <summary>
        /// The integrity algorithm. Valid values: SHA1, MD5 and NONE. Default value: NONE.
        /// </summary>
        [Input("integrityAlgorithm")]
        public Input<string>? IntegrityAlgorithm { get; set; }

        [Input("localAddresses", required: true)]
        private InputList<string>? _localAddresses;

        /// <summary>
        /// List of local CIDR.
        /// </summary>
        public InputList<string> LocalAddresses
        {
            get => _localAddresses ?? (_localAddresses = new InputList<string>());
            set => _localAddresses = value;
        }

        /// <summary>
        /// Remote CIDR for client.
        /// </summary>
        [Input("remoteAddress", required: true)]
        public Input<string> RemoteAddress { get; set; } = null!;

        /// <summary>
        /// The port of ssl vpn. Default value: 1194.
        /// </summary>
        [Input("sslVpnPort")]
        public Input<int>? SslVpnPort { get; set; }

        /// <summary>
        /// The protocol of ssl vpn. Default value: UDP.
        /// </summary>
        [Input("sslVpnProtocol")]
        public Input<string>? SslVpnProtocol { get; set; }

        /// <summary>
        /// The name of ssl vpn server to be created.
        /// </summary>
        [Input("sslVpnServerName", required: true)]
        public Input<string> SslVpnServerName { get; set; } = null!;

        /// <summary>
        /// VPN gateway ID.
        /// </summary>
        [Input("vpnGatewayId", required: true)]
        public Input<string> VpnGatewayId { get; set; } = null!;

        public SslServerArgs()
        {
        }
        public static new SslServerArgs Empty => new SslServerArgs();
    }

    public sealed class SslServerState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// need compressed. Default value: False.
        /// </summary>
        [Input("compress")]
        public Input<bool>? Compress { get; set; }

        /// <summary>
        /// The encrypt algorithm. Valid values: AES-128-CBC, AES-192-CBC, AES-256-CBC, NONE.Default value: NONE.
        /// </summary>
        [Input("encryptAlgorithm")]
        public Input<string>? EncryptAlgorithm { get; set; }

        /// <summary>
        /// The integrity algorithm. Valid values: SHA1, MD5 and NONE. Default value: NONE.
        /// </summary>
        [Input("integrityAlgorithm")]
        public Input<string>? IntegrityAlgorithm { get; set; }

        [Input("localAddresses")]
        private InputList<string>? _localAddresses;

        /// <summary>
        /// List of local CIDR.
        /// </summary>
        public InputList<string> LocalAddresses
        {
            get => _localAddresses ?? (_localAddresses = new InputList<string>());
            set => _localAddresses = value;
        }

        /// <summary>
        /// Remote CIDR for client.
        /// </summary>
        [Input("remoteAddress")]
        public Input<string>? RemoteAddress { get; set; }

        /// <summary>
        /// The port of ssl vpn. Default value: 1194.
        /// </summary>
        [Input("sslVpnPort")]
        public Input<int>? SslVpnPort { get; set; }

        /// <summary>
        /// The protocol of ssl vpn. Default value: UDP.
        /// </summary>
        [Input("sslVpnProtocol")]
        public Input<string>? SslVpnProtocol { get; set; }

        /// <summary>
        /// The name of ssl vpn server to be created.
        /// </summary>
        [Input("sslVpnServerName")]
        public Input<string>? SslVpnServerName { get; set; }

        /// <summary>
        /// VPN gateway ID.
        /// </summary>
        [Input("vpnGatewayId")]
        public Input<string>? VpnGatewayId { get; set; }

        public SslServerState()
        {
        }
        public static new SslServerState Empty => new SslServerState();
    }
}
