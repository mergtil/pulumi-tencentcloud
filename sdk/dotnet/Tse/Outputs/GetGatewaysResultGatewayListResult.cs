// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Tse.Outputs
{

    [OutputType]
    public sealed class GetGatewaysResultGatewayListResult
    {
        public readonly int AutoRenewFlag;
        public readonly string CreateTime;
        public readonly string CurDeadline;
        public readonly string Description;
        public readonly bool EnableCls;
        public readonly bool EnableInternet;
        public readonly string EngineRegion;
        public readonly string FeatureVersion;
        public readonly string GatewayId;
        public readonly string GatewayMinorVersion;
        public readonly string GatewayVersion;
        public readonly string IngressClassName;
        public readonly ImmutableArray<Outputs.GetGatewaysResultGatewayListInstancePortResult> InstancePorts;
        public readonly int InternetMaxBandwidthOut;
        public readonly string InternetPayMode;
        public readonly string IsolateTime;
        public readonly string LoadBalancerType;
        public readonly string Name;
        public readonly ImmutableArray<Outputs.GetGatewaysResultGatewayListNodeConfigResult> NodeConfigs;
        public readonly ImmutableArray<string> PublicIpAddresses;
        public readonly string Status;
        public readonly ImmutableArray<Outputs.GetGatewaysResultGatewayListTagResult> Tags;
        public readonly int TradeType;
        public readonly string Type;
        public readonly ImmutableArray<Outputs.GetGatewaysResultGatewayListVpcConfigResult> VpcConfigs;

        [OutputConstructor]
        private GetGatewaysResultGatewayListResult(
            int autoRenewFlag,

            string createTime,

            string curDeadline,

            string description,

            bool enableCls,

            bool enableInternet,

            string engineRegion,

            string featureVersion,

            string gatewayId,

            string gatewayMinorVersion,

            string gatewayVersion,

            string ingressClassName,

            ImmutableArray<Outputs.GetGatewaysResultGatewayListInstancePortResult> instancePorts,

            int internetMaxBandwidthOut,

            string internetPayMode,

            string isolateTime,

            string loadBalancerType,

            string name,

            ImmutableArray<Outputs.GetGatewaysResultGatewayListNodeConfigResult> nodeConfigs,

            ImmutableArray<string> publicIpAddresses,

            string status,

            ImmutableArray<Outputs.GetGatewaysResultGatewayListTagResult> tags,

            int tradeType,

            string type,

            ImmutableArray<Outputs.GetGatewaysResultGatewayListVpcConfigResult> vpcConfigs)
        {
            AutoRenewFlag = autoRenewFlag;
            CreateTime = createTime;
            CurDeadline = curDeadline;
            Description = description;
            EnableCls = enableCls;
            EnableInternet = enableInternet;
            EngineRegion = engineRegion;
            FeatureVersion = featureVersion;
            GatewayId = gatewayId;
            GatewayMinorVersion = gatewayMinorVersion;
            GatewayVersion = gatewayVersion;
            IngressClassName = ingressClassName;
            InstancePorts = instancePorts;
            InternetMaxBandwidthOut = internetMaxBandwidthOut;
            InternetPayMode = internetPayMode;
            IsolateTime = isolateTime;
            LoadBalancerType = loadBalancerType;
            Name = name;
            NodeConfigs = nodeConfigs;
            PublicIpAddresses = publicIpAddresses;
            Status = status;
            Tags = tags;
            TradeType = tradeType;
            Type = type;
            VpcConfigs = vpcConfigs;
        }
    }
}
