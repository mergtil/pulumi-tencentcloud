// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Tse
{
    [TencentcloudResourceType("tencentcloud:Tse/cngwService:CngwService")]
    public partial class CngwService : global::Pulumi.CustomResource
    {
        /// <summary>
        /// gateway ID.
        /// </summary>
        [Output("gatewayId")]
        public Output<string> GatewayId { get; private set; } = null!;

        /// <summary>
        /// service name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// path.
        /// </summary>
        [Output("path")]
        public Output<string> Path { get; private set; } = null!;

        /// <summary>
        /// protocol. Reference value:`https`, `http`, `tcp`, `udp`.
        /// </summary>
        [Output("protocol")]
        public Output<string> Protocol { get; private set; } = null!;

        /// <summary>
        /// retry times.
        /// </summary>
        [Output("retries")]
        public Output<int> Retries { get; private set; } = null!;

        /// <summary>
        /// service id.
        /// </summary>
        [Output("serviceId")]
        public Output<string> ServiceId { get; private set; } = null!;

        /// <summary>
        /// Tag description list.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>?> Tags { get; private set; } = null!;

        /// <summary>
        /// time out, unit:ms.
        /// </summary>
        [Output("timeout")]
        public Output<int> Timeout { get; private set; } = null!;

        /// <summary>
        /// service config information.
        /// </summary>
        [Output("upstreamInfo")]
        public Output<Outputs.CngwServiceUpstreamInfo> UpstreamInfo { get; private set; } = null!;

        /// <summary>
        /// service type. Reference value:`Kubernetes`, `Registry`, `IPList`, `HostIP`, `Scf`.
        /// </summary>
        [Output("upstreamType")]
        public Output<string> UpstreamType { get; private set; } = null!;


        /// <summary>
        /// Create a CngwService resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CngwService(string name, CngwServiceArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Tse/cngwService:CngwService", name, args ?? new CngwServiceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CngwService(string name, Input<string> id, CngwServiceState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Tse/cngwService:CngwService", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CngwService resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CngwService Get(string name, Input<string> id, CngwServiceState? state = null, CustomResourceOptions? options = null)
        {
            return new CngwService(name, id, state, options);
        }
    }

    public sealed class CngwServiceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// gateway ID.
        /// </summary>
        [Input("gatewayId", required: true)]
        public Input<string> GatewayId { get; set; } = null!;

        /// <summary>
        /// service name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// path.
        /// </summary>
        [Input("path", required: true)]
        public Input<string> Path { get; set; } = null!;

        /// <summary>
        /// protocol. Reference value:`https`, `http`, `tcp`, `udp`.
        /// </summary>
        [Input("protocol", required: true)]
        public Input<string> Protocol { get; set; } = null!;

        /// <summary>
        /// retry times.
        /// </summary>
        [Input("retries", required: true)]
        public Input<int> Retries { get; set; } = null!;

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Tag description list.
        /// </summary>
        [Obsolete(@"Deprecate ineffective tags")]
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// time out, unit:ms.
        /// </summary>
        [Input("timeout", required: true)]
        public Input<int> Timeout { get; set; } = null!;

        /// <summary>
        /// service config information.
        /// </summary>
        [Input("upstreamInfo", required: true)]
        public Input<Inputs.CngwServiceUpstreamInfoArgs> UpstreamInfo { get; set; } = null!;

        /// <summary>
        /// service type. Reference value:`Kubernetes`, `Registry`, `IPList`, `HostIP`, `Scf`.
        /// </summary>
        [Input("upstreamType", required: true)]
        public Input<string> UpstreamType { get; set; } = null!;

        public CngwServiceArgs()
        {
        }
        public static new CngwServiceArgs Empty => new CngwServiceArgs();
    }

    public sealed class CngwServiceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// gateway ID.
        /// </summary>
        [Input("gatewayId")]
        public Input<string>? GatewayId { get; set; }

        /// <summary>
        /// service name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// path.
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// protocol. Reference value:`https`, `http`, `tcp`, `udp`.
        /// </summary>
        [Input("protocol")]
        public Input<string>? Protocol { get; set; }

        /// <summary>
        /// retry times.
        /// </summary>
        [Input("retries")]
        public Input<int>? Retries { get; set; }

        /// <summary>
        /// service id.
        /// </summary>
        [Input("serviceId")]
        public Input<string>? ServiceId { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Tag description list.
        /// </summary>
        [Obsolete(@"Deprecate ineffective tags")]
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// time out, unit:ms.
        /// </summary>
        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        /// <summary>
        /// service config information.
        /// </summary>
        [Input("upstreamInfo")]
        public Input<Inputs.CngwServiceUpstreamInfoGetArgs>? UpstreamInfo { get; set; }

        /// <summary>
        /// service type. Reference value:`Kubernetes`, `Registry`, `IPList`, `HostIP`, `Scf`.
        /// </summary>
        [Input("upstreamType")]
        public Input<string>? UpstreamType { get; set; }

        public CngwServiceState()
        {
        }
        public static new CngwServiceState Empty => new CngwServiceState();
    }
}
