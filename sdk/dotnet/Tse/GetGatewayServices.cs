// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Tse
{
    public static class GetGatewayServices
    {
        public static Task<GetGatewayServicesResult> InvokeAsync(GetGatewayServicesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGatewayServicesResult>("tencentcloud:Tse/getGatewayServices:getGatewayServices", args ?? new GetGatewayServicesArgs(), options.WithDefaults());

        public static Output<GetGatewayServicesResult> Invoke(GetGatewayServicesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGatewayServicesResult>("tencentcloud:Tse/getGatewayServices:getGatewayServices", args ?? new GetGatewayServicesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGatewayServicesArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetGatewayServicesFilterArgs>? _filters;
        public List<Inputs.GetGatewayServicesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetGatewayServicesFilterArgs>());
            set => _filters = value;
        }

        [Input("gatewayId", required: true)]
        public string GatewayId { get; set; } = null!;

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetGatewayServicesArgs()
        {
        }
        public static new GetGatewayServicesArgs Empty => new GetGatewayServicesArgs();
    }

    public sealed class GetGatewayServicesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetGatewayServicesFilterInputArgs>? _filters;
        public InputList<Inputs.GetGatewayServicesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetGatewayServicesFilterInputArgs>());
            set => _filters = value;
        }

        [Input("gatewayId", required: true)]
        public Input<string> GatewayId { get; set; } = null!;

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetGatewayServicesInvokeArgs()
        {
        }
        public static new GetGatewayServicesInvokeArgs Empty => new GetGatewayServicesInvokeArgs();
    }


    [OutputType]
    public sealed class GetGatewayServicesResult
    {
        public readonly ImmutableArray<Outputs.GetGatewayServicesFilterResult> Filters;
        public readonly string GatewayId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ResultOutputFile;
        public readonly ImmutableArray<Outputs.GetGatewayServicesResultResult> Results;

        [OutputConstructor]
        private GetGatewayServicesResult(
            ImmutableArray<Outputs.GetGatewayServicesFilterResult> filters,

            string gatewayId,

            string id,

            string? resultOutputFile,

            ImmutableArray<Outputs.GetGatewayServicesResultResult> results)
        {
            Filters = filters;
            GatewayId = gatewayId;
            Id = id;
            ResultOutputFile = resultOutputFile;
            Results = results;
        }
    }
}
