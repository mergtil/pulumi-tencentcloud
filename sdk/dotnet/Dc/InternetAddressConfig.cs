// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Dc
{
    [TencentcloudResourceType("tencentcloud:Dc/internetAddressConfig:InternetAddressConfig")]
    public partial class InternetAddressConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// whether enable internet address.
        /// </summary>
        [Output("enable")]
        public Output<bool> Enable { get; private set; } = null!;

        /// <summary>
        /// internet public address id.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;


        /// <summary>
        /// Create a InternetAddressConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InternetAddressConfig(string name, InternetAddressConfigArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Dc/internetAddressConfig:InternetAddressConfig", name, args ?? new InternetAddressConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InternetAddressConfig(string name, Input<string> id, InternetAddressConfigState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Dc/internetAddressConfig:InternetAddressConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InternetAddressConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InternetAddressConfig Get(string name, Input<string> id, InternetAddressConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new InternetAddressConfig(name, id, state, options);
        }
    }

    public sealed class InternetAddressConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// whether enable internet address.
        /// </summary>
        [Input("enable", required: true)]
        public Input<bool> Enable { get; set; } = null!;

        /// <summary>
        /// internet public address id.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        public InternetAddressConfigArgs()
        {
        }
        public static new InternetAddressConfigArgs Empty => new InternetAddressConfigArgs();
    }

    public sealed class InternetAddressConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// whether enable internet address.
        /// </summary>
        [Input("enable")]
        public Input<bool>? Enable { get; set; }

        /// <summary>
        /// internet public address id.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        public InternetAddressConfigState()
        {
        }
        public static new InternetAddressConfigState Empty => new InternetAddressConfigState();
    }
}
