// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Dc
{
    public static class GetPublicDirectConnectTunnelRoutes
    {
        public static Task<GetPublicDirectConnectTunnelRoutesResult> InvokeAsync(GetPublicDirectConnectTunnelRoutesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPublicDirectConnectTunnelRoutesResult>("tencentcloud:Dc/getPublicDirectConnectTunnelRoutes:getPublicDirectConnectTunnelRoutes", args ?? new GetPublicDirectConnectTunnelRoutesArgs(), options.WithDefaults());

        public static Output<GetPublicDirectConnectTunnelRoutesResult> Invoke(GetPublicDirectConnectTunnelRoutesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPublicDirectConnectTunnelRoutesResult>("tencentcloud:Dc/getPublicDirectConnectTunnelRoutes:getPublicDirectConnectTunnelRoutes", args ?? new GetPublicDirectConnectTunnelRoutesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPublicDirectConnectTunnelRoutesArgs : global::Pulumi.InvokeArgs
    {
        [Input("directConnectTunnelId", required: true)]
        public string DirectConnectTunnelId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetPublicDirectConnectTunnelRoutesFilterArgs>? _filters;
        public List<Inputs.GetPublicDirectConnectTunnelRoutesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetPublicDirectConnectTunnelRoutesFilterArgs>());
            set => _filters = value;
        }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetPublicDirectConnectTunnelRoutesArgs()
        {
        }
        public static new GetPublicDirectConnectTunnelRoutesArgs Empty => new GetPublicDirectConnectTunnelRoutesArgs();
    }

    public sealed class GetPublicDirectConnectTunnelRoutesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("directConnectTunnelId", required: true)]
        public Input<string> DirectConnectTunnelId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetPublicDirectConnectTunnelRoutesFilterInputArgs>? _filters;
        public InputList<Inputs.GetPublicDirectConnectTunnelRoutesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetPublicDirectConnectTunnelRoutesFilterInputArgs>());
            set => _filters = value;
        }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetPublicDirectConnectTunnelRoutesInvokeArgs()
        {
        }
        public static new GetPublicDirectConnectTunnelRoutesInvokeArgs Empty => new GetPublicDirectConnectTunnelRoutesInvokeArgs();
    }


    [OutputType]
    public sealed class GetPublicDirectConnectTunnelRoutesResult
    {
        public readonly string DirectConnectTunnelId;
        public readonly ImmutableArray<Outputs.GetPublicDirectConnectTunnelRoutesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ResultOutputFile;
        public readonly ImmutableArray<Outputs.GetPublicDirectConnectTunnelRoutesRouteResult> Routes;

        [OutputConstructor]
        private GetPublicDirectConnectTunnelRoutesResult(
            string directConnectTunnelId,

            ImmutableArray<Outputs.GetPublicDirectConnectTunnelRoutesFilterResult> filters,

            string id,

            string? resultOutputFile,

            ImmutableArray<Outputs.GetPublicDirectConnectTunnelRoutesRouteResult> routes)
        {
            DirectConnectTunnelId = directConnectTunnelId;
            Filters = filters;
            Id = id;
            ResultOutputFile = resultOutputFile;
            Routes = routes;
        }
    }
}
