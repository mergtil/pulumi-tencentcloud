// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Css
{
    [TencentcloudResourceType("tencentcloud:Css/domain:Domain")]
    public partial class Domain : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Domain Name.
        /// </summary>
        [Output("domainName")]
        public Output<string> DomainName { get; private set; } = null!;

        /// <summary>
        /// Domain type: `0`: push stream. `1`: playback.
        /// </summary>
        [Output("domainType")]
        public Output<int> DomainType { get; private set; } = null!;

        /// <summary>
        /// Switch. true: enable the specified domain, false: disable the specified domain.
        /// </summary>
        [Output("enable")]
        public Output<bool?> Enable { get; private set; } = null!;

        /// <summary>
        /// Whether it is LCB: `0`: LVB. `1`: LCB. Default value is 0.
        /// </summary>
        [Output("isDelayLive")]
        public Output<int?> IsDelayLive { get; private set; } = null!;

        /// <summary>
        /// `0`: LVB. `1`: LVB on Mini Program. Note: this field may return null, indicating that no valid values can be obtained.
        /// Default value is 0.
        /// </summary>
        [Output("isMiniProgramLive")]
        public Output<int?> IsMiniProgramLive { get; private set; } = null!;

        /// <summary>
        /// Play Type. This parameter is valid only if `DomainType` is 1. Available values: `1`: in Mainland China. `2`: global.
        /// `3`: outside Mainland China. Default value is 1.
        /// </summary>
        [Output("playType")]
        public Output<int?> PlayType { get; private set; } = null!;

        /// <summary>
        /// Domain name attribution verification type. `dnsCheck`, `fileCheck`, `dbCheck`. The default is `dbCheck`.
        /// </summary>
        [Output("verifyOwnerType")]
        public Output<string?> VerifyOwnerType { get; private set; } = null!;


        /// <summary>
        /// Create a Domain resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Domain(string name, DomainArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Css/domain:Domain", name, args ?? new DomainArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Domain(string name, Input<string> id, DomainState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Css/domain:Domain", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Domain resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Domain Get(string name, Input<string> id, DomainState? state = null, CustomResourceOptions? options = null)
        {
            return new Domain(name, id, state, options);
        }
    }

    public sealed class DomainArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Domain Name.
        /// </summary>
        [Input("domainName", required: true)]
        public Input<string> DomainName { get; set; } = null!;

        /// <summary>
        /// Domain type: `0`: push stream. `1`: playback.
        /// </summary>
        [Input("domainType", required: true)]
        public Input<int> DomainType { get; set; } = null!;

        /// <summary>
        /// Switch. true: enable the specified domain, false: disable the specified domain.
        /// </summary>
        [Input("enable")]
        public Input<bool>? Enable { get; set; }

        /// <summary>
        /// Whether it is LCB: `0`: LVB. `1`: LCB. Default value is 0.
        /// </summary>
        [Input("isDelayLive")]
        public Input<int>? IsDelayLive { get; set; }

        /// <summary>
        /// `0`: LVB. `1`: LVB on Mini Program. Note: this field may return null, indicating that no valid values can be obtained.
        /// Default value is 0.
        /// </summary>
        [Input("isMiniProgramLive")]
        public Input<int>? IsMiniProgramLive { get; set; }

        /// <summary>
        /// Play Type. This parameter is valid only if `DomainType` is 1. Available values: `1`: in Mainland China. `2`: global.
        /// `3`: outside Mainland China. Default value is 1.
        /// </summary>
        [Input("playType")]
        public Input<int>? PlayType { get; set; }

        /// <summary>
        /// Domain name attribution verification type. `dnsCheck`, `fileCheck`, `dbCheck`. The default is `dbCheck`.
        /// </summary>
        [Input("verifyOwnerType")]
        public Input<string>? VerifyOwnerType { get; set; }

        public DomainArgs()
        {
        }
        public static new DomainArgs Empty => new DomainArgs();
    }

    public sealed class DomainState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Domain Name.
        /// </summary>
        [Input("domainName")]
        public Input<string>? DomainName { get; set; }

        /// <summary>
        /// Domain type: `0`: push stream. `1`: playback.
        /// </summary>
        [Input("domainType")]
        public Input<int>? DomainType { get; set; }

        /// <summary>
        /// Switch. true: enable the specified domain, false: disable the specified domain.
        /// </summary>
        [Input("enable")]
        public Input<bool>? Enable { get; set; }

        /// <summary>
        /// Whether it is LCB: `0`: LVB. `1`: LCB. Default value is 0.
        /// </summary>
        [Input("isDelayLive")]
        public Input<int>? IsDelayLive { get; set; }

        /// <summary>
        /// `0`: LVB. `1`: LVB on Mini Program. Note: this field may return null, indicating that no valid values can be obtained.
        /// Default value is 0.
        /// </summary>
        [Input("isMiniProgramLive")]
        public Input<int>? IsMiniProgramLive { get; set; }

        /// <summary>
        /// Play Type. This parameter is valid only if `DomainType` is 1. Available values: `1`: in Mainland China. `2`: global.
        /// `3`: outside Mainland China. Default value is 1.
        /// </summary>
        [Input("playType")]
        public Input<int>? PlayType { get; set; }

        /// <summary>
        /// Domain name attribution verification type. `dnsCheck`, `fileCheck`, `dbCheck`. The default is `dbCheck`.
        /// </summary>
        [Input("verifyOwnerType")]
        public Input<string>? VerifyOwnerType { get; set; }

        public DomainState()
        {
        }
        public static new DomainState Empty => new DomainState();
    }
}
