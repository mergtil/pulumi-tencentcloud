// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Css
{
    [TencentcloudResourceType("tencentcloud:Css/playAuthKeyConfig:PlayAuthKeyConfig")]
    public partial class PlayAuthKeyConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Alternate key for authentication. No transfer means that the current value is not modified.
        /// </summary>
        [Output("authBackKey")]
        public Output<string?> AuthBackKey { get; private set; } = null!;

        /// <summary>
        /// Valid time, unit: second. No transfer means that the current value is not modified.
        /// </summary>
        [Output("authDelta")]
        public Output<int?> AuthDelta { get; private set; } = null!;

        /// <summary>
        /// Authentication key. No transfer means that the current value is not modified.
        /// </summary>
        [Output("authKey")]
        public Output<string?> AuthKey { get; private set; } = null!;

        /// <summary>
        /// Domain Name.
        /// </summary>
        [Output("domainName")]
        public Output<string> DomainName { get; private set; } = null!;

        /// <summary>
        /// Enable or not, 0: Close, 1: Enable. No transfer means that the current value is not modified.
        /// </summary>
        [Output("enable")]
        public Output<int?> Enable { get; private set; } = null!;


        /// <summary>
        /// Create a PlayAuthKeyConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PlayAuthKeyConfig(string name, PlayAuthKeyConfigArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Css/playAuthKeyConfig:PlayAuthKeyConfig", name, args ?? new PlayAuthKeyConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PlayAuthKeyConfig(string name, Input<string> id, PlayAuthKeyConfigState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Css/playAuthKeyConfig:PlayAuthKeyConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PlayAuthKeyConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PlayAuthKeyConfig Get(string name, Input<string> id, PlayAuthKeyConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new PlayAuthKeyConfig(name, id, state, options);
        }
    }

    public sealed class PlayAuthKeyConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Alternate key for authentication. No transfer means that the current value is not modified.
        /// </summary>
        [Input("authBackKey")]
        public Input<string>? AuthBackKey { get; set; }

        /// <summary>
        /// Valid time, unit: second. No transfer means that the current value is not modified.
        /// </summary>
        [Input("authDelta")]
        public Input<int>? AuthDelta { get; set; }

        /// <summary>
        /// Authentication key. No transfer means that the current value is not modified.
        /// </summary>
        [Input("authKey")]
        public Input<string>? AuthKey { get; set; }

        /// <summary>
        /// Domain Name.
        /// </summary>
        [Input("domainName", required: true)]
        public Input<string> DomainName { get; set; } = null!;

        /// <summary>
        /// Enable or not, 0: Close, 1: Enable. No transfer means that the current value is not modified.
        /// </summary>
        [Input("enable")]
        public Input<int>? Enable { get; set; }

        public PlayAuthKeyConfigArgs()
        {
        }
        public static new PlayAuthKeyConfigArgs Empty => new PlayAuthKeyConfigArgs();
    }

    public sealed class PlayAuthKeyConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Alternate key for authentication. No transfer means that the current value is not modified.
        /// </summary>
        [Input("authBackKey")]
        public Input<string>? AuthBackKey { get; set; }

        /// <summary>
        /// Valid time, unit: second. No transfer means that the current value is not modified.
        /// </summary>
        [Input("authDelta")]
        public Input<int>? AuthDelta { get; set; }

        /// <summary>
        /// Authentication key. No transfer means that the current value is not modified.
        /// </summary>
        [Input("authKey")]
        public Input<string>? AuthKey { get; set; }

        /// <summary>
        /// Domain Name.
        /// </summary>
        [Input("domainName")]
        public Input<string>? DomainName { get; set; }

        /// <summary>
        /// Enable or not, 0: Close, 1: Enable. No transfer means that the current value is not modified.
        /// </summary>
        [Input("enable")]
        public Input<int>? Enable { get; set; }

        public PlayAuthKeyConfigState()
        {
        }
        public static new PlayAuthKeyConfigState Empty => new PlayAuthKeyConfigState();
    }
}
