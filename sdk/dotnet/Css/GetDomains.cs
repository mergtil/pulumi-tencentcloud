// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Css
{
    public static class GetDomains
    {
        public static Task<GetDomainsResult> InvokeAsync(GetDomainsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDomainsResult>("tencentcloud:Css/getDomains:getDomains", args ?? new GetDomainsArgs(), options.WithDefaults());

        public static Output<GetDomainsResult> Invoke(GetDomainsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDomainsResult>("tencentcloud:Css/getDomains:getDomains", args ?? new GetDomainsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDomainsArgs : global::Pulumi.InvokeArgs
    {
        [Input("domainPrefix")]
        public string? DomainPrefix { get; set; }

        [Input("domainStatus")]
        public int? DomainStatus { get; set; }

        [Input("domainType")]
        public int? DomainType { get; set; }

        [Input("isDelayLive")]
        public int? IsDelayLive { get; set; }

        [Input("playType")]
        public int? PlayType { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetDomainsArgs()
        {
        }
        public static new GetDomainsArgs Empty => new GetDomainsArgs();
    }

    public sealed class GetDomainsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("domainPrefix")]
        public Input<string>? DomainPrefix { get; set; }

        [Input("domainStatus")]
        public Input<int>? DomainStatus { get; set; }

        [Input("domainType")]
        public Input<int>? DomainType { get; set; }

        [Input("isDelayLive")]
        public Input<int>? IsDelayLive { get; set; }

        [Input("playType")]
        public Input<int>? PlayType { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetDomainsInvokeArgs()
        {
        }
        public static new GetDomainsInvokeArgs Empty => new GetDomainsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDomainsResult
    {
        public readonly ImmutableArray<Outputs.GetDomainsDomainListResult> DomainLists;
        public readonly string? DomainPrefix;
        public readonly int? DomainStatus;
        public readonly int? DomainType;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int? IsDelayLive;
        public readonly int? PlayType;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetDomainsResult(
            ImmutableArray<Outputs.GetDomainsDomainListResult> domainLists,

            string? domainPrefix,

            int? domainStatus,

            int? domainType,

            string id,

            int? isDelayLive,

            int? playType,

            string? resultOutputFile)
        {
            DomainLists = domainLists;
            DomainPrefix = domainPrefix;
            DomainStatus = domainStatus;
            DomainType = domainType;
            Id = id;
            IsDelayLive = isDelayLive;
            PlayType = playType;
            ResultOutputFile = resultOutputFile;
        }
    }
}
