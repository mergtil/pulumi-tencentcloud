// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Cls
{
    [TencentcloudResourceType("tencentcloud:Cls/cosRecharge:CosRecharge")]
    public partial class CosRecharge : global::Pulumi.CustomResource
    {
        /// <summary>
        /// cos bucket.
        /// </summary>
        [Output("bucket")]
        public Output<string> Bucket { get; private set; } = null!;

        /// <summary>
        /// cos bucket region.
        /// </summary>
        [Output("bucketRegion")]
        public Output<string> BucketRegion { get; private set; } = null!;

        /// <summary>
        /// supported gzip, lzop, snappy.
        /// </summary>
        [Output("compress")]
        public Output<string?> Compress { get; private set; } = null!;

        /// <summary>
        /// extract rule info.
        /// </summary>
        [Output("extractRuleInfo")]
        public Output<Outputs.CosRechargeExtractRuleInfo> ExtractRuleInfo { get; private set; } = null!;

        /// <summary>
        /// log type.
        /// </summary>
        [Output("logType")]
        public Output<string> LogType { get; private set; } = null!;

        /// <summary>
        /// logset id.
        /// </summary>
        [Output("logsetId")]
        public Output<string> LogsetId { get; private set; } = null!;

        /// <summary>
        /// recharge name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// cos file prefix.
        /// </summary>
        [Output("prefix")]
        public Output<string> Prefix { get; private set; } = null!;

        /// <summary>
        /// topic id.
        /// </summary>
        [Output("topicId")]
        public Output<string> TopicId { get; private set; } = null!;


        /// <summary>
        /// Create a CosRecharge resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CosRecharge(string name, CosRechargeArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Cls/cosRecharge:CosRecharge", name, args ?? new CosRechargeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CosRecharge(string name, Input<string> id, CosRechargeState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Cls/cosRecharge:CosRecharge", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CosRecharge resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CosRecharge Get(string name, Input<string> id, CosRechargeState? state = null, CustomResourceOptions? options = null)
        {
            return new CosRecharge(name, id, state, options);
        }
    }

    public sealed class CosRechargeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// cos bucket.
        /// </summary>
        [Input("bucket", required: true)]
        public Input<string> Bucket { get; set; } = null!;

        /// <summary>
        /// cos bucket region.
        /// </summary>
        [Input("bucketRegion", required: true)]
        public Input<string> BucketRegion { get; set; } = null!;

        /// <summary>
        /// supported gzip, lzop, snappy.
        /// </summary>
        [Input("compress")]
        public Input<string>? Compress { get; set; }

        /// <summary>
        /// extract rule info.
        /// </summary>
        [Input("extractRuleInfo")]
        public Input<Inputs.CosRechargeExtractRuleInfoArgs>? ExtractRuleInfo { get; set; }

        /// <summary>
        /// log type.
        /// </summary>
        [Input("logType", required: true)]
        public Input<string> LogType { get; set; } = null!;

        /// <summary>
        /// logset id.
        /// </summary>
        [Input("logsetId", required: true)]
        public Input<string> LogsetId { get; set; } = null!;

        /// <summary>
        /// recharge name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// cos file prefix.
        /// </summary>
        [Input("prefix", required: true)]
        public Input<string> Prefix { get; set; } = null!;

        /// <summary>
        /// topic id.
        /// </summary>
        [Input("topicId", required: true)]
        public Input<string> TopicId { get; set; } = null!;

        public CosRechargeArgs()
        {
        }
        public static new CosRechargeArgs Empty => new CosRechargeArgs();
    }

    public sealed class CosRechargeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// cos bucket.
        /// </summary>
        [Input("bucket")]
        public Input<string>? Bucket { get; set; }

        /// <summary>
        /// cos bucket region.
        /// </summary>
        [Input("bucketRegion")]
        public Input<string>? BucketRegion { get; set; }

        /// <summary>
        /// supported gzip, lzop, snappy.
        /// </summary>
        [Input("compress")]
        public Input<string>? Compress { get; set; }

        /// <summary>
        /// extract rule info.
        /// </summary>
        [Input("extractRuleInfo")]
        public Input<Inputs.CosRechargeExtractRuleInfoGetArgs>? ExtractRuleInfo { get; set; }

        /// <summary>
        /// log type.
        /// </summary>
        [Input("logType")]
        public Input<string>? LogType { get; set; }

        /// <summary>
        /// logset id.
        /// </summary>
        [Input("logsetId")]
        public Input<string>? LogsetId { get; set; }

        /// <summary>
        /// recharge name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// cos file prefix.
        /// </summary>
        [Input("prefix")]
        public Input<string>? Prefix { get; set; }

        /// <summary>
        /// topic id.
        /// </summary>
        [Input("topicId")]
        public Input<string>? TopicId { get; set; }

        public CosRechargeState()
        {
        }
        public static new CosRechargeState Empty => new CosRechargeState();
    }
}
