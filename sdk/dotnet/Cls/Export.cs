// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Cls
{
    [TencentcloudResourceType("tencentcloud:Cls/export:Export")]
    public partial class Export : global::Pulumi.CustomResource
    {
        /// <summary>
        /// log export format.
        /// </summary>
        [Output("format")]
        public Output<string?> Format { get; private set; } = null!;

        /// <summary>
        /// export start time.
        /// </summary>
        [Output("from")]
        public Output<int> From { get; private set; } = null!;

        /// <summary>
        /// export amount of log.
        /// </summary>
        [Output("logCount")]
        public Output<int> LogCount { get; private set; } = null!;

        /// <summary>
        /// log export time sorting. desc or asc.
        /// </summary>
        [Output("order")]
        public Output<string?> Order { get; private set; } = null!;

        /// <summary>
        /// export query rules.
        /// </summary>
        [Output("query")]
        public Output<string> Query { get; private set; } = null!;

        /// <summary>
        /// export end time.
        /// </summary>
        [Output("to")]
        public Output<int> To { get; private set; } = null!;

        /// <summary>
        /// topic id.
        /// </summary>
        [Output("topicId")]
        public Output<string> TopicId { get; private set; } = null!;


        /// <summary>
        /// Create a Export resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Export(string name, ExportArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Cls/export:Export", name, args ?? new ExportArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Export(string name, Input<string> id, ExportState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Cls/export:Export", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Export resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Export Get(string name, Input<string> id, ExportState? state = null, CustomResourceOptions? options = null)
        {
            return new Export(name, id, state, options);
        }
    }

    public sealed class ExportArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// log export format.
        /// </summary>
        [Input("format")]
        public Input<string>? Format { get; set; }

        /// <summary>
        /// export start time.
        /// </summary>
        [Input("from", required: true)]
        public Input<int> From { get; set; } = null!;

        /// <summary>
        /// export amount of log.
        /// </summary>
        [Input("logCount", required: true)]
        public Input<int> LogCount { get; set; } = null!;

        /// <summary>
        /// log export time sorting. desc or asc.
        /// </summary>
        [Input("order")]
        public Input<string>? Order { get; set; }

        /// <summary>
        /// export query rules.
        /// </summary>
        [Input("query", required: true)]
        public Input<string> Query { get; set; } = null!;

        /// <summary>
        /// export end time.
        /// </summary>
        [Input("to", required: true)]
        public Input<int> To { get; set; } = null!;

        /// <summary>
        /// topic id.
        /// </summary>
        [Input("topicId", required: true)]
        public Input<string> TopicId { get; set; } = null!;

        public ExportArgs()
        {
        }
        public static new ExportArgs Empty => new ExportArgs();
    }

    public sealed class ExportState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// log export format.
        /// </summary>
        [Input("format")]
        public Input<string>? Format { get; set; }

        /// <summary>
        /// export start time.
        /// </summary>
        [Input("from")]
        public Input<int>? From { get; set; }

        /// <summary>
        /// export amount of log.
        /// </summary>
        [Input("logCount")]
        public Input<int>? LogCount { get; set; }

        /// <summary>
        /// log export time sorting. desc or asc.
        /// </summary>
        [Input("order")]
        public Input<string>? Order { get; set; }

        /// <summary>
        /// export query rules.
        /// </summary>
        [Input("query")]
        public Input<string>? Query { get; set; }

        /// <summary>
        /// export end time.
        /// </summary>
        [Input("to")]
        public Input<int>? To { get; set; }

        /// <summary>
        /// topic id.
        /// </summary>
        [Input("topicId")]
        public Input<string>? TopicId { get; set; }

        public ExportState()
        {
        }
        public static new ExportState Empty => new ExportState();
    }
}
