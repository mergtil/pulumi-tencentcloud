// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Instance
{
    public static class GetTypes
    {
        public static Task<GetTypesResult> InvokeAsync(GetTypesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTypesResult>("tencentcloud:Instance/getTypes:getTypes", args ?? new GetTypesArgs(), options.WithDefaults());

        public static Output<GetTypesResult> Invoke(GetTypesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTypesResult>("tencentcloud:Instance/getTypes:getTypes", args ?? new GetTypesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTypesArgs : global::Pulumi.InvokeArgs
    {
        [Input("availabilityZone")]
        public string? AvailabilityZone { get; set; }

        [Input("cpuCoreCount")]
        public int? CpuCoreCount { get; set; }

        [Input("excludeSoldOut")]
        public bool? ExcludeSoldOut { get; set; }

        [Input("filters")]
        private List<Inputs.GetTypesFilterArgs>? _filters;
        public List<Inputs.GetTypesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetTypesFilterArgs>());
            set => _filters = value;
        }

        [Input("gpuCoreCount")]
        public int? GpuCoreCount { get; set; }

        [Input("memorySize")]
        public int? MemorySize { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetTypesArgs()
        {
        }
        public static new GetTypesArgs Empty => new GetTypesArgs();
    }

    public sealed class GetTypesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("availabilityZone")]
        public Input<string>? AvailabilityZone { get; set; }

        [Input("cpuCoreCount")]
        public Input<int>? CpuCoreCount { get; set; }

        [Input("excludeSoldOut")]
        public Input<bool>? ExcludeSoldOut { get; set; }

        [Input("filters")]
        private InputList<Inputs.GetTypesFilterInputArgs>? _filters;
        public InputList<Inputs.GetTypesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetTypesFilterInputArgs>());
            set => _filters = value;
        }

        [Input("gpuCoreCount")]
        public Input<int>? GpuCoreCount { get; set; }

        [Input("memorySize")]
        public Input<int>? MemorySize { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetTypesInvokeArgs()
        {
        }
        public static new GetTypesInvokeArgs Empty => new GetTypesInvokeArgs();
    }


    [OutputType]
    public sealed class GetTypesResult
    {
        public readonly string? AvailabilityZone;
        public readonly int? CpuCoreCount;
        public readonly bool? ExcludeSoldOut;
        public readonly ImmutableArray<Outputs.GetTypesFilterResult> Filters;
        public readonly int? GpuCoreCount;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetTypesInstanceTypeResult> InstanceTypes;
        public readonly int? MemorySize;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetTypesResult(
            string? availabilityZone,

            int? cpuCoreCount,

            bool? excludeSoldOut,

            ImmutableArray<Outputs.GetTypesFilterResult> filters,

            int? gpuCoreCount,

            string id,

            ImmutableArray<Outputs.GetTypesInstanceTypeResult> instanceTypes,

            int? memorySize,

            string? resultOutputFile)
        {
            AvailabilityZone = availabilityZone;
            CpuCoreCount = cpuCoreCount;
            ExcludeSoldOut = excludeSoldOut;
            Filters = filters;
            GpuCoreCount = gpuCoreCount;
            Id = id;
            InstanceTypes = instanceTypes;
            MemorySize = memorySize;
            ResultOutputFile = resultOutputFile;
        }
    }
}
