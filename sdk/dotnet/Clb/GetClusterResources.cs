// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Clb
{
    public static class GetClusterResources
    {
        public static Task<GetClusterResourcesResult> InvokeAsync(GetClusterResourcesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetClusterResourcesResult>("tencentcloud:Clb/getClusterResources:getClusterResources", args ?? new GetClusterResourcesArgs(), options.WithDefaults());

        public static Output<GetClusterResourcesResult> Invoke(GetClusterResourcesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetClusterResourcesResult>("tencentcloud:Clb/getClusterResources:getClusterResources", args ?? new GetClusterResourcesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClusterResourcesArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetClusterResourcesFilterArgs>? _filters;
        public List<Inputs.GetClusterResourcesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetClusterResourcesFilterArgs>());
            set => _filters = value;
        }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetClusterResourcesArgs()
        {
        }
        public static new GetClusterResourcesArgs Empty => new GetClusterResourcesArgs();
    }

    public sealed class GetClusterResourcesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetClusterResourcesFilterInputArgs>? _filters;
        public InputList<Inputs.GetClusterResourcesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetClusterResourcesFilterInputArgs>());
            set => _filters = value;
        }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetClusterResourcesInvokeArgs()
        {
        }
        public static new GetClusterResourcesInvokeArgs Empty => new GetClusterResourcesInvokeArgs();
    }


    [OutputType]
    public sealed class GetClusterResourcesResult
    {
        public readonly ImmutableArray<Outputs.GetClusterResourcesClusterResourceSetResult> ClusterResourceSets;
        public readonly ImmutableArray<Outputs.GetClusterResourcesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetClusterResourcesResult(
            ImmutableArray<Outputs.GetClusterResourcesClusterResourceSetResult> clusterResourceSets,

            ImmutableArray<Outputs.GetClusterResourcesFilterResult> filters,

            string id,

            string? resultOutputFile)
        {
            ClusterResourceSets = clusterResourceSets;
            Filters = filters;
            Id = id;
            ResultOutputFile = resultOutputFile;
        }
    }
}
