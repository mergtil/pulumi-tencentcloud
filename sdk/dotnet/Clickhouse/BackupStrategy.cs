// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Clickhouse
{
    [TencentcloudResourceType("tencentcloud:Clickhouse/backupStrategy:BackupStrategy")]
    public partial class BackupStrategy : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Data backup strategy.
        /// </summary>
        [Output("dataBackupStrategies")]
        public Output<ImmutableArray<Outputs.BackupStrategyDataBackupStrategy>> DataBackupStrategies { get; private set; } = null!;

        /// <summary>
        /// Instance id.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// Metadata backup strategy.
        /// </summary>
        [Output("metaBackupStrategies")]
        public Output<ImmutableArray<Outputs.BackupStrategyMetaBackupStrategy>> MetaBackupStrategies { get; private set; } = null!;


        /// <summary>
        /// Create a BackupStrategy resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BackupStrategy(string name, BackupStrategyArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Clickhouse/backupStrategy:BackupStrategy", name, args ?? new BackupStrategyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BackupStrategy(string name, Input<string> id, BackupStrategyState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Clickhouse/backupStrategy:BackupStrategy", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BackupStrategy resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BackupStrategy Get(string name, Input<string> id, BackupStrategyState? state = null, CustomResourceOptions? options = null)
        {
            return new BackupStrategy(name, id, state, options);
        }
    }

    public sealed class BackupStrategyArgs : global::Pulumi.ResourceArgs
    {
        [Input("dataBackupStrategies", required: true)]
        private InputList<Inputs.BackupStrategyDataBackupStrategyArgs>? _dataBackupStrategies;

        /// <summary>
        /// Data backup strategy.
        /// </summary>
        public InputList<Inputs.BackupStrategyDataBackupStrategyArgs> DataBackupStrategies
        {
            get => _dataBackupStrategies ?? (_dataBackupStrategies = new InputList<Inputs.BackupStrategyDataBackupStrategyArgs>());
            set => _dataBackupStrategies = value;
        }

        /// <summary>
        /// Instance id.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("metaBackupStrategies")]
        private InputList<Inputs.BackupStrategyMetaBackupStrategyArgs>? _metaBackupStrategies;

        /// <summary>
        /// Metadata backup strategy.
        /// </summary>
        public InputList<Inputs.BackupStrategyMetaBackupStrategyArgs> MetaBackupStrategies
        {
            get => _metaBackupStrategies ?? (_metaBackupStrategies = new InputList<Inputs.BackupStrategyMetaBackupStrategyArgs>());
            set => _metaBackupStrategies = value;
        }

        public BackupStrategyArgs()
        {
        }
        public static new BackupStrategyArgs Empty => new BackupStrategyArgs();
    }

    public sealed class BackupStrategyState : global::Pulumi.ResourceArgs
    {
        [Input("dataBackupStrategies")]
        private InputList<Inputs.BackupStrategyDataBackupStrategyGetArgs>? _dataBackupStrategies;

        /// <summary>
        /// Data backup strategy.
        /// </summary>
        public InputList<Inputs.BackupStrategyDataBackupStrategyGetArgs> DataBackupStrategies
        {
            get => _dataBackupStrategies ?? (_dataBackupStrategies = new InputList<Inputs.BackupStrategyDataBackupStrategyGetArgs>());
            set => _dataBackupStrategies = value;
        }

        /// <summary>
        /// Instance id.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        [Input("metaBackupStrategies")]
        private InputList<Inputs.BackupStrategyMetaBackupStrategyGetArgs>? _metaBackupStrategies;

        /// <summary>
        /// Metadata backup strategy.
        /// </summary>
        public InputList<Inputs.BackupStrategyMetaBackupStrategyGetArgs> MetaBackupStrategies
        {
            get => _metaBackupStrategies ?? (_metaBackupStrategies = new InputList<Inputs.BackupStrategyMetaBackupStrategyGetArgs>());
            set => _metaBackupStrategies = value;
        }

        public BackupStrategyState()
        {
        }
        public static new BackupStrategyState Empty => new BackupStrategyState();
    }
}
