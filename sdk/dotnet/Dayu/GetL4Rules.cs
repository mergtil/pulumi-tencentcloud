// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Dayu
{
    public static class GetL4Rules
    {
        public static Task<GetL4RulesResult> InvokeAsync(GetL4RulesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetL4RulesResult>("tencentcloud:Dayu/getL4Rules:getL4Rules", args ?? new GetL4RulesArgs(), options.WithDefaults());

        public static Output<GetL4RulesResult> Invoke(GetL4RulesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetL4RulesResult>("tencentcloud:Dayu/getL4Rules:getL4Rules", args ?? new GetL4RulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetL4RulesArgs : global::Pulumi.InvokeArgs
    {
        [Input("name")]
        public string? Name { get; set; }

        [Input("resourceId", required: true)]
        public string ResourceId { get; set; } = null!;

        [Input("resourceType", required: true)]
        public string ResourceType { get; set; } = null!;

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("ruleId")]
        public string? RuleId { get; set; }

        public GetL4RulesArgs()
        {
        }
        public static new GetL4RulesArgs Empty => new GetL4RulesArgs();
    }

    public sealed class GetL4RulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("resourceId", required: true)]
        public Input<string> ResourceId { get; set; } = null!;

        [Input("resourceType", required: true)]
        public Input<string> ResourceType { get; set; } = null!;

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("ruleId")]
        public Input<string>? RuleId { get; set; }

        public GetL4RulesInvokeArgs()
        {
        }
        public static new GetL4RulesInvokeArgs Empty => new GetL4RulesInvokeArgs();
    }


    [OutputType]
    public sealed class GetL4RulesResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetL4RulesListResult> Lists;
        public readonly string? Name;
        public readonly string ResourceId;
        public readonly string ResourceType;
        public readonly string? ResultOutputFile;
        public readonly string? RuleId;

        [OutputConstructor]
        private GetL4RulesResult(
            string id,

            ImmutableArray<Outputs.GetL4RulesListResult> lists,

            string? name,

            string resourceId,

            string resourceType,

            string? resultOutputFile,

            string? ruleId)
        {
            Id = id;
            Lists = lists;
            Name = name;
            ResourceId = resourceId;
            ResourceType = resourceType;
            ResultOutputFile = resultOutputFile;
            RuleId = ruleId;
        }
    }
}
