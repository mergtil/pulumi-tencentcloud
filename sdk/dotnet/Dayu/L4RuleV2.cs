// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Dayu
{
    [TencentcloudResourceType("tencentcloud:Dayu/l4RuleV2:L4RuleV2")]
    public partial class L4RuleV2 : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Business of the resource that the layer 4 rule works for. Valid values: `bgpip` and `net`.
        /// </summary>
        [Output("business")]
        public Output<string> Business { get; private set; } = null!;

        /// <summary>
        /// Resource id.
        /// </summary>
        [Output("resourceId")]
        public Output<string> ResourceId { get; private set; } = null!;

        /// <summary>
        /// A list of layer 4 rules. Each element contains the following attributes:
        /// </summary>
        [Output("rules")]
        public Output<Outputs.L4RuleV2Rules> Rules { get; private set; } = null!;

        /// <summary>
        /// The virtual port of the layer 4 rule.
        /// </summary>
        [Output("virtualPort")]
        public Output<int> VirtualPort { get; private set; } = null!;

        /// <summary>
        /// Resource vpn.
        /// </summary>
        [Output("vpn")]
        public Output<string> Vpn { get; private set; } = null!;


        /// <summary>
        /// Create a L4RuleV2 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public L4RuleV2(string name, L4RuleV2Args args, CustomResourceOptions? options = null)
            : base("tencentcloud:Dayu/l4RuleV2:L4RuleV2", name, args ?? new L4RuleV2Args(), MakeResourceOptions(options, ""))
        {
        }

        private L4RuleV2(string name, Input<string> id, L4RuleV2State? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Dayu/l4RuleV2:L4RuleV2", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing L4RuleV2 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static L4RuleV2 Get(string name, Input<string> id, L4RuleV2State? state = null, CustomResourceOptions? options = null)
        {
            return new L4RuleV2(name, id, state, options);
        }
    }

    public sealed class L4RuleV2Args : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Business of the resource that the layer 4 rule works for. Valid values: `bgpip` and `net`.
        /// </summary>
        [Input("business", required: true)]
        public Input<string> Business { get; set; } = null!;

        /// <summary>
        /// Resource id.
        /// </summary>
        [Input("resourceId", required: true)]
        public Input<string> ResourceId { get; set; } = null!;

        /// <summary>
        /// A list of layer 4 rules. Each element contains the following attributes:
        /// </summary>
        [Input("rules", required: true)]
        public Input<Inputs.L4RuleV2RulesArgs> Rules { get; set; } = null!;

        /// <summary>
        /// The virtual port of the layer 4 rule.
        /// </summary>
        [Input("virtualPort", required: true)]
        public Input<int> VirtualPort { get; set; } = null!;

        /// <summary>
        /// Resource vpn.
        /// </summary>
        [Input("vpn", required: true)]
        public Input<string> Vpn { get; set; } = null!;

        public L4RuleV2Args()
        {
        }
        public static new L4RuleV2Args Empty => new L4RuleV2Args();
    }

    public sealed class L4RuleV2State : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Business of the resource that the layer 4 rule works for. Valid values: `bgpip` and `net`.
        /// </summary>
        [Input("business")]
        public Input<string>? Business { get; set; }

        /// <summary>
        /// Resource id.
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        /// <summary>
        /// A list of layer 4 rules. Each element contains the following attributes:
        /// </summary>
        [Input("rules")]
        public Input<Inputs.L4RuleV2RulesGetArgs>? Rules { get; set; }

        /// <summary>
        /// The virtual port of the layer 4 rule.
        /// </summary>
        [Input("virtualPort")]
        public Input<int>? VirtualPort { get; set; }

        /// <summary>
        /// Resource vpn.
        /// </summary>
        [Input("vpn")]
        public Input<string>? Vpn { get; set; }

        public L4RuleV2State()
        {
        }
        public static new L4RuleV2State Empty => new L4RuleV2State();
    }
}
