// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Deprecatednats
{
    public static class GetNats
    {
        public static Task<GetNatsResult> InvokeAsync(GetNatsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetNatsResult>("tencentcloud:Deprecatednats/getNats:getNats", args ?? new GetNatsArgs(), options.WithDefaults());

        public static Output<GetNatsResult> Invoke(GetNatsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetNatsResult>("tencentcloud:Deprecatednats/getNats:getNats", args ?? new GetNatsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetNatsArgs : global::Pulumi.InvokeArgs
    {
        [Input("bandwidth")]
        public int? Bandwidth { get; set; }

        [Input("id")]
        public string? Id { get; set; }

        [Input("maxConcurrent")]
        public int? MaxConcurrent { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("state")]
        public int? State { get; set; }

        [Input("vpcId")]
        public string? VpcId { get; set; }

        public GetNatsArgs()
        {
        }
        public static new GetNatsArgs Empty => new GetNatsArgs();
    }

    public sealed class GetNatsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("bandwidth")]
        public Input<int>? Bandwidth { get; set; }

        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("maxConcurrent")]
        public Input<int>? MaxConcurrent { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("state")]
        public Input<int>? State { get; set; }

        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public GetNatsInvokeArgs()
        {
        }
        public static new GetNatsInvokeArgs Empty => new GetNatsInvokeArgs();
    }


    [OutputType]
    public sealed class GetNatsResult
    {
        public readonly int? Bandwidth;
        public readonly string? Id;
        public readonly int? MaxConcurrent;
        public readonly string? Name;
        public readonly ImmutableArray<Outputs.GetNatsNatResult> NatsNats;
        public readonly int? State;
        public readonly string? VpcId;

        [OutputConstructor]
        private GetNatsResult(
            int? bandwidth,

            string? id,

            int? maxConcurrent,

            string? name,

            ImmutableArray<Outputs.GetNatsNatResult> nats,

            int? state,

            string? vpcId)
        {
            Bandwidth = bandwidth;
            Id = id;
            MaxConcurrent = maxConcurrent;
            Name = name;
            NatsNats = nats;
            State = state;
            VpcId = vpcId;
        }
    }
}
