// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Vod
{
    public static class GetImageSpriteTemplates
    {
        public static Task<GetImageSpriteTemplatesResult> InvokeAsync(GetImageSpriteTemplatesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetImageSpriteTemplatesResult>("tencentcloud:Vod/getImageSpriteTemplates:getImageSpriteTemplates", args ?? new GetImageSpriteTemplatesArgs(), options.WithDefaults());

        public static Output<GetImageSpriteTemplatesResult> Invoke(GetImageSpriteTemplatesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetImageSpriteTemplatesResult>("tencentcloud:Vod/getImageSpriteTemplates:getImageSpriteTemplates", args ?? new GetImageSpriteTemplatesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetImageSpriteTemplatesArgs : global::Pulumi.InvokeArgs
    {
        [Input("definition")]
        public string? Definition { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("subAppId")]
        public int? SubAppId { get; set; }

        [Input("type")]
        public string? Type { get; set; }

        public GetImageSpriteTemplatesArgs()
        {
        }
        public static new GetImageSpriteTemplatesArgs Empty => new GetImageSpriteTemplatesArgs();
    }

    public sealed class GetImageSpriteTemplatesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("definition")]
        public Input<string>? Definition { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("subAppId")]
        public Input<int>? SubAppId { get; set; }

        [Input("type")]
        public Input<string>? Type { get; set; }

        public GetImageSpriteTemplatesInvokeArgs()
        {
        }
        public static new GetImageSpriteTemplatesInvokeArgs Empty => new GetImageSpriteTemplatesInvokeArgs();
    }


    [OutputType]
    public sealed class GetImageSpriteTemplatesResult
    {
        public readonly string? Definition;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ResultOutputFile;
        public readonly int? SubAppId;
        public readonly ImmutableArray<Outputs.GetImageSpriteTemplatesTemplateListResult> TemplateLists;
        public readonly string? Type;

        [OutputConstructor]
        private GetImageSpriteTemplatesResult(
            string? definition,

            string id,

            string? resultOutputFile,

            int? subAppId,

            ImmutableArray<Outputs.GetImageSpriteTemplatesTemplateListResult> templateLists,

            string? type)
        {
            Definition = definition;
            Id = id;
            ResultOutputFile = resultOutputFile;
            SubAppId = subAppId;
            TemplateLists = templateLists;
            Type = type;
        }
    }
}
