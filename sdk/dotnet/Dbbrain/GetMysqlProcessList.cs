// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Dbbrain
{
    public static class GetMysqlProcessList
    {
        public static Task<GetMysqlProcessListResult> InvokeAsync(GetMysqlProcessListArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMysqlProcessListResult>("tencentcloud:Dbbrain/getMysqlProcessList:getMysqlProcessList", args ?? new GetMysqlProcessListArgs(), options.WithDefaults());

        public static Output<GetMysqlProcessListResult> Invoke(GetMysqlProcessListInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMysqlProcessListResult>("tencentcloud:Dbbrain/getMysqlProcessList:getMysqlProcessList", args ?? new GetMysqlProcessListInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMysqlProcessListArgs : global::Pulumi.InvokeArgs
    {
        [Input("command")]
        public string? Command { get; set; }

        [Input("db")]
        public string? Db { get; set; }

        [Input("host")]
        public string? Host { get; set; }

        [Input("id")]
        public int? Id { get; set; }

        [Input("info")]
        public string? Info { get; set; }

        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        [Input("product")]
        public string? Product { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("state")]
        public string? State { get; set; }

        [Input("time")]
        public int? Time { get; set; }

        [Input("user")]
        public string? User { get; set; }

        public GetMysqlProcessListArgs()
        {
        }
        public static new GetMysqlProcessListArgs Empty => new GetMysqlProcessListArgs();
    }

    public sealed class GetMysqlProcessListInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("command")]
        public Input<string>? Command { get; set; }

        [Input("db")]
        public Input<string>? Db { get; set; }

        [Input("host")]
        public Input<string>? Host { get; set; }

        [Input("id")]
        public Input<int>? Id { get; set; }

        [Input("info")]
        public Input<string>? Info { get; set; }

        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("product")]
        public Input<string>? Product { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("time")]
        public Input<int>? Time { get; set; }

        [Input("user")]
        public Input<string>? User { get; set; }

        public GetMysqlProcessListInvokeArgs()
        {
        }
        public static new GetMysqlProcessListInvokeArgs Empty => new GetMysqlProcessListInvokeArgs();
    }


    [OutputType]
    public sealed class GetMysqlProcessListResult
    {
        public readonly string? Command;
        public readonly string? Db;
        public readonly string? Host;
        public readonly int? Id;
        public readonly string? Info;
        public readonly string InstanceId;
        public readonly ImmutableArray<Outputs.GetMysqlProcessListProcessListResult> ProcessLists;
        public readonly string? Product;
        public readonly string? ResultOutputFile;
        public readonly string? State;
        public readonly int? Time;
        public readonly string? User;

        [OutputConstructor]
        private GetMysqlProcessListResult(
            string? command,

            string? db,

            string? host,

            int? id,

            string? info,

            string instanceId,

            ImmutableArray<Outputs.GetMysqlProcessListProcessListResult> processLists,

            string? product,

            string? resultOutputFile,

            string? state,

            int? time,

            string? user)
        {
            Command = command;
            Db = db;
            Host = host;
            Id = id;
            Info = info;
            InstanceId = instanceId;
            ProcessLists = processLists;
            Product = product;
            ResultOutputFile = resultOutputFile;
            State = state;
            Time = time;
            User = user;
        }
    }
}
