// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Dbbrain
{
    public static class GetDiagEvent
    {
        public static Task<GetDiagEventResult> InvokeAsync(GetDiagEventArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDiagEventResult>("tencentcloud:Dbbrain/getDiagEvent:getDiagEvent", args ?? new GetDiagEventArgs(), options.WithDefaults());

        public static Output<GetDiagEventResult> Invoke(GetDiagEventInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDiagEventResult>("tencentcloud:Dbbrain/getDiagEvent:getDiagEvent", args ?? new GetDiagEventInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDiagEventArgs : global::Pulumi.InvokeArgs
    {
        [Input("eventId")]
        public int? EventId { get; set; }

        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        [Input("product")]
        public string? Product { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetDiagEventArgs()
        {
        }
        public static new GetDiagEventArgs Empty => new GetDiagEventArgs();
    }

    public sealed class GetDiagEventInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("eventId")]
        public Input<int>? EventId { get; set; }

        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("product")]
        public Input<string>? Product { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetDiagEventInvokeArgs()
        {
        }
        public static new GetDiagEventInvokeArgs Empty => new GetDiagEventInvokeArgs();
    }


    [OutputType]
    public sealed class GetDiagEventResult
    {
        public readonly string DiagItem;
        public readonly string DiagType;
        public readonly string EndTime;
        public readonly int EventId;
        public readonly string Explanation;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        public readonly string Metric;
        public readonly string Outline;
        public readonly string Problem;
        public readonly string? Product;
        public readonly string? ResultOutputFile;
        public readonly int Severity;
        public readonly string StartTime;
        public readonly string Suggestions;

        [OutputConstructor]
        private GetDiagEventResult(
            string diagItem,

            string diagType,

            string endTime,

            int eventId,

            string explanation,

            string id,

            string instanceId,

            string metric,

            string outline,

            string problem,

            string? product,

            string? resultOutputFile,

            int severity,

            string startTime,

            string suggestions)
        {
            DiagItem = diagItem;
            DiagType = diagType;
            EndTime = endTime;
            EventId = eventId;
            Explanation = explanation;
            Id = id;
            InstanceId = instanceId;
            Metric = metric;
            Outline = outline;
            Problem = problem;
            Product = product;
            ResultOutputFile = resultOutputFile;
            Severity = severity;
            StartTime = startTime;
            Suggestions = suggestions;
        }
    }
}
