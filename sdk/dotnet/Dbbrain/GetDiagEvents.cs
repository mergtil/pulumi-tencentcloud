// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Dbbrain
{
    public static class GetDiagEvents
    {
        public static Task<GetDiagEventsResult> InvokeAsync(GetDiagEventsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDiagEventsResult>("tencentcloud:Dbbrain/getDiagEvents:getDiagEvents", args ?? new GetDiagEventsArgs(), options.WithDefaults());

        public static Output<GetDiagEventsResult> Invoke(GetDiagEventsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDiagEventsResult>("tencentcloud:Dbbrain/getDiagEvents:getDiagEvents", args ?? new GetDiagEventsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDiagEventsArgs : global::Pulumi.InvokeArgs
    {
        [Input("endTime", required: true)]
        public string EndTime { get; set; } = null!;

        [Input("instanceIds")]
        private List<string>? _instanceIds;
        public List<string> InstanceIds
        {
            get => _instanceIds ?? (_instanceIds = new List<string>());
            set => _instanceIds = value;
        }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("severities")]
        private List<int>? _severities;
        public List<int> Severities
        {
            get => _severities ?? (_severities = new List<int>());
            set => _severities = value;
        }

        [Input("startTime", required: true)]
        public string StartTime { get; set; } = null!;

        public GetDiagEventsArgs()
        {
        }
        public static new GetDiagEventsArgs Empty => new GetDiagEventsArgs();
    }

    public sealed class GetDiagEventsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("endTime", required: true)]
        public Input<string> EndTime { get; set; } = null!;

        [Input("instanceIds")]
        private InputList<string>? _instanceIds;
        public InputList<string> InstanceIds
        {
            get => _instanceIds ?? (_instanceIds = new InputList<string>());
            set => _instanceIds = value;
        }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("severities")]
        private InputList<int>? _severities;
        public InputList<int> Severities
        {
            get => _severities ?? (_severities = new InputList<int>());
            set => _severities = value;
        }

        [Input("startTime", required: true)]
        public Input<string> StartTime { get; set; } = null!;

        public GetDiagEventsInvokeArgs()
        {
        }
        public static new GetDiagEventsInvokeArgs Empty => new GetDiagEventsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDiagEventsResult
    {
        public readonly string EndTime;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> InstanceIds;
        public readonly ImmutableArray<Outputs.GetDiagEventsListResult> Lists;
        public readonly string? ResultOutputFile;
        public readonly ImmutableArray<int> Severities;
        public readonly string StartTime;

        [OutputConstructor]
        private GetDiagEventsResult(
            string endTime,

            string id,

            ImmutableArray<string> instanceIds,

            ImmutableArray<Outputs.GetDiagEventsListResult> lists,

            string? resultOutputFile,

            ImmutableArray<int> severities,

            string startTime)
        {
            EndTime = endTime;
            Id = id;
            InstanceIds = instanceIds;
            Lists = lists;
            ResultOutputFile = resultOutputFile;
            Severities = severities;
            StartTime = startTime;
        }
    }
}
