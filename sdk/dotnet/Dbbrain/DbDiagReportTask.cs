// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Dbbrain
{
    [TencentcloudResourceType("tencentcloud:Dbbrain/dbDiagReportTask:DbDiagReportTask")]
    public partial class DbDiagReportTask : global::Pulumi.CustomResource
    {
        /// <summary>
        /// An array of contact group IDs to receive mail from.
        /// </summary>
        [Output("contactGroups")]
        public Output<ImmutableArray<int>> ContactGroups { get; private set; } = null!;

        /// <summary>
        /// An array of contact IDs to receive emails from.
        /// </summary>
        [Output("contactPeople")]
        public Output<ImmutableArray<int>> ContactPeople { get; private set; } = null!;

        /// <summary>
        /// End time, such as 2020-11-09T14:00:00+08:00.
        /// </summary>
        [Output("endTime")]
        public Output<string> EndTime { get; private set; } = null!;

        /// <summary>
        /// instance id.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// Service product type, supported values include: mysql - cloud database MySQL, cynosdb - cloud database CynosDB for
        /// MySQL.
        /// </summary>
        [Output("product")]
        public Output<string> Product { get; private set; } = null!;

        /// <summary>
        /// Whether to send mail: 0 - no, 1 - yes.
        /// </summary>
        [Output("sendMailFlag")]
        public Output<int> SendMailFlag { get; private set; } = null!;

        /// <summary>
        /// Start time, such as 2020-11-08T14:00:00+08:00.
        /// </summary>
        [Output("startTime")]
        public Output<string> StartTime { get; private set; } = null!;


        /// <summary>
        /// Create a DbDiagReportTask resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DbDiagReportTask(string name, DbDiagReportTaskArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Dbbrain/dbDiagReportTask:DbDiagReportTask", name, args ?? new DbDiagReportTaskArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DbDiagReportTask(string name, Input<string> id, DbDiagReportTaskState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Dbbrain/dbDiagReportTask:DbDiagReportTask", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DbDiagReportTask resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DbDiagReportTask Get(string name, Input<string> id, DbDiagReportTaskState? state = null, CustomResourceOptions? options = null)
        {
            return new DbDiagReportTask(name, id, state, options);
        }
    }

    public sealed class DbDiagReportTaskArgs : global::Pulumi.ResourceArgs
    {
        [Input("contactGroups")]
        private InputList<int>? _contactGroups;

        /// <summary>
        /// An array of contact group IDs to receive mail from.
        /// </summary>
        public InputList<int> ContactGroups
        {
            get => _contactGroups ?? (_contactGroups = new InputList<int>());
            set => _contactGroups = value;
        }

        [Input("contactPeople")]
        private InputList<int>? _contactPeople;

        /// <summary>
        /// An array of contact IDs to receive emails from.
        /// </summary>
        public InputList<int> ContactPeople
        {
            get => _contactPeople ?? (_contactPeople = new InputList<int>());
            set => _contactPeople = value;
        }

        /// <summary>
        /// End time, such as 2020-11-09T14:00:00+08:00.
        /// </summary>
        [Input("endTime", required: true)]
        public Input<string> EndTime { get; set; } = null!;

        /// <summary>
        /// instance id.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// Service product type, supported values include: mysql - cloud database MySQL, cynosdb - cloud database CynosDB for
        /// MySQL.
        /// </summary>
        [Input("product", required: true)]
        public Input<string> Product { get; set; } = null!;

        /// <summary>
        /// Whether to send mail: 0 - no, 1 - yes.
        /// </summary>
        [Input("sendMailFlag", required: true)]
        public Input<int> SendMailFlag { get; set; } = null!;

        /// <summary>
        /// Start time, such as 2020-11-08T14:00:00+08:00.
        /// </summary>
        [Input("startTime", required: true)]
        public Input<string> StartTime { get; set; } = null!;

        public DbDiagReportTaskArgs()
        {
        }
        public static new DbDiagReportTaskArgs Empty => new DbDiagReportTaskArgs();
    }

    public sealed class DbDiagReportTaskState : global::Pulumi.ResourceArgs
    {
        [Input("contactGroups")]
        private InputList<int>? _contactGroups;

        /// <summary>
        /// An array of contact group IDs to receive mail from.
        /// </summary>
        public InputList<int> ContactGroups
        {
            get => _contactGroups ?? (_contactGroups = new InputList<int>());
            set => _contactGroups = value;
        }

        [Input("contactPeople")]
        private InputList<int>? _contactPeople;

        /// <summary>
        /// An array of contact IDs to receive emails from.
        /// </summary>
        public InputList<int> ContactPeople
        {
            get => _contactPeople ?? (_contactPeople = new InputList<int>());
            set => _contactPeople = value;
        }

        /// <summary>
        /// End time, such as 2020-11-09T14:00:00+08:00.
        /// </summary>
        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        /// <summary>
        /// instance id.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// Service product type, supported values include: mysql - cloud database MySQL, cynosdb - cloud database CynosDB for
        /// MySQL.
        /// </summary>
        [Input("product")]
        public Input<string>? Product { get; set; }

        /// <summary>
        /// Whether to send mail: 0 - no, 1 - yes.
        /// </summary>
        [Input("sendMailFlag")]
        public Input<int>? SendMailFlag { get; set; }

        /// <summary>
        /// Start time, such as 2020-11-08T14:00:00+08:00.
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        public DbDiagReportTaskState()
        {
        }
        public static new DbDiagReportTaskState Empty => new DbDiagReportTaskState();
    }
}
