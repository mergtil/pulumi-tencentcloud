// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Dbbrain
{
    public static class GetDiagDbInstances
    {
        public static Task<GetDiagDbInstancesResult> InvokeAsync(GetDiagDbInstancesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDiagDbInstancesResult>("tencentcloud:Dbbrain/getDiagDbInstances:getDiagDbInstances", args ?? new GetDiagDbInstancesArgs(), options.WithDefaults());

        public static Output<GetDiagDbInstancesResult> Invoke(GetDiagDbInstancesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDiagDbInstancesResult>("tencentcloud:Dbbrain/getDiagDbInstances:getDiagDbInstances", args ?? new GetDiagDbInstancesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDiagDbInstancesArgs : global::Pulumi.InvokeArgs
    {
        [Input("instanceIds")]
        private List<string>? _instanceIds;
        public List<string> InstanceIds
        {
            get => _instanceIds ?? (_instanceIds = new List<string>());
            set => _instanceIds = value;
        }

        [Input("instanceNames")]
        private List<string>? _instanceNames;
        public List<string> InstanceNames
        {
            get => _instanceNames ?? (_instanceNames = new List<string>());
            set => _instanceNames = value;
        }

        [Input("isSupported", required: true)]
        public bool IsSupported { get; set; }

        [Input("product", required: true)]
        public string Product { get; set; } = null!;

        [Input("regions")]
        private List<string>? _regions;
        public List<string> Regions
        {
            get => _regions ?? (_regions = new List<string>());
            set => _regions = value;
        }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetDiagDbInstancesArgs()
        {
        }
        public static new GetDiagDbInstancesArgs Empty => new GetDiagDbInstancesArgs();
    }

    public sealed class GetDiagDbInstancesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("instanceIds")]
        private InputList<string>? _instanceIds;
        public InputList<string> InstanceIds
        {
            get => _instanceIds ?? (_instanceIds = new InputList<string>());
            set => _instanceIds = value;
        }

        [Input("instanceNames")]
        private InputList<string>? _instanceNames;
        public InputList<string> InstanceNames
        {
            get => _instanceNames ?? (_instanceNames = new InputList<string>());
            set => _instanceNames = value;
        }

        [Input("isSupported", required: true)]
        public Input<bool> IsSupported { get; set; } = null!;

        [Input("product", required: true)]
        public Input<string> Product { get; set; } = null!;

        [Input("regions")]
        private InputList<string>? _regions;
        public InputList<string> Regions
        {
            get => _regions ?? (_regions = new InputList<string>());
            set => _regions = value;
        }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetDiagDbInstancesInvokeArgs()
        {
        }
        public static new GetDiagDbInstancesInvokeArgs Empty => new GetDiagDbInstancesInvokeArgs();
    }


    [OutputType]
    public sealed class GetDiagDbInstancesResult
    {
        public readonly int DbScanStatus;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> InstanceIds;
        public readonly ImmutableArray<string> InstanceNames;
        public readonly bool IsSupported;
        public readonly ImmutableArray<Outputs.GetDiagDbInstancesItemResult> Items;
        public readonly string Product;
        public readonly ImmutableArray<string> Regions;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetDiagDbInstancesResult(
            int dbScanStatus,

            string id,

            ImmutableArray<string> instanceIds,

            ImmutableArray<string> instanceNames,

            bool isSupported,

            ImmutableArray<Outputs.GetDiagDbInstancesItemResult> items,

            string product,

            ImmutableArray<string> regions,

            string? resultOutputFile)
        {
            DbScanStatus = dbScanStatus;
            Id = id;
            InstanceIds = instanceIds;
            InstanceNames = instanceNames;
            IsSupported = isSupported;
            Items = items;
            Product = product;
            Regions = regions;
            ResultOutputFile = resultOutputFile;
        }
    }
}
