// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Tcaplus
{
    [TencentcloudResourceType("tencentcloud:Tcaplus/cluster:Cluster")]
    public partial class Cluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Access ID of the TcaplusDB cluster.For TcaplusDB SDK connect.
        /// </summary>
        [Output("apiAccessId")]
        public Output<string> ApiAccessId { get; private set; } = null!;

        /// <summary>
        /// Access IP of the TcaplusDB cluster.For TcaplusDB SDK connect.
        /// </summary>
        [Output("apiAccessIp")]
        public Output<string> ApiAccessIp { get; private set; } = null!;

        /// <summary>
        /// Access port of the TcaplusDB cluster.For TcaplusDB SDK connect.
        /// </summary>
        [Output("apiAccessPort")]
        public Output<int> ApiAccessPort { get; private set; } = null!;

        /// <summary>
        /// Name of the TcaplusDB cluster. Name length should be between 1 and 30.
        /// </summary>
        [Output("clusterName")]
        public Output<string> ClusterName { get; private set; } = null!;

        /// <summary>
        /// Create time of the TcaplusDB cluster.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// IDL type of the TcaplusDB cluster. Valid values: `PROTO` and `TDR`.
        /// </summary>
        [Output("idlType")]
        public Output<string> IdlType { get; private set; } = null!;

        /// <summary>
        /// Network type of the TcaplusDB cluster.
        /// </summary>
        [Output("networkType")]
        public Output<string> NetworkType { get; private set; } = null!;

        /// <summary>
        /// Expiration time of old password after password update, unit: second.
        /// </summary>
        [Output("oldPasswordExpireLast")]
        public Output<int?> OldPasswordExpireLast { get; private set; } = null!;

        /// <summary>
        /// Expiration time of the old password. If `password_status` is `unmodifiable`, it means the old password has not yet
        /// expired.
        /// </summary>
        [Output("oldPasswordExpireTime")]
        public Output<string> OldPasswordExpireTime { get; private set; } = null!;

        /// <summary>
        /// Password of the TcaplusDB cluster. Password length should be between 12 and 16. The password must be a *mix* of
        /// uppercase letters (A-Z), lowercase *letters* (a-z) and *numbers* (0-9).
        /// </summary>
        [Output("password")]
        public Output<string> Password { get; private set; } = null!;

        /// <summary>
        /// Password status of the TcaplusDB cluster. Valid values: `unmodifiable`, `modifiable`. `unmodifiable`. which means the
        /// password can not be changed in this moment; `modifiable`, which means the password can be changed in this moment.
        /// </summary>
        [Output("passwordStatus")]
        public Output<string> PasswordStatus { get; private set; } = null!;

        /// <summary>
        /// Subnet id of the TcaplusDB cluster.
        /// </summary>
        [Output("subnetId")]
        public Output<string> SubnetId { get; private set; } = null!;

        /// <summary>
        /// VPC id of the TcaplusDB cluster.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a Cluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Cluster(string name, ClusterArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Tcaplus/cluster:Cluster", name, args ?? new ClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Cluster(string name, Input<string> id, ClusterState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Tcaplus/cluster:Cluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "password",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Cluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Cluster Get(string name, Input<string> id, ClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new Cluster(name, id, state, options);
        }
    }

    public sealed class ClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the TcaplusDB cluster. Name length should be between 1 and 30.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// IDL type of the TcaplusDB cluster. Valid values: `PROTO` and `TDR`.
        /// </summary>
        [Input("idlType", required: true)]
        public Input<string> IdlType { get; set; } = null!;

        /// <summary>
        /// Expiration time of old password after password update, unit: second.
        /// </summary>
        [Input("oldPasswordExpireLast")]
        public Input<int>? OldPasswordExpireLast { get; set; }

        [Input("password", required: true)]
        private Input<string>? _password;

        /// <summary>
        /// Password of the TcaplusDB cluster. Password length should be between 12 and 16. The password must be a *mix* of
        /// uppercase letters (A-Z), lowercase *letters* (a-z) and *numbers* (0-9).
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Subnet id of the TcaplusDB cluster.
        /// </summary>
        [Input("subnetId", required: true)]
        public Input<string> SubnetId { get; set; } = null!;

        /// <summary>
        /// VPC id of the TcaplusDB cluster.
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        public ClusterArgs()
        {
        }
        public static new ClusterArgs Empty => new ClusterArgs();
    }

    public sealed class ClusterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Access ID of the TcaplusDB cluster.For TcaplusDB SDK connect.
        /// </summary>
        [Input("apiAccessId")]
        public Input<string>? ApiAccessId { get; set; }

        /// <summary>
        /// Access IP of the TcaplusDB cluster.For TcaplusDB SDK connect.
        /// </summary>
        [Input("apiAccessIp")]
        public Input<string>? ApiAccessIp { get; set; }

        /// <summary>
        /// Access port of the TcaplusDB cluster.For TcaplusDB SDK connect.
        /// </summary>
        [Input("apiAccessPort")]
        public Input<int>? ApiAccessPort { get; set; }

        /// <summary>
        /// Name of the TcaplusDB cluster. Name length should be between 1 and 30.
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        /// <summary>
        /// Create time of the TcaplusDB cluster.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// IDL type of the TcaplusDB cluster. Valid values: `PROTO` and `TDR`.
        /// </summary>
        [Input("idlType")]
        public Input<string>? IdlType { get; set; }

        /// <summary>
        /// Network type of the TcaplusDB cluster.
        /// </summary>
        [Input("networkType")]
        public Input<string>? NetworkType { get; set; }

        /// <summary>
        /// Expiration time of old password after password update, unit: second.
        /// </summary>
        [Input("oldPasswordExpireLast")]
        public Input<int>? OldPasswordExpireLast { get; set; }

        /// <summary>
        /// Expiration time of the old password. If `password_status` is `unmodifiable`, it means the old password has not yet
        /// expired.
        /// </summary>
        [Input("oldPasswordExpireTime")]
        public Input<string>? OldPasswordExpireTime { get; set; }

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// Password of the TcaplusDB cluster. Password length should be between 12 and 16. The password must be a *mix* of
        /// uppercase letters (A-Z), lowercase *letters* (a-z) and *numbers* (0-9).
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Password status of the TcaplusDB cluster. Valid values: `unmodifiable`, `modifiable`. `unmodifiable`. which means the
        /// password can not be changed in this moment; `modifiable`, which means the password can be changed in this moment.
        /// </summary>
        [Input("passwordStatus")]
        public Input<string>? PasswordStatus { get; set; }

        /// <summary>
        /// Subnet id of the TcaplusDB cluster.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// VPC id of the TcaplusDB cluster.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public ClusterState()
        {
        }
        public static new ClusterState Empty => new ClusterState();
    }
}
