// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Lighthouse
{
    [TencentcloudResourceType("tencentcloud:Lighthouse/renewDisk:RenewDisk")]
    public partial class RenewDisk : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether to automatically use the voucher. Not used by default.
        /// </summary>
        [Output("autoVoucher")]
        public Output<bool?> AutoVoucher { get; private set; } = null!;

        /// <summary>
        /// List of disk ID.
        /// </summary>
        [Output("diskId")]
        public Output<string> DiskId { get; private set; } = null!;

        /// <summary>
        /// Renew cloud hard disk subscription related parameter settings.
        /// </summary>
        [Output("renewDiskChargePrepaid")]
        public Output<Outputs.RenewDiskRenewDiskChargePrepaid> RenewDiskChargePrepaid { get; private set; } = null!;


        /// <summary>
        /// Create a RenewDisk resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RenewDisk(string name, RenewDiskArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Lighthouse/renewDisk:RenewDisk", name, args ?? new RenewDiskArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RenewDisk(string name, Input<string> id, RenewDiskState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Lighthouse/renewDisk:RenewDisk", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RenewDisk resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RenewDisk Get(string name, Input<string> id, RenewDiskState? state = null, CustomResourceOptions? options = null)
        {
            return new RenewDisk(name, id, state, options);
        }
    }

    public sealed class RenewDiskArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to automatically use the voucher. Not used by default.
        /// </summary>
        [Input("autoVoucher")]
        public Input<bool>? AutoVoucher { get; set; }

        /// <summary>
        /// List of disk ID.
        /// </summary>
        [Input("diskId", required: true)]
        public Input<string> DiskId { get; set; } = null!;

        /// <summary>
        /// Renew cloud hard disk subscription related parameter settings.
        /// </summary>
        [Input("renewDiskChargePrepaid", required: true)]
        public Input<Inputs.RenewDiskRenewDiskChargePrepaidArgs> RenewDiskChargePrepaid { get; set; } = null!;

        public RenewDiskArgs()
        {
        }
        public static new RenewDiskArgs Empty => new RenewDiskArgs();
    }

    public sealed class RenewDiskState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to automatically use the voucher. Not used by default.
        /// </summary>
        [Input("autoVoucher")]
        public Input<bool>? AutoVoucher { get; set; }

        /// <summary>
        /// List of disk ID.
        /// </summary>
        [Input("diskId")]
        public Input<string>? DiskId { get; set; }

        /// <summary>
        /// Renew cloud hard disk subscription related parameter settings.
        /// </summary>
        [Input("renewDiskChargePrepaid")]
        public Input<Inputs.RenewDiskRenewDiskChargePrepaidGetArgs>? RenewDiskChargePrepaid { get; set; }

        public RenewDiskState()
        {
        }
        public static new RenewDiskState Empty => new RenewDiskState();
    }
}
