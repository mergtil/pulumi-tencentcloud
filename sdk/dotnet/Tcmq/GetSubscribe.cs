// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Tcmq
{
    public static class GetSubscribe
    {
        public static Task<GetSubscribeResult> InvokeAsync(GetSubscribeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSubscribeResult>("tencentcloud:Tcmq/getSubscribe:getSubscribe", args ?? new GetSubscribeArgs(), options.WithDefaults());

        public static Output<GetSubscribeResult> Invoke(GetSubscribeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSubscribeResult>("tencentcloud:Tcmq/getSubscribe:getSubscribe", args ?? new GetSubscribeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSubscribeArgs : global::Pulumi.InvokeArgs
    {
        [Input("limit")]
        public int? Limit { get; set; }

        [Input("offset")]
        public int? Offset { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("subscriptionName")]
        public string? SubscriptionName { get; set; }

        [Input("topicName", required: true)]
        public string TopicName { get; set; } = null!;

        public GetSubscribeArgs()
        {
        }
        public static new GetSubscribeArgs Empty => new GetSubscribeArgs();
    }

    public sealed class GetSubscribeInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("offset")]
        public Input<int>? Offset { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("subscriptionName")]
        public Input<string>? SubscriptionName { get; set; }

        [Input("topicName", required: true)]
        public Input<string> TopicName { get; set; } = null!;

        public GetSubscribeInvokeArgs()
        {
        }
        public static new GetSubscribeInvokeArgs Empty => new GetSubscribeInvokeArgs();
    }


    [OutputType]
    public sealed class GetSubscribeResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int? Limit;
        public readonly int? Offset;
        public readonly string? ResultOutputFile;
        public readonly ImmutableArray<Outputs.GetSubscribeSubscriptionListResult> SubscriptionLists;
        public readonly string? SubscriptionName;
        public readonly string TopicName;

        [OutputConstructor]
        private GetSubscribeResult(
            string id,

            int? limit,

            int? offset,

            string? resultOutputFile,

            ImmutableArray<Outputs.GetSubscribeSubscriptionListResult> subscriptionLists,

            string? subscriptionName,

            string topicName)
        {
            Id = id;
            Limit = limit;
            Offset = offset;
            ResultOutputFile = resultOutputFile;
            SubscriptionLists = subscriptionLists;
            SubscriptionName = subscriptionName;
            TopicName = topicName;
        }
    }
}
