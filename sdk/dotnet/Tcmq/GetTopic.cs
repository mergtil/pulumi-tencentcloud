// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Tcmq
{
    public static class GetTopic
    {
        public static Task<GetTopicResult> InvokeAsync(GetTopicArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTopicResult>("tencentcloud:Tcmq/getTopic:getTopic", args ?? new GetTopicArgs(), options.WithDefaults());

        public static Output<GetTopicResult> Invoke(GetTopicInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTopicResult>("tencentcloud:Tcmq/getTopic:getTopic", args ?? new GetTopicInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTopicArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetTopicFilterArgs>? _filters;
        public List<Inputs.GetTopicFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetTopicFilterArgs>());
            set => _filters = value;
        }

        [Input("isTagFilter")]
        public bool? IsTagFilter { get; set; }

        [Input("limit")]
        public int? Limit { get; set; }

        [Input("offset")]
        public int? Offset { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("topicName")]
        public string? TopicName { get; set; }

        [Input("topicNameLists")]
        private List<string>? _topicNameLists;
        public List<string> TopicNameLists
        {
            get => _topicNameLists ?? (_topicNameLists = new List<string>());
            set => _topicNameLists = value;
        }

        public GetTopicArgs()
        {
        }
        public static new GetTopicArgs Empty => new GetTopicArgs();
    }

    public sealed class GetTopicInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetTopicFilterInputArgs>? _filters;
        public InputList<Inputs.GetTopicFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetTopicFilterInputArgs>());
            set => _filters = value;
        }

        [Input("isTagFilter")]
        public Input<bool>? IsTagFilter { get; set; }

        [Input("limit")]
        public Input<int>? Limit { get; set; }

        [Input("offset")]
        public Input<int>? Offset { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("topicName")]
        public Input<string>? TopicName { get; set; }

        [Input("topicNameLists")]
        private InputList<string>? _topicNameLists;
        public InputList<string> TopicNameLists
        {
            get => _topicNameLists ?? (_topicNameLists = new InputList<string>());
            set => _topicNameLists = value;
        }

        public GetTopicInvokeArgs()
        {
        }
        public static new GetTopicInvokeArgs Empty => new GetTopicInvokeArgs();
    }


    [OutputType]
    public sealed class GetTopicResult
    {
        public readonly ImmutableArray<Outputs.GetTopicFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IsTagFilter;
        public readonly int? Limit;
        public readonly int? Offset;
        public readonly string? ResultOutputFile;
        public readonly ImmutableArray<Outputs.GetTopicTopicListResult> TopicLists;
        public readonly string? TopicName;
        public readonly ImmutableArray<string> TopicNameLists;

        [OutputConstructor]
        private GetTopicResult(
            ImmutableArray<Outputs.GetTopicFilterResult> filters,

            string id,

            bool? isTagFilter,

            int? limit,

            int? offset,

            string? resultOutputFile,

            ImmutableArray<Outputs.GetTopicTopicListResult> topicLists,

            string? topicName,

            ImmutableArray<string> topicNameLists)
        {
            Filters = filters;
            Id = id;
            IsTagFilter = isTagFilter;
            Limit = limit;
            Offset = offset;
            ResultOutputFile = resultOutputFile;
            TopicLists = topicLists;
            TopicName = topicName;
            TopicNameLists = topicNameLists;
        }
    }
}
