// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Tdmq
{
    public static class GetRocketmqCluster
    {
        public static Task<GetRocketmqClusterResult> InvokeAsync(GetRocketmqClusterArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRocketmqClusterResult>("tencentcloud:Tdmq/getRocketmqCluster:getRocketmqCluster", args ?? new GetRocketmqClusterArgs(), options.WithDefaults());

        public static Output<GetRocketmqClusterResult> Invoke(GetRocketmqClusterInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRocketmqClusterResult>("tencentcloud:Tdmq/getRocketmqCluster:getRocketmqCluster", args ?? new GetRocketmqClusterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRocketmqClusterArgs : global::Pulumi.InvokeArgs
    {
        [Input("clusterIdLists")]
        private List<string>? _clusterIdLists;
        public List<string> ClusterIdLists
        {
            get => _clusterIdLists ?? (_clusterIdLists = new List<string>());
            set => _clusterIdLists = value;
        }

        [Input("idKeyword")]
        public string? IdKeyword { get; set; }

        [Input("nameKeyword")]
        public string? NameKeyword { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetRocketmqClusterArgs()
        {
        }
        public static new GetRocketmqClusterArgs Empty => new GetRocketmqClusterArgs();
    }

    public sealed class GetRocketmqClusterInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("clusterIdLists")]
        private InputList<string>? _clusterIdLists;
        public InputList<string> ClusterIdLists
        {
            get => _clusterIdLists ?? (_clusterIdLists = new InputList<string>());
            set => _clusterIdLists = value;
        }

        [Input("idKeyword")]
        public Input<string>? IdKeyword { get; set; }

        [Input("nameKeyword")]
        public Input<string>? NameKeyword { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetRocketmqClusterInvokeArgs()
        {
        }
        public static new GetRocketmqClusterInvokeArgs Empty => new GetRocketmqClusterInvokeArgs();
    }


    [OutputType]
    public sealed class GetRocketmqClusterResult
    {
        public readonly ImmutableArray<string> ClusterIdLists;
        public readonly ImmutableArray<Outputs.GetRocketmqClusterClusterListResult> ClusterLists;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? IdKeyword;
        public readonly string? NameKeyword;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetRocketmqClusterResult(
            ImmutableArray<string> clusterIdLists,

            ImmutableArray<Outputs.GetRocketmqClusterClusterListResult> clusterLists,

            string id,

            string? idKeyword,

            string? nameKeyword,

            string? resultOutputFile)
        {
            ClusterIdLists = clusterIdLists;
            ClusterLists = clusterLists;
            Id = id;
            IdKeyword = idKeyword;
            NameKeyword = nameKeyword;
            ResultOutputFile = resultOutputFile;
        }
    }
}
