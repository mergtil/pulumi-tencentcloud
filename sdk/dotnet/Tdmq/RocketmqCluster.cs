// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Tdmq
{
    [TencentcloudResourceType("tencentcloud:Tdmq/rocketmqCluster:RocketmqCluster")]
    public partial class RocketmqCluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Cluster ID.
        /// </summary>
        [Output("clusterId")]
        public Output<string> ClusterId { get; private set; } = null!;

        /// <summary>
        /// Cluster name, which can contain 3-64 letters, digits, hyphens, and underscores.
        /// </summary>
        [Output("clusterName")]
        public Output<string> ClusterName { get; private set; } = null!;

        /// <summary>
        /// Creation time in milliseconds.
        /// </summary>
        [Output("createTime")]
        public Output<int> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Whether it is an exclusive instance.
        /// </summary>
        [Output("isVip")]
        public Output<bool> IsVip { get; private set; } = null!;

        /// <summary>
        /// Public network access address.
        /// </summary>
        [Output("publicEndPoint")]
        public Output<string> PublicEndPoint { get; private set; } = null!;

        /// <summary>
        /// Region information.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// Cluster description (up to 128 characters).
        /// </summary>
        [Output("remark")]
        public Output<string?> Remark { get; private set; } = null!;

        /// <summary>
        /// Rocketmq cluster identification.
        /// </summary>
        [Output("rocketMQFlag")]
        public Output<bool> RocketMQFlag { get; private set; } = null!;

        /// <summary>
        /// Whether the namespace access point is supported.
        /// </summary>
        [Output("supportNamespaceEndpoint")]
        public Output<bool> SupportNamespaceEndpoint { get; private set; } = null!;

        /// <summary>
        /// VPC access address.
        /// </summary>
        [Output("vpcEndPoint")]
        public Output<string> VpcEndPoint { get; private set; } = null!;

        /// <summary>
        /// Vpc list.
        /// </summary>
        [Output("vpcs")]
        public Output<ImmutableArray<Outputs.RocketmqClusterVpc>> Vpcs { get; private set; } = null!;


        /// <summary>
        /// Create a RocketmqCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RocketmqCluster(string name, RocketmqClusterArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Tdmq/rocketmqCluster:RocketmqCluster", name, args ?? new RocketmqClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RocketmqCluster(string name, Input<string> id, RocketmqClusterState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Tdmq/rocketmqCluster:RocketmqCluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RocketmqCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RocketmqCluster Get(string name, Input<string> id, RocketmqClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new RocketmqCluster(name, id, state, options);
        }
    }

    public sealed class RocketmqClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Cluster name, which can contain 3-64 letters, digits, hyphens, and underscores.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// Cluster description (up to 128 characters).
        /// </summary>
        [Input("remark")]
        public Input<string>? Remark { get; set; }

        public RocketmqClusterArgs()
        {
        }
        public static new RocketmqClusterArgs Empty => new RocketmqClusterArgs();
    }

    public sealed class RocketmqClusterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Cluster ID.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// Cluster name, which can contain 3-64 letters, digits, hyphens, and underscores.
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        /// <summary>
        /// Creation time in milliseconds.
        /// </summary>
        [Input("createTime")]
        public Input<int>? CreateTime { get; set; }

        /// <summary>
        /// Whether it is an exclusive instance.
        /// </summary>
        [Input("isVip")]
        public Input<bool>? IsVip { get; set; }

        /// <summary>
        /// Public network access address.
        /// </summary>
        [Input("publicEndPoint")]
        public Input<string>? PublicEndPoint { get; set; }

        /// <summary>
        /// Region information.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Cluster description (up to 128 characters).
        /// </summary>
        [Input("remark")]
        public Input<string>? Remark { get; set; }

        /// <summary>
        /// Rocketmq cluster identification.
        /// </summary>
        [Input("rocketMQFlag")]
        public Input<bool>? RocketMQFlag { get; set; }

        /// <summary>
        /// Whether the namespace access point is supported.
        /// </summary>
        [Input("supportNamespaceEndpoint")]
        public Input<bool>? SupportNamespaceEndpoint { get; set; }

        /// <summary>
        /// VPC access address.
        /// </summary>
        [Input("vpcEndPoint")]
        public Input<string>? VpcEndPoint { get; set; }

        [Input("vpcs")]
        private InputList<Inputs.RocketmqClusterVpcGetArgs>? _vpcs;

        /// <summary>
        /// Vpc list.
        /// </summary>
        public InputList<Inputs.RocketmqClusterVpcGetArgs> Vpcs
        {
            get => _vpcs ?? (_vpcs = new InputList<Inputs.RocketmqClusterVpcGetArgs>());
            set => _vpcs = value;
        }

        public RocketmqClusterState()
        {
        }
        public static new RocketmqClusterState Empty => new RocketmqClusterState();
    }
}
