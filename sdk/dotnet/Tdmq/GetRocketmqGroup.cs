// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Tdmq
{
    public static class GetRocketmqGroup
    {
        public static Task<GetRocketmqGroupResult> InvokeAsync(GetRocketmqGroupArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRocketmqGroupResult>("tencentcloud:Tdmq/getRocketmqGroup:getRocketmqGroup", args ?? new GetRocketmqGroupArgs(), options.WithDefaults());

        public static Output<GetRocketmqGroupResult> Invoke(GetRocketmqGroupInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRocketmqGroupResult>("tencentcloud:Tdmq/getRocketmqGroup:getRocketmqGroup", args ?? new GetRocketmqGroupInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRocketmqGroupArgs : global::Pulumi.InvokeArgs
    {
        [Input("clusterId", required: true)]
        public string ClusterId { get; set; } = null!;

        [Input("filterGroup")]
        public string? FilterGroup { get; set; }

        [Input("filterOneGroup")]
        public string? FilterOneGroup { get; set; }

        [Input("filterTopic")]
        public string? FilterTopic { get; set; }

        [Input("namespaceId", required: true)]
        public string NamespaceId { get; set; } = null!;

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetRocketmqGroupArgs()
        {
        }
        public static new GetRocketmqGroupArgs Empty => new GetRocketmqGroupArgs();
    }

    public sealed class GetRocketmqGroupInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        [Input("filterGroup")]
        public Input<string>? FilterGroup { get; set; }

        [Input("filterOneGroup")]
        public Input<string>? FilterOneGroup { get; set; }

        [Input("filterTopic")]
        public Input<string>? FilterTopic { get; set; }

        [Input("namespaceId", required: true)]
        public Input<string> NamespaceId { get; set; } = null!;

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetRocketmqGroupInvokeArgs()
        {
        }
        public static new GetRocketmqGroupInvokeArgs Empty => new GetRocketmqGroupInvokeArgs();
    }


    [OutputType]
    public sealed class GetRocketmqGroupResult
    {
        public readonly string ClusterId;
        public readonly string? FilterGroup;
        public readonly string? FilterOneGroup;
        public readonly string? FilterTopic;
        public readonly ImmutableArray<Outputs.GetRocketmqGroupGroupResult> Groups;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string NamespaceId;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetRocketmqGroupResult(
            string clusterId,

            string? filterGroup,

            string? filterOneGroup,

            string? filterTopic,

            ImmutableArray<Outputs.GetRocketmqGroupGroupResult> groups,

            string id,

            string namespaceId,

            string? resultOutputFile)
        {
            ClusterId = clusterId;
            FilterGroup = filterGroup;
            FilterOneGroup = filterOneGroup;
            FilterTopic = filterTopic;
            Groups = groups;
            Id = id;
            NamespaceId = namespaceId;
            ResultOutputFile = resultOutputFile;
        }
    }
}
