// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Tdmq
{
    public static class GetRocketmqTopic
    {
        public static Task<GetRocketmqTopicResult> InvokeAsync(GetRocketmqTopicArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRocketmqTopicResult>("tencentcloud:Tdmq/getRocketmqTopic:getRocketmqTopic", args ?? new GetRocketmqTopicArgs(), options.WithDefaults());

        public static Output<GetRocketmqTopicResult> Invoke(GetRocketmqTopicInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRocketmqTopicResult>("tencentcloud:Tdmq/getRocketmqTopic:getRocketmqTopic", args ?? new GetRocketmqTopicInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRocketmqTopicArgs : global::Pulumi.InvokeArgs
    {
        [Input("clusterId", required: true)]
        public string ClusterId { get; set; } = null!;

        [Input("filterName")]
        public string? FilterName { get; set; }

        [Input("filterTypes")]
        private List<string>? _filterTypes;
        public List<string> FilterTypes
        {
            get => _filterTypes ?? (_filterTypes = new List<string>());
            set => _filterTypes = value;
        }

        [Input("namespaceId", required: true)]
        public string NamespaceId { get; set; } = null!;

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetRocketmqTopicArgs()
        {
        }
        public static new GetRocketmqTopicArgs Empty => new GetRocketmqTopicArgs();
    }

    public sealed class GetRocketmqTopicInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        [Input("filterName")]
        public Input<string>? FilterName { get; set; }

        [Input("filterTypes")]
        private InputList<string>? _filterTypes;
        public InputList<string> FilterTypes
        {
            get => _filterTypes ?? (_filterTypes = new InputList<string>());
            set => _filterTypes = value;
        }

        [Input("namespaceId", required: true)]
        public Input<string> NamespaceId { get; set; } = null!;

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetRocketmqTopicInvokeArgs()
        {
        }
        public static new GetRocketmqTopicInvokeArgs Empty => new GetRocketmqTopicInvokeArgs();
    }


    [OutputType]
    public sealed class GetRocketmqTopicResult
    {
        public readonly string ClusterId;
        public readonly string? FilterName;
        public readonly ImmutableArray<string> FilterTypes;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string NamespaceId;
        public readonly string? ResultOutputFile;
        public readonly ImmutableArray<Outputs.GetRocketmqTopicTopicResult> Topics;

        [OutputConstructor]
        private GetRocketmqTopicResult(
            string clusterId,

            string? filterName,

            ImmutableArray<string> filterTypes,

            string id,

            string namespaceId,

            string? resultOutputFile,

            ImmutableArray<Outputs.GetRocketmqTopicTopicResult> topics)
        {
            ClusterId = clusterId;
            FilterName = filterName;
            FilterTypes = filterTypes;
            Id = id;
            NamespaceId = namespaceId;
            ResultOutputFile = resultOutputFile;
            Topics = topics;
        }
    }
}
