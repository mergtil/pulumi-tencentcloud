// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Tdmq
{
    [TencentcloudResourceType("tencentcloud:Tdmq/rocketmqVipInstance:RocketmqVipInstance")]
    public partial class RocketmqVipInstance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Instance name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Number of nodes, minimum 2, maximum 20.
        /// </summary>
        [Output("nodeCount")]
        public Output<int> NodeCount { get; private set; } = null!;

        /// <summary>
        /// Instance specification: Basic type: `rocket-vip-basic-1`, Standard type: `rocket-vip-basic-2`, Advanced Type I:
        /// `rocket-vip-basic-3`, Advanced Type II: `rocket-vip-basic-4`.
        /// </summary>
        [Output("spec")]
        public Output<string> Spec { get; private set; } = null!;

        /// <summary>
        /// Single node storage space, in GB, minimum 200GB.
        /// </summary>
        [Output("storageSize")]
        public Output<int> StorageSize { get; private set; } = null!;

        /// <summary>
        /// Purchase period, in months.
        /// </summary>
        [Output("timeSpan")]
        public Output<int> TimeSpan { get; private set; } = null!;

        /// <summary>
        /// VPC information.
        /// </summary>
        [Output("vpcInfo")]
        public Output<Outputs.RocketmqVipInstanceVpcInfo> VpcInfo { get; private set; } = null!;

        /// <summary>
        /// The Zone ID list for node deployment, such as Guangzhou Zone 1, is 100001. For details, please refer to the official
        /// website of Tencent Cloud.
        /// </summary>
        [Output("zoneIds")]
        public Output<ImmutableArray<string>> ZoneIds { get; private set; } = null!;


        /// <summary>
        /// Create a RocketmqVipInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RocketmqVipInstance(string name, RocketmqVipInstanceArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Tdmq/rocketmqVipInstance:RocketmqVipInstance", name, args ?? new RocketmqVipInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RocketmqVipInstance(string name, Input<string> id, RocketmqVipInstanceState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Tdmq/rocketmqVipInstance:RocketmqVipInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RocketmqVipInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RocketmqVipInstance Get(string name, Input<string> id, RocketmqVipInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new RocketmqVipInstance(name, id, state, options);
        }
    }

    public sealed class RocketmqVipInstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Instance name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Number of nodes, minimum 2, maximum 20.
        /// </summary>
        [Input("nodeCount", required: true)]
        public Input<int> NodeCount { get; set; } = null!;

        /// <summary>
        /// Instance specification: Basic type: `rocket-vip-basic-1`, Standard type: `rocket-vip-basic-2`, Advanced Type I:
        /// `rocket-vip-basic-3`, Advanced Type II: `rocket-vip-basic-4`.
        /// </summary>
        [Input("spec", required: true)]
        public Input<string> Spec { get; set; } = null!;

        /// <summary>
        /// Single node storage space, in GB, minimum 200GB.
        /// </summary>
        [Input("storageSize", required: true)]
        public Input<int> StorageSize { get; set; } = null!;

        /// <summary>
        /// Purchase period, in months.
        /// </summary>
        [Input("timeSpan", required: true)]
        public Input<int> TimeSpan { get; set; } = null!;

        /// <summary>
        /// VPC information.
        /// </summary>
        [Input("vpcInfo", required: true)]
        public Input<Inputs.RocketmqVipInstanceVpcInfoArgs> VpcInfo { get; set; } = null!;

        [Input("zoneIds", required: true)]
        private InputList<string>? _zoneIds;

        /// <summary>
        /// The Zone ID list for node deployment, such as Guangzhou Zone 1, is 100001. For details, please refer to the official
        /// website of Tencent Cloud.
        /// </summary>
        public InputList<string> ZoneIds
        {
            get => _zoneIds ?? (_zoneIds = new InputList<string>());
            set => _zoneIds = value;
        }

        public RocketmqVipInstanceArgs()
        {
        }
        public static new RocketmqVipInstanceArgs Empty => new RocketmqVipInstanceArgs();
    }

    public sealed class RocketmqVipInstanceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Instance name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Number of nodes, minimum 2, maximum 20.
        /// </summary>
        [Input("nodeCount")]
        public Input<int>? NodeCount { get; set; }

        /// <summary>
        /// Instance specification: Basic type: `rocket-vip-basic-1`, Standard type: `rocket-vip-basic-2`, Advanced Type I:
        /// `rocket-vip-basic-3`, Advanced Type II: `rocket-vip-basic-4`.
        /// </summary>
        [Input("spec")]
        public Input<string>? Spec { get; set; }

        /// <summary>
        /// Single node storage space, in GB, minimum 200GB.
        /// </summary>
        [Input("storageSize")]
        public Input<int>? StorageSize { get; set; }

        /// <summary>
        /// Purchase period, in months.
        /// </summary>
        [Input("timeSpan")]
        public Input<int>? TimeSpan { get; set; }

        /// <summary>
        /// VPC information.
        /// </summary>
        [Input("vpcInfo")]
        public Input<Inputs.RocketmqVipInstanceVpcInfoGetArgs>? VpcInfo { get; set; }

        [Input("zoneIds")]
        private InputList<string>? _zoneIds;

        /// <summary>
        /// The Zone ID list for node deployment, such as Guangzhou Zone 1, is 100001. For details, please refer to the official
        /// website of Tencent Cloud.
        /// </summary>
        public InputList<string> ZoneIds
        {
            get => _zoneIds ?? (_zoneIds = new InputList<string>());
            set => _zoneIds = value;
        }

        public RocketmqVipInstanceState()
        {
        }
        public static new RocketmqVipInstanceState Empty => new RocketmqVipInstanceState();
    }
}
