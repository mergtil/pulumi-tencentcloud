// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Tdmq
{
    [TencentcloudResourceType("tencentcloud:Tdmq/subscriptionAttachment:SubscriptionAttachment")]
    public partial class SubscriptionAttachment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether to automatically create dead letters and retry topics, True means to create, False means not to create, the
        /// default is to automatically create dead letters and retry topics.
        /// </summary>
        [Output("autoCreatePolicyTopic")]
        public Output<bool?> AutoCreatePolicyTopic { get; private set; } = null!;

        /// <summary>
        /// ID of the Pulsar cluster.
        /// </summary>
        [Output("clusterId")]
        public Output<string?> ClusterId { get; private set; } = null!;

        /// <summary>
        /// Environment (namespace) name.
        /// </summary>
        [Output("environmentId")]
        public Output<string> EnvironmentId { get; private set; } = null!;

        /// <summary>
        /// Remarks, within 128 characters.
        /// </summary>
        [Output("remark")]
        public Output<string?> Remark { get; private set; } = null!;

        /// <summary>
        /// Subscriber name, no more than 128 characters.
        /// </summary>
        [Output("subscriptionName")]
        public Output<string> SubscriptionName { get; private set; } = null!;

        /// <summary>
        /// topic name.
        /// </summary>
        [Output("topicName")]
        public Output<string> TopicName { get; private set; } = null!;


        /// <summary>
        /// Create a SubscriptionAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SubscriptionAttachment(string name, SubscriptionAttachmentArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Tdmq/subscriptionAttachment:SubscriptionAttachment", name, args ?? new SubscriptionAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SubscriptionAttachment(string name, Input<string> id, SubscriptionAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Tdmq/subscriptionAttachment:SubscriptionAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SubscriptionAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SubscriptionAttachment Get(string name, Input<string> id, SubscriptionAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new SubscriptionAttachment(name, id, state, options);
        }
    }

    public sealed class SubscriptionAttachmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to automatically create dead letters and retry topics, True means to create, False means not to create, the
        /// default is to automatically create dead letters and retry topics.
        /// </summary>
        [Input("autoCreatePolicyTopic")]
        public Input<bool>? AutoCreatePolicyTopic { get; set; }

        /// <summary>
        /// ID of the Pulsar cluster.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// Environment (namespace) name.
        /// </summary>
        [Input("environmentId", required: true)]
        public Input<string> EnvironmentId { get; set; } = null!;

        /// <summary>
        /// Remarks, within 128 characters.
        /// </summary>
        [Input("remark")]
        public Input<string>? Remark { get; set; }

        /// <summary>
        /// Subscriber name, no more than 128 characters.
        /// </summary>
        [Input("subscriptionName", required: true)]
        public Input<string> SubscriptionName { get; set; } = null!;

        /// <summary>
        /// topic name.
        /// </summary>
        [Input("topicName", required: true)]
        public Input<string> TopicName { get; set; } = null!;

        public SubscriptionAttachmentArgs()
        {
        }
        public static new SubscriptionAttachmentArgs Empty => new SubscriptionAttachmentArgs();
    }

    public sealed class SubscriptionAttachmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to automatically create dead letters and retry topics, True means to create, False means not to create, the
        /// default is to automatically create dead letters and retry topics.
        /// </summary>
        [Input("autoCreatePolicyTopic")]
        public Input<bool>? AutoCreatePolicyTopic { get; set; }

        /// <summary>
        /// ID of the Pulsar cluster.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// Environment (namespace) name.
        /// </summary>
        [Input("environmentId")]
        public Input<string>? EnvironmentId { get; set; }

        /// <summary>
        /// Remarks, within 128 characters.
        /// </summary>
        [Input("remark")]
        public Input<string>? Remark { get; set; }

        /// <summary>
        /// Subscriber name, no more than 128 characters.
        /// </summary>
        [Input("subscriptionName")]
        public Input<string>? SubscriptionName { get; set; }

        /// <summary>
        /// topic name.
        /// </summary>
        [Input("topicName")]
        public Input<string>? TopicName { get; set; }

        public SubscriptionAttachmentState()
        {
        }
        public static new SubscriptionAttachmentState Empty => new SubscriptionAttachmentState();
    }
}
