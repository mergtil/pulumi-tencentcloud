// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Tdmq
{
    public static class GetPublishers
    {
        public static Task<GetPublishersResult> InvokeAsync(GetPublishersArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPublishersResult>("tencentcloud:Tdmq/getPublishers:getPublishers", args ?? new GetPublishersArgs(), options.WithDefaults());

        public static Output<GetPublishersResult> Invoke(GetPublishersInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPublishersResult>("tencentcloud:Tdmq/getPublishers:getPublishers", args ?? new GetPublishersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPublishersArgs : global::Pulumi.InvokeArgs
    {
        [Input("clusterId", required: true)]
        public string ClusterId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetPublishersFilterArgs>? _filters;
        public List<Inputs.GetPublishersFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetPublishersFilterArgs>());
            set => _filters = value;
        }

        [Input("namespace", required: true)]
        public string Namespace { get; set; } = null!;

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("sort")]
        public Inputs.GetPublishersSortArgs? Sort { get; set; }

        [Input("topic", required: true)]
        public string Topic { get; set; } = null!;

        public GetPublishersArgs()
        {
        }
        public static new GetPublishersArgs Empty => new GetPublishersArgs();
    }

    public sealed class GetPublishersInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetPublishersFilterInputArgs>? _filters;
        public InputList<Inputs.GetPublishersFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetPublishersFilterInputArgs>());
            set => _filters = value;
        }

        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("sort")]
        public Input<Inputs.GetPublishersSortInputArgs>? Sort { get; set; }

        [Input("topic", required: true)]
        public Input<string> Topic { get; set; } = null!;

        public GetPublishersInvokeArgs()
        {
        }
        public static new GetPublishersInvokeArgs Empty => new GetPublishersInvokeArgs();
    }


    [OutputType]
    public sealed class GetPublishersResult
    {
        public readonly string ClusterId;
        public readonly ImmutableArray<Outputs.GetPublishersFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Namespace;
        public readonly ImmutableArray<Outputs.GetPublishersPublisherResult> TdmqPublishers;
        public readonly string? ResultOutputFile;
        public readonly Outputs.GetPublishersSortResult? Sort;
        public readonly string Topic;

        [OutputConstructor]
        private GetPublishersResult(
            string clusterId,

            ImmutableArray<Outputs.GetPublishersFilterResult> filters,

            string id,

            string @namespace,

            ImmutableArray<Outputs.GetPublishersPublisherResult> publishers,

            string? resultOutputFile,

            Outputs.GetPublishersSortResult? sort,

            string topic)
        {
            ClusterId = clusterId;
            Filters = filters;
            Id = id;
            Namespace = @namespace;
            TdmqPublishers = publishers;
            ResultOutputFile = resultOutputFile;
            Sort = sort;
            Topic = topic;
        }
    }
}
