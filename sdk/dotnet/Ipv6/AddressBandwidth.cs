// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Ipv6
{
    [TencentcloudResourceType("tencentcloud:Ipv6/addressBandwidth:AddressBandwidth")]
    public partial class AddressBandwidth : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The bandwidth package id, the Legacy account and the ipv6 address to apply for the bandwidth package charge type need to
        /// be passed in.
        /// </summary>
        [Output("bandwidthPackageId")]
        public Output<string?> BandwidthPackageId { get; private set; } = null!;

        /// <summary>
        /// Network billing mode. IPV6 currently supports: `TRAFFIC_POSTPAID_BY_HOUR`, for standard account types;
        /// `BANDWIDTH_PACKAGE`, for traditional account types. The default network billing mode is: `TRAFFIC_POSTPAID_BY_HOUR`.
        /// </summary>
        [Output("internetChargeType")]
        public Output<string?> InternetChargeType { get; private set; } = null!;

        /// <summary>
        /// Bandwidth, in Mbps. The default is 1Mbps.
        /// </summary>
        [Output("internetMaxBandwidthOut")]
        public Output<int?> InternetMaxBandwidthOut { get; private set; } = null!;

        /// <summary>
        /// IPV6 address that needs to be enabled for public network access.
        /// </summary>
        [Output("ipv6Address")]
        public Output<string> Ipv6Address { get; private set; } = null!;


        /// <summary>
        /// Create a AddressBandwidth resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AddressBandwidth(string name, AddressBandwidthArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Ipv6/addressBandwidth:AddressBandwidth", name, args ?? new AddressBandwidthArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AddressBandwidth(string name, Input<string> id, AddressBandwidthState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Ipv6/addressBandwidth:AddressBandwidth", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AddressBandwidth resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AddressBandwidth Get(string name, Input<string> id, AddressBandwidthState? state = null, CustomResourceOptions? options = null)
        {
            return new AddressBandwidth(name, id, state, options);
        }
    }

    public sealed class AddressBandwidthArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The bandwidth package id, the Legacy account and the ipv6 address to apply for the bandwidth package charge type need to
        /// be passed in.
        /// </summary>
        [Input("bandwidthPackageId")]
        public Input<string>? BandwidthPackageId { get; set; }

        /// <summary>
        /// Network billing mode. IPV6 currently supports: `TRAFFIC_POSTPAID_BY_HOUR`, for standard account types;
        /// `BANDWIDTH_PACKAGE`, for traditional account types. The default network billing mode is: `TRAFFIC_POSTPAID_BY_HOUR`.
        /// </summary>
        [Input("internetChargeType")]
        public Input<string>? InternetChargeType { get; set; }

        /// <summary>
        /// Bandwidth, in Mbps. The default is 1Mbps.
        /// </summary>
        [Input("internetMaxBandwidthOut")]
        public Input<int>? InternetMaxBandwidthOut { get; set; }

        /// <summary>
        /// IPV6 address that needs to be enabled for public network access.
        /// </summary>
        [Input("ipv6Address", required: true)]
        public Input<string> Ipv6Address { get; set; } = null!;

        public AddressBandwidthArgs()
        {
        }
        public static new AddressBandwidthArgs Empty => new AddressBandwidthArgs();
    }

    public sealed class AddressBandwidthState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The bandwidth package id, the Legacy account and the ipv6 address to apply for the bandwidth package charge type need to
        /// be passed in.
        /// </summary>
        [Input("bandwidthPackageId")]
        public Input<string>? BandwidthPackageId { get; set; }

        /// <summary>
        /// Network billing mode. IPV6 currently supports: `TRAFFIC_POSTPAID_BY_HOUR`, for standard account types;
        /// `BANDWIDTH_PACKAGE`, for traditional account types. The default network billing mode is: `TRAFFIC_POSTPAID_BY_HOUR`.
        /// </summary>
        [Input("internetChargeType")]
        public Input<string>? InternetChargeType { get; set; }

        /// <summary>
        /// Bandwidth, in Mbps. The default is 1Mbps.
        /// </summary>
        [Input("internetMaxBandwidthOut")]
        public Input<int>? InternetMaxBandwidthOut { get; set; }

        /// <summary>
        /// IPV6 address that needs to be enabled for public network access.
        /// </summary>
        [Input("ipv6Address")]
        public Input<string>? Ipv6Address { get; set; }

        public AddressBandwidthState()
        {
        }
        public static new AddressBandwidthState Empty => new AddressBandwidthState();
    }
}
