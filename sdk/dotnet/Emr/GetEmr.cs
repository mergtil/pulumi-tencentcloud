// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Emr
{
    public static class GetEmr
    {
        public static Task<GetEmrResult> InvokeAsync(GetEmrArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEmrResult>("tencentcloud:Emr/getEmr:getEmr", args ?? new GetEmrArgs(), options.WithDefaults());

        public static Output<GetEmrResult> Invoke(GetEmrInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEmrResult>("tencentcloud:Emr/getEmr:getEmr", args ?? new GetEmrInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEmrArgs : global::Pulumi.InvokeArgs
    {
        [Input("displayStrategy", required: true)]
        public string DisplayStrategy { get; set; } = null!;

        [Input("instanceIds")]
        private List<string>? _instanceIds;
        public List<string> InstanceIds
        {
            get => _instanceIds ?? (_instanceIds = new List<string>());
            set => _instanceIds = value;
        }

        [Input("projectId")]
        public int? ProjectId { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetEmrArgs()
        {
        }
        public static new GetEmrArgs Empty => new GetEmrArgs();
    }

    public sealed class GetEmrInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("displayStrategy", required: true)]
        public Input<string> DisplayStrategy { get; set; } = null!;

        [Input("instanceIds")]
        private InputList<string>? _instanceIds;
        public InputList<string> InstanceIds
        {
            get => _instanceIds ?? (_instanceIds = new InputList<string>());
            set => _instanceIds = value;
        }

        [Input("projectId")]
        public Input<int>? ProjectId { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetEmrInvokeArgs()
        {
        }
        public static new GetEmrInvokeArgs Empty => new GetEmrInvokeArgs();
    }


    [OutputType]
    public sealed class GetEmrResult
    {
        public readonly ImmutableArray<Outputs.GetEmrClusterResult> Clusters;
        public readonly string DisplayStrategy;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> InstanceIds;
        public readonly int? ProjectId;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetEmrResult(
            ImmutableArray<Outputs.GetEmrClusterResult> clusters,

            string displayStrategy,

            string id,

            ImmutableArray<string> instanceIds,

            int? projectId,

            string? resultOutputFile)
        {
            Clusters = clusters;
            DisplayStrategy = displayStrategy;
            Id = id;
            InstanceIds = instanceIds;
            ProjectId = projectId;
            ResultOutputFile = resultOutputFile;
        }
    }
}
