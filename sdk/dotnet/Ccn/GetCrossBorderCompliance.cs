// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Ccn
{
    public static class GetCrossBorderCompliance
    {
        public static Task<GetCrossBorderComplianceResult> InvokeAsync(GetCrossBorderComplianceArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCrossBorderComplianceResult>("tencentcloud:Ccn/getCrossBorderCompliance:getCrossBorderCompliance", args ?? new GetCrossBorderComplianceArgs(), options.WithDefaults());

        public static Output<GetCrossBorderComplianceResult> Invoke(GetCrossBorderComplianceInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCrossBorderComplianceResult>("tencentcloud:Ccn/getCrossBorderCompliance:getCrossBorderCompliance", args ?? new GetCrossBorderComplianceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCrossBorderComplianceArgs : global::Pulumi.InvokeArgs
    {
        [Input("businessAddress")]
        public string? BusinessAddress { get; set; }

        [Input("company")]
        public string? Company { get; set; }

        [Input("complianceId")]
        public int? ComplianceId { get; set; }

        [Input("email")]
        public string? Email { get; set; }

        [Input("issuingAuthority")]
        public string? IssuingAuthority { get; set; }

        [Input("legalPerson")]
        public string? LegalPerson { get; set; }

        [Input("manager")]
        public string? Manager { get; set; }

        [Input("managerAddress")]
        public string? ManagerAddress { get; set; }

        [Input("managerId")]
        public string? ManagerId { get; set; }

        [Input("managerTelephone")]
        public string? ManagerTelephone { get; set; }

        [Input("postCode")]
        public int? PostCode { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("serviceEndDate")]
        public string? ServiceEndDate { get; set; }

        [Input("serviceProvider")]
        public string? ServiceProvider { get; set; }

        [Input("serviceStartDate")]
        public string? ServiceStartDate { get; set; }

        [Input("state")]
        public string? State { get; set; }

        [Input("uniformSocialCreditCode")]
        public string? UniformSocialCreditCode { get; set; }

        public GetCrossBorderComplianceArgs()
        {
        }
        public static new GetCrossBorderComplianceArgs Empty => new GetCrossBorderComplianceArgs();
    }

    public sealed class GetCrossBorderComplianceInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("businessAddress")]
        public Input<string>? BusinessAddress { get; set; }

        [Input("company")]
        public Input<string>? Company { get; set; }

        [Input("complianceId")]
        public Input<int>? ComplianceId { get; set; }

        [Input("email")]
        public Input<string>? Email { get; set; }

        [Input("issuingAuthority")]
        public Input<string>? IssuingAuthority { get; set; }

        [Input("legalPerson")]
        public Input<string>? LegalPerson { get; set; }

        [Input("manager")]
        public Input<string>? Manager { get; set; }

        [Input("managerAddress")]
        public Input<string>? ManagerAddress { get; set; }

        [Input("managerId")]
        public Input<string>? ManagerId { get; set; }

        [Input("managerTelephone")]
        public Input<string>? ManagerTelephone { get; set; }

        [Input("postCode")]
        public Input<int>? PostCode { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("serviceEndDate")]
        public Input<string>? ServiceEndDate { get; set; }

        [Input("serviceProvider")]
        public Input<string>? ServiceProvider { get; set; }

        [Input("serviceStartDate")]
        public Input<string>? ServiceStartDate { get; set; }

        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("uniformSocialCreditCode")]
        public Input<string>? UniformSocialCreditCode { get; set; }

        public GetCrossBorderComplianceInvokeArgs()
        {
        }
        public static new GetCrossBorderComplianceInvokeArgs Empty => new GetCrossBorderComplianceInvokeArgs();
    }


    [OutputType]
    public sealed class GetCrossBorderComplianceResult
    {
        public readonly string? BusinessAddress;
        public readonly string? Company;
        public readonly int? ComplianceId;
        public readonly string? Email;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? IssuingAuthority;
        public readonly string? LegalPerson;
        public readonly string? Manager;
        public readonly string? ManagerAddress;
        public readonly string? ManagerId;
        public readonly string? ManagerTelephone;
        public readonly int? PostCode;
        public readonly string? ResultOutputFile;
        public readonly string? ServiceEndDate;
        public readonly string? ServiceProvider;
        public readonly string? ServiceStartDate;
        public readonly string? State;
        public readonly string? UniformSocialCreditCode;

        [OutputConstructor]
        private GetCrossBorderComplianceResult(
            string? businessAddress,

            string? company,

            int? complianceId,

            string? email,

            string id,

            string? issuingAuthority,

            string? legalPerson,

            string? manager,

            string? managerAddress,

            string? managerId,

            string? managerTelephone,

            int? postCode,

            string? resultOutputFile,

            string? serviceEndDate,

            string? serviceProvider,

            string? serviceStartDate,

            string? state,

            string? uniformSocialCreditCode)
        {
            BusinessAddress = businessAddress;
            Company = company;
            ComplianceId = complianceId;
            Email = email;
            Id = id;
            IssuingAuthority = issuingAuthority;
            LegalPerson = legalPerson;
            Manager = manager;
            ManagerAddress = managerAddress;
            ManagerId = managerId;
            ManagerTelephone = managerTelephone;
            PostCode = postCode;
            ResultOutputFile = resultOutputFile;
            ServiceEndDate = serviceEndDate;
            ServiceProvider = serviceProvider;
            ServiceStartDate = serviceStartDate;
            State = state;
            UniformSocialCreditCode = uniformSocialCreditCode;
        }
    }
}
