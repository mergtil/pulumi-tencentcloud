// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Ccn
{
    [TencentcloudResourceType("tencentcloud:Ccn/ccn:Ccn")]
    public partial class Ccn : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The speed limit type. Valid values: `INTER_REGION_LIMIT`, `OUTER_REGION_LIMIT`. `OUTER_REGION_LIMIT` represents the
        /// regional export speed limit, `INTER_REGION_LIMIT` is the inter-regional speed limit. The default is
        /// `OUTER_REGION_LIMIT`.
        /// </summary>
        [Output("bandwidthLimitType")]
        public Output<string?> BandwidthLimitType { get; private set; } = null!;

        /// <summary>
        /// Billing mode. Valid values: `PREPAID`, `POSTPAID`. `PREPAID` means prepaid, which means annual and monthly subscription,
        /// `POSTPAID` means post-payment, which means billing by volume. The default is `POSTPAID`. The prepaid model only supports
        /// inter-regional speed limit, and the post-paid model supports inter-regional speed limit and regional export speed limit.
        /// </summary>
        [Output("chargeType")]
        public Output<string?> ChargeType { get; private set; } = null!;

        /// <summary>
        /// Creation time of resource.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Description of CCN, and maximum length does not exceed 100 bytes.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Number of attached instances.
        /// </summary>
        [Output("instanceCount")]
        public Output<int> InstanceCount { get; private set; } = null!;

        /// <summary>
        /// Name of the CCN to be queried, and maximum length does not exceed 60 bytes.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Service quality of CCN. Valid values: `PT`, `AU`, `AG`. The default is `AU`.
        /// </summary>
        [Output("qos")]
        public Output<string?> Qos { get; private set; } = null!;

        /// <summary>
        /// States of instance. Valid values: `ISOLATED`(arrears) and `AVAILABLE`.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Instance tag.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a Ccn resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Ccn(string name, CcnArgs? args = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Ccn/ccn:Ccn", name, args ?? new CcnArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Ccn(string name, Input<string> id, CcnState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Ccn/ccn:Ccn", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Ccn resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Ccn Get(string name, Input<string> id, CcnState? state = null, CustomResourceOptions? options = null)
        {
            return new Ccn(name, id, state, options);
        }
    }

    public sealed class CcnArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The speed limit type. Valid values: `INTER_REGION_LIMIT`, `OUTER_REGION_LIMIT`. `OUTER_REGION_LIMIT` represents the
        /// regional export speed limit, `INTER_REGION_LIMIT` is the inter-regional speed limit. The default is
        /// `OUTER_REGION_LIMIT`.
        /// </summary>
        [Input("bandwidthLimitType")]
        public Input<string>? BandwidthLimitType { get; set; }

        /// <summary>
        /// Billing mode. Valid values: `PREPAID`, `POSTPAID`. `PREPAID` means prepaid, which means annual and monthly subscription,
        /// `POSTPAID` means post-payment, which means billing by volume. The default is `POSTPAID`. The prepaid model only supports
        /// inter-regional speed limit, and the post-paid model supports inter-regional speed limit and regional export speed limit.
        /// </summary>
        [Input("chargeType")]
        public Input<string>? ChargeType { get; set; }

        /// <summary>
        /// Description of CCN, and maximum length does not exceed 100 bytes.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Name of the CCN to be queried, and maximum length does not exceed 60 bytes.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Service quality of CCN. Valid values: `PT`, `AU`, `AG`. The default is `AU`.
        /// </summary>
        [Input("qos")]
        public Input<string>? Qos { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Instance tag.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public CcnArgs()
        {
        }
        public static new CcnArgs Empty => new CcnArgs();
    }

    public sealed class CcnState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The speed limit type. Valid values: `INTER_REGION_LIMIT`, `OUTER_REGION_LIMIT`. `OUTER_REGION_LIMIT` represents the
        /// regional export speed limit, `INTER_REGION_LIMIT` is the inter-regional speed limit. The default is
        /// `OUTER_REGION_LIMIT`.
        /// </summary>
        [Input("bandwidthLimitType")]
        public Input<string>? BandwidthLimitType { get; set; }

        /// <summary>
        /// Billing mode. Valid values: `PREPAID`, `POSTPAID`. `PREPAID` means prepaid, which means annual and monthly subscription,
        /// `POSTPAID` means post-payment, which means billing by volume. The default is `POSTPAID`. The prepaid model only supports
        /// inter-regional speed limit, and the post-paid model supports inter-regional speed limit and regional export speed limit.
        /// </summary>
        [Input("chargeType")]
        public Input<string>? ChargeType { get; set; }

        /// <summary>
        /// Creation time of resource.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Description of CCN, and maximum length does not exceed 100 bytes.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Number of attached instances.
        /// </summary>
        [Input("instanceCount")]
        public Input<int>? InstanceCount { get; set; }

        /// <summary>
        /// Name of the CCN to be queried, and maximum length does not exceed 60 bytes.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Service quality of CCN. Valid values: `PT`, `AU`, `AG`. The default is `AU`.
        /// </summary>
        [Input("qos")]
        public Input<string>? Qos { get; set; }

        /// <summary>
        /// States of instance. Valid values: `ISOLATED`(arrears) and `AVAILABLE`.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Instance tag.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public CcnState()
        {
        }
        public static new CcnState Empty => new CcnState();
    }
}
