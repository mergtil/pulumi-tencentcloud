// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Ccn
{
    public static class GetCrossBorderFlowMonitor
    {
        public static Task<GetCrossBorderFlowMonitorResult> InvokeAsync(GetCrossBorderFlowMonitorArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCrossBorderFlowMonitorResult>("tencentcloud:Ccn/getCrossBorderFlowMonitor:getCrossBorderFlowMonitor", args ?? new GetCrossBorderFlowMonitorArgs(), options.WithDefaults());

        public static Output<GetCrossBorderFlowMonitorResult> Invoke(GetCrossBorderFlowMonitorInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCrossBorderFlowMonitorResult>("tencentcloud:Ccn/getCrossBorderFlowMonitor:getCrossBorderFlowMonitor", args ?? new GetCrossBorderFlowMonitorInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCrossBorderFlowMonitorArgs : global::Pulumi.InvokeArgs
    {
        [Input("ccnId", required: true)]
        public string CcnId { get; set; } = null!;

        [Input("ccnUin", required: true)]
        public string CcnUin { get; set; } = null!;

        [Input("destinationRegion", required: true)]
        public string DestinationRegion { get; set; } = null!;

        [Input("endTime", required: true)]
        public string EndTime { get; set; } = null!;

        [Input("period", required: true)]
        public int Period { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("sourceRegion", required: true)]
        public string SourceRegion { get; set; } = null!;

        [Input("startTime", required: true)]
        public string StartTime { get; set; } = null!;

        public GetCrossBorderFlowMonitorArgs()
        {
        }
        public static new GetCrossBorderFlowMonitorArgs Empty => new GetCrossBorderFlowMonitorArgs();
    }

    public sealed class GetCrossBorderFlowMonitorInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ccnId", required: true)]
        public Input<string> CcnId { get; set; } = null!;

        [Input("ccnUin", required: true)]
        public Input<string> CcnUin { get; set; } = null!;

        [Input("destinationRegion", required: true)]
        public Input<string> DestinationRegion { get; set; } = null!;

        [Input("endTime", required: true)]
        public Input<string> EndTime { get; set; } = null!;

        [Input("period", required: true)]
        public Input<int> Period { get; set; } = null!;

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("sourceRegion", required: true)]
        public Input<string> SourceRegion { get; set; } = null!;

        [Input("startTime", required: true)]
        public Input<string> StartTime { get; set; } = null!;

        public GetCrossBorderFlowMonitorInvokeArgs()
        {
        }
        public static new GetCrossBorderFlowMonitorInvokeArgs Empty => new GetCrossBorderFlowMonitorInvokeArgs();
    }


    [OutputType]
    public sealed class GetCrossBorderFlowMonitorResult
    {
        public readonly string CcnId;
        public readonly string CcnUin;
        public readonly ImmutableArray<Outputs.GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataResult> CrossBorderFlowMonitorDatas;
        public readonly string DestinationRegion;
        public readonly string EndTime;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int Period;
        public readonly string? ResultOutputFile;
        public readonly string SourceRegion;
        public readonly string StartTime;

        [OutputConstructor]
        private GetCrossBorderFlowMonitorResult(
            string ccnId,

            string ccnUin,

            ImmutableArray<Outputs.GetCrossBorderFlowMonitorCrossBorderFlowMonitorDataResult> crossBorderFlowMonitorDatas,

            string destinationRegion,

            string endTime,

            string id,

            int period,

            string? resultOutputFile,

            string sourceRegion,

            string startTime)
        {
            CcnId = ccnId;
            CcnUin = ccnUin;
            CrossBorderFlowMonitorDatas = crossBorderFlowMonitorDatas;
            DestinationRegion = destinationRegion;
            EndTime = endTime;
            Id = id;
            Period = period;
            ResultOutputFile = resultOutputFile;
            SourceRegion = sourceRegion;
            StartTime = startTime;
        }
    }
}
