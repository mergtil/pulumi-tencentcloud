// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Dcdb
{
    public static class GetInstances
    {
        public static Task<GetInstancesResult> InvokeAsync(GetInstancesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInstancesResult>("tencentcloud:Dcdb/getInstances:getInstances", args ?? new GetInstancesArgs(), options.WithDefaults());

        public static Output<GetInstancesResult> Invoke(GetInstancesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInstancesResult>("tencentcloud:Dcdb/getInstances:getInstances", args ?? new GetInstancesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInstancesArgs : global::Pulumi.InvokeArgs
    {
        [Input("exclusterType")]
        public int? ExclusterType { get; set; }

        [Input("instanceIds")]
        private List<string>? _instanceIds;
        public List<string> InstanceIds
        {
            get => _instanceIds ?? (_instanceIds = new List<string>());
            set => _instanceIds = value;
        }

        [Input("isFilterExcluster")]
        public bool? IsFilterExcluster { get; set; }

        [Input("isFilterVpc")]
        public bool? IsFilterVpc { get; set; }

        [Input("projectIds")]
        private List<int>? _projectIds;
        public List<int> ProjectIds
        {
            get => _projectIds ?? (_projectIds = new List<int>());
            set => _projectIds = value;
        }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("searchKey")]
        public string? SearchKey { get; set; }

        [Input("searchName")]
        public string? SearchName { get; set; }

        [Input("subnetId")]
        public string? SubnetId { get; set; }

        [Input("vpcId")]
        public string? VpcId { get; set; }

        public GetInstancesArgs()
        {
        }
        public static new GetInstancesArgs Empty => new GetInstancesArgs();
    }

    public sealed class GetInstancesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("exclusterType")]
        public Input<int>? ExclusterType { get; set; }

        [Input("instanceIds")]
        private InputList<string>? _instanceIds;
        public InputList<string> InstanceIds
        {
            get => _instanceIds ?? (_instanceIds = new InputList<string>());
            set => _instanceIds = value;
        }

        [Input("isFilterExcluster")]
        public Input<bool>? IsFilterExcluster { get; set; }

        [Input("isFilterVpc")]
        public Input<bool>? IsFilterVpc { get; set; }

        [Input("projectIds")]
        private InputList<int>? _projectIds;
        public InputList<int> ProjectIds
        {
            get => _projectIds ?? (_projectIds = new InputList<int>());
            set => _projectIds = value;
        }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("searchKey")]
        public Input<string>? SearchKey { get; set; }

        [Input("searchName")]
        public Input<string>? SearchName { get; set; }

        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public GetInstancesInvokeArgs()
        {
        }
        public static new GetInstancesInvokeArgs Empty => new GetInstancesInvokeArgs();
    }


    [OutputType]
    public sealed class GetInstancesResult
    {
        public readonly int? ExclusterType;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> InstanceIds;
        public readonly bool? IsFilterExcluster;
        public readonly bool? IsFilterVpc;
        public readonly ImmutableArray<Outputs.GetInstancesListResult> Lists;
        public readonly ImmutableArray<int> ProjectIds;
        public readonly string? ResultOutputFile;
        public readonly string? SearchKey;
        public readonly string? SearchName;
        public readonly string? SubnetId;
        public readonly string VpcId;

        [OutputConstructor]
        private GetInstancesResult(
            int? exclusterType,

            string id,

            ImmutableArray<string> instanceIds,

            bool? isFilterExcluster,

            bool? isFilterVpc,

            ImmutableArray<Outputs.GetInstancesListResult> lists,

            ImmutableArray<int> projectIds,

            string? resultOutputFile,

            string? searchKey,

            string? searchName,

            string? subnetId,

            string vpcId)
        {
            ExclusterType = exclusterType;
            Id = id;
            InstanceIds = instanceIds;
            IsFilterExcluster = isFilterExcluster;
            IsFilterVpc = isFilterVpc;
            Lists = lists;
            ProjectIds = projectIds;
            ResultOutputFile = resultOutputFile;
            SearchKey = searchKey;
            SearchName = searchName;
            SubnetId = subnetId;
            VpcId = vpcId;
        }
    }
}
