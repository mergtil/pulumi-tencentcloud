// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Scf
{
    [TencentcloudResourceType("tencentcloud:Scf/invokeFunction:InvokeFunction")]
    public partial class InvokeFunction : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Function running parameter, which is in the JSON format. The maximum parameter size is 6 MB for synchronized invocations
        /// and 128KB for asynchronized invocations. This field corresponds to event input parameter.
        /// </summary>
        [Output("clientContext")]
        public Output<string?> ClientContext { get; private set; } = null!;

        /// <summary>
        /// Function name.
        /// </summary>
        [Output("functionName")]
        public Output<string> FunctionName { get; private set; } = null!;

        /// <summary>
        /// Fill in RequestResponse for synchronized invocations (default and recommended) and Event for asychronized invocations.
        /// Note that for synchronized invocations, the max timeout period is 300s. Choose asychronized invocations if the required
        /// timeout period is longer than 300 seconds. You can also use InvokeFunction for synchronized invocations.
        /// </summary>
        [Output("invocationType")]
        public Output<string?> InvocationType { get; private set; } = null!;

        /// <summary>
        /// Null for async invocations.
        /// </summary>
        [Output("logType")]
        public Output<string?> LogType { get; private set; } = null!;

        /// <summary>
        /// Namespace.
        /// </summary>
        [Output("namespace")]
        public Output<string?> Namespace { get; private set; } = null!;

        /// <summary>
        /// The version or alias of the triggered function. It defaults to $LATEST.
        /// </summary>
        [Output("qualifier")]
        public Output<string?> Qualifier { get; private set; } = null!;

        /// <summary>
        /// Traffic routing config in json format, e.g., {k:v}. Please note that both k and v must be strings. Up to 1024 bytes
        /// allowed.
        /// </summary>
        [Output("routingKey")]
        public Output<string?> RoutingKey { get; private set; } = null!;


        /// <summary>
        /// Create a InvokeFunction resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public InvokeFunction(string name, InvokeFunctionArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Scf/invokeFunction:InvokeFunction", name, args ?? new InvokeFunctionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private InvokeFunction(string name, Input<string> id, InvokeFunctionState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Scf/invokeFunction:InvokeFunction", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing InvokeFunction resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static InvokeFunction Get(string name, Input<string> id, InvokeFunctionState? state = null, CustomResourceOptions? options = null)
        {
            return new InvokeFunction(name, id, state, options);
        }
    }

    public sealed class InvokeFunctionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Function running parameter, which is in the JSON format. The maximum parameter size is 6 MB for synchronized invocations
        /// and 128KB for asynchronized invocations. This field corresponds to event input parameter.
        /// </summary>
        [Input("clientContext")]
        public Input<string>? ClientContext { get; set; }

        /// <summary>
        /// Function name.
        /// </summary>
        [Input("functionName", required: true)]
        public Input<string> FunctionName { get; set; } = null!;

        /// <summary>
        /// Fill in RequestResponse for synchronized invocations (default and recommended) and Event for asychronized invocations.
        /// Note that for synchronized invocations, the max timeout period is 300s. Choose asychronized invocations if the required
        /// timeout period is longer than 300 seconds. You can also use InvokeFunction for synchronized invocations.
        /// </summary>
        [Input("invocationType")]
        public Input<string>? InvocationType { get; set; }

        /// <summary>
        /// Null for async invocations.
        /// </summary>
        [Input("logType")]
        public Input<string>? LogType { get; set; }

        /// <summary>
        /// Namespace.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// The version or alias of the triggered function. It defaults to $LATEST.
        /// </summary>
        [Input("qualifier")]
        public Input<string>? Qualifier { get; set; }

        /// <summary>
        /// Traffic routing config in json format, e.g., {k:v}. Please note that both k and v must be strings. Up to 1024 bytes
        /// allowed.
        /// </summary>
        [Input("routingKey")]
        public Input<string>? RoutingKey { get; set; }

        public InvokeFunctionArgs()
        {
        }
        public static new InvokeFunctionArgs Empty => new InvokeFunctionArgs();
    }

    public sealed class InvokeFunctionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Function running parameter, which is in the JSON format. The maximum parameter size is 6 MB for synchronized invocations
        /// and 128KB for asynchronized invocations. This field corresponds to event input parameter.
        /// </summary>
        [Input("clientContext")]
        public Input<string>? ClientContext { get; set; }

        /// <summary>
        /// Function name.
        /// </summary>
        [Input("functionName")]
        public Input<string>? FunctionName { get; set; }

        /// <summary>
        /// Fill in RequestResponse for synchronized invocations (default and recommended) and Event for asychronized invocations.
        /// Note that for synchronized invocations, the max timeout period is 300s. Choose asychronized invocations if the required
        /// timeout period is longer than 300 seconds. You can also use InvokeFunction for synchronized invocations.
        /// </summary>
        [Input("invocationType")]
        public Input<string>? InvocationType { get; set; }

        /// <summary>
        /// Null for async invocations.
        /// </summary>
        [Input("logType")]
        public Input<string>? LogType { get; set; }

        /// <summary>
        /// Namespace.
        /// </summary>
        [Input("namespace")]
        public Input<string>? Namespace { get; set; }

        /// <summary>
        /// The version or alias of the triggered function. It defaults to $LATEST.
        /// </summary>
        [Input("qualifier")]
        public Input<string>? Qualifier { get; set; }

        /// <summary>
        /// Traffic routing config in json format, e.g., {k:v}. Please note that both k and v must be strings. Up to 1024 bytes
        /// allowed.
        /// </summary>
        [Input("routingKey")]
        public Input<string>? RoutingKey { get; set; }

        public InvokeFunctionState()
        {
        }
        public static new InvokeFunctionState Empty => new InvokeFunctionState();
    }
}
