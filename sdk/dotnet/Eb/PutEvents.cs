// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Eb
{
    [TencentcloudResourceType("tencentcloud:Eb/putEvents:PutEvents")]
    public partial class PutEvents : global::Pulumi.CustomResource
    {
        /// <summary>
        /// event bus Id.
        /// </summary>
        [Output("eventBusId")]
        public Output<string> EventBusId { get; private set; } = null!;

        /// <summary>
        /// event list.
        /// </summary>
        [Output("eventLists")]
        public Output<ImmutableArray<Outputs.PutEventsEventList>> EventLists { get; private set; } = null!;


        /// <summary>
        /// Create a PutEvents resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PutEvents(string name, PutEventsArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Eb/putEvents:PutEvents", name, args ?? new PutEventsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PutEvents(string name, Input<string> id, PutEventsState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Eb/putEvents:PutEvents", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PutEvents resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PutEvents Get(string name, Input<string> id, PutEventsState? state = null, CustomResourceOptions? options = null)
        {
            return new PutEvents(name, id, state, options);
        }
    }

    public sealed class PutEventsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// event bus Id.
        /// </summary>
        [Input("eventBusId", required: true)]
        public Input<string> EventBusId { get; set; } = null!;

        [Input("eventLists", required: true)]
        private InputList<Inputs.PutEventsEventListArgs>? _eventLists;

        /// <summary>
        /// event list.
        /// </summary>
        public InputList<Inputs.PutEventsEventListArgs> EventLists
        {
            get => _eventLists ?? (_eventLists = new InputList<Inputs.PutEventsEventListArgs>());
            set => _eventLists = value;
        }

        public PutEventsArgs()
        {
        }
        public static new PutEventsArgs Empty => new PutEventsArgs();
    }

    public sealed class PutEventsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// event bus Id.
        /// </summary>
        [Input("eventBusId")]
        public Input<string>? EventBusId { get; set; }

        [Input("eventLists")]
        private InputList<Inputs.PutEventsEventListGetArgs>? _eventLists;

        /// <summary>
        /// event list.
        /// </summary>
        public InputList<Inputs.PutEventsEventListGetArgs> EventLists
        {
            get => _eventLists ?? (_eventLists = new InputList<Inputs.PutEventsEventListGetArgs>());
            set => _eventLists = value;
        }

        public PutEventsState()
        {
        }
        public static new PutEventsState Empty => new PutEventsState();
    }
}
