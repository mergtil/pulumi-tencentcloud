// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Eb
{
    [TencentcloudResourceType("tencentcloud:Eb/eventConnector:EventConnector")]
    public partial class EventConnector : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Connector description.
        /// </summary>
        [Output("connectionDescription")]
        public Output<Outputs.EventConnectorConnectionDescription> ConnectionDescription { get; private set; } = null!;

        /// <summary>
        /// connector name.
        /// </summary>
        [Output("connectionName")]
        public Output<string> ConnectionName { get; private set; } = null!;

        /// <summary>
        /// description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// switch.
        /// </summary>
        [Output("enable")]
        public Output<bool?> Enable { get; private set; } = null!;

        /// <summary>
        /// event bus Id.
        /// </summary>
        [Output("eventBusId")]
        public Output<string> EventBusId { get; private set; } = null!;

        /// <summary>
        /// type.
        /// </summary>
        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;


        /// <summary>
        /// Create a EventConnector resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EventConnector(string name, EventConnectorArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Eb/eventConnector:EventConnector", name, args ?? new EventConnectorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EventConnector(string name, Input<string> id, EventConnectorState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Eb/eventConnector:EventConnector", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EventConnector resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EventConnector Get(string name, Input<string> id, EventConnectorState? state = null, CustomResourceOptions? options = null)
        {
            return new EventConnector(name, id, state, options);
        }
    }

    public sealed class EventConnectorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Connector description.
        /// </summary>
        [Input("connectionDescription", required: true)]
        public Input<Inputs.EventConnectorConnectionDescriptionArgs> ConnectionDescription { get; set; } = null!;

        /// <summary>
        /// connector name.
        /// </summary>
        [Input("connectionName", required: true)]
        public Input<string> ConnectionName { get; set; } = null!;

        /// <summary>
        /// description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// switch.
        /// </summary>
        [Input("enable")]
        public Input<bool>? Enable { get; set; }

        /// <summary>
        /// event bus Id.
        /// </summary>
        [Input("eventBusId", required: true)]
        public Input<string> EventBusId { get; set; } = null!;

        /// <summary>
        /// type.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public EventConnectorArgs()
        {
        }
        public static new EventConnectorArgs Empty => new EventConnectorArgs();
    }

    public sealed class EventConnectorState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Connector description.
        /// </summary>
        [Input("connectionDescription")]
        public Input<Inputs.EventConnectorConnectionDescriptionGetArgs>? ConnectionDescription { get; set; }

        /// <summary>
        /// connector name.
        /// </summary>
        [Input("connectionName")]
        public Input<string>? ConnectionName { get; set; }

        /// <summary>
        /// description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// switch.
        /// </summary>
        [Input("enable")]
        public Input<bool>? Enable { get; set; }

        /// <summary>
        /// event bus Id.
        /// </summary>
        [Input("eventBusId")]
        public Input<string>? EventBusId { get; set; }

        /// <summary>
        /// type.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public EventConnectorState()
        {
        }
        public static new EventConnectorState Empty => new EventConnectorState();
    }
}
