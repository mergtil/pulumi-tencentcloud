// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Redis
{
    public static class GetInstanceShards
    {
        public static Task<GetInstanceShardsResult> InvokeAsync(GetInstanceShardsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInstanceShardsResult>("tencentcloud:Redis/getInstanceShards:getInstanceShards", args ?? new GetInstanceShardsArgs(), options.WithDefaults());

        public static Output<GetInstanceShardsResult> Invoke(GetInstanceShardsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInstanceShardsResult>("tencentcloud:Redis/getInstanceShards:getInstanceShards", args ?? new GetInstanceShardsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInstanceShardsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filterSlave")]
        public bool? FilterSlave { get; set; }

        [Input("instanceId", required: true)]
        public string InstanceId { get; set; } = null!;

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetInstanceShardsArgs()
        {
        }
        public static new GetInstanceShardsArgs Empty => new GetInstanceShardsArgs();
    }

    public sealed class GetInstanceShardsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filterSlave")]
        public Input<bool>? FilterSlave { get; set; }

        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetInstanceShardsInvokeArgs()
        {
        }
        public static new GetInstanceShardsInvokeArgs Empty => new GetInstanceShardsInvokeArgs();
    }


    [OutputType]
    public sealed class GetInstanceShardsResult
    {
        public readonly bool? FilterSlave;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string InstanceId;
        public readonly ImmutableArray<Outputs.GetInstanceShardsInstanceShardResult> RedisInstanceShards;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetInstanceShardsResult(
            bool? filterSlave,

            string id,

            string instanceId,

            ImmutableArray<Outputs.GetInstanceShardsInstanceShardResult> instanceShards,

            string? resultOutputFile)
        {
            FilterSlave = filterSlave;
            Id = id;
            InstanceId = instanceId;
            RedisInstanceShards = instanceShards;
            ResultOutputFile = resultOutputFile;
        }
    }
}
