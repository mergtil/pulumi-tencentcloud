// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Redis
{
    public static class GetInstanceTaskList
    {
        public static Task<GetInstanceTaskListResult> InvokeAsync(GetInstanceTaskListArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetInstanceTaskListResult>("tencentcloud:Redis/getInstanceTaskList:getInstanceTaskList", args ?? new GetInstanceTaskListArgs(), options.WithDefaults());

        public static Output<GetInstanceTaskListResult> Invoke(GetInstanceTaskListInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetInstanceTaskListResult>("tencentcloud:Redis/getInstanceTaskList:getInstanceTaskList", args ?? new GetInstanceTaskListInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetInstanceTaskListArgs : global::Pulumi.InvokeArgs
    {
        [Input("beginTime")]
        public string? BeginTime { get; set; }

        [Input("endTime")]
        public string? EndTime { get; set; }

        [Input("instanceId")]
        public string? InstanceId { get; set; }

        [Input("instanceName")]
        public string? InstanceName { get; set; }

        [Input("operateUins")]
        private List<string>? _operateUins;
        public List<string> OperateUins
        {
            get => _operateUins ?? (_operateUins = new List<string>());
            set => _operateUins = value;
        }

        [Input("projectIds")]
        private List<int>? _projectIds;
        public List<int> ProjectIds
        {
            get => _projectIds ?? (_projectIds = new List<int>());
            set => _projectIds = value;
        }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("results")]
        private List<int>? _results;
        public List<int> Results
        {
            get => _results ?? (_results = new List<int>());
            set => _results = value;
        }

        [Input("taskStatuses")]
        private List<int>? _taskStatuses;
        public List<int> TaskStatuses
        {
            get => _taskStatuses ?? (_taskStatuses = new List<int>());
            set => _taskStatuses = value;
        }

        [Input("taskTypes")]
        private List<string>? _taskTypes;
        public List<string> TaskTypes
        {
            get => _taskTypes ?? (_taskTypes = new List<string>());
            set => _taskTypes = value;
        }

        public GetInstanceTaskListArgs()
        {
        }
        public static new GetInstanceTaskListArgs Empty => new GetInstanceTaskListArgs();
    }

    public sealed class GetInstanceTaskListInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("beginTime")]
        public Input<string>? BeginTime { get; set; }

        [Input("endTime")]
        public Input<string>? EndTime { get; set; }

        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        [Input("instanceName")]
        public Input<string>? InstanceName { get; set; }

        [Input("operateUins")]
        private InputList<string>? _operateUins;
        public InputList<string> OperateUins
        {
            get => _operateUins ?? (_operateUins = new InputList<string>());
            set => _operateUins = value;
        }

        [Input("projectIds")]
        private InputList<int>? _projectIds;
        public InputList<int> ProjectIds
        {
            get => _projectIds ?? (_projectIds = new InputList<int>());
            set => _projectIds = value;
        }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("results")]
        private InputList<int>? _results;
        public InputList<int> Results
        {
            get => _results ?? (_results = new InputList<int>());
            set => _results = value;
        }

        [Input("taskStatuses")]
        private InputList<int>? _taskStatuses;
        public InputList<int> TaskStatuses
        {
            get => _taskStatuses ?? (_taskStatuses = new InputList<int>());
            set => _taskStatuses = value;
        }

        [Input("taskTypes")]
        private InputList<string>? _taskTypes;
        public InputList<string> TaskTypes
        {
            get => _taskTypes ?? (_taskTypes = new InputList<string>());
            set => _taskTypes = value;
        }

        public GetInstanceTaskListInvokeArgs()
        {
        }
        public static new GetInstanceTaskListInvokeArgs Empty => new GetInstanceTaskListInvokeArgs();
    }


    [OutputType]
    public sealed class GetInstanceTaskListResult
    {
        public readonly string? BeginTime;
        public readonly string? EndTime;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? InstanceId;
        public readonly string? InstanceName;
        public readonly ImmutableArray<string> OperateUins;
        public readonly ImmutableArray<int> ProjectIds;
        public readonly string? ResultOutputFile;
        public readonly ImmutableArray<int> Results;
        public readonly ImmutableArray<int> TaskStatuses;
        public readonly ImmutableArray<string> TaskTypes;
        public readonly ImmutableArray<Outputs.GetInstanceTaskListTaskResult> Tasks;

        [OutputConstructor]
        private GetInstanceTaskListResult(
            string? beginTime,

            string? endTime,

            string id,

            string? instanceId,

            string? instanceName,

            ImmutableArray<string> operateUins,

            ImmutableArray<int> projectIds,

            string? resultOutputFile,

            ImmutableArray<int> results,

            ImmutableArray<int> taskStatuses,

            ImmutableArray<string> taskTypes,

            ImmutableArray<Outputs.GetInstanceTaskListTaskResult> tasks)
        {
            BeginTime = beginTime;
            EndTime = endTime;
            Id = id;
            InstanceId = instanceId;
            InstanceName = instanceName;
            OperateUins = operateUins;
            ProjectIds = projectIds;
            ResultOutputFile = resultOutputFile;
            Results = results;
            TaskStatuses = taskStatuses;
            TaskTypes = taskTypes;
            Tasks = tasks;
        }
    }
}
