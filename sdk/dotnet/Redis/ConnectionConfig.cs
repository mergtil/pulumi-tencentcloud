// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Redis
{
    [TencentcloudResourceType("tencentcloud:Redis/connectionConfig:ConnectionConfig")]
    public partial class ConnectionConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Refers to the additional bandwidth of the instance. When the standard bandwidth does not meet the demand, the user can
        /// increase the bandwidth by himself. When the read-only copy is enabled, the total bandwidth of the instance = additional
        /// bandwidth * number of fragments + standard bandwidth * number of fragments * Max ([number of read-only replicas, 1] ),
        /// the number of shards in the standard architecture = 1, and when read-only replicas are not enabled, the total bandwidth
        /// of the instance = additional bandwidth * number of shards + standard bandwidth * number of shards, and the number of
        /// shards in the standard architecture = 1.
        /// </summary>
        [Output("addBandwidth")]
        public Output<int> AddBandwidth { get; private set; } = null!;

        /// <summary>
        /// standard bandwidth. Refers to the bandwidth allocated by the system to each node when an instance is purchased.
        /// </summary>
        [Output("baseBandwidth")]
        public Output<int> BaseBandwidth { get; private set; } = null!;

        /// <summary>
        /// The total number of connections per shard.If read-only replicas are not enabled, the lower limit is 10,000 and the upper
        /// limit is 40,000.When you enable read-only replicas, the minimum limit is 10,000 and the upper limit is 10,000 * (the
        /// number of read replicas +3).
        /// </summary>
        [Output("clientLimit")]
        public Output<int?> ClientLimit { get; private set; } = null!;

        /// <summary>
        /// The ID of instance.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// Additional bandwidth is capped.
        /// </summary>
        [Output("maxAddBandwidth")]
        public Output<int> MaxAddBandwidth { get; private set; } = null!;

        /// <summary>
        /// Additional bandwidth sets the lower limit.
        /// </summary>
        [Output("minAddBandwidth")]
        public Output<int> MinAddBandwidth { get; private set; } = null!;

        /// <summary>
        /// Total bandwidth of the instance = additional bandwidth * number of shards + standard bandwidth * number of shards *
        /// (number of primary nodes + number of read-only replica nodes), the number of shards of the standard architecture = 1, in
        /// Mb/s.
        /// </summary>
        [Output("totalBandwidth")]
        public Output<int> TotalBandwidth { get; private set; } = null!;


        /// <summary>
        /// Create a ConnectionConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConnectionConfig(string name, ConnectionConfigArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Redis/connectionConfig:ConnectionConfig", name, args ?? new ConnectionConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ConnectionConfig(string name, Input<string> id, ConnectionConfigState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Redis/connectionConfig:ConnectionConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ConnectionConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ConnectionConfig Get(string name, Input<string> id, ConnectionConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new ConnectionConfig(name, id, state, options);
        }
    }

    public sealed class ConnectionConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Refers to the additional bandwidth of the instance. When the standard bandwidth does not meet the demand, the user can
        /// increase the bandwidth by himself. When the read-only copy is enabled, the total bandwidth of the instance = additional
        /// bandwidth * number of fragments + standard bandwidth * number of fragments * Max ([number of read-only replicas, 1] ),
        /// the number of shards in the standard architecture = 1, and when read-only replicas are not enabled, the total bandwidth
        /// of the instance = additional bandwidth * number of shards + standard bandwidth * number of shards, and the number of
        /// shards in the standard architecture = 1.
        /// </summary>
        [Input("addBandwidth")]
        public Input<int>? AddBandwidth { get; set; }

        /// <summary>
        /// The total number of connections per shard.If read-only replicas are not enabled, the lower limit is 10,000 and the upper
        /// limit is 40,000.When you enable read-only replicas, the minimum limit is 10,000 and the upper limit is 10,000 * (the
        /// number of read replicas +3).
        /// </summary>
        [Input("clientLimit")]
        public Input<int>? ClientLimit { get; set; }

        /// <summary>
        /// The ID of instance.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        public ConnectionConfigArgs()
        {
        }
        public static new ConnectionConfigArgs Empty => new ConnectionConfigArgs();
    }

    public sealed class ConnectionConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Refers to the additional bandwidth of the instance. When the standard bandwidth does not meet the demand, the user can
        /// increase the bandwidth by himself. When the read-only copy is enabled, the total bandwidth of the instance = additional
        /// bandwidth * number of fragments + standard bandwidth * number of fragments * Max ([number of read-only replicas, 1] ),
        /// the number of shards in the standard architecture = 1, and when read-only replicas are not enabled, the total bandwidth
        /// of the instance = additional bandwidth * number of shards + standard bandwidth * number of shards, and the number of
        /// shards in the standard architecture = 1.
        /// </summary>
        [Input("addBandwidth")]
        public Input<int>? AddBandwidth { get; set; }

        /// <summary>
        /// standard bandwidth. Refers to the bandwidth allocated by the system to each node when an instance is purchased.
        /// </summary>
        [Input("baseBandwidth")]
        public Input<int>? BaseBandwidth { get; set; }

        /// <summary>
        /// The total number of connections per shard.If read-only replicas are not enabled, the lower limit is 10,000 and the upper
        /// limit is 40,000.When you enable read-only replicas, the minimum limit is 10,000 and the upper limit is 10,000 * (the
        /// number of read replicas +3).
        /// </summary>
        [Input("clientLimit")]
        public Input<int>? ClientLimit { get; set; }

        /// <summary>
        /// The ID of instance.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// Additional bandwidth is capped.
        /// </summary>
        [Input("maxAddBandwidth")]
        public Input<int>? MaxAddBandwidth { get; set; }

        /// <summary>
        /// Additional bandwidth sets the lower limit.
        /// </summary>
        [Input("minAddBandwidth")]
        public Input<int>? MinAddBandwidth { get; set; }

        /// <summary>
        /// Total bandwidth of the instance = additional bandwidth * number of shards + standard bandwidth * number of shards *
        /// (number of primary nodes + number of read-only replica nodes), the number of shards of the standard architecture = 1, in
        /// Mb/s.
        /// </summary>
        [Input("totalBandwidth")]
        public Input<int>? TotalBandwidth { get; set; }

        public ConnectionConfigState()
        {
        }
        public static new ConnectionConfigState Empty => new ConnectionConfigState();
    }
}
