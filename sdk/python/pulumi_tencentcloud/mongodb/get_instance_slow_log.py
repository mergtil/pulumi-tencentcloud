# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetInstanceSlowLogResult',
    'AwaitableGetInstanceSlowLogResult',
    'get_instance_slow_log',
    'get_instance_slow_log_output',
]

@pulumi.output_type
class GetInstanceSlowLogResult:
    """
    A collection of values returned by getInstanceSlowLog.
    """
    def __init__(__self__, end_time=None, format=None, id=None, instance_id=None, result_output_file=None, slow_logs=None, slow_ms=None, start_time=None):
        if end_time and not isinstance(end_time, str):
            raise TypeError("Expected argument 'end_time' to be a str")
        pulumi.set(__self__, "end_time", end_time)
        if format and not isinstance(format, str):
            raise TypeError("Expected argument 'format' to be a str")
        pulumi.set(__self__, "format", format)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if instance_id and not isinstance(instance_id, str):
            raise TypeError("Expected argument 'instance_id' to be a str")
        pulumi.set(__self__, "instance_id", instance_id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if slow_logs and not isinstance(slow_logs, list):
            raise TypeError("Expected argument 'slow_logs' to be a list")
        pulumi.set(__self__, "slow_logs", slow_logs)
        if slow_ms and not isinstance(slow_ms, int):
            raise TypeError("Expected argument 'slow_ms' to be a int")
        pulumi.set(__self__, "slow_ms", slow_ms)
        if start_time and not isinstance(start_time, str):
            raise TypeError("Expected argument 'start_time' to be a str")
        pulumi.set(__self__, "start_time", start_time)

    @property
    @pulumi.getter(name="endTime")
    def end_time(self) -> str:
        return pulumi.get(self, "end_time")

    @property
    @pulumi.getter
    def format(self) -> Optional[str]:
        return pulumi.get(self, "format")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> str:
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter(name="slowLogs")
    def slow_logs(self) -> Sequence[str]:
        return pulumi.get(self, "slow_logs")

    @property
    @pulumi.getter(name="slowMs")
    def slow_ms(self) -> int:
        return pulumi.get(self, "slow_ms")

    @property
    @pulumi.getter(name="startTime")
    def start_time(self) -> str:
        return pulumi.get(self, "start_time")


class AwaitableGetInstanceSlowLogResult(GetInstanceSlowLogResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetInstanceSlowLogResult(
            end_time=self.end_time,
            format=self.format,
            id=self.id,
            instance_id=self.instance_id,
            result_output_file=self.result_output_file,
            slow_logs=self.slow_logs,
            slow_ms=self.slow_ms,
            start_time=self.start_time)


def get_instance_slow_log(end_time: Optional[str] = None,
                          format: Optional[str] = None,
                          instance_id: Optional[str] = None,
                          result_output_file: Optional[str] = None,
                          slow_ms: Optional[int] = None,
                          start_time: Optional[str] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetInstanceSlowLogResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['endTime'] = end_time
    __args__['format'] = format
    __args__['instanceId'] = instance_id
    __args__['resultOutputFile'] = result_output_file
    __args__['slowMs'] = slow_ms
    __args__['startTime'] = start_time
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Mongodb/getInstanceSlowLog:getInstanceSlowLog', __args__, opts=opts, typ=GetInstanceSlowLogResult).value

    return AwaitableGetInstanceSlowLogResult(
        end_time=pulumi.get(__ret__, 'end_time'),
        format=pulumi.get(__ret__, 'format'),
        id=pulumi.get(__ret__, 'id'),
        instance_id=pulumi.get(__ret__, 'instance_id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        slow_logs=pulumi.get(__ret__, 'slow_logs'),
        slow_ms=pulumi.get(__ret__, 'slow_ms'),
        start_time=pulumi.get(__ret__, 'start_time'))


@_utilities.lift_output_func(get_instance_slow_log)
def get_instance_slow_log_output(end_time: Optional[pulumi.Input[str]] = None,
                                 format: Optional[pulumi.Input[Optional[str]]] = None,
                                 instance_id: Optional[pulumi.Input[str]] = None,
                                 result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                                 slow_ms: Optional[pulumi.Input[int]] = None,
                                 start_time: Optional[pulumi.Input[str]] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetInstanceSlowLogResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
