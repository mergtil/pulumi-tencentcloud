# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'InstanceAccountAuthRoleArgs',
    'InstanceBackupDownloadTaskBackupSetArgs',
    'InstanceStandbyInstanceListArgs',
]

@pulumi.input_type
class InstanceAccountAuthRoleArgs:
    def __init__(__self__, *,
                 mask: pulumi.Input[int],
                 namespace: pulumi.Input[str]):
        pulumi.set(__self__, "mask", mask)
        pulumi.set(__self__, "namespace", namespace)

    @property
    @pulumi.getter
    def mask(self) -> pulumi.Input[int]:
        return pulumi.get(self, "mask")

    @mask.setter
    def mask(self, value: pulumi.Input[int]):
        pulumi.set(self, "mask", value)

    @property
    @pulumi.getter
    def namespace(self) -> pulumi.Input[str]:
        return pulumi.get(self, "namespace")

    @namespace.setter
    def namespace(self, value: pulumi.Input[str]):
        pulumi.set(self, "namespace", value)


@pulumi.input_type
class InstanceBackupDownloadTaskBackupSetArgs:
    def __init__(__self__, *,
                 replica_set_id: pulumi.Input[str]):
        pulumi.set(__self__, "replica_set_id", replica_set_id)

    @property
    @pulumi.getter(name="replicaSetId")
    def replica_set_id(self) -> pulumi.Input[str]:
        return pulumi.get(self, "replica_set_id")

    @replica_set_id.setter
    def replica_set_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "replica_set_id", value)


@pulumi.input_type
class InstanceStandbyInstanceListArgs:
    def __init__(__self__, *,
                 standby_instance_id: Optional[pulumi.Input[str]] = None,
                 standby_instance_region: Optional[pulumi.Input[str]] = None):
        if standby_instance_id is not None:
            pulumi.set(__self__, "standby_instance_id", standby_instance_id)
        if standby_instance_region is not None:
            pulumi.set(__self__, "standby_instance_region", standby_instance_region)

    @property
    @pulumi.getter(name="standbyInstanceId")
    def standby_instance_id(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "standby_instance_id")

    @standby_instance_id.setter
    def standby_instance_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "standby_instance_id", value)

    @property
    @pulumi.getter(name="standbyInstanceRegion")
    def standby_instance_region(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "standby_instance_region")

    @standby_instance_region.setter
    def standby_instance_region(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "standby_instance_region", value)


