# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'ProductSecretPrivilegesList',
    'GetSecretVersionsSecretVersionListResult',
    'GetSecretsSecretListResult',
]

@pulumi.output_type
class ProductSecretPrivilegesList(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "privilegeName":
            suggest = "privilege_name"
        elif key == "columnName":
            suggest = "column_name"
        elif key == "tableName":
            suggest = "table_name"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in ProductSecretPrivilegesList. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        ProductSecretPrivilegesList.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        ProductSecretPrivilegesList.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 privilege_name: str,
                 privileges: Sequence[str],
                 column_name: Optional[str] = None,
                 database: Optional[str] = None,
                 table_name: Optional[str] = None):
        pulumi.set(__self__, "privilege_name", privilege_name)
        pulumi.set(__self__, "privileges", privileges)
        if column_name is not None:
            pulumi.set(__self__, "column_name", column_name)
        if database is not None:
            pulumi.set(__self__, "database", database)
        if table_name is not None:
            pulumi.set(__self__, "table_name", table_name)

    @property
    @pulumi.getter(name="privilegeName")
    def privilege_name(self) -> str:
        return pulumi.get(self, "privilege_name")

    @property
    @pulumi.getter
    def privileges(self) -> Sequence[str]:
        return pulumi.get(self, "privileges")

    @property
    @pulumi.getter(name="columnName")
    def column_name(self) -> Optional[str]:
        return pulumi.get(self, "column_name")

    @property
    @pulumi.getter
    def database(self) -> Optional[str]:
        return pulumi.get(self, "database")

    @property
    @pulumi.getter(name="tableName")
    def table_name(self) -> Optional[str]:
        return pulumi.get(self, "table_name")


@pulumi.output_type
class GetSecretVersionsSecretVersionListResult(dict):
    def __init__(__self__, *,
                 secret_binary: str,
                 secret_string: str,
                 version_id: str):
        pulumi.set(__self__, "secret_binary", secret_binary)
        pulumi.set(__self__, "secret_string", secret_string)
        pulumi.set(__self__, "version_id", version_id)

    @property
    @pulumi.getter(name="secretBinary")
    def secret_binary(self) -> str:
        return pulumi.get(self, "secret_binary")

    @property
    @pulumi.getter(name="secretString")
    def secret_string(self) -> str:
        return pulumi.get(self, "secret_string")

    @property
    @pulumi.getter(name="versionId")
    def version_id(self) -> str:
        return pulumi.get(self, "version_id")


@pulumi.output_type
class GetSecretsSecretListResult(dict):
    def __init__(__self__, *,
                 associated_instance_ids: Sequence[str],
                 create_time: int,
                 create_uin: int,
                 delete_time: int,
                 description: str,
                 kms_key_id: str,
                 kms_key_type: str,
                 next_rotation_time: int,
                 product_name: str,
                 project_id: int,
                 resource_id: str,
                 resource_name: str,
                 rotation_begin_time: str,
                 rotation_frequency: int,
                 rotation_status: int,
                 secret_name: str,
                 secret_type: int,
                 status: str,
                 target_uin: int):
        pulumi.set(__self__, "associated_instance_ids", associated_instance_ids)
        pulumi.set(__self__, "create_time", create_time)
        pulumi.set(__self__, "create_uin", create_uin)
        pulumi.set(__self__, "delete_time", delete_time)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "kms_key_id", kms_key_id)
        pulumi.set(__self__, "kms_key_type", kms_key_type)
        pulumi.set(__self__, "next_rotation_time", next_rotation_time)
        pulumi.set(__self__, "product_name", product_name)
        pulumi.set(__self__, "project_id", project_id)
        pulumi.set(__self__, "resource_id", resource_id)
        pulumi.set(__self__, "resource_name", resource_name)
        pulumi.set(__self__, "rotation_begin_time", rotation_begin_time)
        pulumi.set(__self__, "rotation_frequency", rotation_frequency)
        pulumi.set(__self__, "rotation_status", rotation_status)
        pulumi.set(__self__, "secret_name", secret_name)
        pulumi.set(__self__, "secret_type", secret_type)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "target_uin", target_uin)

    @property
    @pulumi.getter(name="associatedInstanceIds")
    def associated_instance_ids(self) -> Sequence[str]:
        return pulumi.get(self, "associated_instance_ids")

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> int:
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter(name="createUin")
    def create_uin(self) -> int:
        return pulumi.get(self, "create_uin")

    @property
    @pulumi.getter(name="deleteTime")
    def delete_time(self) -> int:
        return pulumi.get(self, "delete_time")

    @property
    @pulumi.getter
    def description(self) -> str:
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="kmsKeyId")
    def kms_key_id(self) -> str:
        return pulumi.get(self, "kms_key_id")

    @property
    @pulumi.getter(name="kmsKeyType")
    def kms_key_type(self) -> str:
        return pulumi.get(self, "kms_key_type")

    @property
    @pulumi.getter(name="nextRotationTime")
    def next_rotation_time(self) -> int:
        return pulumi.get(self, "next_rotation_time")

    @property
    @pulumi.getter(name="productName")
    def product_name(self) -> str:
        return pulumi.get(self, "product_name")

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> int:
        return pulumi.get(self, "project_id")

    @property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> str:
        return pulumi.get(self, "resource_id")

    @property
    @pulumi.getter(name="resourceName")
    def resource_name(self) -> str:
        return pulumi.get(self, "resource_name")

    @property
    @pulumi.getter(name="rotationBeginTime")
    def rotation_begin_time(self) -> str:
        return pulumi.get(self, "rotation_begin_time")

    @property
    @pulumi.getter(name="rotationFrequency")
    def rotation_frequency(self) -> int:
        return pulumi.get(self, "rotation_frequency")

    @property
    @pulumi.getter(name="rotationStatus")
    def rotation_status(self) -> int:
        return pulumi.get(self, "rotation_status")

    @property
    @pulumi.getter(name="secretName")
    def secret_name(self) -> str:
        return pulumi.get(self, "secret_name")

    @property
    @pulumi.getter(name="secretType")
    def secret_type(self) -> int:
        return pulumi.get(self, "secret_type")

    @property
    @pulumi.getter
    def status(self) -> str:
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="targetUin")
    def target_uin(self) -> int:
        return pulumi.get(self, "target_uin")


