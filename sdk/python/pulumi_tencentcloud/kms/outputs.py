# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetKeysKeyListResult',
]

@pulumi.output_type
class GetKeysKeyListResult(dict):
    def __init__(__self__, *,
                 alias: str,
                 create_time: int,
                 creator_uin: int,
                 deletion_date: int,
                 description: str,
                 key_id: str,
                 key_rotation_enabled: bool,
                 key_state: str,
                 key_usage: str,
                 next_rotate_time: int,
                 origin: str,
                 owner: str,
                 valid_to: int):
        pulumi.set(__self__, "alias", alias)
        pulumi.set(__self__, "create_time", create_time)
        pulumi.set(__self__, "creator_uin", creator_uin)
        pulumi.set(__self__, "deletion_date", deletion_date)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "key_id", key_id)
        pulumi.set(__self__, "key_rotation_enabled", key_rotation_enabled)
        pulumi.set(__self__, "key_state", key_state)
        pulumi.set(__self__, "key_usage", key_usage)
        pulumi.set(__self__, "next_rotate_time", next_rotate_time)
        pulumi.set(__self__, "origin", origin)
        pulumi.set(__self__, "owner", owner)
        pulumi.set(__self__, "valid_to", valid_to)

    @property
    @pulumi.getter
    def alias(self) -> str:
        return pulumi.get(self, "alias")

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> int:
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter(name="creatorUin")
    def creator_uin(self) -> int:
        return pulumi.get(self, "creator_uin")

    @property
    @pulumi.getter(name="deletionDate")
    def deletion_date(self) -> int:
        return pulumi.get(self, "deletion_date")

    @property
    @pulumi.getter
    def description(self) -> str:
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="keyId")
    def key_id(self) -> str:
        return pulumi.get(self, "key_id")

    @property
    @pulumi.getter(name="keyRotationEnabled")
    def key_rotation_enabled(self) -> bool:
        return pulumi.get(self, "key_rotation_enabled")

    @property
    @pulumi.getter(name="keyState")
    def key_state(self) -> str:
        return pulumi.get(self, "key_state")

    @property
    @pulumi.getter(name="keyUsage")
    def key_usage(self) -> str:
        return pulumi.get(self, "key_usage")

    @property
    @pulumi.getter(name="nextRotateTime")
    def next_rotate_time(self) -> int:
        return pulumi.get(self, "next_rotate_time")

    @property
    @pulumi.getter
    def origin(self) -> str:
        return pulumi.get(self, "origin")

    @property
    @pulumi.getter
    def owner(self) -> str:
        return pulumi.get(self, "owner")

    @property
    @pulumi.getter(name="validTo")
    def valid_to(self) -> int:
        return pulumi.get(self, "valid_to")


