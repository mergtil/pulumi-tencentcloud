# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'StreamLiveInputInputSettingArgs',
]

@pulumi.input_type
class StreamLiveInputInputSettingArgs:
    def __init__(__self__, *,
                 app_name: Optional[pulumi.Input[str]] = None,
                 delay_time: Optional[pulumi.Input[int]] = None,
                 input_address: Optional[pulumi.Input[str]] = None,
                 input_domain: Optional[pulumi.Input[str]] = None,
                 password: Optional[pulumi.Input[str]] = None,
                 source_type: Optional[pulumi.Input[str]] = None,
                 source_url: Optional[pulumi.Input[str]] = None,
                 stream_name: Optional[pulumi.Input[str]] = None,
                 user_name: Optional[pulumi.Input[str]] = None):
        if app_name is not None:
            pulumi.set(__self__, "app_name", app_name)
        if delay_time is not None:
            pulumi.set(__self__, "delay_time", delay_time)
        if input_address is not None:
            pulumi.set(__self__, "input_address", input_address)
        if input_domain is not None:
            pulumi.set(__self__, "input_domain", input_domain)
        if password is not None:
            pulumi.set(__self__, "password", password)
        if source_type is not None:
            pulumi.set(__self__, "source_type", source_type)
        if source_url is not None:
            pulumi.set(__self__, "source_url", source_url)
        if stream_name is not None:
            pulumi.set(__self__, "stream_name", stream_name)
        if user_name is not None:
            pulumi.set(__self__, "user_name", user_name)

    @property
    @pulumi.getter(name="appName")
    def app_name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "app_name")

    @app_name.setter
    def app_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "app_name", value)

    @property
    @pulumi.getter(name="delayTime")
    def delay_time(self) -> Optional[pulumi.Input[int]]:
        return pulumi.get(self, "delay_time")

    @delay_time.setter
    def delay_time(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "delay_time", value)

    @property
    @pulumi.getter(name="inputAddress")
    def input_address(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "input_address")

    @input_address.setter
    def input_address(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "input_address", value)

    @property
    @pulumi.getter(name="inputDomain")
    def input_domain(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "input_domain")

    @input_domain.setter
    def input_domain(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "input_domain", value)

    @property
    @pulumi.getter
    def password(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "password")

    @password.setter
    def password(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "password", value)

    @property
    @pulumi.getter(name="sourceType")
    def source_type(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "source_type")

    @source_type.setter
    def source_type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "source_type", value)

    @property
    @pulumi.getter(name="sourceUrl")
    def source_url(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "source_url")

    @source_url.setter
    def source_url(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "source_url", value)

    @property
    @pulumi.getter(name="streamName")
    def stream_name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "stream_name")

    @stream_name.setter
    def stream_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "stream_name", value)

    @property
    @pulumi.getter(name="userName")
    def user_name(self) -> Optional[pulumi.Input[str]]:
        return pulumi.get(self, "user_name")

    @user_name.setter
    def user_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "user_name", value)


