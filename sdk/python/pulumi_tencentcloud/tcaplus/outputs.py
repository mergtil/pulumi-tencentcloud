# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'IdlTableInfo',
    'GetClustersListResult',
    'GetIdlsListResult',
    'GetTablegroupsListResult',
    'GetTablesListResult',
]

@pulumi.output_type
class IdlTableInfo(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "indexKeySet":
            suggest = "index_key_set"
        elif key == "keyFields":
            suggest = "key_fields"
        elif key == "sumKeyFieldSize":
            suggest = "sum_key_field_size"
        elif key == "sumValueFieldSize":
            suggest = "sum_value_field_size"
        elif key == "tableName":
            suggest = "table_name"
        elif key == "valueFields":
            suggest = "value_fields"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in IdlTableInfo. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        IdlTableInfo.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        IdlTableInfo.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 error: Optional[str] = None,
                 index_key_set: Optional[str] = None,
                 key_fields: Optional[str] = None,
                 sum_key_field_size: Optional[int] = None,
                 sum_value_field_size: Optional[int] = None,
                 table_name: Optional[str] = None,
                 value_fields: Optional[str] = None):
        if error is not None:
            pulumi.set(__self__, "error", error)
        if index_key_set is not None:
            pulumi.set(__self__, "index_key_set", index_key_set)
        if key_fields is not None:
            pulumi.set(__self__, "key_fields", key_fields)
        if sum_key_field_size is not None:
            pulumi.set(__self__, "sum_key_field_size", sum_key_field_size)
        if sum_value_field_size is not None:
            pulumi.set(__self__, "sum_value_field_size", sum_value_field_size)
        if table_name is not None:
            pulumi.set(__self__, "table_name", table_name)
        if value_fields is not None:
            pulumi.set(__self__, "value_fields", value_fields)

    @property
    @pulumi.getter
    def error(self) -> Optional[str]:
        return pulumi.get(self, "error")

    @property
    @pulumi.getter(name="indexKeySet")
    def index_key_set(self) -> Optional[str]:
        return pulumi.get(self, "index_key_set")

    @property
    @pulumi.getter(name="keyFields")
    def key_fields(self) -> Optional[str]:
        return pulumi.get(self, "key_fields")

    @property
    @pulumi.getter(name="sumKeyFieldSize")
    def sum_key_field_size(self) -> Optional[int]:
        return pulumi.get(self, "sum_key_field_size")

    @property
    @pulumi.getter(name="sumValueFieldSize")
    def sum_value_field_size(self) -> Optional[int]:
        return pulumi.get(self, "sum_value_field_size")

    @property
    @pulumi.getter(name="tableName")
    def table_name(self) -> Optional[str]:
        return pulumi.get(self, "table_name")

    @property
    @pulumi.getter(name="valueFields")
    def value_fields(self) -> Optional[str]:
        return pulumi.get(self, "value_fields")


@pulumi.output_type
class GetClustersListResult(dict):
    def __init__(__self__, *,
                 api_access_id: str,
                 api_access_ip: str,
                 api_access_port: int,
                 cluster_id: str,
                 cluster_name: str,
                 create_time: str,
                 idl_type: str,
                 network_type: str,
                 old_password_expire_time: str,
                 password: str,
                 password_status: str,
                 subnet_id: str,
                 vpc_id: str):
        pulumi.set(__self__, "api_access_id", api_access_id)
        pulumi.set(__self__, "api_access_ip", api_access_ip)
        pulumi.set(__self__, "api_access_port", api_access_port)
        pulumi.set(__self__, "cluster_id", cluster_id)
        pulumi.set(__self__, "cluster_name", cluster_name)
        pulumi.set(__self__, "create_time", create_time)
        pulumi.set(__self__, "idl_type", idl_type)
        pulumi.set(__self__, "network_type", network_type)
        pulumi.set(__self__, "old_password_expire_time", old_password_expire_time)
        pulumi.set(__self__, "password", password)
        pulumi.set(__self__, "password_status", password_status)
        pulumi.set(__self__, "subnet_id", subnet_id)
        pulumi.set(__self__, "vpc_id", vpc_id)

    @property
    @pulumi.getter(name="apiAccessId")
    def api_access_id(self) -> str:
        return pulumi.get(self, "api_access_id")

    @property
    @pulumi.getter(name="apiAccessIp")
    def api_access_ip(self) -> str:
        return pulumi.get(self, "api_access_ip")

    @property
    @pulumi.getter(name="apiAccessPort")
    def api_access_port(self) -> int:
        return pulumi.get(self, "api_access_port")

    @property
    @pulumi.getter(name="clusterId")
    def cluster_id(self) -> str:
        return pulumi.get(self, "cluster_id")

    @property
    @pulumi.getter(name="clusterName")
    def cluster_name(self) -> str:
        return pulumi.get(self, "cluster_name")

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> str:
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter(name="idlType")
    def idl_type(self) -> str:
        return pulumi.get(self, "idl_type")

    @property
    @pulumi.getter(name="networkType")
    def network_type(self) -> str:
        return pulumi.get(self, "network_type")

    @property
    @pulumi.getter(name="oldPasswordExpireTime")
    def old_password_expire_time(self) -> str:
        return pulumi.get(self, "old_password_expire_time")

    @property
    @pulumi.getter
    def password(self) -> str:
        return pulumi.get(self, "password")

    @property
    @pulumi.getter(name="passwordStatus")
    def password_status(self) -> str:
        return pulumi.get(self, "password_status")

    @property
    @pulumi.getter(name="subnetId")
    def subnet_id(self) -> str:
        return pulumi.get(self, "subnet_id")

    @property
    @pulumi.getter(name="vpcId")
    def vpc_id(self) -> str:
        return pulumi.get(self, "vpc_id")


@pulumi.output_type
class GetIdlsListResult(dict):
    def __init__(__self__, *,
                 idl_id: str):
        pulumi.set(__self__, "idl_id", idl_id)

    @property
    @pulumi.getter(name="idlId")
    def idl_id(self) -> str:
        return pulumi.get(self, "idl_id")


@pulumi.output_type
class GetTablegroupsListResult(dict):
    def __init__(__self__, *,
                 create_time: str,
                 table_count: int,
                 tablegroup_id: str,
                 tablegroup_name: str,
                 total_size: int):
        pulumi.set(__self__, "create_time", create_time)
        pulumi.set(__self__, "table_count", table_count)
        pulumi.set(__self__, "tablegroup_id", tablegroup_id)
        pulumi.set(__self__, "tablegroup_name", tablegroup_name)
        pulumi.set(__self__, "total_size", total_size)

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> str:
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter(name="tableCount")
    def table_count(self) -> int:
        return pulumi.get(self, "table_count")

    @property
    @pulumi.getter(name="tablegroupId")
    def tablegroup_id(self) -> str:
        return pulumi.get(self, "tablegroup_id")

    @property
    @pulumi.getter(name="tablegroupName")
    def tablegroup_name(self) -> str:
        return pulumi.get(self, "tablegroup_name")

    @property
    @pulumi.getter(name="totalSize")
    def total_size(self) -> int:
        return pulumi.get(self, "total_size")


@pulumi.output_type
class GetTablesListResult(dict):
    def __init__(__self__, *,
                 create_time: str,
                 description: str,
                 error: str,
                 idl_id: str,
                 reserved_read_cu: int,
                 reserved_volume: int,
                 reserved_write_cu: int,
                 status: str,
                 table_id: str,
                 table_idl_type: str,
                 table_name: str,
                 table_size: int,
                 table_type: str,
                 tablegroup_id: str):
        pulumi.set(__self__, "create_time", create_time)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "error", error)
        pulumi.set(__self__, "idl_id", idl_id)
        pulumi.set(__self__, "reserved_read_cu", reserved_read_cu)
        pulumi.set(__self__, "reserved_volume", reserved_volume)
        pulumi.set(__self__, "reserved_write_cu", reserved_write_cu)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "table_id", table_id)
        pulumi.set(__self__, "table_idl_type", table_idl_type)
        pulumi.set(__self__, "table_name", table_name)
        pulumi.set(__self__, "table_size", table_size)
        pulumi.set(__self__, "table_type", table_type)
        pulumi.set(__self__, "tablegroup_id", tablegroup_id)

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> str:
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter
    def description(self) -> str:
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def error(self) -> str:
        return pulumi.get(self, "error")

    @property
    @pulumi.getter(name="idlId")
    def idl_id(self) -> str:
        return pulumi.get(self, "idl_id")

    @property
    @pulumi.getter(name="reservedReadCu")
    def reserved_read_cu(self) -> int:
        return pulumi.get(self, "reserved_read_cu")

    @property
    @pulumi.getter(name="reservedVolume")
    def reserved_volume(self) -> int:
        return pulumi.get(self, "reserved_volume")

    @property
    @pulumi.getter(name="reservedWriteCu")
    def reserved_write_cu(self) -> int:
        return pulumi.get(self, "reserved_write_cu")

    @property
    @pulumi.getter
    def status(self) -> str:
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="tableId")
    def table_id(self) -> str:
        return pulumi.get(self, "table_id")

    @property
    @pulumi.getter(name="tableIdlType")
    def table_idl_type(self) -> str:
        return pulumi.get(self, "table_idl_type")

    @property
    @pulumi.getter(name="tableName")
    def table_name(self) -> str:
        return pulumi.get(self, "table_name")

    @property
    @pulumi.getter(name="tableSize")
    def table_size(self) -> int:
        return pulumi.get(self, "table_size")

    @property
    @pulumi.getter(name="tableType")
    def table_type(self) -> str:
        return pulumi.get(self, "table_type")

    @property
    @pulumi.getter(name="tablegroupId")
    def tablegroup_id(self) -> str:
        return pulumi.get(self, "tablegroup_id")


