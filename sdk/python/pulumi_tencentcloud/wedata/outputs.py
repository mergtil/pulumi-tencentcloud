# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetRuleTemplatesDataResult',
]

@pulumi.output_type
class GetRuleTemplatesDataResult(dict):
    def __init__(__self__, *,
                 citation_count: int,
                 compare_type: int,
                 description: str,
                 multi_source_flag: bool,
                 name: str,
                 quality_dim: int,
                 rule_template_id: int,
                 source_content: str,
                 source_engine_types: Sequence[int],
                 source_object_data_type: int,
                 source_object_type: int,
                 sql_expression: str,
                 sub_quality_dim: int,
                 type: int,
                 update_time: str,
                 user_id: int,
                 user_name: str,
                 where_flag: bool):
        pulumi.set(__self__, "citation_count", citation_count)
        pulumi.set(__self__, "compare_type", compare_type)
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "multi_source_flag", multi_source_flag)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "quality_dim", quality_dim)
        pulumi.set(__self__, "rule_template_id", rule_template_id)
        pulumi.set(__self__, "source_content", source_content)
        pulumi.set(__self__, "source_engine_types", source_engine_types)
        pulumi.set(__self__, "source_object_data_type", source_object_data_type)
        pulumi.set(__self__, "source_object_type", source_object_type)
        pulumi.set(__self__, "sql_expression", sql_expression)
        pulumi.set(__self__, "sub_quality_dim", sub_quality_dim)
        pulumi.set(__self__, "type", type)
        pulumi.set(__self__, "update_time", update_time)
        pulumi.set(__self__, "user_id", user_id)
        pulumi.set(__self__, "user_name", user_name)
        pulumi.set(__self__, "where_flag", where_flag)

    @property
    @pulumi.getter(name="citationCount")
    def citation_count(self) -> int:
        return pulumi.get(self, "citation_count")

    @property
    @pulumi.getter(name="compareType")
    def compare_type(self) -> int:
        return pulumi.get(self, "compare_type")

    @property
    @pulumi.getter
    def description(self) -> str:
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="multiSourceFlag")
    def multi_source_flag(self) -> bool:
        return pulumi.get(self, "multi_source_flag")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="qualityDim")
    def quality_dim(self) -> int:
        return pulumi.get(self, "quality_dim")

    @property
    @pulumi.getter(name="ruleTemplateId")
    def rule_template_id(self) -> int:
        return pulumi.get(self, "rule_template_id")

    @property
    @pulumi.getter(name="sourceContent")
    def source_content(self) -> str:
        return pulumi.get(self, "source_content")

    @property
    @pulumi.getter(name="sourceEngineTypes")
    def source_engine_types(self) -> Sequence[int]:
        return pulumi.get(self, "source_engine_types")

    @property
    @pulumi.getter(name="sourceObjectDataType")
    def source_object_data_type(self) -> int:
        return pulumi.get(self, "source_object_data_type")

    @property
    @pulumi.getter(name="sourceObjectType")
    def source_object_type(self) -> int:
        return pulumi.get(self, "source_object_type")

    @property
    @pulumi.getter(name="sqlExpression")
    def sql_expression(self) -> str:
        return pulumi.get(self, "sql_expression")

    @property
    @pulumi.getter(name="subQualityDim")
    def sub_quality_dim(self) -> int:
        return pulumi.get(self, "sub_quality_dim")

    @property
    @pulumi.getter
    def type(self) -> int:
        return pulumi.get(self, "type")

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> str:
        return pulumi.get(self, "update_time")

    @property
    @pulumi.getter(name="userId")
    def user_id(self) -> int:
        return pulumi.get(self, "user_id")

    @property
    @pulumi.getter(name="userName")
    def user_name(self) -> str:
        return pulumi.get(self, "user_name")

    @property
    @pulumi.getter(name="whereFlag")
    def where_flag(self) -> bool:
        return pulumi.get(self, "where_flag")


